{"version":3,"file":"5.DLFPczE9.js","sources":["../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/format/log.js","../../../../../../src/routes/drip/+page.ts","../../../../../../../drip/out/index.js","../../../../../../src/lib/images/drip.svg","../../../../../../src/routes/drip/+page.svelte"],"sourcesContent":["import { binToHex } from './hex.js';\nconst defaultStringifySpacing = 2;\n/**\n * A safe method to `JSON.stringify` a value, useful for debugging and logging\n * purposes.\n *\n * @remarks\n * Without modifications, `JSON.stringify` has several shortcomings in\n * debugging and logging usage:\n * - throws when serializing anything containing a `bigint`\n * - `Uint8Array`s are often encoded in base 10 with newlines between each\n *   index item\n * - `functions` and `symbols` are not clearly marked\n *\n * This method is more helpful in these cases:\n * - `bigint`: `0n` → `<bigint: 0n>`\n * - `Uint8Array`: `Uint8Array.of(0,0)` → `<Uint8Array: 0x0000>`\n * - `function`: `(x) => x * 2` → `<function: (x) => x * 2>`\n * - `symbol`: `Symbol(A)` → `<symbol: Symbol(A)>`\n *\n * @param value - the data to stringify\n * @param spacing - the number of spaces to use in\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const stringify = (value, spacing = defaultStringifySpacing) => JSON.stringify(value, \n// eslint-disable-next-line complexity\n(_, item) => {\n    const type = typeof item;\n    const name = typeof item === 'object' && item !== null\n        ? item.constructor.name\n        : type;\n    switch (name) {\n        case 'Uint8Array':\n            return `<Uint8Array: 0x${binToHex(item)}>`;\n        case 'bigint':\n            return `<bigint: ${item.toString()}n>`;\n        case 'function':\n        case 'symbol':\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            return `<${name}: ${item.toString()}>`;\n        default:\n            return item;\n    }\n}, spacing);\n/**\n * Given a value, recursively sort the keys of all objects it references\n * (without sorting arrays).\n *\n * @param objectOrArray - the object or array in which to sort object keys\n */\nexport const sortObjectKeys = (objectOrArray) => {\n    if (Array.isArray(objectOrArray)) {\n        return objectOrArray.map(sortObjectKeys);\n    }\n    if (typeof objectOrArray !== 'object' ||\n        objectOrArray === null ||\n        objectOrArray.constructor.name !== 'Object') {\n        return objectOrArray;\n    }\n    // eslint-disable-next-line functional/immutable-data\n    const keys = Object.keys(objectOrArray).sort((a, b) => a.localeCompare(b, 'en'));\n    return keys.reduce((all, key) => ({\n        ...all,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        [key]: sortObjectKeys(objectOrArray[key]),\n    }), {});\n};\nconst uint8ArrayRegex = /\"<Uint8Array: 0x(?<hex>[0-9a-f]*)>\"/gu;\nconst bigIntRegex = /\"<bigint: (?<bigint>[0-9]*)n>\"/gu;\n/**\n * An alternative to {@link stringify} that produces valid JavaScript for use\n * as a test vector in this library. `Uint8Array`s are constructed using\n * {@link hexToBin} and `bigint` values use the `BigInt` constructor. If\n * `alphabetize` is `true`, all objects will be sorted in the output.\n *\n * Note, this assumes all strings that match the expected regular expressions\n * are values of type `Uint8Array` and `bigint` respectively. String values\n * that otherwise happen to match these regular expressions will be converted\n * incorrectly.\n *\n * @param value - the value to stringify\n * @param alphabetize - whether or not to alphabetize object keys, defaults\n * to true\n */\nexport const stringifyTestVector = (\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue, alphabetize = true) => {\n    const stringified = alphabetize\n        ? stringify(sortObjectKeys(value))\n        : stringify(value);\n    return stringified\n        .replace(uint8ArrayRegex, \"hexToBin('$1')\")\n        .replace(bigIntRegex, '$1n');\n};\n//# sourceMappingURL=log.js.map","export const prerender = true;","import templateV3 from './template.v3.json' with { type: \"json\" };\nimport packageInfo from '../package.json' with { type: \"json\" };\nimport { binToHex, hexToBin, generateTransaction, encodeTransaction, stringify, } from '@bitauth/libauth';\nimport { getLibauthCompiler } from '@unspent/tau';\nimport { getScriptHash, getAddress } from '@unspent/tau';\nconst DUST_LIMIT = 576;\nconst MIN_PAYOUT = 164;\nconst DECAY_NUMERATOR = 4392;\nconst DECAY_DENOMINATOR = 1333036486;\nexport default class Drip {\n    static USER_AGENT = packageInfo.name;\n    static template = templateV3;\n    static compiler = getLibauthCompiler(this.template);\n    static getLockingBytecode(data = {}) {\n        const lockingBytecodeResult = this.compiler.generateBytecode({\n            data: data,\n            scriptId: 'lock'\n        });\n        if (!lockingBytecodeResult.success) {\n            /* c8 ignore next */\n            throw new Error('Failed to generate bytecode, script: , ' + stringify(lockingBytecodeResult));\n        }\n        return lockingBytecodeResult.bytecode;\n    }\n    static getScriptHash(reversed = true) {\n        return getScriptHash(this.getLockingBytecode(), reversed);\n    }\n    static getAddress(prefix = \"bitcoincash\") {\n        return getAddress(this.getLockingBytecode(), prefix);\n    }\n    static getOutput(utxo) {\n        let fee = Math.round((utxo.value * DECAY_NUMERATOR) / DECAY_DENOMINATOR) - 1;\n        fee = fee < MIN_PAYOUT ? MIN_PAYOUT : fee;\n        let outputValue = utxo.value - fee;\n        if (utxo.value > BigInt(DUST_LIMIT + MIN_PAYOUT)) {\n            return {\n                lockingBytecode: {\n                    compiler: this.compiler,\n                    script: 'lock'\n                },\n                valueSatoshis: BigInt(outputValue),\n            };\n        }\n        else {\n            return {\n                lockingBytecode: hexToBin(\"6a\"),\n                valueSatoshis: BigInt(0),\n            };\n        }\n    }\n    static getInput(utxo) {\n        let unlockingScript = utxo.value > BigInt(DUST_LIMIT + MIN_PAYOUT) ? 'unlock_return' : 'unlock_burn';\n        return {\n            outpointIndex: utxo.tx_pos,\n            outpointTransactionHash: hexToBin(utxo.tx_hash),\n            sequenceNumber: 1,\n            unlockingBytecode: {\n                compiler: this.compiler,\n                script: unlockingScript,\n                valueSatoshis: BigInt(utxo.value),\n            },\n        };\n    }\n    static processOutpoint(utxo) {\n        const inputs = [];\n        const outputs = [];\n        outputs.push(this.getOutput(utxo));\n        inputs.push(this.getInput(utxo));\n        const config = {\n            locktime: 0,\n            version: 2,\n            inputs, outputs,\n        };\n        const result = generateTransaction(config);\n        if (!result.success)\n            throw new Error('generate transaction failed!, errors: ' + stringify(result.errors));\n        return binToHex(encodeTransaction(result.transaction));\n    }\n}\n//# sourceMappingURL=index.js.map","export default \"data:image/svg+xml,%3csvg%20style='height:400px;width:400px'%20version='1.1'%20viewBox='0%200%2016%2016'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cradialGradient%20id='a'%20cx='7.24'%20cy='7.07'%20r='3.73'%20gradientTransform='matrix(-.551%201.72%20-1.8%20-.576%2022.2%20-.713)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20stop-color='%23b7ffff'%20stop-opacity='.839'%20offset='.05'/%3e%3cstop%20stop-color='%230052ef'%20offset='.95'/%3e%3c/radialGradient%3e%3c/defs%3e%3cpath%20d='m8.28%203.09c0.21-0.784%203.87%202.13%203.87%205.16%200%201.99-1.34%203.52-3.57%203.51-2.44%200-3.9-1.33-3.9-3.23%200-2.05%202.88-2.74%203.6-5.44z'%20fill='url(%23a)'/%3e%3c/svg%3e\"","<script lang=\"ts\">\n\timport { onMount, onDestroy } from 'svelte';\n\timport { page } from '$app/state';\n\n\timport {\n\t\tdecodeTransactionBCH,\n\t\tbinToHex,\n\t\thexToBin,\n\t\tswapEndianness,\n\t\thash256\n\t} from '@bitauth/libauth';\n\timport Readme from './README.md';\n\n\timport { blo } from 'blo';\n\t// Import library features.\n\timport { ElectrumClient, ConnectionStatus } from '@electrum-cash/network';\n\timport Drip from '@unspent/drip';\n\n\timport dripIcon from '$lib/images/drip.svg';\n\timport CONNECTED from '$lib/images/connected.svg';\n\timport DISCONNECTED from '$lib/images/disconnected.svg';\n\timport BitauthLink from '$lib/BitauthLink.svelte';\n\n\tlet unspent: any[] = [];\n\tlet electrumClient: any;\n\tlet scripthash = '';\n\tscripthash = Drip.getScriptHash();\n\tlet contractState = '';\n\tlet connectionStatus = '';\n\tlet spent = new Set();\n\n\tlet timer: any;\n\n\tlet prefix = page.url.hostname == 'vox.cash' ? 'bitcoincash' : 'bchtest';\n\tlet server = page.url.hostname == 'vox.cash' ? 'bch.imaginary.cash' : 'chipnet.bch.ninja';\n\n\tconst debounceClearSpent = () => {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tspent = new Set();\n\t\t}, 10000);\n\t};\n\n\tconst handleNotifications = function (data: any) {\n\t\tif (data.method === 'blockchain.scripthash.subscribe') {\n\t\t\tif (data.params[1] !== contractState) {\n\t\t\t\tcontractState = data.params[1];\n\t\t\t\tconnectionStatus = ConnectionStatus[electrumClient.status];\n\t\t\t\tupdateUnspent();\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(data);\n\t\t}\n\t};\n\n\tconst broadcast = async function (raw_tx: string) {\n\t\tlet response = await electrumClient.request('blockchain.transaction.broadcast', raw_tx);\n\t\tif (response instanceof Error) {\n\t\t\tconnectionStatus = ConnectionStatus[electrumClient.status];\n\t\t\tthrow response;\n\t\t}\n\t\tresponse as any[];\n\t};\n\n\tconst processAllOutpus = function () {\n\t\tunspent\n\t\t\t.filter((i: any) => i.height > 0)\n\t\t\t.map((u, i) => {\n\t\t\t\tprocessOutput(u, i);\n\t\t\t});\n\t};\n\n\tconst processOutput = async function (utxo: any, index: number) {\n\t\tlet txn_hex = Drip.processOutpoint(utxo);\n\t\tlet transaction = decodeTransactionBCH(hexToBin(txn_hex));\n\t\tif (typeof transaction === 'string') throw transaction;\n\t\tspent.add(`${utxo.tx_hash}\":\"${utxo.tx_pos}`);\n\t\tdebounceClearSpent();\n\n\t\tlet new_id = swapEndianness(binToHex(hash256(hexToBin(txn_hex))));\n\n\t\tlet outValue = Number(transaction.outputs[0].valueSatoshis);\n\t\tunspent.splice(index, 1);\n\n\t\tlet insertIdx = unspent.filter((i) =>\n\t\t\ti.height > 0\n\t\t\t\t? true\n\t\t\t\t: i.value < outValue\n\t\t\t\t\t? true\n\t\t\t\t\t: i.value == outValue && i.tx_hash < new_id\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: false\n\t\t).length;\n\t\tunspent.splice(insertIdx, 0, {\n\t\t\theight: 0,\n\t\t\ttx_hash: new_id,\n\t\t\tvalue: outValue\n\t\t});\n\t\tunspent = unspent;\n\t\tawait broadcast(txn_hex);\n\t};\n\n\tconst updateUnspent = async function () {\n\t\tlet response = await electrumClient.request(\n\t\t\t'blockchain.scripthash.listunspent',\n\t\t\tscripthash,\n\t\t\t'exclude_tokens'\n\t\t);\n\t\tif (response instanceof Error) throw response;\n\t\tlet unspentIds = new Set(response.map((utxo: any) => `${utxo.tx_hash}\":\"${utxo.tx_pos}`));\n\t\tif (unspent.length == 0 || spent.intersection(unspentIds).size == 0) {\n\t\t\tunspent = response;\n\t\t}\n\t};\n\n\tonMount(async () => {\n\t\t// Initialize an electrum client.\n\t\telectrumClient = new ElectrumClient(Drip.USER_AGENT, '1.4.1', server);\n\n\t\t// Wait for the client to connect.\n\t\tawait electrumClient.connect();\n\t\t// Set up a callback function to handle new blocks.\n\n\t\t// Listen for notifications.\n\t\telectrumClient.on('notification', handleNotifications);\n\n\t\t// Set up a subscription for new block headers.\n\t\tawait electrumClient.subscribe('blockchain.scripthash.subscribe', scripthash);\n\t\tupdateUnspent();\n\t});\n\n\tonDestroy(async () => {\n\t\tawait electrumClient.disconnect();\n\t});\n</script>\n\n<svelte:head>\n\t<title>Drip Mine</title>\n\t<meta name=\"description\" content=\"Release the miner extractable value (MEV)!\" />\n</svelte:head>\n\n<section>\n\t<div class=\"status\">\n\t\t<BitauthLink template={Drip.template} />\n\t\t{#if connectionStatus == 'CONNECTED'}\n\t\t\t<img src={CONNECTED} alt={connectionStatus} />\n\t\t{:else}\n\t\t\t<img src={DISCONNECTED} alt=\"Disconnected\" />\n\t\t{/if}\n\t</div>\n\t<h1>Release the miner extractable value (MEV)!</h1>\n\t<div class=\"header\">\n\t\t<button onclick={() => processAllOutpus()}>Release all Miner Extractable Value (MEV)</button>\n\t</div>\n\t<h3>Unspent Transaction Outputs (utxos)</h3>\n\t<div class=\"grid\">\n\t\t{#if unspent.filter((i: any) => i.height > 0).length > 0}\n\t\t\t{#each unspent.filter((i: any) => i.height > 0) as item, index}\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<button onclick={() => processOutput(item, index)}>\n\t\t\t\t\t\t<img src={blo(`0x${item.tx_hash}`, 32)} alt={item.tx_hash} />\n\t\t\t\t\t\t<!-- <p>{Number(item.value).toLocaleString()}</p> -->\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t{:else}\n\t\t\t<p>No spendable outputs, check back in 10 minutes.</p>\n\t\t{/if}\n\t</div>\n\t<h3>Mempool Transactions</h3>\n\t<div class=\"grid\">\n\t\t{#if unspent.filter((i: any) => i.height <= 0).length > 0}\n\t\t\t{#each unspent.filter((i: any) => i.height <= 0) as item, index}\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<button disabled>\n\t\t\t\t\t\t<img src={blo(`0x${item.tx_hash}`, 32)} alt={item.tx_hash} />\n\t\t\t\t\t\t<!-- <p>{Number(item.value).toLocaleString()}</p> -->\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t{:else}\n\t\t\t<p>No pending transactions</p>\n\t\t{/if}\n\t</div>\n\n\t<Readme />\n\t<qr-code\n\t\tid=\"qr1\"\n\t\tcontents={Drip.getAddress(prefix)}\n\t\tmodule-color=\"#000\"\n\t\tposition-ring-color=\"#0052ef\"\n\t\tposition-center-color=\"#b7ffff\"\n\t\tmask-x-to-y-ratio=\"1.2\"\n\t\tstyle=\"width: 150px;\n\t\t\t\t\t\t\t\t\theight: 150px;\n\t\t\t\t\t\t\t\t\tmargin: 0.5em auto;\n\t\t\t\t\t\t\t\t\tbackground-color: #fff;\"\n\t>\n\t\t<img src={dripIcon} slot=\"icon\" />\n\t</qr-code>\n\t<pre id=\"deposit\">{Drip.getAddress(prefix)}</pre>\n</section>\n\n<style>\n\tsection {\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex: 0.6;\n\t}\n\n\t.status {\n\t\ttext-align: end;\n\t}\n\n\t.grid {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t\talign-items: flex-start;\n\t\ttext-align: center;\n\t}\n\n\t.grid .row {\n\t\tgrid-gap: 0.2rem;\n\t}\n\n\tbutton {\n\t\tpadding: 0px;\n\t}\n\tbutton p {\n\t\tfont-size: x-small;\n\t\tfont-weight: 400;\n\t\tmargin: 0px;\n\t}\n\tbutton:disabled {\n\t\tfilter: grayscale(100%);\n\t}\n\n\t.header button {\n\t\tbackground-color: #a45eb6; /* Green */\n\t\tborder: none;\n\t\tcolor: white;\n\t\tpadding: 15px 32px;\n\t\tmargin: auto;\n\t\tborder-radius: 20px;\n\t\ttext-decoration: none;\n\t\tdisplay: inline-block;\n\t\tfont-size: 16px;\n\t}\n\n\t.header {\n\t\tpadding: 15px 16px;\n\t\tdisplay: flex;\n\t}\n</style>\n"],"names":["defaultStringifySpacing","stringify","value","spacing","_","item","name","binToHex","prerender","DUST_LIMIT","MIN_PAYOUT","DECAY_NUMERATOR","DECAY_DENOMINATOR","Drip","packageInfo","templateV3","getLibauthCompiler","data","lockingBytecodeResult","reversed","getScriptHash","prefix","getAddress","utxo","fee","outputValue","hexToBin","unlockingScript","inputs","outputs","result","generateTransaction","encodeTransaction","dripIcon","processAllOutpus","unspent","$.mutable_source","electrumClient","scripthash","contractState","connectionStatus","spent","timer","page","server","debounceClearSpent","handleNotifications","$.set","ConnectionStatus","updateUnspent","broadcast","raw_tx","response","$.get","i","u","processOutput","index","txn_hex","transaction","decodeTransactionBCH","new_id","swapEndianness","hash256","outValue","insertIdx","unspentIds","onMount","ElectrumClient","onDestroy","CONNECTED","DISCONNECTED","$$render","consequent","alternate","$.index","$$anchor","$.set_attribute","img_2","blo","consequent_1","alternate_1","img_3","consequent_2","alternate_2"],"mappings":"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","x_google_ignoreList":[0]}