{"version":3,"file":"4.DX5K95ns.js","sources":["../../../../../../src/routes/drip/+page.ts","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/format/error.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/format/base-convert.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/format/base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/format/hex.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/format/bin-string.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/format/number.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/format/utf8.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/bin/hashes.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/bin/ripemd160/ripemd160.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm-types.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/bin/sha1/sha1.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/bin/sha256/sha256.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/bin/sha512/sha512.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/crypto/ripemd160.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/crypto/secp256k1.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/crypto/sha1.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/crypto/sha256.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/crypto/sha512.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/crypto/combinations.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/crypto/hmac.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/address/bech32.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/address/cash-address.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/message/transaction-types.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-opcodes.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/arithmetic.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/bitwise.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/common-types.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/encoding.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/crypto.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/format.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/inspection.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/nop.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/push.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/stack.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/time.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-consensus.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-crypto.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-tokens.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-instruction-set.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/virtual-machine.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-vm.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/chips/bch-chips-opcodes.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/key/hd-key.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/language/language-types.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/language/language-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/language/parsimmon.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/language/parse.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/language/reduce.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/language/resolve.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/language/compile.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/compiler/compiler-defaults.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/compiler/compiler-operation-helpers.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/compiler/compiler-operations.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/compiler/scenarios.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/compiler/compiler-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/compiler/compiler-bch/compiler-bch.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/schema/ajv/validate-wallet-template.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/schema/ajv/ajv-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/schema/wallet-template.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/transaction/generate-transaction.js","../../../../../../../../node_modules/.pnpm/blo@2.0.0/node_modules/blo/dist/esm/random.js","../../../../../../../../node_modules/.pnpm/blo@2.0.0/node_modules/blo/dist/esm/image.js","../../../../../../../../node_modules/.pnpm/blo@2.0.0/node_modules/blo/dist/esm/svg.js","../../../../../../../../node_modules/.pnpm/blo@2.0.0/node_modules/blo/dist/esm/index.js","../../../../../../../../node_modules/.pnpm/ms@2.1.3/node_modules/ms/index.js","../../../../../../../../node_modules/.pnpm/debug@4.4.1/node_modules/debug/src/common.js","../../../../../../../../node_modules/.pnpm/debug@4.4.1/node_modules/debug/src/browser.js","../../../../../../../../node_modules/.pnpm/@electrum-cash+debug-logs@1.0.0/node_modules/@electrum-cash/debug-logs/dist/index.mjs","../../../../../../../../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js","../../../../../../../../node_modules/.pnpm/async-mutex@0.5.0/node_modules/async-mutex/index.mjs","../../../../../../../../node_modules/.pnpm/@monsterbitar+isomorphic-ws@5.3.1_ws@8.18.2/node_modules/@monsterbitar/isomorphic-ws/browser.mjs","../../../../../../../../node_modules/.pnpm/@electrum-cash+web-socket@1.0.0/node_modules/@electrum-cash/web-socket/dist/index.mjs","../../../../../../../../node_modules/.pnpm/lossless-json@4.1.0/node_modules/lossless-json/lib/esm/utils.js","../../../../../../../../node_modules/.pnpm/lossless-json@4.1.0/node_modules/lossless-json/lib/esm/LosslessNumber.js","../../../../../../../../node_modules/.pnpm/lossless-json@4.1.0/node_modules/lossless-json/lib/esm/numberParsers.js","../../../../../../../../node_modules/.pnpm/lossless-json@4.1.0/node_modules/lossless-json/lib/esm/revive.js","../../../../../../../../node_modules/.pnpm/lossless-json@4.1.0/node_modules/lossless-json/lib/esm/parse.js","../../../../../../../../node_modules/.pnpm/@electrum-cash+network@4.1.1_patch_hash=f7b2ff0ce9059e21d0dfacaf7f7db0c1c5e4577b1d6e7a96b6203dd195fbbc08/node_modules/@electrum-cash/network/dist/index.mjs","../../../../../../../common/out/types.js","../../../../../../../common/out/compiler.js","../../../../../../../drip-mine/out/v3/index.js","../../../../../../src/lib/images/connected.svg","../../../../../../src/lib/images/disconnected.svg","../../../../../../../../node_modules/.pnpm/pako@2.1.0/node_modules/pako/dist/pako.esm.mjs","../../../../../../src/lib/images/bitauth.svg","../../../../../../src/lib/BitauthLink.svelte","../../../../../../src/routes/drip/+page.svelte"],"sourcesContent":["export const prerender = true;","/**\n * A simple method used throughout Libauth to format error messages. By\n * formatting errors this way, downstream consumers can detect specific error\n * types by matching the `errorType`. For example, the error:\n *\n * ```ts\n * formatError(SomeTypeOfError.exceedsMaximum, `Provided value: ${value}`);\n * ```\n *\n * Can be detected with `String.includes()`, even if the\n * `SomeTypeOfError.exceedsMaximum` error message changes:\n * ```ts\n * error.includes(SomeTypeOfError.exceedsMaximum);\n * // => true\n * ```\n *\n * Using this method ensures consistency across the library.\n *\n * @remarks\n * In Libauth, expected errors use the type `string` rather than `Error` (or\n * other objects that inherit from `Error`) to simplify the resulting types and\n * typechecking requirements. This ensures consistency of returned errors in all\n * environments, avoids exposing internal details like stack traces and line\n * numbers, and allows error messages to be recorded or used as text without an\n * intermediate `toString()` method.\n *\n * @param errorType - the error enum member representing this error type\n * @param errorDetails - optional, additional details to include in the error\n * message\n * @param throwError - if `true`, the function will throw an `Error` rather than\n * returning the string (defaults to `false`).\n */\nexport const formatError = (errorType, errorDetails, throwError = false) => {\n    const message = `${errorType}${errorDetails === undefined ? '' : ` ${errorDetails}`}`;\n    if (throwError) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new Error(message);\n    }\n    return message;\n};\n/**\n *\n * @param value - the unexpected value\n * @param message - an optional error message\n */\nexport const unknownValue = (value, message = `Received an unknown value; this should have been caught by TypeScript - are your types correct?`) => formatError(message, String(value), true);\n/**\n * A utility to handle error results by throwing an `Error` object.\n *\n * If the provided value is of type `string`, the contents of the string are\n * thrown as a new `Error`, otherwise, the value is returned unmodified.\n *\n * This method is useful for eliminating `string` as a possible type from a\n * resulting value, particularly in places where an error is never expected to\n * occur in practice (i.e. no user or runtime input is involved), e.g.:\n *\n * ```ts\n * import { assertSuccess, decodeCashAddress, binToHex } from '@bitauth/libauth';\n * const address = 'bitcoincash:zq2azmyyv6dtgczexyalqar70q036yund5j2mspghf';\n *\n * // Might be either a string or a decoded address:\n * const decoded = decodeCashAddress(address);\n * // Now guaranteed to be a decoded address (error messages are thrown):\n * const tokenAddress = assertSuccess(decoded);\n * // The result can be used immediately:\n * console.log(binToHex(tokenAddress.payload));\n * ```\n *\n * @param result - A result which might be a string.\n * @param expectation - An optional, descriptive prefix for the error message\n * thrown in failure cases. By default,\n * `Expected a successful result, but encountered an error: `.\n */\nexport const assertSuccess = (result, expectation = 'Expected a successful result, but encountered an error: ') => {\n    // eslint-disable-next-line functional/no-throw-statements\n    if (typeof result === 'string')\n        throw new Error(`${expectation}${result}`);\n    return result;\n};\n//# sourceMappingURL=error.js.map","import { formatError } from './error.js';\nexport var BaseConverterCreationError;\n(function (BaseConverterCreationError) {\n    BaseConverterCreationError[\"tooLong\"] = \"Base converter creation error: an alphabet may be no longer than 254 characters.\";\n    BaseConverterCreationError[\"ambiguousCharacter\"] = \"Base converter creation error: a character code may only appear once in a single alphabet.\";\n})(BaseConverterCreationError || (BaseConverterCreationError = {}));\nexport var BaseConversionError;\n(function (BaseConversionError) {\n    BaseConversionError[\"unknownCharacter\"] = \"Base conversion error: encountered an unknown character for this alphabet.\";\n})(BaseConversionError || (BaseConversionError = {}));\n/**\n * Create a {@link BaseConverter}, exposing methods for encoding and decoding\n * `Uint8Array`s using bitcoin-style padding: each leading zero in the input is\n * replaced with the zero-index character of the `alphabet`, then the remainder\n * of the input is encoded as a large number in the specified alphabet.\n *\n * For example, using the alphabet `01`, the input `[0, 15]` is encoded `01111`\n * – a single `0` represents the leading padding, followed by the base2 encoded\n * `0x1111` (15). With the same alphabet, the input `[0, 0, 255]` is encoded\n * `0011111111` - only two `0` characters are required to represent both\n * leading zeros, followed by the base2 encoded `0x11111111` (255).\n *\n * **This is not compatible with `RFC 3548`'s `Base16`, `Base32`, or `Base64`.**\n *\n * If the alphabet is malformed, this method returns the error as a `string`.\n *\n * @param alphabet - an ordered string that maps each index to a character,\n * e.g. `0123456789`.\n */\n// Algorithm from the `base-x` implementation (derived from the original Satoshi implementation): https://github.com/cryptocoinjs/base-x\nexport const createBaseConverter = (alphabet) => {\n    const undefinedValue = 255;\n    const uint8ArrayBase = 256;\n    if (alphabet.length >= undefinedValue)\n        return formatError(BaseConverterCreationError.tooLong, `Alphabet length: ${alphabet.length}`);\n    const alphabetMap = new Uint8Array(uint8ArrayBase).fill(undefinedValue);\n    // eslint-disable-next-line functional/no-loop-statements, functional/no-let, no-plusplus\n    for (let index = 0; index < alphabet.length; index++) {\n        const characterCode = alphabet.charCodeAt(index);\n        if (alphabetMap[characterCode] !== undefinedValue) {\n            return formatError(BaseConverterCreationError.ambiguousCharacter, `Ambiguous character: ${alphabetMap[characterCode]}`);\n        }\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        alphabetMap[characterCode] = index;\n    }\n    const base = alphabet.length;\n    const paddingCharacter = alphabet.charAt(0);\n    const factor = Math.log(base) / Math.log(uint8ArrayBase);\n    const inverseFactor = Math.log(uint8ArrayBase) / Math.log(base);\n    return {\n        // eslint-disable-next-line complexity\n        decode: (input) => {\n            if (input.length === 0)\n                return Uint8Array.of();\n            const firstNonZeroIndex = input\n                .split('')\n                .findIndex((character) => character !== paddingCharacter);\n            if (firstNonZeroIndex === -1) {\n                return new Uint8Array(input.length);\n            }\n            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * factor + 1);\n            const decoded = new Uint8Array(requiredLength);\n            /* eslint-disable functional/no-let, functional/no-expression-statements */\n            let nextByte = firstNonZeroIndex;\n            let remainingBytes = 0;\n            // eslint-disable-next-line functional/no-loop-statements\n            while (input[nextByte] !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                let carry = alphabetMap[input.charCodeAt(nextByte)];\n                if (carry === undefinedValue)\n                    return formatError(BaseConversionError.unknownCharacter, `Unknown character: \"${input[nextByte]}\".`);\n                let digit = 0;\n                // eslint-disable-next-line functional/no-loop-statements\n                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; \n                // eslint-disable-next-line no-plusplus\n                steps--, digit++) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    carry += Math.floor(base * decoded[steps]);\n                    // eslint-disable-next-line functional/immutable-data\n                    decoded[steps] = Math.floor(carry % uint8ArrayBase);\n                    carry = Math.floor(carry / uint8ArrayBase);\n                }\n                remainingBytes = digit;\n                // eslint-disable-next-line no-plusplus\n                nextByte++;\n            }\n            /* eslint-enable functional/no-let, functional/no-expression-statements */\n            const firstNonZeroResultDigit = decoded.findIndex((value) => value !== 0);\n            const bin = new Uint8Array(firstNonZeroIndex + (requiredLength - firstNonZeroResultDigit));\n            // eslint-disable-next-line functional/no-expression-statements\n            bin.set(decoded.slice(firstNonZeroResultDigit), firstNonZeroIndex);\n            return bin;\n        },\n        // eslint-disable-next-line complexity\n        encode: (input) => {\n            if (input.length === 0)\n                return '';\n            const firstNonZeroIndex = input.findIndex((byte) => byte !== 0);\n            if (firstNonZeroIndex === -1) {\n                return paddingCharacter.repeat(input.length);\n            }\n            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * inverseFactor + 1);\n            const encoded = new Uint8Array(requiredLength);\n            /* eslint-disable functional/no-let, functional/no-expression-statements */\n            let nextByte = firstNonZeroIndex;\n            let remainingBytes = 0;\n            // eslint-disable-next-line functional/no-loop-statements\n            while (nextByte !== input.length) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                let carry = input[nextByte];\n                let digit = 0;\n                // eslint-disable-next-line functional/no-loop-statements\n                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; \n                // eslint-disable-next-line no-plusplus\n                steps--, digit++) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    carry += Math.floor(uint8ArrayBase * encoded[steps]);\n                    // eslint-disable-next-line functional/immutable-data\n                    encoded[steps] = Math.floor(carry % base);\n                    carry = Math.floor(carry / base);\n                }\n                remainingBytes = digit;\n                // eslint-disable-next-line no-plusplus\n                nextByte++;\n            }\n            /* eslint-enable functional/no-let, functional/no-expression-statements */\n            const firstNonZeroResultDigit = encoded.findIndex((value) => value !== 0);\n            const padding = paddingCharacter.repeat(firstNonZeroIndex);\n            return encoded\n                .slice(firstNonZeroResultDigit)\n                .reduce((all, digit) => all + alphabet.charAt(digit), padding);\n        },\n    };\n};\nexport const bitcoinBase58Alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst base58 = createBaseConverter(bitcoinBase58Alphabet);\n/**\n * Convert a bitcoin-style base58-encoded string to a Uint8Array.\n *\n * For the reverse, see {@link binToBase58}.\n *\n * See {@link createBaseConverter} for format details.\n * @param input - a valid base58-encoded string to decode\n */\nexport const base58ToBin = base58.decode;\n/**\n * Convert a Uint8Array to a bitcoin-style base58-encoded string.\n *\n * For the reverse, see {@link base58ToBin}.\n *\n * See {@link createBaseConverter} for format details.\n * @param input - the Uint8Array to base58 encode\n */\nexport const binToBase58 = base58.encode;\n//# sourceMappingURL=base-convert.js.map","// base64 encode/decode derived from: https://github.com/niklasvh/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64GroupLength = 4;\nconst nonBase64Chars = new RegExp(`[^${chars}=]`, 'u');\n/**\n * For use before {@link base64ToBin}. Returns true if the provided string is\n * valid base64 (length is divisible by 4, only uses base64 characters).\n * @param maybeBase64 - a string to test\n */\nexport const isBase64 = (maybeBase64) => maybeBase64.length % base64GroupLength === 0 &&\n    !nonBase64Chars.test(maybeBase64);\n/* eslint-disable functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus, @typescript-eslint/no-non-null-assertion */\n/**\n * Convert a base64-encoded string to a Uint8Array.\n *\n * Note, this method always completes. If `validBase64` is not valid base64, an\n * incorrect result will be returned. If `validBase64` is potentially malformed,\n * check it with {@link isBase64} before calling this method.\n *\n * For the reverse, see {@link binToBase64}.\n *\n * @param validBase64 - a valid base64-encoded string to decode\n */\nexport const base64ToBin = (validBase64) => {\n    const lookup = new Uint8Array(123);\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements\n    for (let i = 0; i < chars.length; i++) {\n        lookup[chars.charCodeAt(i)] = i;\n    }\n    const bufferLengthEstimate = validBase64.length * 0.75;\n    const stringLength = validBase64.length;\n    const bufferLength = validBase64[validBase64.length - 1] === '=' // eslint-disable-line @typescript-eslint/prefer-string-starts-ends-with\n        ? validBase64[validBase64.length - 2] === '='\n            ? bufferLengthEstimate - 2\n            : bufferLengthEstimate - 1\n        : bufferLengthEstimate;\n    const buffer = new ArrayBuffer(bufferLength);\n    const bytes = new Uint8Array(buffer);\n    // eslint-disable-next-line functional/no-let\n    let p = 0;\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements\n    for (let i = 0; i < stringLength; i += 4) {\n        const encoded1 = lookup[validBase64.charCodeAt(i)];\n        const encoded2 = lookup[validBase64.charCodeAt(i + 1)];\n        const encoded3 = lookup[validBase64.charCodeAt(i + 2)];\n        const encoded4 = lookup[validBase64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return bytes;\n};\n/**\n * Convert a Uint8Array to a base64-encoded string.\n *\n * For the reverse, see {@link base64ToBin}.\n *\n * @param bytes - the Uint8Array to base64 encode\n */\nexport const binToBase64 = (bytes) => {\n    // eslint-disable-next-line functional/no-let\n    let result = '';\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements\n    for (let i = 0; i < bytes.length; i += 3) {\n        result += chars[bytes[i] >> 2];\n        result += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        result += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        result += chars[bytes[i + 2] & 63];\n    }\n    const padded = bytes.length % 3 === 2\n        ? `${result.substring(0, result.length - 1)}=`\n        : bytes.length % 3 === 1\n            ? `${result.substring(0, result.length - 2)}==`\n            : result;\n    return padded;\n};\n/* eslint-enable functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus, @typescript-eslint/no-non-null-assertion */\n//# sourceMappingURL=base64.js.map","/**\n * Returns an array of incrementing values starting at `begin` and incrementing\n * by one for `length`.\n *\n * E.g.: `range(3)` → `[0, 1, 2]` and `range(3, 1)` → `[1, 2, 3]`\n *\n * @param length - the number of elements in the array\n * @param begin - the index at which the range starts (default: `0`)\n */\nexport const range = (length, begin = 0) => Array.from({ length }, (_, index) => begin + index);\n/**\n * Split a string into an array of `chunkLength` strings. The final string may\n * have a length between 1 and `chunkLength`.\n *\n * E.g.: `splitEvery('abcde', 2)` → `['ab', 'cd', 'e']`\n */\nexport const splitEvery = (input, chunkLength) => range(Math.ceil(input.length / chunkLength))\n    .map((index) => index * chunkLength)\n    .map((begin) => input.slice(begin, begin + chunkLength));\nconst hexByteWidth = 2;\nconst hexadecimal = 16;\n/**\n * Decode a hexadecimal-encoded string into a Uint8Array.\n *\n * E.g.: `hexToBin('2a64ff')` → `new Uint8Array([42, 100, 255])`\n *\n * Note, this method always completes. If `validHex` is not divisible by 2,\n * the final byte will be parsed as if it were prepended with a `0` (e.g. `aaa`\n * is interpreted as `aa0a`). If `validHex` is potentially malformed, check\n * it with {@link isHex} before calling this method.\n *\n * For the reverse, see {@link binToHex}.\n *\n * @param validHex - a string of valid, hexadecimal-encoded data\n */\nexport const hexToBin = (validHex) => Uint8Array.from(splitEvery(validHex, hexByteWidth).map((byte) => parseInt(byte, hexadecimal)));\n/**\n * For use before {@link hexToBin}. Returns true if the provided string is valid\n * hexadecimal (length is divisible by 2, only uses hexadecimal characters).\n * @param maybeHex - a string to test\n */\nexport const isHex = (maybeHex) => maybeHex.length % hexByteWidth === 0 && !/[^a-fA-F0-9]/u.test(maybeHex);\n/**\n * Encode a Uint8Array into a hexadecimal-encoded string.\n *\n * E.g.: `binToHex(new Uint8Array([42, 100, 255]))` → `'2a64ff'`\n *\n * For the reverse, see {@link hexToBin}.\n *\n * @param bytes - a Uint8Array to encode\n */\nexport const binToHex = (bytes) => bytes.reduce((str, byte) => str + byte.toString(hexadecimal).padStart(hexByteWidth, '0'), '');\n/**\n * Decode a hexadecimal-encoded string into bytes, reverse it, then re-encode.\n *\n * @param validHex - a string of valid, hexadecimal-encoded data. See\n * {@link hexToBin} for more information.\n */\nexport const swapEndianness = (validHex) => binToHex(hexToBin(validHex).reverse());\n/**\n * Reduce an array of `Uint8Array`s into a single `Uint8Array`.\n * @param array - the array of `Uint8Array`s to flatten\n */\nexport const flattenBinArray = (array) => {\n    const totalLength = array.reduce((total, bin) => total + bin.length, 0);\n    const flattened = new Uint8Array(totalLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    array.reduce((index, bin) => {\n        // eslint-disable-next-line functional/no-expression-statements\n        flattened.set(bin, index);\n        return index + bin.length;\n    }, 0);\n    return flattened;\n};\n/**\n * Compare to `Uint8Array`s, return true if their contents are exactly the same,\n * otherwise return false.\n * @param a - the first Uint8Array\n * @param b - the second Uint8Array\n */\nexport const binsAreEqual = (a, b) => {\n    if (a.length !== b.length) {\n        return false;\n    }\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n//# sourceMappingURL=hex.js.map","import { splitEvery } from './hex.js';\nconst binaryByteWidth = 8;\nconst binary = 2;\n/**\n * Decode a binary-encoded string into a Uint8Array.\n *\n * E.g.: `binStringToBin('0010101001100100')` → `new Uint8Array([42, 100])`\n *\n * Note, this method always completes. If `binaryDigits` is not divisible by 8,\n * the final byte will be parsed as if it were prepended with `0`s (e.g. `1`\n * is interpreted as `00000001`). If `binaryDigits` is potentially malformed,\n * check it with `isBinString` before calling this method.\n *\n * For the reverse, see {@link binToBinString}.\n *\n * @param binaryDigits - a string of `0`s and `1`s with a length divisible by 8\n */\nexport const binStringToBin = (binaryDigits) => Uint8Array.from(splitEvery(binaryDigits, binaryByteWidth).map((byteString) => parseInt(byteString, binary)));\n/**\n * Encode a Uint8Array into a binary-encoded string.\n *\n * E.g.: `binToBinString(Uint8Array.from([42, 100]))` → `'0010101001100100'`\n *\n * For the reverse, see {@link binStringToBin}.\n *\n * @param bytes - a Uint8Array to encode\n */\nexport const binToBinString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(binary).padStart(binaryByteWidth, '0'), '');\n/**\n * For use before {@link binStringToBin}. Returns true if the provided string is\n * a valid binary string (length is divisible by 8 and only uses the characters\n * `0` and `1`).\n * @param maybeBinString - a string to test\n */\nexport const isBinString = (maybeBinString) => maybeBinString.length % binaryByteWidth === 0 &&\n    !/[^01]/u.test(maybeBinString);\n//# sourceMappingURL=bin-string.js.map","import { formatError } from './error.js';\n/**\n * Encode a positive integer as a little-endian Uint8Array. For values exceeding\n * `Number.MAX_SAFE_INTEGER` (`9007199254740991`),\n * use {@link bigIntToBinUintLE}.\n *\n * Negative values will return the same result as `0`.\n *\n * For the reverse, see {@link binToNumberUintLE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUintLE = (value) => {\n    const baseUint8Array = 256;\n    const result = [];\n    // eslint-disable-next-line functional/no-let\n    let remaining = value;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (remaining >= baseUint8Array) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(remaining % baseUint8Array);\n        // eslint-disable-next-line functional/no-expression-statements\n        remaining = Math.floor(remaining / baseUint8Array);\n    }\n    // eslint-disable-next-line functional/no-conditional-statements, functional/no-expression-statements, functional/immutable-data\n    if (remaining > 0)\n        result.push(remaining);\n    return Uint8Array.from(result);\n};\n/**\n * Fill a new Uint8Array of a specific byte-length with the contents of a given\n * Uint8Array, truncating or padding the Uint8Array with zeros.\n *\n * @param bin - the Uint8Array to resize\n * @param bytes - the desired byte-length\n */\nexport const binToFixedLength = (bin, bytes) => {\n    const fixedBytes = new Uint8Array(bytes);\n    const maxValue = 255;\n    // eslint-disable-next-line functional/no-expression-statements, @typescript-eslint/no-unused-expressions\n    bin.length > bytes ? fixedBytes.fill(maxValue) : fixedBytes.set(bin);\n    return fixedBytes;\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array, clamping the\n * results – values exceeding `0xffff` (`65535`) return the same result as\n * `0xffff`, negative values will return the same result as `0`.\n *\n * For an alternative overflow behavior, see {@link numberToBinUint16LE}.\n *\n * For the reverse, see {@link binToNumberUint16LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint16LEClamped = (value) => {\n    const uint16 = 2;\n    return binToFixedLength(numberToBinUintLE(value), uint16);\n};\n/**\n * Encode a positive integer as a 4-byte Uint32LE Uint8Array, clamping the\n * results – values exceeding `0xffffffff` (`4294967295`) return the same result\n * as `0xffffffff`, negative values will return the same result as `0`.\n *\n * For an alternative overflow behavior, see {@link numberToBinUint32LE}.\n *\n * For the reverse, see {@link binToNumberUint32LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint32LEClamped = (value) => {\n    const uint32 = 4;\n    return binToFixedLength(numberToBinUintLE(value), uint32);\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff` (`65535`). If applicable, applications should handle such\n * cases prior to calling this method.\n *\n * For an alternative overflow behavior, see {@link numberToBinUint16LEClamped}.\n *\n * For the reverse, see {@link binToNumberUint16LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint16LE = (value) => {\n    const uint16Length = 2;\n    const bin = new Uint8Array(uint16Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setUint16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode an integer as a 2-byte Int16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0x0000` to `0xffff` (`65535`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * For the reverse, see {@link binToNumberInt16LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinInt16LE = (value) => {\n    const int16Length = 2;\n    const bin = new Uint8Array(int16Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setInt16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode an integer as a 4-byte Uint32LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0x00000000` to `0xffffffff` (`4294967295`). If applicable, applications\n * should handle such cases prior to calling this method.\n *\n * For the reverse, see {@link binToNumberInt32LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinInt32LE = (value) => {\n    const int32Length = 4;\n    const bin = new Uint8Array(int32Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setInt32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Decode a 2-byte Int16LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 2 bytes.\n *\n * For the reverse, see {@link numberToBinInt16LE}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToNumberInt16LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getInt16(0, readAsLittleEndian);\n};\n/**\n * Decode a 4-byte Int32LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 4 bytes.\n *\n * For the reverse, see {@link numberToBinInt32LE}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToNumberInt32LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getInt32(0, readAsLittleEndian);\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff` (`65535`). If applicable, applications should handle such\n * cases prior to calling this method.\n *\n * For the reverse, reverse the result of {@link binToNumberUint16LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint16BE = (value) => {\n    const uint16Length = 2;\n    const bin = new Uint8Array(uint16Length);\n    const writeAsLittleEndian = false;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setUint16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive number as a 4-byte Uint32LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffffffff` (`4294967295`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * For an alternative overflow behavior, see {@link numberToBinUint32LEClamped}.\n *\n * For the reverse, see {@link binToNumberUint32LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint32LE = (value) => {\n    const uint32Length = 4;\n    const bin = new Uint8Array(uint32Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setUint32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive number as a 4-byte Uint32BE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffffffff` (`4294967295`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * For the reverse, reverse the result of {@link binToNumberUint32LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint32BE = (value) => {\n    const uint32Length = 4;\n    const bin = new Uint8Array(uint32Length);\n    const writeAsLittleEndian = false;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setUint32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive BigInt as little-endian Uint8Array. Negative values will\n * return the same result as `0`.\n *\n * For the reverse, see {@link binToBigIntUintLE}.\n *\n * @param value - the number to encode\n */\nexport const bigIntToBinUintLE = (value) => {\n    const baseUint8Array = 256;\n    const base = BigInt(baseUint8Array);\n    const result = [];\n    // eslint-disable-next-line functional/no-let\n    let remaining = value;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (remaining >= base) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(Number(remaining % base));\n        // eslint-disable-next-line functional/no-expression-statements\n        remaining /= base;\n    }\n    // eslint-disable-next-line functional/no-conditional-statements, functional/no-expression-statements, functional/immutable-data\n    if (remaining > 0n)\n        result.push(Number(remaining));\n    return Uint8Array.from(result.length > 0 ? result : [0]);\n};\n/**\n * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array, clamping the\n * results – values exceeding `0xffff_ffff_ffff_ffff` (`18446744073709551615`)\n * return the same result as `0xffff_ffff_ffff_ffff`, negative values return the\n * same result as `0`.\n *\n * For an alternative overflow behavior, see {@link bigIntToBinUint64LE}.\n *\n * For the reverse, see {@link binToBigIntUint64LE}.\n *\n * @param value - the number to encode\n */\nexport const bigIntToBinUint64LEClamped = (value) => {\n    const uint64 = 8;\n    return binToFixedLength(bigIntToBinUintLE(value), uint64);\n};\n/**\n * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff_ffff_ffff_ffff` (`18446744073709551615`).\n *\n * For an alternative overflow behavior, see {@link bigIntToBinUint64LEClamped}.\n *\n * For the reverse, see {@link binToBigIntUint64LE}.\n *\n * @param value - the number to encode\n */\nexport const bigIntToBinUint64LE = (value) => {\n    const uint64LengthInBits = 64;\n    const valueAsUint64 = BigInt.asUintN(uint64LengthInBits, value);\n    const fixedLengthBin = bigIntToBinUint64LEClamped(valueAsUint64);\n    return fixedLengthBin;\n};\n/**\n * Encode an integer as a 4-byte, little-endian Uint8Array using the number's\n * two's compliment representation (the format used by JavaScript's bitwise\n * operators).\n *\n * @remarks\n * The C++ bitcoin implementations sometimes represent short vectors using\n * signed 32-bit integers (e.g. `sighashType`). This method can be used to test\n * compatibility with those implementations.\n *\n * @param value - the number to encode\n */\nexport const numberToBinInt32TwosCompliment = (value) => {\n    const bytes = 4;\n    const bitsInAByte = 8;\n    const bin = new Uint8Array(bytes);\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let index = 0; index < bytes; index++) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        bin[index] = value;\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, no-param-reassign\n        value >>>= bitsInAByte;\n    }\n    return bin;\n};\n/**\n * Decode a little-endian Uint8Array of any length into a number. For numbers\n * larger than `Number.MAX_SAFE_INTEGER` (`9007199254740991`), use\n * `binToBigIntUintLE`.\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * For the reverse, see {@link numberToBinUintLE}.\n *\n * @privateRemarks\n * We avoid a bitwise strategy here because JavaScript uses 32-bit signed\n * integers for bitwise math, so larger numbers are converted incorrectly. E.g.\n * `2147483648 << 8` is `0`, while `2147483648n << 8n` is `549755813888n`.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nexport const binToNumberUintLE = (bin, bytes = bin.length) => {\n    const base = 2;\n    const bitsInAByte = 8;\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce((accumulated, byte, i) => accumulated + byte * base ** (bitsInAByte * i), 0);\n};\n/**\n * Decode a 2-byte Uint16LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 2 bytes.\n *\n * For the reverse, see {@link numberToBinUint16LE}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToNumberUint16LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getUint16(0, readAsLittleEndian);\n};\n/**\n * Decode a 4-byte Uint32LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 4 bytes.\n *\n * For the reverse, see {@link numberToBinUint32LE}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToNumberUint32LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getUint32(0, readAsLittleEndian);\n};\n/**\n * Decode a big-endian Uint8Array of any length into a BigInt. If starting from\n * a hex value, consider using the BigInt constructor instead:\n * ```\n * BigInt(`0x${hex}`)\n * ```\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * For the reverse, see {@link bigIntToBinUintBE}.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nexport const binToBigIntUintBE = (bin, bytes = bin.length) => {\n    const bitsInAByte = 8;\n    const shift = BigInt(bitsInAByte);\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce(\n    // eslint-disable-next-line no-bitwise\n    (accumulated, byte) => (accumulated << shift) | BigInt(byte), 0n);\n};\n/**\n * Encode a positive BigInt as big-endian Uint8Array. Negative values will\n * return the same result as `0`.\n *\n * For the reverse, see {@link binToBigIntUintBE}.\n *\n * @param value - the number to encode\n */\nexport const bigIntToBinUintBE = (value) => bigIntToBinUintLE(value).reverse();\n/**\n * Decode an unsigned, 32-byte big-endian Uint8Array into a BigInt. This can be\n * used to decode Uint8Array-encoded cryptographic primitives like private\n * keys, public keys, curve parameters, and signature points.\n *\n * If starting from a hex value, consider using the BigInt constructor instead:\n * ```\n * BigInt(`0x${hex}`)\n * ```\n *\n * For the reverse, see {@link bigIntToBinUint256BEClamped}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToBigIntUint256BE = (bin) => {\n    const uint256Bytes = 32;\n    return binToBigIntUintBE(bin, uint256Bytes);\n};\n/**\n * Encode a positive BigInt into an unsigned 32-byte big-endian Uint8Array. This\n * can be used to encoded numbers for cryptographic primitives like private\n * keys, public keys, curve parameters, and signature points.\n *\n * Negative values will return the same result as `0`, values higher than\n * 2^256-1 will return the maximum expressible unsigned 256-bit value\n * (`0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff`).\n *\n * For the reverse, see {@link binToBigIntUint256BE}.\n *\n * @param value - the BigInt to encode\n */\nexport const bigIntToBinUint256BEClamped = (value) => {\n    const uint256Bytes = 32;\n    return binToFixedLength(bigIntToBinUintLE(value), uint256Bytes).reverse();\n};\n/**\n * Decode a little-endian Uint8Array of any length into a BigInt.\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * For the reverse, see {@link bigIntToBinUintLE}.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nexport const binToBigIntUintLE = (bin, bytes = bin.length) => {\n    const bitsInAByte = 8;\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduceRight(\n    // eslint-disable-next-line no-bitwise\n    (accumulated, byte) => (accumulated << BigInt(bitsInAByte)) | BigInt(byte), 0n);\n};\n/**\n * Decode an 8-byte Uint64LE Uint8Array into a BigInt.\n *\n * Throws if `bin` is shorter than 8 bytes.\n *\n * For the reverse, see {@link bigIntToBinUint64LE}\n * or {@link bigIntToBinUint64LEClamped}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToBigIntUint64LE = (bin) => {\n    const uint64LengthInBytes = 8;\n    const truncatedBin = bin.length > uint64LengthInBytes ? bin.slice(0, uint64LengthInBytes) : bin;\n    return binToBigIntUintLE(truncatedBin, uint64LengthInBytes);\n};\n/**\n * Decode an {@link Output.valueSatoshis} into a `BigInt`. This is an alias for\n * {@link binToBigIntUint64LE}.\n *\n * Throws if the provided value is shorter than 8 bytes.\n *\n * For the reverse, see {@link valueSatoshisToBin}.\n */\nexport const binToValueSatoshis = binToBigIntUint64LE;\n/**\n * Encode a `BigInt` into an {@link Output.valueSatoshis}. This is an alias for\n * {@link bigIntToBinUint64LE}.\n *\n * This method will return an incorrect result for values outside of the range 0\n * to 0xffff_ffff_ffff_ffff (`18446744073709551615`).\n *\n * For the reverse, see {@link binToValueSatoshis}.\n */\nexport const valueSatoshisToBin = bigIntToBinUint64LE;\n/**\n * Get the expected byte length of a CompactUint given a first byte.\n *\n * @param firstByte - the first byte of the CompactUint\n */\nexport const compactUintPrefixToLength = (firstByte) => {\n    switch (firstByte) {\n        case 253 /* CompactUint.uint16Prefix */:\n            return 2 /* CompactUint.uint16 */ + 1;\n        case 254 /* CompactUint.uint32Prefix */:\n            return 4 /* CompactUint.uint32 */ + 1;\n        case 255 /* CompactUint.uint64Prefix */:\n            return 8 /* CompactUint.uint64 */ + 1;\n        default:\n            return 1 /* CompactUint.uint8 */;\n    }\n};\nexport var CompactUintError;\n(function (CompactUintError) {\n    CompactUintError[\"noPrefix\"] = \"Error reading CompactUint: requires at least one byte.\";\n    CompactUintError[\"insufficientBytes\"] = \"Error reading CompactUint: insufficient bytes.\";\n    CompactUintError[\"nonMinimal\"] = \"Error reading CompactUint: CompactUint is not minimally encoded.\";\n    CompactUintError[\"excessiveBytes\"] = \"Error decoding CompactUint: unexpected bytes after CompactUint.\";\n})(CompactUintError || (CompactUintError = {}));\n/**\n * Read a non-minimally-encoded `CompactUint` (see {@link bigIntToCompactUint})\n * from the provided {@link ReadPosition}, returning either an error message (as\n * a string) or an object containing the value and the\n * next {@link ReadPosition}.\n *\n * Rather than this function, most applications should\n * use {@link readCompactUintMinimal}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * `CompactUint`\n */\nexport const readCompactUint = (position) => {\n    const { bin, index } = position;\n    const prefix = bin[index];\n    if (prefix === undefined) {\n        return formatError(CompactUintError.noPrefix);\n    }\n    const bytes = compactUintPrefixToLength(prefix);\n    if (bin.length - index < bytes) {\n        return formatError(CompactUintError.insufficientBytes, `CompactUint prefix ${prefix} requires at least ${bytes} bytes. Remaining bytes: ${bin.length - index}`);\n    }\n    const hasPrefix = bytes !== 1;\n    const contents = hasPrefix\n        ? bin.subarray(index + 1, index + bytes)\n        : bin.subarray(index, index + bytes);\n    return {\n        position: { bin, index: index + bytes },\n        result: binToBigIntUintLE(contents),\n    };\n};\n/**\n * Encode a positive BigInt as a `CompactUint` (Satoshi's variable-length,\n * positive integer format).\n *\n * Note: the maximum value of a CompactUint is `0xffff_ffff_ffff_ffff`\n * (`18446744073709551615`). This method will return an incorrect result for\n * values outside of the range `0` to `0xffff_ffff_ffff_ffff`. If applicable,\n * applications should handle such cases prior to calling this method.\n *\n * For the reverse, see {@link compactUintToBigInt}.\n *\n * @param value - the BigInt to encode (must be no larger than\n * `0xffff_ffff_ffff_ffff`)\n */\nexport const bigIntToCompactUint = (value) => value <= BigInt(252 /* CompactUint.uint8MaxValue */)\n    ? Uint8Array.of(Number(value))\n    : value <= BigInt(65535 /* CompactUint.uint16MaxValue */)\n        ? Uint8Array.from([\n            253 /* CompactUint.uint16Prefix */,\n            ...numberToBinUint16LE(Number(value)),\n        ])\n        : value <= BigInt(4294967295 /* CompactUint.uint32MaxValue */)\n            ? Uint8Array.from([\n                254 /* CompactUint.uint32Prefix */,\n                ...numberToBinUint32LE(Number(value)),\n            ])\n            : Uint8Array.from([\n                255 /* CompactUint.uint64Prefix */,\n                ...bigIntToBinUint64LE(value),\n            ]);\n/**\n * Read a minimally-encoded `CompactUint` from the provided\n * {@link ReadPosition}, returning either an error message (as a string) or an\n * object containing the value and the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * `CompactUint`\n */\nexport const readCompactUintMinimal = (position) => {\n    const read = readCompactUint(position);\n    if (typeof read === 'string') {\n        return read;\n    }\n    const readLength = read.position.index - position.index;\n    const canonicalEncoding = bigIntToCompactUint(read.result);\n    if (readLength !== canonicalEncoding.length) {\n        return formatError(CompactUintError.nonMinimal, `Value: ${read.result.toString()}, encoded length: ${readLength}, canonical length: ${canonicalEncoding.length}`);\n    }\n    return read;\n};\n/**\n * Decode a minimally-encoded `CompactUint` (Satoshi's variable-length, positive\n * integer format) from a Uint8Array, returning the value as a BigInt. This\n * function returns an error if the entire input is not consumed – to read a\n * `CompactUint` from a position within a larger `Uint8Array`,\n * use {@link readCompactUintMinimal} or {@link readCompactUint}.\n *\n * For the reverse, see {@link bigIntToCompactUint}.\n *\n * @param bin - the Uint8Array from which to read the CompactUint\n */\nexport const compactUintToBigInt = (bin) => {\n    const read = readCompactUintMinimal({ bin, index: 0 });\n    if (typeof read === 'string') {\n        return read;\n    }\n    if (read.position.index !== bin.length) {\n        return formatError(CompactUintError.excessiveBytes, `CompactUint ends at index ${read.position.index}, but input includes ${bin.length} bytes.`);\n    }\n    return read.result;\n};\n/**\n * Convert a signed integer into it's two's compliment unsigned equivalent, e.g.\n * `0b11111111111111111111111111111110` is `-2` as a signed integer or\n * `4294967294` as an unsigned integer.\n *\n * For the reverse, see {@link int32UnsignedToSigned}.\n *\n * @param int32 - the number to convert\n */\nexport const int32SignedToUnsigned = (int32) => \n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nUint32Array.from(Int32Array.of(int32))[0];\n/**\n * Convert an unsigned integer into it's two's compliment signed equivalent,\n * e.g. `0b11111111111111111111111111111110` is `4294967294` as an unsigned\n * integer or `-2` as a signed integer.\n *\n * For the reverse, see {@link int32SignedToUnsigned}.\n *\n * @param int32 - the number to convert\n */\nexport const int32UnsignedToSigned = (int32) => \n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nInt32Array.from(Uint32Array.of(int32))[0];\n//# sourceMappingURL=number.js.map","const utf8Encoder = new TextEncoder();\n/**\n * Interpret a string as UTF-8 and encode it as a Uint8Array.\n *\n * For the reverse, see {@link binToUtf8}.\n *\n * @param utf8 - the string to encode\n */\nexport const utf8ToBin = (utf8) => utf8Encoder.encode(utf8);\nconst utf8Decoder = new TextDecoder();\n/**\n * Decode a Uint8Array as a UTF-8 string.\n *\n * For the reverse, see {@link utf8ToBin}.\n *\n * @param bytes - the Uint8Array to decode\n */\nexport const binToUtf8 = (bytes) => utf8Decoder.decode(bytes);\n/**\n * Normalize a string using Unicode Normalization Form KC (NFKC): compatibility\n * decomposition, followed by canonical composition. NFKC is the preferred form\n * for applications in which disambiguation between characters is critical. In\n * Libauth, all message formats designed for transmission between trust centers\n * are NFKC-normalized to hinder exploits in which lookalike characters are used\n * to deceive counterparties.\n *\n * E.g.:\n * ```\n * console.log(lossyNormalize('ﬁt🚀👫👨‍👩‍👧‍👦')); // 'fit🚀👫👨‍👩‍👧‍👦'\n * ```\n */\nexport const lossyNormalize = (utf8) => utf8.normalize('NFKC');\n/**\n * Return the user-perceived character segments of the given string, e.g.:\n *\n * ```js\n * const test = 'ﬁt🚀👫👨‍👩‍👧‍👦';\n * console.log([...test]); // '[\"ﬁ\",\"t\",\"🚀\",\"👫\",\"👨\",\"‍\",\"👩\",\"‍\",\"👧\",\"‍\",\"👦\"]'\n * console.log(segment(test)); // '[\"ﬁ\",\"t\",\"🚀\",\"👫\",\"👨‍👩‍👧‍👦\"]'\n * ```\n *\n * Note, this utility segments the string into grapheme clusters using\n * `Intl.Segmenter`, a TC39 proposal which reached stage 4 in 2022, and may not\n * be supported in older environments.\n *\n * @param utf8 - the string for which to segment characters.\n */\nexport const segment = (utf8) => [...new Intl.Segmenter('en', { granularity: 'grapheme' }).segment(utf8)].map((item) => item.segment);\n/**\n * Return the user-perceived character length of the given string, e.g.:\n *\n * ```js\n * const test = 'ﬁt🚀👫👨‍👩‍👧‍👦'\n * console.log(test.length); // 17\n * console.log(length(test)); // 5\n * ```\n *\n * Note, this utility segments the string into grapheme clusters using\n * `Intl.Segmenter`, a TC39 proposal which reached stage 4 in 2022, and may not\n * be supported in older environments.\n *\n * @param utf8 - the string for which to count the character length.\n */\nexport const length = (utf8) => segment(utf8).length;\n//# sourceMappingURL=utf8.js.map","/* eslint-disable functional/no-conditional-statements, functional/no-let, functional/no-expression-statements, no-underscore-dangle, functional/no-try-statements, @typescript-eslint/no-magic-numbers, @typescript-eslint/max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-non-null-assertion */\n/**\n * Note, most of this method is translated and boiled-down from the wasm-pack\n * workflow. Significant changes to wasm-bindgen or wasm-pack build will likely\n * require modifications to this method.\n */\nexport const instantiateRustWasm = async (webassemblyBytes, expectedImportModuleName, hashExportName, initExportName, updateExportName, finalExportName) => {\n    const wasm = (await WebAssembly.instantiate(webassemblyBytes, {\n        [expectedImportModuleName]: {\n            /**\n             * This would only be called in cases where a `__wbindgen_malloc` failed.\n             * Since `__wbindgen_malloc` isn't exposed to consumers, this error\n             * can only be encountered if the code below is broken.\n             */\n            /* c8 ignore next 10 */\n            // eslint-disable-next-line camelcase, @typescript-eslint/naming-convention\n            __wbindgen_throw: (ptr, len) => {\n                // eslint-disable-next-line functional/no-throw-statements\n                throw new Error(\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                Array.from(getUint8Memory().subarray(ptr, ptr + len))\n                    .map((num) => String.fromCharCode(num))\n                    .join(''));\n            },\n        },\n    })).instance.exports; // eslint-disable-line @typescript-eslint/no-explicit-any\n    let cachedUint8Memory; // eslint-disable-line @typescript-eslint/init-declarations\n    let cachedUint32Memory; // eslint-disable-line @typescript-eslint/init-declarations\n    let cachedGlobalArgumentPtr; // eslint-disable-line @typescript-eslint/init-declarations\n    const globalArgumentPtr = () => {\n        if (cachedGlobalArgumentPtr === undefined) {\n            cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n        }\n        return cachedGlobalArgumentPtr;\n    };\n    /**\n     * Must be hoisted for `__wbindgen_throw`.\n     */\n    // eslint-disable-next-line func-style\n    function getUint8Memory() {\n        if (cachedUint8Memory === undefined ||\n            cachedUint8Memory.buffer !== wasm.memory.buffer) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            cachedUint8Memory = new Uint8Array(wasm.memory.buffer);\n        }\n        return cachedUint8Memory;\n    }\n    const getUint32Memory = () => {\n        if (cachedUint32Memory === undefined ||\n            cachedUint32Memory.buffer !== wasm.memory.buffer) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            cachedUint32Memory = new Uint32Array(wasm.memory.buffer);\n        }\n        return cachedUint32Memory;\n    };\n    const passArray8ToWasm = (array) => {\n        const ptr = wasm.__wbindgen_malloc(array.length);\n        getUint8Memory().set(array, ptr);\n        return [ptr, array.length];\n    };\n    const getArrayU8FromWasm = (ptr, len) => getUint8Memory().subarray(ptr, ptr + len);\n    const hash = (input) => {\n        const [ptr0, len0] = passArray8ToWasm(input);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[hashExportName](retPtr, ptr0, len0);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            wasm.__wbindgen_free(ptr0, len0);\n        }\n    };\n    const init = () => {\n        const retPtr = globalArgumentPtr();\n        wasm[initExportName](retPtr);\n        const mem = getUint32Memory();\n        const ptr = mem[retPtr / 4];\n        const len = mem[retPtr / 4 + 1];\n        const realRet = getArrayU8FromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len);\n        return realRet;\n    };\n    const update = (rawState, input) => {\n        const [ptr0, len0] = passArray8ToWasm(rawState);\n        const [ptr1, len1] = passArray8ToWasm(input);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[updateExportName](retPtr, ptr0, len0, ptr1, len1);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_free(ptr0, len0);\n            wasm.__wbindgen_free(ptr1, len1);\n        }\n    };\n    const final = (rawState) => {\n        const [ptr0, len0] = passArray8ToWasm(rawState);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[finalExportName](retPtr, ptr0, len0);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_free(ptr0, len0);\n        }\n    };\n    return {\n        final,\n        hash,\n        init,\n        update,\n    };\n};\n/* eslint-enable functional/no-conditional-statements, functional/no-let, functional/no-expression-statements, no-underscore-dangle, functional/no-try-statements, @typescript-eslint/no-magic-numbers, @typescript-eslint/max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-non-null-assertion */\n//# sourceMappingURL=hashes.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const ripemd160Base64Bytes = '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AgQMBQsgAEH8EigCACACaiICQQFyNgIEQYQTIAA2AgBB/BIgAjYCACAAIAJqIAI2AgAMBAsgAxAgDAELQewPQewPKAIAQX4gAUEDdndxNgIACyAEIAJqIQIgAyAEaiEDCyADIAMoAgRBfnE2AgQgACACQQFyNgIEIAAgAmogAjYCAAJ/AkAgAkH/AU0EQCACQQN2IgFBA3RB9A9qIQJB7A8oAgAiA0EBIAFBH3F0IgFxRQ0BIAJBCGohAyACKAIIDAILIAAgAhAhDAILQewPIAMgAXI2AgAgAkEIaiEDIAILIQEgAyAANgIAIAEgADYCDCAAIAI2AgwgACABNgIICyAFQQhqDwtBgBMgACACayIBNgIAQYgTQYgTKAIAIgAgAmoiAzYCACADIAFBAXI2AgQgACACQQNyNgIEIABBCGoLpQEBAn9BAiEFAkACQAJAAkACQCAAKAIEIgYgAWsgAk8NACABIAJqIgIgAUkhAQJAIAQEQEEAIQUgAQ0CIAZBAXQiASACIAIgAUkbIQIMAQtBACEFIAENAQsgAkEASA0AIAZFDQEgACgCACACEBMiAUUNAgwDCyAFDwsgAhAEIgENAQsgAw0BCyABBEAgACABNgIAIABBBGogAjYCAEECDwtBAQ8LAAsIAEGMFBAHAAtmAgF/A34jAEEwayIBJAAgACkCECECIAApAgghAyAAKQIAIQQgAUEUakEANgIAIAEgBDcDGCABQgE3AgQgAUH0DDYCECABIAFBGGo2AgAgASADNwMgIAEgAjcDKCABIAFBIGoQJQALuAEBAX8jAEHgAWsiAyQAIANBOGpBzAgoAgA2AgAgA0EwakHECCkCADcDACADQgA3AyAgA0G8CCkCADcDKCADQTxqQQBBxAAQKhogA0EgaiABIAIQCSADQYABaiADQSBqQeAAECgaIANBCGogA0GAAWoQCiADQSBqIANBCGpBFBADIANBiAFqIANBKGooAgA2AgAgAyADKQMgNwOAASADIANBgAFqEAsgACADKQMANwIAIANB4AFqJAALlwMBBH8jAEFAaiIDJAAgACAAKQMAIAKtfDcDACADIABBCGo2AiggAyADQShqNgIsAkACQAJAAkACQAJAIAAoAhwiBQRAQcAAIAVrIgQgAk0NASADQRhqIAUgBSACaiIEIABBIGoQFiADKAIcIAJHDQUgAygCGCABIAIQKBoMAwsgAiEEDAELIANBMGogASACIAQQFyADQTxqKAIAIQQgAygCOCEBIAMoAjAhBSADKAI0IQIgA0EgaiAAQSBqIgYgACgCHBAYIAIgAygCJEcNBCADKAIgIAUgAhAoGiAAQRxqQQA2AgAgA0EsaiAGEBkLIANBPGohAiADQThqIQUCQANAIARBP00NASADQTBqIAEgBEHAABAXIAIoAgAhBCAFKAIAIQEgA0EIakEAQcAAIAMoAjAgAygCNBAaIANBLGogAygCCBAZDAALAAsgA0EQaiAAQSBqIAQQGyADKAIUIARHDQEgAygCECABIAQQKBoLIABBHGogBDYCACADQUBrJAAPC0H0ExAHAAtB9BMQBwALQfQTEAcAC+MCAgR/AX4jAEFAaiICJAAgAiABQQhqIgU2AiQgASkDACEGIAEoAhwhAyACIAJBJGo2AigCQCADQT9NBEAgAUEgaiIEIANqQYABOgAAIAEgASgCHEEBaiIDNgIcIAJBGGogBCADEBggAigCGEEAIAIoAhwQKhpBwAAgASgCHGtBB00EQCACQShqIAQQGSACQRBqIAQgAUEcaigCABAbIAIoAhBBACACKAIUECoaCyACQQhqIARBOBAYIAIoAgxBCEcNASACKAIIIAZCA4Y3AAAgAkEoaiAEEBkgAUEcakEANgIAIAJBADYCKEEEIQECQANAIAFBGEYNASACQShqIAFqQQA6AAAgAiACKAIoQQFqNgIoIAFBAWohAQwACwALIAAgBSkAADcAACAAQRBqIAVBEGooAAA2AAAgAEEIaiAFQQhqKQAANwAAIAJBQGskAA8LQcwTIANBwAAQHQALQdwTEAcAC2MBAn8gASgCACECAkACQCABKAIEIgMgASgCCCIBRgRAIAMhAQwBCyADIAFJDQEgAQRAIAIgARATIgINAQALIAIgAxARQQEhAkEAIQELIAAgATYCBCAAIAI2AgAPC0G0ExAHAAuQAQEBfyMAQYABayIBJAAgAUEwakHECCkCADcDACABQThqQcwIKAIANgIAIAFCADcDICABQbwIKQIANwMoIAFBPGpBAEHEABAqGiABQRBqIAFBIGpB4AAQAyABQShqIAFBGGooAgA2AgAgASABKQMQNwMgIAFBCGogAUEgahALIAAgASkDCDcCACABQYABaiQAC4YBAQF/IwBB4AFrIgUkACAFQSBqIAEgAhABQeAAECkaIAVBIGogAyAEEAkgBUGAAWogBUEgakHgABAoGiAFQRBqIAVBgAFqQeAAEAMgBUGIAWogBUEYaigCADYCACAFIAUpAxA3A4ABIAVBCGogBUGAAWoQCyAAIAUpAwg3AgAgBUHgAWokAAtuAQF/IwBBkAFrIgMkACADQTBqIAEgAhABQeAAECgaIANBGGogA0EwahAKIANBCGogA0EYakEUEAMgA0E4aiADQRBqKAIANgIAIAMgAykDCDcDMCADIANBMGoQCyAAIAMpAwA3AgAgA0GQAWokAAtKAQF/IwBBEGsiASQAIAFCATcDACABQQA2AgggAUEAIABBAEEAEAVB/wFxQQJGBEAgASgCACEAIAFBEGokACAADwtBgAhBFhAAAAsIACAAIAEQEQsLACABBEAgABAUCwsFAEGQDwvHBQEIfwJAAkACQAJAAkACQCABQb9/Sw0AQRAgAUELakF4cSABQQtJGyECIABBfGoiBigCACIHQXhxIQMCQAJAAkACQCAHQQNxBEAgAEF4aiIIIANqIQUgAyACTw0BQYgTKAIAIAVGDQJBhBMoAgAgBUYNAyAFKAIEIgdBAnENBCAHQXhxIgkgA2oiAyACSQ0EIAMgAmshASAJQf8BSw0HIAUoAgwiBCAFKAIIIgVGDQggBSAENgIMIAQgBTYCCAwJCyACQYACSQ0DIAMgAkEEckkNAyADIAJrQYGACE8NAwwJCyADIAJrIgFBEEkNCCAGIAIgB0EBcXJBAnI2AgAgCCACaiIEIAFBA3I2AgQgBSAFKAIEQQFyNgIEIAQgARAiDAgLQYATKAIAIANqIgMgAk0NASAGIAIgB0EBcXJBAnI2AgBBiBMgCCACaiIBNgIAQYATIAMgAmsiBDYCACABIARBAXI2AgQMBwtB/BIoAgAgA2oiAyACTw0CCyABEAQiAkUNACACIAAgASAGKAIAIgRBeHFBBEEIIARBA3EbayIEIAQgAUsbECghASAAEBQgASEECyAEDwsCQCADIAJrIgFBEEkEQCAGIAdBAXEgA3JBAnI2AgAgCCADaiIBIAEoAgRBAXI2AgRBACEBDAELIAYgAiAHQQFxckECcjYCACAIIAJqIgQgAUEBcjYCBCAIIANqIgIgATYCACACIAIoAgRBfnE2AgQLQYQTIAQ2AgBB/BIgATYCAAwDCyAFECAMAQtB7A9B7A8oAgBBfiAHQQN2d3E2AgALIAFBD00EQCAGIAMgBigCAEEBcXJBAnI2AgAgCCADaiIBIAEoAgRBAXI2AgQMAQsgBiACIAYoAgBBAXFyQQJyNgIAIAggAmoiBCABQQNyNgIEIAggA2oiAiACKAIEQQFyNgIEIAQgARAiIAAPCyAAC+AGAQV/AkAgAEF4aiIBIABBfGooAgAiA0F4cSIAaiECAkACQCADQQFxDQAgA0EDcUUNASABKAIAIgMgAGohAAJAAkBBhBMoAgAgASADayIBRwRAIANB/wFLDQEgASgCDCIEIAEoAggiBUYNAiAFIAQ2AgwgBCAFNgIIDAMLIAIoAgQiA0EDcUEDRw0CQfwSIAA2AgAgAkEEaiADQX5xNgIADAQLIAEQIAwBC0HsD0HsDygCAEF+IANBA3Z3cTYCAAsCQAJ/AkACQAJAAkACQAJAIAIoAgQiA0ECcUUEQEGIEygCACACRg0BQYQTKAIAIAJGDQIgA0F4cSIEIABqIQAgBEH/AUsNAyACKAIMIgQgAigCCCICRg0EIAIgBDYCDCAEIAI2AggMBQsgAkEEaiADQX5xNgIAIAEgAEEBcjYCBCABIABqIAA2AgAMBwtBiBMgATYCAEGAE0GAEygCACAAaiIANgIAIAEgAEEBcjYCBCABQYQTKAIARgRAQfwSQQA2AgBBhBNBADYCAAtBpBMoAgAgAE8NBwJAIABBKUkNAEGUEyEAA0AgACgCACICIAFNBEAgAiAAKAIEaiABSw0CCyAAKAIIIgANAAsLQQAhAUGcEygCACIARQ0EA0AgAUEBaiEBIAAoAggiAA0ACyABQf8fIAFB/x9LGwwFC0GEEyABNgIAQfwSQfwSKAIAIABqIgA2AgAMBwsgAhAgDAELQewPQewPKAIAQX4gA0EDdndxNgIACyABIABBAXI2AgQgASAAaiAANgIAIAFBhBMoAgBHDQJB/BIgADYCAA8LQf8fCyEBQaQTQX82AgBBrBMgATYCAA8LQawTAn8CQAJ/AkAgAEH/AU0EQCAAQQN2IgJBA3RB9A9qIQBB7A8oAgAiA0EBIAJBH3F0IgJxRQ0BIABBCGohAyAAKAIIDAILIAEgABAhQawTQawTKAIAQX9qIgE2AgAgAQ0EQZwTKAIAIgBFDQJBACEBA0AgAUEBaiEBIAAoAggiAA0ACyABQf8fIAFB/x9LGwwDC0HsDyADIAJyNgIAIABBCGohAyAACyECIAMgATYCACACIAE2AgwgASAANgIMIAEgAjYCCA8LQf8fCyIBNgIACw8LIAEgAEEBcjYCBCABIABqIAA2AgAL+ysBIX8gACABKAAsIhkgASgAKCIPIAEoABQiESARIAEoADQiGiAPIBEgASgAHCIUIAEoACQiGyABKAAgIhIgGyABKAAYIhYgFCAZIBYgASgABCITIAAoAhAiH2ogACgCCCIgQQp3IgUgACgCBCIdcyAgIB1zIAAoAgwiBHMgACgCACIhaiABKAAAIhdqQQt3IB9qIhBzakEOdyAEaiIOQQp3IgJqIAEoABAiFSAdQQp3IgdqIAEoAAgiGCAEaiAQIAdzIA5zakEPdyAFaiIDIAJzIAEoAAwiHCAFaiAOIBBBCnciEHMgA3NqQQx3IAdqIg5zakEFdyAQaiIGIA5BCnciCHMgECARaiAOIANBCnciEHMgBnNqQQh3IAJqIg5zakEHdyAQaiICQQp3IgNqIBsgBkEKdyIGaiAQIBRqIA4gBnMgAnNqQQl3IAhqIhAgA3MgCCASaiACIA5BCnciDnMgEHNqQQt3IAZqIgJzakENdyAOaiIGIAJBCnciCHMgDiAPaiACIBBBCnciCXMgBnNqQQ53IANqIgJzakEPdyAJaiIDQQp3IgpqIAJBCnciCyABKAA8IhBqIAggGmogAyALcyAJIAEoADAiDmogAiAGQQp3IgZzIANzakEGdyAIaiICc2pBB3cgBmoiAyACQQp3IghzIAYgASgAOCIBaiACIApzIANzakEJdyALaiIGc2pBCHcgCmoiAiAGcSADQQp3IgkgAkF/c3FyakGZ84nUBWpBB3cgCGoiA0EKdyIKaiAPIAJBCnciC2ogEyAGQQp3IgZqIBogCWogFSAIaiADIAJxIAYgA0F/c3FyakGZ84nUBWpBBncgCWoiAiADcSALIAJBf3NxcmpBmfOJ1AVqQQh3IAZqIgMgAnEgCiADQX9zcXJqQZnzidQFakENdyALaiIGIANxIAJBCnciCCAGQX9zcXJqQZnzidQFakELdyAKaiICIAZxIANBCnciCSACQX9zcXJqQZnzidQFakEJdyAIaiIDQQp3IgpqIBcgAkEKdyILaiAOIAZBCnciBmogHCAJaiAQIAhqIAMgAnEgBiADQX9zcXJqQZnzidQFakEHdyAJaiICIANxIAsgAkF/c3FyakGZ84nUBWpBD3cgBmoiAyACcSAKIANBf3NxcmpBmfOJ1AVqQQd3IAtqIgYgA3EgAkEKdyIIIAZBf3NxcmpBmfOJ1AVqQQx3IApqIgIgBnEgA0EKdyIJIAJBf3NxcmpBmfOJ1AVqQQ93IAhqIgNBCnciCmogGSACQQp3IgtqIAEgBkEKdyIGaiAYIAlqIBEgCGogAyACcSAGIANBf3NxcmpBmfOJ1AVqQQl3IAlqIgIgA3EgCyACQX9zcXJqQZnzidQFakELdyAGaiIDIAJxIAogA0F/c3FyakGZ84nUBWpBB3cgC2oiBiADcSACQQp3IgIgBkF/c3FyakGZ84nUBWpBDXcgCmoiCCAGcSADQQp3IgMgCEF/cyILcXJqQZnzidQFakEMdyACaiIJQQp3IgpqIBUgCEEKdyIIaiABIAZBCnciBmogDyADaiAcIAJqIAkgC3IgBnNqQaHX5/YGakELdyADaiICIAlBf3NyIAhzakGh1+f2BmpBDXcgBmoiAyACQX9zciAKc2pBodfn9gZqQQZ3IAhqIgYgA0F/c3IgAkEKdyICc2pBodfn9gZqQQd3IApqIgggBkF/c3IgA0EKdyIDc2pBodfn9gZqQQ53IAJqIglBCnciCmogGCAIQQp3IgtqIBMgBkEKdyIGaiASIANqIBAgAmogCSAIQX9zciAGc2pBodfn9gZqQQl3IANqIgIgCUF/c3IgC3NqQaHX5/YGakENdyAGaiIDIAJBf3NyIApzakGh1+f2BmpBD3cgC2oiBiADQX9zciACQQp3IgJzakGh1+f2BmpBDncgCmoiCCAGQX9zciADQQp3IgNzakGh1+f2BmpBCHcgAmoiCUEKdyIKaiAZIAhBCnciC2ogGiAGQQp3IgZqIBYgA2ogFyACaiAJIAhBf3NyIAZzakGh1+f2BmpBDXcgA2oiAiAJQX9zciALc2pBodfn9gZqQQZ3IAZqIgMgAkF/c3IgCnNqQaHX5/YGakEFdyALaiIGIANBf3NyIAJBCnciCHNqQaHX5/YGakEMdyAKaiIJIAZBf3NyIANBCnciCnNqQaHX5/YGakEHdyAIaiILQQp3IgJqIBkgCUEKdyIDaiAbIAZBCnciBmogEyAKaiAOIAhqIAsgCUF/c3IgBnNqQaHX5/YGakEFdyAKaiIIIANxIAsgA0F/c3FyakHc+e74eGpBC3cgBmoiBiACcSAIIAJBf3NxcmpB3Pnu+HhqQQx3IANqIgkgCEEKdyIDcSAGIANBf3NxcmpB3Pnu+HhqQQ53IAJqIgogBkEKdyICcSAJIAJBf3NxcmpB3Pnu+HhqQQ93IANqIgtBCnciBmogFSAKQQp3IghqIA4gCUEKdyIJaiASIAJqIBcgA2ogCyAJcSAKIAlBf3NxcmpB3Pnu+HhqQQ53IAJqIgIgCHEgCyAIQX9zcXJqQdz57vh4akEPdyAJaiIDIAZxIAIgBkF/c3FyakHc+e74eGpBCXcgCGoiCSACQQp3IgJxIAMgAkF/c3FyakHc+e74eGpBCHcgBmoiCiADQQp3IgNxIAkgA0F/c3FyakHc+e74eGpBCXcgAmoiC0EKdyIGaiABIApBCnciCGogECAJQQp3IglqIBQgA2ogHCACaiALIAlxIAogCUF/c3FyakHc+e74eGpBDncgA2oiAiAIcSALIAhBf3NxcmpB3Pnu+HhqQQV3IAlqIgMgBnEgAiAGQX9zcXJqQdz57vh4akEGdyAIaiIIIAJBCnciAnEgAyACQX9zcXJqQdz57vh4akEIdyAGaiIJIANBCnciA3EgCCADQX9zcXJqQdz57vh4akEGdyACaiIKQQp3IgtqIBcgCUEKdyIGaiAVIAhBCnciCGogGCADaiAWIAJqIAogCHEgCSAIQX9zcXJqQdz57vh4akEFdyADaiICIAZxIAogBkF/c3FyakHc+e74eGpBDHcgCGoiAyACIAtBf3Nyc2pBzvrPynpqQQl3IAZqIgYgAyACQQp3IgJBf3Nyc2pBzvrPynpqQQ93IAtqIgggBiADQQp3IgNBf3Nyc2pBzvrPynpqQQV3IAJqIglBCnciCmogGCAIQQp3IgtqIA4gBkEKdyIGaiAUIANqIBsgAmogCSAIIAZBf3Nyc2pBzvrPynpqQQt3IANqIgIgCSALQX9zcnNqQc76z8p6akEGdyAGaiIDIAIgCkF/c3JzakHO+s/KempBCHcgC2oiBiADIAJBCnciAkF/c3JzakHO+s/KempBDXcgCmoiCCAGIANBCnciA0F/c3JzakHO+s/KempBDHcgAmoiCUEKdyIKaiASIAhBCnciC2ogHCAGQQp3IgZqIBMgA2ogASACaiAJIAggBkF/c3JzakHO+s/KempBBXcgA2oiAiAJIAtBf3Nyc2pBzvrPynpqQQx3IAZqIgMgAiAKQX9zcnNqQc76z8p6akENdyALaiIGIAMgAkEKdyIIQX9zcnNqQc76z8p6akEOdyAKaiIJIAYgA0EKdyIKQX9zcnNqQc76z8p6akELdyAIaiILQQp3IiIgBGogGyAXIBUgFyAZIBwgEyAQIBcgDiAQIBggISAgIARBf3NyIB1zaiARakHml4qFBWpBCHcgH2oiAkEKdyIDaiAHIBtqIAUgF2ogBCAUaiAfIAIgHSAFQX9zcnNqIAFqQeaXioUFakEJdyAEaiIEIAIgB0F/c3JzakHml4qFBWpBCXcgBWoiBSAEIANBf3Nyc2pB5peKhQVqQQt3IAdqIgcgBSAEQQp3IgRBf3Nyc2pB5peKhQVqQQ13IANqIgIgByAFQQp3IgVBf3Nyc2pB5peKhQVqQQ93IARqIgNBCnciDGogFiACQQp3Ig1qIBogB0EKdyIHaiAVIAVqIBkgBGogAyACIAdBf3Nyc2pB5peKhQVqQQ93IAVqIgQgAyANQX9zcnNqQeaXioUFakEFdyAHaiIFIAQgDEF/c3JzakHml4qFBWpBB3cgDWoiByAFIARBCnciBEF/c3JzakHml4qFBWpBB3cgDGoiAiAHIAVBCnciBUF/c3JzakHml4qFBWpBCHcgBGoiA0EKdyIMaiAcIAJBCnciDWogDyAHQQp3IgdqIBMgBWogEiAEaiADIAIgB0F/c3JzakHml4qFBWpBC3cgBWoiBCADIA1Bf3Nyc2pB5peKhQVqQQ53IAdqIgUgBCAMQX9zcnNqQeaXioUFakEOdyANaiIHIAUgBEEKdyICQX9zcnNqQeaXioUFakEMdyAMaiIDIAcgBUEKdyIMQX9zcnNqQeaXioUFakEGdyACaiINQQp3IgRqIBQgA0EKdyIFaiAcIAdBCnciB2ogGSAMaiAWIAJqIA0gB3EgAyAHQX9zcXJqQaSit+IFakEJdyAMaiICIAVxIA0gBUF/c3FyakGkorfiBWpBDXcgB2oiByAEcSACIARBf3NxcmpBpKK34gVqQQ93IAVqIgMgAkEKdyIFcSAHIAVBf3NxcmpBpKK34gVqQQd3IARqIgwgB0EKdyIEcSADIARBf3NxcmpBpKK34gVqQQx3IAVqIg1BCnciB2ogASAMQQp3IgJqIA8gA0EKdyIDaiARIARqIBogBWogDSADcSAMIANBf3NxcmpBpKK34gVqQQh3IARqIgQgAnEgDSACQX9zcXJqQaSit+IFakEJdyADaiIFIAdxIAQgB0F/c3FyakGkorfiBWpBC3cgAmoiAyAEQQp3IgRxIAUgBEF/c3FyakGkorfiBWpBB3cgB2oiDCAFQQp3IgVxIAMgBUF/c3FyakGkorfiBWpBB3cgBGoiDUEKdyIHaiAbIAxBCnciAmogFSADQQp3IgNqIA4gBWogEiAEaiANIANxIAwgA0F/c3FyakGkorfiBWpBDHcgBWoiBCACcSANIAJBf3NxcmpBpKK34gVqQQd3IANqIgUgB3EgBCAHQX9zcXJqQaSit+IFakEGdyACaiICIARBCnciBHEgBSAEQX9zcXJqQaSit+IFakEPdyAHaiIDIAVBCnciBXEgAiAFQX9zcXJqQaSit+IFakENdyAEaiIMQQp3Ig1qIBMgA0EKdyIeaiARIAJBCnciB2ogECAFaiAYIARqIAwgB3EgAyAHQX9zcXJqQaSit+IFakELdyAFaiIEIAxBf3NyIB5zakHz/cDrBmpBCXcgB2oiBSAEQX9zciANc2pB8/3A6wZqQQd3IB5qIgcgBUF/c3IgBEEKdyIEc2pB8/3A6wZqQQ93IA1qIgIgB0F/c3IgBUEKdyIFc2pB8/3A6wZqQQt3IARqIgNBCnciDGogGyACQQp3Ig1qIBYgB0EKdyIHaiABIAVqIBQgBGogAyACQX9zciAHc2pB8/3A6wZqQQh3IAVqIgQgA0F/c3IgDXNqQfP9wOsGakEGdyAHaiIFIARBf3NyIAxzakHz/cDrBmpBBncgDWoiByAFQX9zciAEQQp3IgRzakHz/cDrBmpBDncgDGoiAiAHQX9zciAFQQp3IgVzakHz/cDrBmpBDHcgBGoiA0EKdyIMaiAPIAJBCnciDWogGCAHQQp3IgdqIA4gBWogEiAEaiADIAJBf3NyIAdzakHz/cDrBmpBDXcgBWoiBCADQX9zciANc2pB8/3A6wZqQQV3IAdqIgUgBEF/c3IgDHNqQfP9wOsGakEOdyANaiIHIAVBf3NyIARBCnciBHNqQfP9wOsGakENdyAMaiICIAdBf3NyIAVBCnciBXNqQfP9wOsGakENdyAEaiIDQQp3IgxqIBYgAkEKdyINaiASIAdBCnciB2ogGiAFaiAVIARqIAMgAkF/c3IgB3NqQfP9wOsGakEHdyAFaiICIANBf3NyIA1zakHz/cDrBmpBBXcgB2oiBCACcSAMIARBf3NxcmpB6e210wdqQQ93IA1qIgUgBHEgAkEKdyICIAVBf3NxcmpB6e210wdqQQV3IAxqIgcgBXEgBEEKdyIDIAdBf3NxcmpB6e210wdqQQh3IAJqIgRBCnciDGogECAHQQp3Ig1qIBkgBUEKdyIeaiAcIANqIBMgAmogBCAHcSAeIARBf3NxcmpB6e210wdqQQt3IANqIgUgBHEgDSAFQX9zcXJqQenttdMHakEOdyAeaiIEIAVxIAwgBEF/c3FyakHp7bXTB2pBDncgDWoiByAEcSAFQQp3IgIgB0F/c3FyakHp7bXTB2pBBncgDGoiBSAHcSAEQQp3IgMgBUF/c3FyakHp7bXTB2pBDncgAmoiBEEKdyIMaiAaIAVBCnciDWogGCAHQQp3IgdqIA4gA2ogESACaiAEIAVxIAcgBEF/c3FyakHp7bXTB2pBBncgA2oiBSAEcSANIAVBf3NxcmpB6e210wdqQQl3IAdqIgQgBXEgDCAEQX9zcXJqQenttdMHakEMdyANaiIHIARxIAVBCnciAiAHQX9zcXJqQenttdMHakEJdyAMaiIFIAdxIARBCnciAyAFQX9zcXJqQenttdMHakEMdyACaiIEQQp3IgwgEGogASAHQQp3Ig1qIA8gA2ogFCACaiAEIAVxIA0gBEF/c3FyakHp7bXTB2pBBXcgA2oiByAEcSAFQQp3IgUgB0F/c3FyakHp7bXTB2pBD3cgDWoiBCAHcSAMIARBf3NxcmpB6e210wdqQQh3IAVqIgIgBEEKdyIDcyAFIA5qIAQgB0EKdyIOcyACc2pBCHcgDGoiBHNqQQV3IA5qIgVBCnciByASaiACQQp3IhIgE2ogDiAPaiAEIBJzIAVzakEMdyADaiIPIAdzIAMgFWogBSAEQQp3IhNzIA9zakEJdyASaiISc2pBDHcgE2oiFSASQQp3Ig5zIBMgEWogEiAPQQp3Ig9zIBVzakEFdyAHaiIRc2pBDncgD2oiEkEKdyITIAFqIBVBCnciASAYaiAPIBRqIBEgAXMgEnNqQQZ3IA5qIg8gE3MgDiAWaiASIBFBCnciEXMgD3NqQQh3IAFqIgFzakENdyARaiIUIAFBCnciEnMgESAaaiABIA9BCnciD3MgFHNqQQZ3IBNqIgFzakEFdyAPaiIRQQp3IhNqNgIIIAAgICAWIAhqIAsgCSAGQQp3IhZBf3Nyc2pBzvrPynpqQQh3IApqIhVBCndqIA8gF2ogASAUQQp3Ig9zIBFzakEPdyASaiIUQQp3IhhqNgIEIAAgHSAQIApqIBUgCyAJQQp3IhdBf3Nyc2pBzvrPynpqQQV3IBZqIhBqIBIgHGogESABQQp3IgFzIBRzakENdyAPaiIRQQp3ajYCACAAIBcgIWogGiAWaiAQIBUgIkF/c3JzakHO+s/KempBBndqIA8gG2ogFCATcyARc2pBC3cgAWoiD2o2AhAgACAXIB9qIBNqIAEgGWogESAYcyAPc2pBC3dqNgIMCzkAAkAgAiABTwRAIAJBwQBPDQEgACACIAFrNgIEIAAgAyABajYCAA8LIAEgAhAcAAsgAkHAABACAAtNAgF/An4jAEEQayIEJAAgBEEIakEAIAMgASACEBogBCkDCCEFIAQgAyACIAEgAhAaIAQpAwAhBiAAIAU3AgAgACAGNwIIIARBEGokAAssAQF/IwBBEGsiAyQAIANBCGogAkHAACABEBYgACADKQMINwIAIANBEGokAAsOACAAKAIAKAIAIAEQFQs3AAJAIAIgAU8EQCAEIAJJDQEgACACIAFrNgIEIAAgAyABajYCAA8LIAEgAhAcAAsgAiAEEAIACysBAX8jAEEQayIDJAAgA0EIakEAIAIgARAWIAAgAykDCDcCACADQRBqJAALfQEBfyMAQTBrIgIkACACIAE2AgQgAiAANgIAIAJBLGpBATYCACACQRRqQQI2AgAgAkEcakECNgIAIAJBATYCJCACQfwUNgIIIAJBAjYCDCACQbwNNgIQIAIgAjYCICACIAJBBGo2AiggAiACQSBqNgIYIAJBCGpBjBUQJQALfAEBfyMAQTBrIgMkACADIAI2AgQgAyABNgIAIANBLGpBATYCACADQRRqQQI2AgAgA0EcakECNgIAIANBATYCJCADQcwUNgIIIANBAjYCDCADQbwNNgIQIAMgA0EEajYCICADIAM2AiggAyADQSBqNgIYIANBCGogABAlAAtQAAJAAkBB2A8oAgBBAUYEQEHcD0HcDygCAEEBaiIANgIAIABBA0kNAQwCC0HYD0KBgICAEDcDAAtB5A8oAgAiAEF/TA0AQeQPIAA2AgALAAs/AQJ/IwBBEGsiASQAAn8gACgCCCICIAINABpBpBQQBwALGiABIAApAgw3AwAgASAAQRRqKQIANwMIIAEQHgALswIBBX8gACgCGCEDAkACQAJAIAAoAgwiAiAARwRAIAAoAggiASACNgIMIAIgATYCCCADDQEMAgsgAEEUaiIBIABBEGogASgCABsiBCgCACIBBEACQANAIAQhBSABIgJBFGoiBCgCACIBBEAgAQ0BDAILIAJBEGohBCACKAIQIgENAAsLIAVBADYCACADDQEMAgtBACECIANFDQELAkAgACgCHCIEQQJ0QfwRaiIBKAIAIABHBEAgA0EQaiADQRRqIAMoAhAgAEYbIAI2AgAgAg0BDAILIAEgAjYCACACRQ0CCyACIAM2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgAEEUaigCACIBRQ0AIAJBFGogATYCACABIAI2AhgLDwtB8A9B8A8oAgBBfiAEd3E2AgALxQIBBH8gAAJ/QQAgAUEIdiIDRQ0AGkEfIgIgAUH///8HSw0AGiABQSYgA2ciAmtBH3F2QQFxQR8gAmtBAXRyCyICNgIcIABCADcCECACQQJ0QfwRaiEDAkACQAJAQfAPKAIAIgRBASACQR9xdCIFcQRAIAMoAgAiBCgCBEF4cSABRw0BIAQhAgwCCyADIAA2AgBB8A8gBCAFcjYCACAAIAM2AhggACAANgIIIAAgADYCDA8LIAFBAEEZIAJBAXZrQR9xIAJBH0YbdCEDA0AgBCADQR12QQRxakEQaiIFKAIAIgJFDQIgA0EBdCEDIAIhBCACKAIEQXhxIAFHDQALCyACKAIIIgMgADYCDCACIAA2AgggACACNgIMIAAgAzYCCCAAQQA2AhgPCyAFIAA2AgAgACAENgIYIAAgADYCDCAAIAA2AggL9QQBBH8gACABaiECAkACQAJAAkACQAJAAkACQCAAKAIEIgNBAXENACADQQNxRQ0BIAAoAgAiAyABaiEBAkACQEGEEygCACAAIANrIgBHBEAgA0H/AUsNASAAKAIMIgQgACgCCCIFRg0CIAUgBDYCDCAEIAU2AggMAwsgAigCBCIDQQNxQQNHDQJB/BIgATYCACACQQRqIANBfnE2AgAgACABQQFyNgIEIAIgATYCAA8LIAAQIAwBC0HsD0HsDygCAEF+IANBA3Z3cTYCAAsCQCACKAIEIgNBAnFFBEBBiBMoAgAgAkYNAUGEEygCACACRg0DIANBeHEiBCABaiEBIARB/wFLDQQgAigCDCIEIAIoAggiAkYNBiACIAQ2AgwgBCACNgIIDAcLIAJBBGogA0F+cTYCACAAIAFBAXI2AgQgACABaiABNgIADAcLQYgTIAA2AgBBgBNBgBMoAgAgAWoiATYCACAAIAFBAXI2AgQgAEGEEygCAEYNAwsPC0GEEyAANgIAQfwSQfwSKAIAIAFqIgE2AgAgACABQQFyNgIEIAAgAWogATYCAA8LIAIQIAwCC0H8EkEANgIAQYQTQQA2AgAPC0HsD0HsDygCAEF+IANBA3Z3cTYCAAsgACABQQFyNgIEIAAgAWogATYCACAAQYQTKAIARw0AQfwSIAE2AgAPCwJ/AkAgAUH/AU0EQCABQQN2IgJBA3RB9A9qIQFB7A8oAgAiA0EBIAJBH3F0IgJxRQ0BIAEoAggMAgsgACABECEPC0HsDyADIAJyNgIAIAELIQIgAUEIaiAANgIAIAIgADYCDCAAIAE2AgwgACACNgIIC9ICAQV/IwBBEGsiAyQAAn8gACgCACgCACICQYCAxABHBEAgAUEcaigCACEEIAEoAhghBSADQQA2AgwCfyACQf8ATQRAIAMgAjoADEEBDAELIAJB/w9NBEAgAyACQT9xQYABcjoADSADIAJBBnZBH3FBwAFyOgAMQQIMAQsgAkH//wNNBEAgAyACQT9xQYABcjoADiADIAJBBnZBP3FBgAFyOgANIAMgAkEMdkEPcUHgAXI6AAxBAwwBCyADIAJBEnZB8AFyOgAMIAMgAkE/cUGAAXI6AA8gAyACQQx2QT9xQYABcjoADSADIAJBBnZBP3FBgAFyOgAOQQQLIQZBASICIAUgA0EMaiAGIAQoAgwRBQANARoLIAAoAgQtAAAEQCABKAIYIAAoAggiACgCACAAKAIEIAFBHGooAgAoAgwRBQAMAQtBAAshAiADQRBqJAAgAguqCAEJfyMAQdAAayICJABBJyEDAkAgACgCACIAQZDOAE8EQANAIAJBCWogA2oiBUF8aiAAIABBkM4AbiIEQfCxf2xqIgdB5ABuIgZBAXRBqgtqLwAAOwAAIAVBfmogByAGQZx/bGpBAXRBqgtqLwAAOwAAIANBfGohAyAAQf/B1y9LIQUgBCEAIAUNAAsMAQsgACEECwJAIARB5ABOBEAgAkEJaiADQX5qIgNqIAQgBEHkAG4iAEGcf2xqQQF0QaoLai8AADsAAAwBCyAEIQALAkAgAEEJTARAIAJBCWogA0F/aiIDaiIIIABBMGo6AAAMAQsgAkEJaiADQX5qIgNqIgggAEEBdEGqC2ovAAA7AAALIAJBADYCNCACQfQMNgIwIAJBgIDEADYCOEEnIANrIgYhAyABKAIAIgBBAXEEQCACQSs2AjggBkEBaiEDCyACIABBAnZBAXE6AD8gASgCCCEEIAIgAkE/ajYCRCACIAJBOGo2AkAgAiACQTBqNgJIAn8CQAJAAn8CQAJAAkACQAJAAkACQCAEQQFGBEAgAUEMaigCACIEIANNDQEgAEEIcQ0CIAQgA2shBUEBIAEtADAiACAAQQNGG0EDcSIARQ0DIABBAkYNBAwFCyACQUBrIAEQIw0IIAEoAhggCCAGIAFBHGooAgAoAgwRBQAMCgsgAkFAayABECMNByABKAIYIAggBiABQRxqKAIAKAIMEQUADAkLIAFBAToAMCABQTA2AgQgAkFAayABECMNBiACQTA2AkwgBCADayEDIAEoAhghBEF/IQAgAUEcaigCACIHQQxqIQUDQCAAQQFqIgAgA08NBCAEIAJBzABqQQEgBSgCABEFAEUNAAsMBgsgBSEJQQAhBQwBCyAFQQFqQQF2IQkgBUEBdiEFCyACQQA2AkwgASgCBCIAQf8ATQRAIAIgADoATEEBDAMLIABB/w9LDQEgAiAAQT9xQYABcjoATSACIABBBnZBH3FBwAFyOgBMQQIMAgsgBCAIIAYgB0EMaigCABEFAA0CDAMLIABB//8DTQRAIAIgAEE/cUGAAXI6AE4gAiAAQQZ2QT9xQYABcjoATSACIABBDHZBD3FB4AFyOgBMQQMMAQsgAiAAQRJ2QfABcjoATCACIABBP3FBgAFyOgBPIAIgAEEMdkE/cUGAAXI6AE0gAiAAQQZ2QT9xQYABcjoATkEECyEEIAEoAhghA0F/IQAgAUEcaigCACIKQQxqIQcCQANAIABBAWoiACAFTw0BIAMgAkHMAGogBCAHKAIAEQUARQ0ACwwBCyACQUBrIAEQIw0AIAMgCCAGIApBDGooAgAiBREFAA0AQX8hAANAIABBAWoiACAJTw0CIAMgAkHMAGogBCAFEQUARQ0ACwtBAQwBC0EACyEAIAJB0ABqJAAgAAtGAgF/AX4jAEEgayICJAAgASkCACEDIAJBFGogASkCCDcCACACQbwUNgIEIAJB9Aw2AgAgAiAANgIIIAIgAzcCDCACEB8ACwMAAQsNAEKIspSTmIGVjP8ACzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACABQQFqIQEgA0EBaiEDIAJBf2oiAg0ACwsgAAtnAQF/AkAgASAASQRAIAJFDQEDQCAAIAJqQX9qIAEgAmpBf2otAAA6AAAgAkF/aiICDQALDAELIAJFDQAgACEDA0AgAyABLQAAOgAAIAFBAWohASADQQFqIQMgAkF/aiICDQALCyAACykBAX8gAgRAIAAhAwNAIAMgAToAACADQQFqIQMgAkF/aiICDQALCyAACwuWCQIAQYAIC4oHaW52YWxpZCBtYWxsb2MgcmVxdWVzdFRyaWVkIHRvIHNocmluayB0byBhIGxhcmdlciBjYXBhY2l0eQAAASNFZ4mrze/+3LqYdlQyEPDh0sNhc3NlcnRpb24gZmFpbGVkOiA4ID09IGRzdC5sZW4oKS9yb290Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2J5dGUtdG9vbHMtMC4yLjAvc3JjL3dyaXRlX3NpbmdsZS5ycwAAAAAAAC9yb290Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2Jsb2NrLWJ1ZmZlci0wLjMuMy9zcmMvbGliLnJzZGVzdGluYXRpb24gYW5kIHNvdXJjZSBzbGljZXMgaGF2ZSBkaWZmZXJlbnQgbGVuZ3RocwAAAAAAAGNhcGFjaXR5IG92ZXJmbG93Y2FsbGVkIGBPcHRpb246OnVud3JhcCgpYCBvbiBhIGBOb25lYCB2YWx1ZWxpYmNvcmUvb3B0aW9uLnJzMDAwMTAyMDMwNDA1MDYwNzA4MDkxMDExMTIxMzE0MTUxNjE3MTgxOTIwMjEyMjIzMjQyNTI2MjcyODI5MzAzMTMyMzMzNDM1MzYzNzM4Mzk0MDQxNDI0MzQ0NDU0NjQ3NDg0OTUwNTE1MjUzNTQ1NTU2NTc1ODU5NjA2MTYyNjM2NDY1NjY2NzY4Njk3MDcxNzI3Mzc0NzU3Njc3Nzg3OTgwODE4MjgzODQ4NTg2ODc4ODg5OTA5MTkyOTM5NDk1OTY5Nzk4OTkAAABpbmRleCBvdXQgb2YgYm91bmRzOiB0aGUgbGVuIGlzICBidXQgdGhlIGluZGV4IGlzIGxpYmNvcmUvc2xpY2UvbW9kLnJzAAEAAAAAAAAAIAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAAEAAAABAAAAIAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAGluZGV4ICBvdXQgb2YgcmFuZ2UgZm9yIHNsaWNlIG9mIGxlbmd0aCBzbGljZSBpbmRleCBzdGFydHMgYXQgIGJ1dCBlbmRzIGF0IGludGVybmFsIGVycm9yOiBlbnRlcmVkIHVucmVhY2hhYmxlIGNvZGVsaWJhbGxvYy9yYXdfdmVjLnJzAEG0Ewv9ARYEAAAkAAAAdwcAABMAAABIAgAACQAAANAEAABTAAAASwAAABEAAABQBAAAIAAAAHAEAABaAAAAHwAAAAUAAAAjBQAANAAAAKcGAAAUAAAAbQYAAAkAAABdBQAAEQAAAHcHAAATAAAA8gIAAAUAAABuBQAAKwAAAJkFAAARAAAAWQEAABUAAAACAAAAAAAAAAEAAAADAAAAdQYAACAAAACVBgAAEgAAAAQHAAAGAAAACgcAACIAAACnBgAAFAAAAK0HAAAFAAAALAcAABYAAABCBwAADQAAAKcGAAAUAAAAswcAAAUAAABPBwAAKAAAAHcHAAATAAAA9QEAAB4ADAdsaW5raW5nAwK0DQ==';\n//# sourceMappingURL=ripemd160.base64.js.map","// cSpell:ignore noncefp, ndata, outputlen\n/**\n * bitflags used in secp256k1's public API (translated from secp256k1.h)\n */\n/* eslint-disable no-bitwise, @typescript-eslint/no-magic-numbers, @typescript-eslint/prefer-literal-enum-member */\n/** All flags' lower 8 bits indicate what they're for. Do not use directly. */\n// const SECP256K1_FLAGS_TYPE_MASK = (1 << 8) - 1;\nconst SECP256K1_FLAGS_TYPE_CONTEXT = 1 << 0;\nconst SECP256K1_FLAGS_TYPE_COMPRESSION = 1 << 1;\n/** The higher bits contain the actual data. Do not use directly. */\nconst SECP256K1_FLAGS_BIT_CONTEXT_VERIFY = 1 << 8;\nconst SECP256K1_FLAGS_BIT_CONTEXT_SIGN = 1 << 9;\nconst SECP256K1_FLAGS_BIT_COMPRESSION = 1 << 8;\n/** Flags to pass to secp256k1_context_create. */\nconst SECP256K1_CONTEXT_VERIFY = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_VERIFY;\nconst SECP256K1_CONTEXT_SIGN = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_SIGN;\nconst SECP256K1_CONTEXT_NONE = SECP256K1_FLAGS_TYPE_CONTEXT;\n/** Flag to pass to secp256k1_ec_pubkey_serialize and secp256k1_ec_privkey_export. */\nconst SECP256K1_EC_COMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION;\nconst SECP256K1_EC_UNCOMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION;\n/**\n * Flag to pass to a Secp256k1.contextCreate method.\n *\n * The purpose of context structures is to cache large precomputed data tables\n * that are expensive to construct, and also to maintain the randomization data\n * for blinding.\n *\n * You can create a context with only VERIFY or only SIGN capabilities, or you\n * can use BOTH. (NONE can be used for conversion/serialization.)\n */\nexport var ContextFlag;\n(function (ContextFlag) {\n    ContextFlag[ContextFlag[\"NONE\"] = SECP256K1_CONTEXT_NONE] = \"NONE\";\n    ContextFlag[ContextFlag[\"VERIFY\"] = SECP256K1_CONTEXT_VERIFY] = \"VERIFY\";\n    ContextFlag[ContextFlag[\"SIGN\"] = SECP256K1_CONTEXT_SIGN] = \"SIGN\";\n    ContextFlag[ContextFlag[\"BOTH\"] = SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY] = \"BOTH\";\n})(ContextFlag || (ContextFlag = {}));\n/**\n * Flag to pass a Secp256k1 public key serialization method.\n *\n * You can indicate COMPRESSED (33 bytes, header byte 0x02 or 0x03) or\n * UNCOMPRESSED (65 bytes, header byte 0x04) format.\n */\nexport var CompressionFlag;\n(function (CompressionFlag) {\n    CompressionFlag[CompressionFlag[\"COMPRESSED\"] = SECP256K1_EC_COMPRESSED] = \"COMPRESSED\";\n    CompressionFlag[CompressionFlag[\"UNCOMPRESSED\"] = SECP256K1_EC_UNCOMPRESSED] = \"UNCOMPRESSED\";\n})(CompressionFlag || (CompressionFlag = {}));\n//# sourceMappingURL=secp256k1-wasm-types.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const secp256k1Base64Bytes = '';\n//# sourceMappingURL=secp256k1.base64.js.map","/* eslint-disable no-underscore-dangle, @typescript-eslint/max-params, @typescript-eslint/naming-convention */\n// cSpell:ignore memcpy, anyfunc\nimport { base64ToBin } from '../../format/format.js';\nimport { CompressionFlag, ContextFlag } from './secp256k1-wasm-types.js';\nimport { secp256k1Base64Bytes } from './secp256k1.base64.js';\nexport { ContextFlag, CompressionFlag };\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\nconst wrapSecp256k1Wasm = (instance, heapU8, heapU32) => ({\n    contextCreate: (context) => instance.exports._secp256k1_context_create(context),\n    contextRandomize: (contextPtr, seedPtr) => instance.exports._secp256k1_context_randomize(contextPtr, seedPtr),\n    free: (pointer) => instance.exports._free(pointer),\n    heapU32,\n    heapU8,\n    instance,\n    malloc: (bytes) => instance.exports._malloc(bytes),\n    mallocSizeT: (num) => {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n        const pointer = instance.exports._malloc(4);\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n        const pointerView32 = pointer >> 2;\n        // eslint-disable-next-line functional/no-expression-statements\n        heapU32.set([num], pointerView32);\n        return pointer;\n    },\n    mallocUint8Array: (array) => {\n        const pointer = instance.exports._malloc(array.length);\n        // eslint-disable-next-line functional/no-expression-statements\n        heapU8.set(array, pointer);\n        return pointer;\n    },\n    privkeyTweakAdd: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_add(contextPtr, secretKeyPtr, tweakNum256Ptr),\n    privkeyTweakMul: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_mul(contextPtr, secretKeyPtr, tweakNum256Ptr),\n    pubkeyCreate: (contextPtr, publicKeyPtr, secretKeyPtr) => instance.exports._secp256k1_ec_pubkey_create(contextPtr, publicKeyPtr, secretKeyPtr),\n    pubkeyParse: (contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength) => instance.exports._secp256k1_ec_pubkey_parse(contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength),\n    pubkeySerialize: (contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression) => instance.exports._secp256k1_ec_pubkey_serialize(contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression),\n    pubkeyTweakAdd: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_add(contextPtr, publicKeyPtr, tweakNum256Ptr),\n    pubkeyTweakMul: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_mul(contextPtr, publicKeyPtr, tweakNum256Ptr),\n    readHeapU8: (pointer, bytes) => new Uint8Array(heapU8.buffer, pointer, bytes),\n    readSizeT: (pointer) => {\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n        const pointerView32 = pointer >> 2;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return heapU32[pointerView32];\n    },\n    recover: (contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr) => instance.exports._secp256k1_ecdsa_recover(contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr),\n    recoverableSignatureParse: (contextPtr, outputRSigPtr, inputSigPtr, rid) => instance.exports._secp256k1_ecdsa_recoverable_signature_parse_compact(contextPtr, outputRSigPtr, inputSigPtr, rid),\n    recoverableSignatureSerialize: (contextPtr, sigOutPtr, recIDOutPtr, rSigPtr) => instance.exports._secp256k1_ecdsa_recoverable_signature_serialize_compact(contextPtr, sigOutPtr, recIDOutPtr, rSigPtr),\n    schnorrSign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_schnorr_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),\n    schnorrVerify: (contextPtr, sigPtr, msg32Ptr, publicKeyPtr) => instance.exports._secp256k1_schnorr_verify(contextPtr, sigPtr, msg32Ptr, publicKeyPtr),\n    seckeyVerify: (contextPtr, secretKeyPtr) => instance.exports._secp256k1_ec_seckey_verify(contextPtr, secretKeyPtr),\n    sign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),\n    signRecoverable: (contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign_recoverable(contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr),\n    signatureMalleate: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_malleate(contextPtr, outputSigPtr, inputSigPtr),\n    signatureNormalize: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_normalize(contextPtr, outputSigPtr, inputSigPtr),\n    signatureParseCompact: (contextPtr, sigOutPtr, compactSigInPtr) => instance.exports._secp256k1_ecdsa_signature_parse_compact(contextPtr, sigOutPtr, compactSigInPtr),\n    signatureParseDER: (contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength) => instance.exports._secp256k1_ecdsa_signature_parse_der(contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength),\n    signatureSerializeCompact: (contextPtr, outputCompactSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_compact(contextPtr, outputCompactSigPtr, inputSigPtr),\n    signatureSerializeDER: (contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_der(contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr),\n    verify: (contextPtr, sigPtr, msg32Ptr, pubkeyPtr) => instance.exports._secp256k1_ecdsa_verify(contextPtr, sigPtr, msg32Ptr, pubkeyPtr),\n});\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable functional/immutable-data, functional/no-expression-statements, @typescript-eslint/no-magic-numbers, functional/no-conditional-statements, no-bitwise, functional/no-throw-statements */\n/**\n * Method extracted from Emscripten's preamble.js\n */\nconst isLittleEndian = (buffer) => {\n    const littleEndian = true;\n    const notLittleEndian = false;\n    const heap16 = new Int16Array(buffer);\n    const heap32 = new Int32Array(buffer);\n    const heapU8 = new Uint8Array(buffer);\n    heap32[0] = 1668509029;\n    heap16[1] = 25459;\n    return heapU8[2] !== 115 || heapU8[3] !== 99\n        ? /* c8 ignore next */\n            notLittleEndian\n        : littleEndian;\n};\n/**\n * Method derived from Emscripten's preamble.js\n */\nconst alignMemory = (factor, size) => Math.ceil(size / factor) * factor;\n/**\n * The most performant way to instantiate secp256k1 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSecp256k1}.\n *\n * Note, most of this method is translated and boiled-down from Emscripten's\n * preamble.js. Significant changes to the WASM build or breaking updates to\n * Emscripten will likely require modifications to this method.\n *\n * @param webassemblyBytes - A buffer containing the secp256k1 binary.\n */\nexport const instantiateSecp256k1WasmBytes = async (webassemblyBytes) => {\n    const STACK_ALIGN = 16;\n    const GLOBAL_BASE = 1024;\n    const WASM_PAGE_SIZE = 65536;\n    const TOTAL_STACK = 5242880;\n    const TOTAL_MEMORY = 16777216;\n    const wasmMemory = new WebAssembly.Memory({\n        initial: TOTAL_MEMORY / WASM_PAGE_SIZE,\n        maximum: TOTAL_MEMORY / WASM_PAGE_SIZE,\n    });\n    /* c8 ignore next 9 */\n    if (!isLittleEndian(wasmMemory.buffer)) {\n        /*\n         * note: this block is excluded from test coverage. It's A) hard to test\n         * (must be either tested on big-endian hardware or a big-endian buffer\n         * mock) and B) extracted from Emscripten's preamble.js, where it should\n         * be tested properly.\n         */\n        throw new Error('Runtime error: expected the system to be little-endian.');\n    }\n    const STATIC_BASE = GLOBAL_BASE;\n    const STATICTOP_INITIAL = STATIC_BASE + 67696 + 16;\n    const DYNAMICTOP_PTR = STATICTOP_INITIAL;\n    const DYNAMICTOP_PTR_SIZE = 4;\n    const STATICTOP = (STATICTOP_INITIAL + DYNAMICTOP_PTR_SIZE + 15) & -16;\n    const STACKTOP = alignMemory(STACK_ALIGN, STATICTOP);\n    const STACK_BASE = STACKTOP;\n    const STACK_MAX = STACK_BASE + TOTAL_STACK;\n    const DYNAMIC_BASE = alignMemory(STACK_ALIGN, STACK_MAX);\n    const heapU8 = new Uint8Array(wasmMemory.buffer);\n    const heap32 = new Int32Array(wasmMemory.buffer);\n    const heapU32 = new Uint32Array(wasmMemory.buffer);\n    heap32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n    const TABLE_SIZE = 6;\n    const MAX_TABLE_SIZE = 6;\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let getErrNoLocation;\n    /*\n     * note: A number of methods below are excluded from test coverage. They are\n     * a) not part of the regular usage of this library (should only be evaluated\n     * if the consumer mis-implements the library and exist only to make\n     * debugging easier) and B) already tested adequately in Emscripten, from\n     * which this section is extracted.\n     */\n    const env = {\n        DYNAMICTOP_PTR,\n        STACKTOP,\n        /* c8 ignore start */\n        ___setErrNo: (value) => {\n            if (getErrNoLocation !== undefined) {\n                heap32[getErrNoLocation() >> 2] = value;\n            }\n            return value;\n        },\n        _abort: (err = 'Secp256k1 Error') => {\n            throw new Error(err);\n        },\n        // eslint-disable-next-line camelcase\n        _emscripten_memcpy_big: (dest, src, num) => {\n            heapU8.set(heapU8.subarray(src, src + num), dest);\n            return dest;\n        },\n        abort: (err = 'Secp256k1 Error') => {\n            throw new Error(err);\n        },\n        abortOnCannotGrowMemory: () => {\n            throw new Error('Secp256k1 Error: abortOnCannotGrowMemory was called.');\n        },\n        enlargeMemory: () => {\n            throw new Error('Secp256k1 Error: enlargeMemory was called.');\n        },\n        getTotalMemory: () => TOTAL_MEMORY,\n        /* c8 ignore stop */\n    };\n    const info = {\n        env: {\n            ...env,\n            memory: wasmMemory,\n            memoryBase: STATIC_BASE,\n            table: new WebAssembly.Table({\n                element: 'anyfunc',\n                initial: TABLE_SIZE,\n                maximum: MAX_TABLE_SIZE,\n            }),\n            tableBase: 0,\n        },\n        global: { Infinity, NaN },\n    };\n    return WebAssembly.instantiate(webassemblyBytes, info).then((result) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment\n        getErrNoLocation = result.instance.exports['___errno_location'];\n        return wrapSecp256k1Wasm(result.instance, heapU8, heapU32);\n    });\n};\n/* eslint-enable functional/immutable-data, functional/no-expression-statements, @typescript-eslint/no-magic-numbers, functional/no-conditional-statements, no-bitwise, functional/no-throw-statements */\nexport const getEmbeddedSecp256k1Binary = () => base64ToBin(secp256k1Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of\n * {@link instantiateSecp256k1Bytes} that does not require the consumer to\n * provide the secp256k1 binary buffer.\n */\nexport const instantiateSecp256k1Wasm = async () => instantiateSecp256k1WasmBytes(getEmbeddedSecp256k1Binary());\n//# sourceMappingURL=secp256k1-wasm.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const sha1Base64Bytes = '';\n//# sourceMappingURL=sha1.base64.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const sha256Base64Bytes = '';\n//# sourceMappingURL=sha256.base64.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const sha512Base64Bytes = '';\n//# sourceMappingURL=sha512.base64.js.map","import { base64ToBin, instantiateRustWasm, ripemd160Base64Bytes, } from './dependencies.js';\n/**\n * The most performant way to instantiate ripemd160 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateRipemd160}.\n *\n * @param webassemblyBytes - A buffer containing the ripemd160 binary.\n */\nexport const instantiateRipemd160Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './ripemd160', 'ripemd160', 'ripemd160_init', 'ripemd160_update', 'ripemd160_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nexport const getEmbeddedRipemd160Binary = () => base64ToBin(ripemd160Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of\n * {@link instantiateRipemd160Bytes} that does not require the consumer to\n * provide the ripemd160 binary buffer.\n */\nexport const instantiateRipemd160 = async () => instantiateRipemd160Bytes(getEmbeddedRipemd160Binary());\n//# sourceMappingURL=ripemd160.js.map","import { CompressionFlag, ContextFlag, instantiateSecp256k1Wasm, instantiateSecp256k1WasmBytes, } from './dependencies.js';\n/* eslint-enable @typescript-eslint/no-duplicate-enum-values */\nexport var Secp256k1Error;\n(function (Secp256k1Error) {\n    Secp256k1Error[\"unparsableSignature\"] = \"Failed to parse signature.\";\n    Secp256k1Error[\"unparsablePublicKey\"] = \"Failed to parse public key.\";\n    Secp256k1Error[\"derivePublicKeyFromInvalidPrivateKey\"] = \"Cannot derive public key from invalid private key.\";\n    Secp256k1Error[\"signWithInvalidPrivateKey\"] = \"Failed to sign message hash. The private key is not valid.\";\n    Secp256k1Error[\"recoverPublicKeyWithUnparsableSignature\"] = \"Failed to recover public key. Could not parse signature.\";\n    Secp256k1Error[\"recoverPublicKeyInvalidMaterial\"] = \"Failed to recover public key. The compact signature, recovery, or message hash is invalid.\";\n    Secp256k1Error[\"addTweakPrivateKey\"] = \"Private key is invalid or adding failed.\";\n    Secp256k1Error[\"mulTweakPrivateKey\"] = \"Private key is invalid or multiplying failed.\";\n    Secp256k1Error[\"addTweakPublicKey\"] = \"Failed to tweak public key (by addition).\";\n    Secp256k1Error[\"mulTweakPublicKey\"] = \"Failed to tweak public key (by multiplication).\";\n})(Secp256k1Error || (Secp256k1Error = {}));\n/**\n * @param secp256k1Wasm - a Secp256k1Wasm object\n * @param randomSeed - a 32-byte random seed used to randomize the context after\n * creation\n */\nconst wrapSecp256k1Wasm = (secp256k1Wasm, randomSeed) => {\n    /**\n     * Currently, this wrapper creates a context with both SIGN and VERIFY\n     * capabilities. For better initialization performance, consumers could\n     * re-implement a wrapper with only the capabilities they require.\n     */\n    const contextPtr = secp256k1Wasm.contextCreate(ContextFlag.BOTH);\n    /**\n     * Since all of these methods are single-threaded and synchronous, we can\n     * reuse allocated WebAssembly memory for each method without worrying about\n     * calls interfering with each other. Likewise, these spaces never need to be\n     * `free`d, since we will continue using them until this entire object (and\n     * with it, the entire WebAssembly instance) is garbage collected.\n     *\n     * If malicious javascript gained access to this object, it should be\n     * considered a critical vulnerability in the consumer. However, as a best\n     * practice, we zero out private keys below when we're finished with them.\n     */\n    const sigScratch = secp256k1Wasm.malloc(72 /* ByteLength.maxECDSASig */);\n    const publicKeyScratch = secp256k1Wasm.malloc(65 /* ByteLength.maxPublicKey */);\n    const messageHashScratch = secp256k1Wasm.malloc(32 /* ByteLength.messageHash */);\n    const internalPublicKeyPtr = secp256k1Wasm.malloc(64 /* ByteLength.internalPublicKey */);\n    const internalSigPtr = secp256k1Wasm.malloc(64 /* ByteLength.internalSig */);\n    const schnorrSigPtr = secp256k1Wasm.malloc(64 /* ByteLength.schnorrSig */);\n    const privateKeyPtr = secp256k1Wasm.malloc(32 /* ByteLength.privateKey */);\n    const internalRSigPtr = secp256k1Wasm.malloc(65 /* ByteLength.recoverableSig */);\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    const recoveryNumPtr = secp256k1Wasm.malloc(4);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const recoveryNumPtrView32 = recoveryNumPtr >> 2;\n    const getRecoveryNumPtr = () => secp256k1Wasm.heapU32[recoveryNumPtrView32];\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    const lengthPtr = secp256k1Wasm.malloc(4);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const lengthPtrView32 = lengthPtr >> 2;\n    const cloneAndPad = (value, expectedLength) => {\n        const zeroPaddedValue = new Uint8Array(expectedLength);\n        zeroPaddedValue.set(value);\n        return zeroPaddedValue;\n    };\n    const parsePublicKey = (publicKey) => {\n        const paddedPublicKey = cloneAndPad(publicKey, 65 /* ByteLength.maxPublicKey */);\n        secp256k1Wasm.heapU8.set(paddedPublicKey, publicKeyScratch);\n        return (secp256k1Wasm.pubkeyParse(contextPtr, internalPublicKeyPtr, publicKeyScratch, \n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n        publicKey.length) === 1);\n    };\n    const setLengthPtr = (value) => {\n        secp256k1Wasm.heapU32.set([value], lengthPtrView32);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getLengthPtr = () => secp256k1Wasm.heapU32[lengthPtrView32];\n    const serializePublicKey = (length, flag) => {\n        setLengthPtr(length);\n        secp256k1Wasm.pubkeySerialize(contextPtr, publicKeyScratch, lengthPtr, internalPublicKeyPtr, flag);\n        return secp256k1Wasm.readHeapU8(publicKeyScratch, getLengthPtr()).slice();\n    };\n    const getSerializedPublicKey = (compressed) => compressed\n        ? serializePublicKey(33 /* ByteLength.compressedPublicKey */, CompressionFlag.COMPRESSED)\n        : serializePublicKey(65 /* ByteLength.uncompressedPublicKey */, CompressionFlag.UNCOMPRESSED);\n    const convertPublicKey = (compressed) => (publicKey) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const parseSignature = (signature, isDer) => {\n        const paddedSignature = cloneAndPad(signature, 72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, sigScratch);\n        return isDer\n            ? secp256k1Wasm.signatureParseDER(contextPtr, internalSigPtr, sigScratch, signature.length) === 1\n            : secp256k1Wasm.signatureParseCompact(contextPtr, internalSigPtr, sigScratch) === 1;\n    };\n    const getCompactSig = () => {\n        secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);\n        return secp256k1Wasm.readHeapU8(sigScratch, 64 /* ByteLength.compactSig */).slice();\n    };\n    const getDERSig = () => {\n        setLengthPtr(72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);\n        return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();\n    };\n    const convertSignature = (wasDER) => (signature) => {\n        if (!parseSignature(signature, wasDER)) {\n            return Secp256k1Error.unparsableSignature;\n        }\n        return wasDER ? getCompactSig() : getDERSig();\n    };\n    const fillPrivateKeyPtr = (privateKey) => {\n        const paddedPrivateKey = cloneAndPad(privateKey, 32 /* ByteLength.privateKey */);\n        secp256k1Wasm.heapU8.set(paddedPrivateKey, privateKeyPtr);\n    };\n    const zeroOutPtr = (pointer, bytes) => {\n        secp256k1Wasm.heapU8.fill(0, pointer, pointer + bytes);\n    };\n    const zeroOutPrivateKeyPtr = () => {\n        zeroOutPtr(privateKeyPtr, 32 /* ByteLength.privateKey */);\n    };\n    const withPrivateKey = (privateKey, instructions) => {\n        fillPrivateKeyPtr(privateKey);\n        const ret = instructions();\n        zeroOutPrivateKeyPtr();\n        return ret;\n    };\n    const derivePublicKey = (compressed) => (privateKey) => {\n        const invalid = withPrivateKey(privateKey, () => secp256k1Wasm.pubkeyCreate(contextPtr, internalPublicKeyPtr, privateKeyPtr) !== 1);\n        if (invalid) {\n            return Secp256k1Error.derivePublicKeyFromInvalidPrivateKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const fillMessageHashScratch = (messageHash) => {\n        const paddedMessageHash = cloneAndPad(messageHash, 32 /* ByteLength.messageHash */);\n        secp256k1Wasm.heapU8.set(paddedMessageHash, messageHashScratch);\n    };\n    const normalizeSignature = () => {\n        secp256k1Wasm.signatureNormalize(contextPtr, internalSigPtr, internalSigPtr);\n    };\n    const modifySignature = (isDer, normalize) => (signature) => {\n        if (!parseSignature(signature, isDer)) {\n            return Secp256k1Error.unparsableSignature;\n        }\n        if (normalize) {\n            normalizeSignature();\n        }\n        else {\n            secp256k1Wasm.signatureMalleate(contextPtr, internalSigPtr, internalSigPtr);\n        }\n        return isDer ? getDERSig() : getCompactSig();\n    };\n    const parseAndNormalizeSignature = (signature, isDer, normalize) => {\n        const ret = parseSignature(signature, isDer);\n        if (normalize) {\n            normalizeSignature();\n        }\n        return ret;\n    };\n    const signMessageHash = (isDer) => (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            const failed = secp256k1Wasm.sign(contextPtr, internalSigPtr, messageHashScratch, privateKeyPtr) !== 1;\n            if (failed) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            if (isDer) {\n                setLengthPtr(72 /* ByteLength.maxECDSASig */);\n                secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);\n                return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();\n            }\n            secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);\n            return secp256k1Wasm\n                .readHeapU8(sigScratch, 64 /* ByteLength.compactSig */)\n                .slice();\n        });\n    };\n    const signMessageHashSchnorr = () => (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            const failed = secp256k1Wasm.schnorrSign(contextPtr, schnorrSigPtr, messageHashScratch, privateKeyPtr) !== 1;\n            if (failed) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(schnorrSigPtr, 64 /* ByteLength.schnorrSig */)\n                .slice();\n        });\n    };\n    const verifyMessage = (messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return (secp256k1Wasm.verify(contextPtr, internalSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);\n    };\n    const verifySignature = (isDer, normalize) => (signature, publicKey, messageHash) => parsePublicKey(publicKey) &&\n        parseAndNormalizeSignature(signature, isDer, normalize) &&\n        verifyMessage(messageHash);\n    const verifyMessageSchnorr = (messageHash, signature) => {\n        fillMessageHashScratch(messageHash);\n        const paddedSignature = cloneAndPad(signature, 64 /* ByteLength.schnorrSig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, schnorrSigPtr);\n        return (secp256k1Wasm.schnorrVerify(contextPtr, schnorrSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);\n    };\n    const verifySignatureSchnorr = () => (signature, publicKey, messageHash) => parsePublicKey(publicKey)\n        ? verifyMessageSchnorr(messageHash, signature)\n        : false;\n    const signMessageHashRecoverable = (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.signRecoverable(contextPtr, internalRSigPtr, messageHashScratch, privateKeyPtr) !== 1) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            secp256k1Wasm.recoverableSignatureSerialize(contextPtr, sigScratch, recoveryNumPtr, internalRSigPtr);\n            return {\n                recoveryId: getRecoveryNumPtr(),\n                signature: secp256k1Wasm\n                    .readHeapU8(sigScratch, 64 /* ByteLength.compactSig */)\n                    .slice(),\n            };\n        });\n    };\n    const recoverPublicKey = (compressed) => (signature, recoveryId, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        const paddedSignature = cloneAndPad(signature, 72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, sigScratch);\n        if (secp256k1Wasm.recoverableSignatureParse(contextPtr, internalRSigPtr, sigScratch, recoveryId) !== 1) {\n            return Secp256k1Error.recoverPublicKeyWithUnparsableSignature;\n        }\n        if (secp256k1Wasm.recover(contextPtr, internalPublicKeyPtr, internalRSigPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.recoverPublicKeyInvalidMaterial;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const addTweakPrivateKey = (privateKey, tweakValue) => {\n        fillMessageHashScratch(tweakValue);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.privkeyTweakAdd(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {\n                return Secp256k1Error.addTweakPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(privateKeyPtr, 32 /* ByteLength.privateKey */)\n                .slice();\n        });\n    };\n    const mulTweakPrivateKey = (privateKey, tweakValue) => {\n        fillMessageHashScratch(tweakValue);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.privkeyTweakMul(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {\n                return Secp256k1Error.mulTweakPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(privateKeyPtr, 32 /* ByteLength.privateKey */)\n                .slice();\n        });\n    };\n    const addTweakPublicKey = (compressed) => (publicKey, tweakValue) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        fillMessageHashScratch(tweakValue);\n        if (secp256k1Wasm.pubkeyTweakAdd(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.addTweakPublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const mulTweakPublicKey = (compressed) => (publicKey, tweakValue) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        fillMessageHashScratch(tweakValue);\n        if (secp256k1Wasm.pubkeyTweakMul(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.mulTweakPublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    if (randomSeed !== undefined) {\n        const randomSeedPtr = messageHashScratch;\n        const paddedRandomSeed = cloneAndPad(randomSeed, 32 /* ByteLength.randomSeed */);\n        secp256k1Wasm.heapU8.set(paddedRandomSeed, randomSeedPtr);\n        secp256k1Wasm.contextRandomize(contextPtr, randomSeedPtr);\n        zeroOutPtr(randomSeedPtr, 32 /* ByteLength.randomSeed */);\n    }\n    return {\n        addTweakPrivateKey,\n        addTweakPublicKeyCompressed: addTweakPublicKey(true),\n        addTweakPublicKeyUncompressed: addTweakPublicKey(false),\n        compressPublicKey: convertPublicKey(true),\n        derivePublicKeyCompressed: derivePublicKey(true),\n        derivePublicKeyUncompressed: derivePublicKey(false),\n        malleateSignatureCompact: modifySignature(false, false),\n        malleateSignatureDER: modifySignature(true, false),\n        mulTweakPrivateKey,\n        mulTweakPublicKeyCompressed: mulTweakPublicKey(true),\n        mulTweakPublicKeyUncompressed: mulTweakPublicKey(false),\n        normalizeSignatureCompact: modifySignature(false, true),\n        normalizeSignatureDER: modifySignature(true, true),\n        recoverPublicKeyCompressed: recoverPublicKey(true),\n        recoverPublicKeyUncompressed: recoverPublicKey(false),\n        signMessageHashCompact: signMessageHash(false),\n        signMessageHashDER: signMessageHash(true),\n        signMessageHashRecoverableCompact: signMessageHashRecoverable,\n        signMessageHashSchnorr: signMessageHashSchnorr(),\n        signatureCompactToDER: convertSignature(false),\n        signatureDERToCompact: convertSignature(true),\n        uncompressPublicKey: convertPublicKey(false),\n        validatePrivateKey: (privateKey) => withPrivateKey(privateKey, () => secp256k1Wasm.seckeyVerify(contextPtr, privateKeyPtr) === 1),\n        validatePublicKey: parsePublicKey,\n        verifySignatureCompact: verifySignature(false, true),\n        verifySignatureCompactLowS: verifySignature(false, false),\n        verifySignatureDER: verifySignature(true, true),\n        verifySignatureDERLowS: verifySignature(true, false),\n        verifySignatureSchnorr: verifySignatureSchnorr(),\n    };\n};\n/**\n * This method is like {@link instantiateSecp256k1}, but requires the consumer\n * to `Window.fetch` or `fs.readFile` the `secp256k1.wasm` binary and provide it\n * to this method as `webassemblyBytes`. This skips a base64 decoding of an\n * embedded binary.\n *\n * ### Randomizing the Context with `randomSeed`\n * This method also accepts an optional, 32-byte `randomSeed`, which is passed\n * to the `contextRandomize` method in the underlying WebAssembly.\n *\n * In the secp256k1 C library, context randomization is an additional layer of\n * security from side-channel attacks that attempt to extract private key\n * information by analyzing things like a CPU's emitted radio frequencies or\n * power usage.\n *\n * As most applications also benefit from deterministic, reproducible behavior,\n * context is not randomized by default in Libauth. To randomize the context,\n * provide a 32-byte Uint8Array of cryptographically strong random values\n * (e.g. `crypto.getRandomValues(new Uint8Array(32))`).\n *\n * @param webassemblyBytes - an ArrayBuffer containing the bytes from Libauth's\n * `secp256k1.wasm` binary. Providing this buffer manually may be faster than\n * the internal base64 decode that happens in {@link instantiateSecp256k1}.\n * @param randomSeed - a 32-byte random seed used to randomize the secp256k1\n * context after creation. See above for details.\n */\nexport const instantiateSecp256k1Bytes = async (webassemblyBytes, randomSeed) => wrapSecp256k1Wasm(await instantiateSecp256k1WasmBytes(webassemblyBytes), randomSeed);\n/**\n * Create and wrap a Secp256k1 WebAssembly instance to expose a set of\n * purely-functional Secp256k1 methods. For slightly faster initialization, use\n * {@link instantiateSecp256k1Bytes}.\n *\n * @param randomSeed - a 32-byte random seed used to randomize the secp256k1\n * context after creation. See the description in\n * {@link instantiateSecp256k1Bytes} for details.\n */\nexport const instantiateSecp256k1 = async (randomSeed) => wrapSecp256k1Wasm(await instantiateSecp256k1Wasm(), randomSeed);\n//# sourceMappingURL=secp256k1.js.map","import { base64ToBin, instantiateRustWasm, sha1Base64Bytes, } from './dependencies.js';\n/**\n * The most performant way to instantiate sha1 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha1}.\n *\n * @param webassemblyBytes - A buffer containing the sha1 binary.\n */\nexport const instantiateSha1Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha1', 'sha1', 'sha1_init', 'sha1_update', 'sha1_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nexport const getEmbeddedSha1Binary = () => base64ToBin(sha1Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of {@link instantiateSha1Bytes}\n * that does not require the consumer to provide the sha1 binary buffer.\n */\nexport const instantiateSha1 = async () => instantiateSha1Bytes(getEmbeddedSha1Binary());\n//# sourceMappingURL=sha1.js.map","import { base64ToBin, instantiateRustWasm, sha256Base64Bytes, } from './dependencies.js';\n/**\n * The most performant way to instantiate sha256 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha256}.\n *\n * @param webassemblyBytes - A buffer containing the sha256 binary.\n */\nexport const instantiateSha256Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha256', 'sha256', 'sha256_init', 'sha256_update', 'sha256_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nexport const getEmbeddedSha256Binary = () => base64ToBin(sha256Base64Bytes).buffer;\n/**\n * An ultimately-portable (but possibly slower) version of\n * {@link instantiateSha256Bytes} which does not require the consumer to provide\n * the sha256 binary buffer.\n */\nexport const instantiateSha256 = async () => instantiateSha256Bytes(getEmbeddedSha256Binary());\n//# sourceMappingURL=sha256.js.map","import { base64ToBin, instantiateRustWasm, sha512Base64Bytes, } from './dependencies.js';\n/**\n * The most performant way to instantiate sha512 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha512}.\n *\n * @param webassemblyBytes - A buffer containing the sha512 binary.\n */\nexport const instantiateSha512Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha512', 'sha512', 'sha512_init', 'sha512_update', 'sha512_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nexport const getEmbeddedSha512Binary = () => base64ToBin(sha512Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of {@link instantiateSha512Bytes}\n * that does not require the consumer to provide the sha512 binary buffer.\n */\nexport const instantiateSha512 = async () => instantiateSha512Bytes(getEmbeddedSha512Binary());\n//# sourceMappingURL=sha512.js.map","import { instantiateRipemd160 } from './ripemd160.js';\nimport { instantiateSecp256k1 } from './secp256k1.js';\nimport { instantiateSha1 } from './sha1.js';\nimport { instantiateSha256 } from './sha256.js';\nimport { instantiateSha512 } from './sha512.js';\nconst [sha1, sha256, sha512, ripemd160, secp256k1] = await Promise.all([\n    instantiateSha1(),\n    instantiateSha256(),\n    instantiateSha512(),\n    instantiateRipemd160(),\n    instantiateSecp256k1(),\n]);\nexport { ripemd160, secp256k1, sha1, sha256, sha512 };\n//# sourceMappingURL=default-crypto-instances.js.map","import { ripemd160 as internalRipemd160, sha256 as internalSha256, } from './default-crypto-instances.js';\n/**\n * Hash the given payload with sha256, then hash the 32-byte result with\n * ripemd160, returning a 20-byte hash.\n *\n * This hash is used in both {@link AddressType.p2pkh} and\n * {@link AddressType.p2sh20} addresses.\n *\n * @param payload - the Uint8Array to hash\n */\nexport const hash160 = (payload, crypto = { ripemd160: internalRipemd160, sha256: internalSha256 }) => crypto.ripemd160.hash(crypto.sha256.hash(payload));\n/**\n * Hash the given payload with sha256, then hash the 32-byte result with\n * one final round of sha256, returning a 32-byte hash.\n *\n * This type of hash is used to generate identifiers for transactions and blocks\n * (and therefore in block mining).\n *\n * @param payload - the Uint8Array to hash\n */\nexport const hash256 = (payload, sha256 = internalSha256) => sha256.hash(sha256.hash(payload));\n//# sourceMappingURL=combinations.js.map","import { sha256 as internalSha256, sha512 as internalSha512, } from '../crypto/default-crypto-instances.js';\nimport { flattenBinArray } from '../format/format.js';\n/**\n * Instantiate a hash-based message authentication code (HMAC) function as\n * specified by RFC 2104.\n *\n * @param hashFunction - a cryptographic hash function that iterates a basic\n * compression function over blocks of data\n * @param blockByteLength - the byte-length of blocks used in `hashFunction`\n */\nexport const instantiateHmacFunction = (hashFunction, blockByteLength) => (secret, message) => {\n    const key = new Uint8Array(blockByteLength).fill(0);\n    // eslint-disable-next-line functional/no-expression-statements\n    key.set(secret.length > blockByteLength ? hashFunction(secret) : secret, 0);\n    const innerPaddingFill = 0x36;\n    const innerPadding = new Uint8Array(blockByteLength).fill(innerPaddingFill);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n    const innerPrefix = innerPadding.map((pad, index) => pad ^ key[index]);\n    const innerContent = flattenBinArray([innerPrefix, message]);\n    const innerResult = hashFunction(innerContent);\n    const outerPaddingFill = 0x5c;\n    const outerPadding = new Uint8Array(blockByteLength).fill(outerPaddingFill);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n    const outerPrefix = outerPadding.map((pad, index) => pad ^ key[index]);\n    return hashFunction(flattenBinArray([outerPrefix, innerResult]));\n};\nconst sha256BlockByteLength = 64;\n/**\n * Create a hash-based message authentication code using HMAC-SHA256 as\n * specified in `RFC 4231`. Returns a 32-byte Uint8Array.\n *\n * Secrets longer than the block byte-length (64 bytes) are hashed before\n * use, shortening their length to the minimum recommended length (32 bytes).\n * See `RFC 2104` for details.\n *\n * @param secret - the secret key (recommended length: 32-64 bytes)\n * @param message - the message to authenticate\n * @param sha256 - an implementation of Sha256 (defaults to the\n * internal WASM implementation)\n */\nexport const hmacSha256 = (secret, message, sha256 = internalSha256) => instantiateHmacFunction(sha256.hash, sha256BlockByteLength)(secret, message);\nconst sha512BlockByteLength = 128;\n/**\n * Create a hash-based message authentication code using HMAC-SHA512 as\n * specified in `RFC 4231`. Returns a 64-byte Uint8Array.\n *\n * Secrets longer than the block byte-length (128 bytes) are hashed before\n * use, shortening their length to the minimum recommended length (64 bytes).\n * See `RFC 2104` for details.\n *\n * @param secret - the secret key (recommended length: 64-128 bytes)\n * @param message - the message to authenticate\n * @param sha512 - an implementation of Sha512 (defaults to the\n * internal WASM implementation)\n */\nexport const hmacSha512 = (secret, message, sha512 = internalSha512) => instantiateHmacFunction(sha512.hash, sha512BlockByteLength)(secret, message);\n//# sourceMappingURL=hmac.js.map","/**\n * The list of 32 symbols used in Bech32 encoding.\n */\n// cspell: disable-next-line\nexport const bech32CharacterSet = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n/**\n * An object mapping each of the 32 symbols used in Bech32 encoding to their respective index in the character set.\n */\n// prettier-ignore\nexport const bech32CharacterSetIndex = { q: 0, p: 1, z: 2, r: 3, y: 4, '9': 5, x: 6, '8': 7, g: 8, f: 9, '2': 10, t: 11, v: 12, d: 13, w: 14, '0': 15, s: 16, '3': 17, j: 18, n: 19, '5': 20, '4': 21, k: 22, h: 23, c: 24, e: 25, '6': 26, m: 27, u: 28, a: 29, '7': 30, l: 31 }; // eslint-disable-line sort-keys, @typescript-eslint/naming-convention\nexport var BitRegroupingError;\n(function (BitRegroupingError) {\n    BitRegroupingError[\"integerOutOfRange\"] = \"An integer provided in the source array is out of the range of the specified source word length.\";\n    BitRegroupingError[\"hasDisallowedPadding\"] = \"Encountered padding when padding was disallowed.\";\n    BitRegroupingError[\"requiresDisallowedPadding\"] = \"Encoding requires padding while padding is disallowed.\";\n})(BitRegroupingError || (BitRegroupingError = {}));\n/* eslint-disable functional/no-let, no-bitwise, functional/no-expression-statements, functional/no-conditional-statements, complexity */\n/**\n * Given an array of integers, regroup bits from `sourceWordLength` to\n * `resultWordLength`, returning a new array of integers between 0 and\n * toWordLength^2.\n *\n * Note, if `bin` is within the range of `sourceWordLength` and `padding` is\n * `true`, this method will never error.\n *\n * A.K.A. `convertbits`\n */\n// Derived from: https://github.com/sipa/bech32\nexport const regroupBits = ({ bin, sourceWordLength, resultWordLength, allowPadding = true, }) => {\n    let accumulator = 0;\n    let bits = 0;\n    const result = [];\n    const maxResultInt = (1 << resultWordLength) - 1;\n    // eslint-disable-next-line functional/no-loop-statements, @typescript-eslint/prefer-for-of, no-plusplus\n    for (let p = 0; p < bin.length; ++p) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = bin[p];\n        if (value < 0 || value >> sourceWordLength !== 0) {\n            return BitRegroupingError.integerOutOfRange;\n        }\n        accumulator = (accumulator << sourceWordLength) | value;\n        bits += sourceWordLength;\n        // eslint-disable-next-line functional/no-loop-statements\n        while (bits >= resultWordLength) {\n            bits -= resultWordLength;\n            // eslint-disable-next-line functional/immutable-data\n            result.push((accumulator >> bits) & maxResultInt);\n        }\n    }\n    if (allowPadding) {\n        if (bits > 0) {\n            // eslint-disable-next-line functional/immutable-data\n            result.push((accumulator << (resultWordLength - bits)) & maxResultInt);\n        }\n    }\n    else if (bits >= sourceWordLength) {\n        return BitRegroupingError.hasDisallowedPadding;\n    }\n    else if (((accumulator << (resultWordLength - bits)) & maxResultInt) > 0) {\n        return BitRegroupingError.requiresDisallowedPadding;\n    }\n    return result;\n};\n/* eslint-enable functional/no-let, no-bitwise, functional/no-expression-statements, functional/no-conditional-statements, complexity */\n/**\n * Encode an array of numbers as a base32 string using the Bech32 character set.\n *\n * Note, this method always completes. For a valid result, all items in\n * `base32IntegerArray` must be between `0` and `32`. To prepare another array\n * type for encoding, see {@link regroupBits}.\n *\n * For the reverse, see {@link decodeBech32}.\n *\n * @param base32IntegerArray - the array of 5-bit integers to encode\n */\nexport const encodeBech32 = (base32IntegerArray) => {\n    // eslint-disable-next-line functional/no-let\n    let result = '';\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < base32IntegerArray.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statements, @typescript-eslint/no-non-null-assertion\n        result += bech32CharacterSet[base32IntegerArray[i]];\n    }\n    return result;\n};\n/**\n * Decode a Bech32-encoded string into an array of 5-bit integers.\n *\n * Note, this method always completes. If `validBech32` is not valid bech32,\n * an incorrect result will be returned. If `validBech32` is potentially\n * malformed, check it with {@link isBech32CharacterSet} before calling\n * this method.\n *\n * For the reverse, see {@link encodeBech32}.\n *\n * @param validBech32 - the bech32-encoded string to decode\n */\nexport const decodeBech32 = (validBech32) => {\n    const result = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < validBech32.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(bech32CharacterSetIndex[validBech32[i]]);\n    }\n    return result;\n};\nconst nonBech32Characters = new RegExp(`[^${bech32CharacterSet}]`, 'u');\nconst base32WordLength = 5;\nconst base256WordLength = 8;\n/**\n * Validate that a string uses only characters from the bech32 character set.\n *\n * @param maybeBech32 - a string to test for valid Bech32 encoding\n */\nexport const isBech32CharacterSet = (maybeBech32) => !nonBech32Characters.test(maybeBech32);\n/**\n * Returns an array of the non-Bech32 characters in the provided string; if all\n * characters are valid, an empty array is returned.\n * @param maybeBech32 - the string to test\n */\nexport const extractNonBech32Characters = (maybeBech32) => [\n    ...new Set([...maybeBech32].filter((character) => !bech32CharacterSet.includes(character))),\n];\nexport var Bech32DecodingError;\n(function (Bech32DecodingError) {\n    Bech32DecodingError[\"notBech32CharacterSet\"] = \"Bech32 decoding error: input contains characters outside of the Bech32 character set.\";\n})(Bech32DecodingError || (Bech32DecodingError = {}));\n/**\n * Convert a padded bech32-encoded string (without checksum) to a Uint8Array,\n * removing the padding. If the string is not valid Bech32, or if the array of\n * 5-bit integers would require padding to be regrouped into 8-bit bytes, this\n * method returns an error message.\n *\n * For the reverse, see {@link binToBech32Padded}.\n *\n * @param bech32Padded - the padded bech32-encoded string to decode\n */\nexport const bech32PaddedToBin = (bech32Padded) => {\n    const result = isBech32CharacterSet(bech32Padded)\n        ? regroupBits({\n            allowPadding: false,\n            bin: decodeBech32(bech32Padded),\n            resultWordLength: base256WordLength,\n            sourceWordLength: base32WordLength,\n        })\n        : Bech32DecodingError.notBech32CharacterSet;\n    return typeof result === 'string' ? result : Uint8Array.from(result);\n};\n/**\n * Convert a Uint8Array to a padded bech32-encoded string (without a checksum),\n * adding padding bits as necessary to convert all bytes to 5-bit integers.\n *\n * For the reverse, see {@link bech32PaddedToBin}.\n *\n * @param bytes - the Uint8Array to bech32 encode\n */\nexport const binToBech32Padded = (bytes) => encodeBech32(regroupBits({\n    bin: bytes,\n    resultWordLength: base32WordLength,\n    sourceWordLength: base256WordLength,\n}));\n//# sourceMappingURL=bech32.js.map","import { formatError } from '../format/format.js';\nimport { decodeBech32, encodeBech32, extractNonBech32Characters, isBech32CharacterSet, regroupBits, } from './bech32.js';\nexport var CashAddressNetworkPrefix;\n(function (CashAddressNetworkPrefix) {\n    CashAddressNetworkPrefix[\"mainnet\"] = \"bitcoincash\";\n    CashAddressNetworkPrefix[\"testnet\"] = \"bchtest\";\n    CashAddressNetworkPrefix[\"regtest\"] = \"bchreg\";\n})(CashAddressNetworkPrefix || (CashAddressNetworkPrefix = {}));\n/**\n * The CashAddress specification standardizes the format of the version byte:\n * - Most significant bit: reserved, must be `0`\n * - next 4 bits: Address Type\n * - 3 least significant bits: Payload Length\n *\n * Two Address Type values are currently standardized:\n * - 0 (`0b0000`): P2PKH\n * - 1 (`0b0001`): P2SH\n *\n * And two are proposed by `CHIP-2022-02-CashTokens`:\n * - 2 (`0b0010`): P2PKH + Token Support\n * - 3 (`0b0011`): P2SH + Token Support\n *\n * The CashAddress specification standardizes expected payload length using\n * {@link CashAddressLengthBits}. Currently, two length bit values are in use by\n * standard CashAddress types:\n * - `0` (`0b000`): 20 bytes (in use by `p2pkh` and `p2sh20`)\n * - `3` (`0b011`): 32 bytes (in use by `p2sh32`)\n */\nexport var CashAddressVersionByte;\n(function (CashAddressVersionByte) {\n    /**\n     * Pay to Public Key Hash (P2PKH): `0b00000000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0000` (P2PKH)\n     * - Length bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2pkh\"] = 0] = \"p2pkh\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20): `0b00001000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0001` (P2SH)\n     * - Length bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh20\"] = 8] = \"p2sh20\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH20): `0b00001000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0001` (P2SH)\n     * - Length bits: `011` (32 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh32\"] = 11] = \"p2sh32\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support: `0b00010000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0010` (P2PKH + Tokens)\n     * - Length bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2pkhWithTokens\"] = 16] = \"p2pkhWithTokens\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20) with token support: `0b00011000`\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0011` (P2SH + Tokens)\n     * - Length bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh20WithTokens\"] = 24] = \"p2sh20WithTokens\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH32) with token support: `0b00011011`\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0011` (P2SH + Tokens)\n     * - Length bits: `011` (32 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh32WithTokens\"] = 27] = \"p2sh32WithTokens\";\n})(CashAddressVersionByte || (CashAddressVersionByte = {}));\n/**\n * The address types currently defined in the CashAddress specification. See\n * also: {@link CashAddressVersionByte}.\n */\nexport var CashAddressType;\n(function (CashAddressType) {\n    /**\n     * Pay to Public Key Hash (P2PKH): `0b0000`\n     */\n    CashAddressType[\"p2pkh\"] = \"p2pkh\";\n    /**\n     * Pay to Script Hash (P2SH): `0b0001`\n     *\n     * Note, this type is used for both {@link CashAddressVersionByte.p2sh20} and\n     * {@link CashAddressVersionByte.p2sh32}.\n     */\n    CashAddressType[\"p2sh\"] = \"p2sh\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support: `0b0010`\n     */\n    CashAddressType[\"p2pkhWithTokens\"] = \"p2pkhWithTokens\";\n    /**\n     * Pay to Script Hash (P2SH) with token support: `0b0011`\n     *\n     * Note, this type is used for both\n     * {@link CashAddressVersionByte.p2sh20WithTokens} and\n     * {@link CashAddressVersionByte.p2sh32WithTokens}.\n     */\n    CashAddressType[\"p2shWithTokens\"] = \"p2shWithTokens\";\n})(CashAddressType || (CashAddressType = {}));\n/**\n * The address type bits currently defined in the CashAddress specification.\n * These map to: {@link CashAddressType}.\n */\nexport var CashAddressTypeBits;\n(function (CashAddressTypeBits) {\n    /**\n     * Pay to Public Key Hash (P2PKH)\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2pkh\"] = 0] = \"p2pkh\";\n    /**\n     * Pay to Script Hash (P2SH)\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2sh\"] = 1] = \"p2sh\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2pkhWithTokens\"] = 2] = \"p2pkhWithTokens\";\n    /**\n     * Pay to Script Hash (P2SH) with token support\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2shWithTokens\"] = 3] = \"p2shWithTokens\";\n})(CashAddressTypeBits || (CashAddressTypeBits = {}));\nexport const cashAddressTypeToTypeBits = {\n    [CashAddressType.p2pkh]: CashAddressTypeBits.p2pkh,\n    [CashAddressType.p2sh]: CashAddressTypeBits.p2sh,\n    [CashAddressType.p2pkhWithTokens]: CashAddressTypeBits.p2pkhWithTokens,\n    [CashAddressType.p2shWithTokens]: CashAddressTypeBits.p2shWithTokens,\n};\nexport const cashAddressTypeBitsToType = {\n    [CashAddressTypeBits.p2pkh]: CashAddressType.p2pkh,\n    [CashAddressTypeBits.p2sh]: CashAddressType.p2sh,\n    [CashAddressTypeBits.p2pkhWithTokens]: CashAddressType.p2pkhWithTokens,\n    [CashAddressTypeBits.p2shWithTokens]: CashAddressType.p2shWithTokens,\n};\n/* eslint-disable @typescript-eslint/naming-convention */\nexport const cashAddressLengthBitsToLength = {\n    0: 20,\n    1: 24,\n    2: 28,\n    3: 32,\n    4: 40,\n    5: 48,\n    6: 56,\n    7: 64,\n};\nexport const cashAddressLengthToLengthBits = {\n    20: 0,\n    24: 1,\n    28: 2,\n    32: 3,\n    40: 4,\n    48: 5,\n    56: 6,\n    64: 7,\n};\n/**\n * Encode a CashAddress version byte for the given address type and payload\n * length. See {@link CashAddressVersionByte} for more information.\n *\n * The `type` parameter must be a number between `0` and `15`, and `bitLength`\n * must be one of the standardized lengths. To use the contents of a variable,\n * cast it to {@link CashAddressType} or\n * {@link CashAddressSupportedLength} respectively,\n * e.g.:\n * ```ts\n * const type = 3 as CashAddressType;\n * const length = 20 as CashAddressSupportedLength;\n * getCashAddressVersionByte(type, length);\n * ```\n *\n * For the reverse, see {@link decodeCashAddressVersionByte}.\n *\n * @param typeBits - The address type bit of the payload being encoded.\n * @param length - The length of the payload being encoded.\n */\nexport const encodeCashAddressVersionByte = (typeBits, length) => \n// eslint-disable-next-line no-bitwise\n(typeBits << 3 /* Constants.cashAddressTypeBitsShift */) |\n    cashAddressLengthToLengthBits[length];\nexport var CashAddressVersionByteDecodingError;\n(function (CashAddressVersionByteDecodingError) {\n    CashAddressVersionByteDecodingError[\"reservedBitSet\"] = \"Reserved bit is set.\";\n})(CashAddressVersionByteDecodingError || (CashAddressVersionByteDecodingError = {}));\n/**\n * Decode a CashAddress version byte. For a list of known versions, see\n * {@link CashAddressVersionByte}.\n *\n * For the reverse, see {@link encodeCashAddressVersionByte}.\n *\n * @param version - The version byte to decode.\n */\nexport const decodeCashAddressVersionByte = (version) => \n// eslint-disable-next-line no-negated-condition, no-bitwise\n(version & 128 /* Constants.cashAddressReservedBitMask */) !== 0\n    ? CashAddressVersionByteDecodingError.reservedBitSet\n    : {\n        length: cashAddressLengthBitsToLength[\n        // eslint-disable-next-line no-bitwise\n        (version &\n            7 /* Constants.cashAddressLengthBits */)],\n        typeBits: \n        // eslint-disable-next-line no-bitwise\n        (version >>> 3 /* Constants.cashAddressTypeBitsShift */) &\n            15 /* Constants.cashAddressTypeBits */,\n    };\n/**\n * Convert a string into an array of 5-bit numbers, representing the characters\n * in a case-insensitive way.\n *\n * @param prefix - The prefix to mask.\n */\nexport const maskCashAddressPrefix = (prefix) => {\n    const result = [];\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < prefix.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, functional/immutable-data\n        result.push(prefix.charCodeAt(i) & 31 /* Constants.asciiCaseInsensitiveBits */);\n    }\n    return result;\n};\n// prettier-ignore\nconst bech32GeneratorMostSignificantByte = [0x98, 0x79, 0xf3, 0xae, 0x1e]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n// prettier-ignore\nconst bech32GeneratorRemainingBytes = [0xf2bc8e61, 0xb76d99e2, 0x3e5fb3c4, 0x2eabe2a8, 0x4f43e470]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n/**\n * Perform the CashAddress polynomial modulo operation, which is based on the\n * Bech32 polynomial modulo operation, but the returned checksum is 40 bits,\n * rather than 30.\n *\n * A.K.A. `PolyMod`\n *\n * @remarks\n * Notes from C++ implementation:\n * This function will compute what 8 5-bit values to XOR into the last 8 input\n * values, in order to make the checksum 0. These 8 values are packed together\n * in a single 40-bit integer. The higher bits correspond to earlier values.\n *\n * The input is interpreted as a list of coefficients of a polynomial over F\n * = GF(32), with an implicit 1 in front. If the input is [v0,v1,v2,v3,v4],\n * that polynomial is v(x) = 1*x^5 + v0*x^4 + v1*x^3 + v2*x^2 + v3*x + v4.\n * The implicit 1 guarantees that [v0,v1,v2,...] has a distinct checksum\n * from [0,v0,v1,v2,...].\n *\n * The output is a 40-bit integer whose 5-bit groups are the coefficients of\n * the remainder of v(x) mod g(x), where g(x) is the cashaddr generator, x^8\n * + [19]*x^7 + [3]*x^6 + [25]*x^5 + [11]*x^4 + [25]*x^3 + [3]*x^2 + [19]*x\n * + [1]. g(x) is chosen in such a way that the resulting code is a BCH\n * code, guaranteeing detection of up to 4 errors within a window of 1025\n * characters. Among the various possible BCH codes, one was selected to in\n * fact guarantee detection of up to 5 errors within a window of 160\n * characters and 6 errors within a window of 126 characters. In addition,\n * the code guarantee the detection of a burst of up to 8 errors.\n *\n * Note that the coefficients are elements of GF(32), here represented as\n * decimal numbers between []. In this finite field, addition is just XOR of\n * the corresponding numbers. For example, [27] + [13] = [27 ^ 13] = [22].\n * Multiplication is more complicated, and requires treating the bits of\n * values themselves as coefficients of a polynomial over a smaller field,\n * GF(2), and multiplying those polynomials mod a^5 + a^3 + 1. For example,\n * [5] * [26] = (a^2 + 1) * (a^4 + a^3 + a) = (a^4 + a^3 + a) * a^2 + (a^4 +\n * a^3 + a) = a^6 + a^5 + a^4 + a = a^3 + 1 (mod a^5 + a^3 + 1) = [9].\n *\n * During the course of the loop below, `c` contains the bit-packed\n * coefficients of the polynomial constructed from just the values of v that\n * were processed so far, mod g(x). In the above example, `c` initially\n * corresponds to 1 mod (x), and after processing 2 inputs of v, it\n * corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the\n * starting value for `c`.\n *\n * @param v - Array of 5-bit integers over which the checksum is to be computed.\n */\n// Derived from the `bitcore-lib-cash` implementation (does not require BigInt): https://github.com/bitpay/bitcore\nexport const cashAddressPolynomialModulo = (v) => {\n    /* eslint-disable functional/no-let, functional/no-loop-statements, functional/no-expression-statements, no-bitwise, @typescript-eslint/no-magic-numbers */\n    let mostSignificantByte = 0;\n    let lowerBytes = 1;\n    let c = 0;\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, no-plusplus\n    for (let j = 0; j < v.length; j++) {\n        c = mostSignificantByte >>> 3;\n        mostSignificantByte &= 0x07;\n        mostSignificantByte <<= 5;\n        mostSignificantByte |= lowerBytes >>> 27;\n        lowerBytes &= 0x07ffffff;\n        lowerBytes <<= 5;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        lowerBytes ^= v[j];\n        // eslint-disable-next-line no-plusplus\n        for (let i = 0; i < bech32GeneratorMostSignificantByte.length; ++i) {\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (c & (1 << i)) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                mostSignificantByte ^= bech32GeneratorMostSignificantByte[i];\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                lowerBytes ^= bech32GeneratorRemainingBytes[i];\n            }\n        }\n    }\n    lowerBytes ^= 1;\n    // eslint-disable-next-line functional/no-conditional-statements\n    if (lowerBytes < 0) {\n        lowerBytes ^= 1 << 31;\n        lowerBytes += (1 << 30) * 2;\n    }\n    return mostSignificantByte * (1 << 30) * 4 + lowerBytes;\n    /* eslint-enable functional/no-let, functional/no-loop-statements, functional/no-expression-statements, no-bitwise, @typescript-eslint/no-magic-numbers */\n};\n/**\n * Convert the checksum returned by {@link cashAddressPolynomialModulo} to an\n * array of 5-bit positive integers that can be Base32 encoded.\n * @param checksum - A 40 bit checksum returned by\n * {@link cashAddressPolynomialModulo}.\n */\nexport const cashAddressChecksumToUint5Array = (checksum) => {\n    const result = [];\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < 8 /* Constants.base256WordLength */; ++i) {\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-magic-numbers, functional/immutable-data\n        result.push(checksum & 31);\n        // eslint-disable-next-line functional/no-expression-statements, @typescript-eslint/no-magic-numbers, no-param-reassign\n        checksum /= 32;\n    }\n    // eslint-disable-next-line functional/immutable-data\n    return result.reverse();\n};\nexport var CashAddressFormatEncodingError;\n(function (CashAddressFormatEncodingError) {\n    CashAddressFormatEncodingError[\"excessiveVersion\"] = \"CashAddress format encoding error: version must be 255 or less.\";\n})(CashAddressFormatEncodingError || (CashAddressFormatEncodingError = {}));\nexport var CashAddressEncodingError;\n(function (CashAddressEncodingError) {\n    CashAddressEncodingError[\"noTypeBitsValueStandardizedForP2pk\"] = \"CashAddress encoding error: no CashAddress type bit has been standardized for P2PK locking bytecode.\";\n    CashAddressEncodingError[\"unsupportedPayloadLength\"] = \"CashAddress encoding error: a payload of this length can not be encoded as a valid CashAddress.\";\n    CashAddressEncodingError[\"unknownLockingBytecodeType\"] = \"CashAddress encoding error: unknown locking bytecode type.\";\n})(CashAddressEncodingError || (CashAddressEncodingError = {}));\n/**\n * Encode a payload as a CashAddress-like string using the CashAddress format.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * For the reverse, see {@link decodeCashAddressFormat}.\n *\n * To encode a standard CashAddress, use {@link encodeCashAddress}.\n */\nexport const encodeCashAddressFormat = ({ payload, prefix, throwErrors = true, version, }) => {\n    const checksum40BitPlaceholder = [0, 0, 0, 0, 0, 0, 0, 0];\n    if (version > 255 /* Constants.maximumCashAddressFormatVersion */) {\n        return formatError(CashAddressFormatEncodingError.excessiveVersion, `Version: ${version}.`, throwErrors);\n    }\n    const payloadContents = regroupBits({\n        bin: Uint8Array.from([version, ...payload]),\n        resultWordLength: 5 /* Constants.base32WordLength */,\n        sourceWordLength: 8 /* Constants.base256WordLength */,\n    });\n    const checksumContents = [\n        ...maskCashAddressPrefix(prefix),\n        0 /* Constants.payloadSeparator */,\n        ...payloadContents,\n        ...checksum40BitPlaceholder,\n    ];\n    const checksum = cashAddressPolynomialModulo(checksumContents);\n    const encoded = [\n        ...payloadContents,\n        ...cashAddressChecksumToUint5Array(checksum),\n    ];\n    const address = `${prefix}:${encodeBech32(encoded)}`;\n    return { address };\n};\nexport const isValidCashAddressPayloadLength = (length) => cashAddressLengthToLengthBits[length] !== undefined;\n/**\n * Encode a payload as a CashAddress. This function is similar to\n * {@link encodeCashAddress} but supports non-standard `prefix`es and `type`s.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * For other address standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link encodeCashAddressFormat}.\n *\n * For the reverse, see {@link decodeCashAddressNonStandard}.\n */\nexport const encodeCashAddressNonStandard = ({ payload, prefix, throwErrors = true, typeBits, }) => {\n    const { length } = payload;\n    if (!isValidCashAddressPayloadLength(length)) {\n        return formatError(CashAddressEncodingError.unsupportedPayloadLength, `Payload length: ${length}.`, throwErrors);\n    }\n    return encodeCashAddressFormat({\n        payload,\n        prefix,\n        throwErrors,\n        version: encodeCashAddressVersionByte(typeBits, length),\n    });\n};\n/**\n * Encode a payload as a CashAddress.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * To encode a CashAddress with a custom/unknown prefix or type bit, see\n * {@link encodeCashAddressNonStandard}. For other address standards that\n * closely follow the CashAddress specification (but have alternative version\n * byte requirements), use {@link encodeCashAddressFormat}.\n *\n * To decode a CashAddress, use {@link decodeCashAddress}.\n *\n * @returns If `throwErrors` is `true`, the CashAddress as a `string`. If\n * `throwErrors` is `false`, a {@link CashAddressResult} on successful encoding\n * or an error message as a `string`.\n */\nexport const encodeCashAddress = ({ payload, prefix = 'bitcoincash', throwErrors = true, type, }) => encodeCashAddressNonStandard({\n    payload,\n    prefix,\n    throwErrors,\n    typeBits: cashAddressTypeToTypeBits[type],\n});\nexport var CashAddressDecodingError;\n(function (CashAddressDecodingError) {\n    CashAddressDecodingError[\"improperPadding\"] = \"CashAddress decoding error: the payload is improperly padded.\";\n    CashAddressDecodingError[\"invalidCharacters\"] = \"CashAddress decoding error: the payload contains unexpected characters.\";\n    CashAddressDecodingError[\"invalidChecksum\"] = \"CashAddress decoding error: invalid checksum - please review the address for errors.\";\n    CashAddressDecodingError[\"invalidFormat\"] = \"CashAddress decoding error: CashAddresses should be of the form \\\"prefix:payload\\\".\";\n    CashAddressDecodingError[\"mismatchedPayloadLength\"] = \"CashAddress decoding error: mismatched payload length for specified address version.\";\n    CashAddressDecodingError[\"reservedBit\"] = \"CashAddress decoding error: unknown CashAddress version, reserved bit set.\";\n    CashAddressDecodingError[\"unknownAddressType\"] = \"CashAddress decoding error: unknown CashAddress type.\";\n})(CashAddressDecodingError || (CashAddressDecodingError = {}));\n/**\n * Decode and validate a string using the CashAddress format. This is more\n * lenient than {@link decodeCashAddress}, which also validates the contents of\n * the version byte.\n *\n * Note, this method requires `address` to include a network prefix. To\n * decode a string with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * For the reverse, see {@link encodeCashAddressFormat}.\n *\n * @param address - The CashAddress-like string to decode.\n */\n// eslint-disable-next-line complexity\nexport const decodeCashAddressFormat = (address) => {\n    const parts = address.toLowerCase().split(':');\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {\n        return formatError(CashAddressDecodingError.invalidFormat, `Provided address: \"${address}\".`);\n    }\n    const [prefix, payload] = parts;\n    if (!isBech32CharacterSet(payload)) {\n        return formatError(CashAddressDecodingError.invalidCharacters, `Invalid characters: ${extractNonBech32Characters(payload).join(', ')}.`);\n    }\n    const decodedPayload = decodeBech32(payload);\n    const polynomial = [\n        ...maskCashAddressPrefix(prefix),\n        0 /* Constants.payloadSeparator */,\n        ...decodedPayload,\n    ];\n    if (cashAddressPolynomialModulo(polynomial) !== 0) {\n        return CashAddressDecodingError.invalidChecksum;\n    }\n    const checksum40BitPlaceholderLength = 8;\n    const payloadContents = regroupBits({\n        allowPadding: false,\n        bin: decodedPayload.slice(0, -checksum40BitPlaceholderLength),\n        resultWordLength: 8 /* Constants.base256WordLength */,\n        sourceWordLength: 5 /* Constants.base32WordLength */,\n    });\n    if (typeof payloadContents === 'string') {\n        return formatError(CashAddressDecodingError.improperPadding, payloadContents);\n    }\n    const [version, ...contents] = payloadContents;\n    const result = Uint8Array.from(contents);\n    return { payload: result, prefix, version };\n};\n/**\n * Decode and validate a CashAddress, strictly checking the version byte\n * according to the CashAddress specification. This is important for error\n * detection in CashAddresses.\n *\n * This function is similar to {@link decodeCashAddress} but supports\n * non-standard `type`s.\n *\n * For other address-like standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link decodeCashAddressFormat}.\n *\n * Note, this method requires that CashAddresses include a network prefix. To\n * decode an address with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * For the reverse, see {@link encodeCashAddressNonStandard}.\n *\n * @param address - The CashAddress to decode.\n */\nexport const decodeCashAddressNonStandard = (address) => {\n    const decoded = decodeCashAddressFormat(address);\n    if (typeof decoded === 'string') {\n        return decoded;\n    }\n    const info = decodeCashAddressVersionByte(decoded.version);\n    if (info === CashAddressVersionByteDecodingError.reservedBitSet) {\n        return formatError(CashAddressDecodingError.reservedBit);\n    }\n    if (decoded.payload.length !== info.length) {\n        return formatError(CashAddressDecodingError.mismatchedPayloadLength, `Version byte indicated a byte length of ${info.length}, but the payload is ${decoded.payload.length} bytes.`);\n    }\n    return {\n        payload: decoded.payload,\n        prefix: decoded.prefix,\n        typeBits: info.typeBits,\n    };\n};\n/**\n * Decode and validate a CashAddress, strictly checking the version byte\n * according to the CashAddress specification. This is important for error\n * detection in CashAddresses.\n *\n * To decode CashAddresses with non-standard `type`s,\n * see {@link decodeCashAddressNonStandard}.\n *\n * For other address-like standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link decodeCashAddressFormat}.\n *\n * Note, this method requires that CashAddresses include a network prefix. To\n * decode an address with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * To encode a CashAddress, use {@link encodeCashAddress}.\n *\n * @param address - The CashAddress to decode.\n */\nexport const decodeCashAddress = (address) => {\n    const decoded = decodeCashAddressNonStandard(address);\n    if (typeof decoded === 'string') {\n        return decoded;\n    }\n    const type = cashAddressTypeBitsToType[decoded.typeBits];\n    if (type === undefined) {\n        return formatError(CashAddressDecodingError.unknownAddressType, `Type bit value: ${decoded.typeBits}.`);\n    }\n    return {\n        payload: decoded.payload,\n        prefix: decoded.prefix,\n        type,\n    };\n};\n/**\n * Attempt to decode and validate a CashAddress against a list of possible\n * prefixes. If the correct prefix is known, use {@link decodeCashAddress}.\n *\n * @param address - The CashAddress to decode.\n * @param possiblePrefixes - The network prefixes to try.\n */\n// decodeCashAddressWithoutPrefix\nexport const decodeCashAddressFormatWithoutPrefix = (address, possiblePrefixes = [\n    CashAddressNetworkPrefix.mainnet,\n    CashAddressNetworkPrefix.testnet,\n    CashAddressNetworkPrefix.regtest,\n]) => {\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const prefix of possiblePrefixes) {\n        const attempt = decodeCashAddressFormat(`${prefix}:${address}`);\n        if (attempt !== CashAddressDecodingError.invalidChecksum) {\n            return attempt;\n        }\n    }\n    return CashAddressDecodingError.invalidChecksum;\n};\n/**\n * Convert a CashAddress polynomial to CashAddress string format.\n *\n * @remarks\n * CashAddress polynomials take the form:\n *\n * `[lowest 5 bits of each prefix character] 0 [payload + checksum]`\n *\n * This method remaps the 5-bit integers in the prefix location to the matching\n * ASCII lowercase characters, replaces the separator with `:`, and then Bech32\n * encodes the remaining payload and checksum.\n *\n * @param polynomial - An array of 5-bit integers representing the terms of a\n * CashAddress polynomial.\n */\nexport const cashAddressPolynomialToCashAddress = (polynomial) => {\n    const separatorPosition = polynomial.indexOf(0);\n    const prefix = polynomial\n        .slice(0, separatorPosition)\n        .map((integer) => String.fromCharCode(96 /* Constants.asciiLowerCaseStart */ + integer))\n        .join('');\n    const contents = encodeBech32(polynomial.slice(separatorPosition + 1));\n    return `${prefix}:${contents}`;\n};\nexport var CashAddressFormatCorrectionError;\n(function (CashAddressFormatCorrectionError) {\n    CashAddressFormatCorrectionError[\"tooManyErrors\"] = \"CashAddress format correction error: this address cannot be corrected as it contains more than 2 errors.\";\n})(CashAddressFormatCorrectionError || (CashAddressFormatCorrectionError = {}));\n/**\n * Attempt to correct up to 2 errors in a CashAddress-formatted string. The\n * string must include the prefix and only contain Bech32 characters.\n *\n * ## **CAUTION: improper use of this function can lead to lost funds.**\n *\n * Using error correction of CashAddress-like formats degrades error detection,\n * i.e. if the payload contains more than 2 errors, it is possible that error\n * correction will \"correct\" the payload to a plausible but incorrect payload.\n *\n * For applications which proceed to take irreversible actions – like sending a\n * payment – **naive usage of CashAddress Format error correction can lead to\n * vulnerabilities and lost funds**.\n *\n * It is strongly advised that this method only be used in fail-safe\n * applications (e.g. automatic correction of CashAddress-formatted private key\n * material during wallet recovery) or under explicit user control (e.g. \"The\n * address you entered is invalid, please review the highlighted characters and\n * try again.\").\n *\n * Only 2 substitution errors can be corrected (or a single swap) – deletions\n * and insertions (errors that shift many other characters and change the\n * length of the payload) can never be safely corrected and will produce an\n * error.\n *\n * Errors can be corrected in both the prefix and the payload, but attempting to\n * correct errors in the prefix prior to this method can improve results, e.g.\n * for `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfde0x`, the string\n * `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can be corrected, while\n * `typo:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can not.\n *\n * @param address - The address or formatted data to correct.\n */\n// Derived from: https://github.com/deadalnix/cashaddressed\n// eslint-disable-next-line complexity\nexport const attemptCashAddressFormatErrorCorrection = (address) => {\n    const parts = address.toLowerCase().split(':');\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {\n        return CashAddressDecodingError.invalidFormat;\n    }\n    const [prefix, payload] = parts;\n    if (!isBech32CharacterSet(payload)) {\n        return formatError(CashAddressDecodingError.invalidCharacters, `Invalid characters: ${extractNonBech32Characters(payload).join(', ')}.`);\n    }\n    const decodedPayload = decodeBech32(payload);\n    const polynomial = [...maskCashAddressPrefix(prefix), 0, ...decodedPayload];\n    const originalChecksum = cashAddressPolynomialModulo(polynomial);\n    if (originalChecksum === 0) {\n        return {\n            address: cashAddressPolynomialToCashAddress(polynomial),\n            corrections: [],\n        };\n    }\n    const syndromes = {};\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let term = 0; term < polynomial.length; term++) {\n        // eslint-disable-next-line functional/no-loop-statements\n        for (\n        // eslint-disable-next-line functional/no-let\n        let errorVector = 1; errorVector < 32 /* Constants.finiteFieldOrder */; \n        // eslint-disable-next-line no-plusplus\n        errorVector++) {\n            // eslint-disable-next-line functional/no-expression-statements, no-bitwise, functional/immutable-data\n            polynomial[term] ^= errorVector;\n            const correct = cashAddressPolynomialModulo(polynomial);\n            if (correct === 0) {\n                return {\n                    address: cashAddressPolynomialToCashAddress(polynomial),\n                    corrections: [term],\n                };\n            }\n            // eslint-disable-next-line no-bitwise\n            const s0 = (BigInt(correct) ^ BigInt(originalChecksum)).toString();\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            syndromes[s0] = term * 32 /* Constants.finiteFieldOrder */ + errorVector;\n            // eslint-disable-next-line functional/no-expression-statements, no-bitwise, functional/immutable-data\n            polynomial[term] ^= errorVector;\n        }\n    }\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const [s0, pe] of Object.entries(syndromes)) {\n        // eslint-disable-next-line no-bitwise\n        const s1Location = (BigInt(s0) ^ BigInt(originalChecksum)).toString();\n        const s1 = syndromes[s1Location];\n        if (s1 !== undefined) {\n            const correctionIndex1 = Math.trunc(pe / 32 /* Constants.finiteFieldOrder */);\n            const correctionIndex2 = Math.trunc(s1 / 32 /* Constants.finiteFieldOrder */);\n            // eslint-disable-next-line functional/no-expression-statements, no-bitwise, functional/immutable-data\n            polynomial[correctionIndex1] ^= pe % 32 /* Constants.finiteFieldOrder */;\n            // eslint-disable-next-line functional/no-expression-statements, no-bitwise, functional/immutable-data\n            polynomial[correctionIndex2] ^= s1 % 32 /* Constants.finiteFieldOrder */;\n            return {\n                address: cashAddressPolynomialToCashAddress(polynomial),\n                corrections: [correctionIndex1, correctionIndex2].sort((a, b) => a - b),\n            };\n        }\n    }\n    return CashAddressFormatCorrectionError.tooManyErrors;\n};\n//# sourceMappingURL=cash-address.js.map","import { sha256 as internalSha256 } from '../crypto/crypto.js';\nimport { unknownValue } from '../format/format.js';\nimport { Base58AddressFormatVersion, decodeBase58Address, encodeBase58AddressFormat, } from './base58-address.js';\nimport { CashAddressEncodingError, CashAddressType, decodeCashAddress, encodeCashAddress, } from './cash-address.js';\n/**\n * The most common address types used on Bitcoin Cash and similar networks. Each\n * address type represents a commonly used locking bytecode pattern.\n *\n * @remarks\n * Addresses are strings that encode information about the network and\n * `lockingBytecode` to which a transaction output can pay.\n *\n * Several address formats exist – `Base58Address` was the format used by the\n * original satoshi client, and is still in use on several active chains (see\n * {@link encodeBase58Address}). On Bitcoin Cash, the `CashAddress` standard is\n * most common (See {@link encodeCashAddress}).\n */\nexport var LockingBytecodeType;\n(function (LockingBytecodeType) {\n    /**\n     * Pay to Public Key (P2PK). This address type is uncommon, and primarily\n     * occurs in early blocks because the original satoshi implementation mined\n     * rewards to P2PK addresses.\n     *\n     * There are no standardized address formats for representing a P2PK address.\n     * Instead, most applications use the `AddressType.p2pkh` format.\n     */\n    LockingBytecodeType[\"p2pk\"] = \"P2PK\";\n    /**\n     * Pay to Public Key Hash (P2PKH). The most common address type. P2PKH\n     * addresses lock funds using a single private key.\n     */\n    LockingBytecodeType[\"p2pkh\"] = \"P2PKH\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20). An address type that locks funds to\n     * the 20-byte hash of a script provided in the spending transaction. See\n     * BIPs 13 and 16 for details.\n     */\n    LockingBytecodeType[\"p2sh20\"] = \"P2SH20\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH32). An address type that locks funds to\n     * the 32-byte hash of a script provided in the spending transaction.\n     */\n    LockingBytecodeType[\"p2sh32\"] = \"P2SH32\";\n})(LockingBytecodeType || (LockingBytecodeType = {}));\nexport const isPayToPublicKeyUncompressed = (lockingBytecode) => lockingBytecode.length === 67 /* PayToPublicKeyUncompressed.length */ &&\n    lockingBytecode[0] === 65 /* Opcodes.OP_PUSHBYTES_65 */ &&\n    lockingBytecode[66 /* PayToPublicKeyUncompressed.lastElement */] ===\n        172 /* Opcodes.OP_CHECKSIG */;\nexport const isPayToPublicKeyCompressed = (lockingBytecode) => lockingBytecode.length === 35 /* PayToPublicKeyCompressed.length */ &&\n    lockingBytecode[0] === 33 /* Opcodes.OP_PUSHBYTES_33 */ &&\n    lockingBytecode[34 /* PayToPublicKeyCompressed.lastElement */] === 172 /* Opcodes.OP_CHECKSIG */;\nexport const isPayToPublicKey = (lockingBytecode) => isPayToPublicKeyCompressed(lockingBytecode) ||\n    isPayToPublicKeyUncompressed(lockingBytecode);\n// eslint-disable-next-line complexity\nexport const isPayToPublicKeyHash = (lockingBytecode) => lockingBytecode.length === 25 /* PayToPublicKeyHash.length */ &&\n    lockingBytecode[0] === 118 /* Opcodes.OP_DUP */ &&\n    lockingBytecode[1] === 169 /* Opcodes.OP_HASH160 */ &&\n    lockingBytecode[2] === 20 /* Opcodes.OP_PUSHBYTES_20 */ &&\n    lockingBytecode[23] === 136 /* Opcodes.OP_EQUALVERIFY */ &&\n    lockingBytecode[24] === 172 /* Opcodes.OP_CHECKSIG */;\nexport const isPayToScriptHash20 = (lockingBytecode) => lockingBytecode.length === 23 /* PayToScriptHash20.length */ &&\n    lockingBytecode[0] === 169 /* Opcodes.OP_HASH160 */ &&\n    lockingBytecode[1] === 20 /* Opcodes.OP_PUSHBYTES_20 */ &&\n    lockingBytecode[22 /* PayToScriptHash20.lastElement */] === 135 /* Opcodes.OP_EQUAL */;\nexport const isPayToScriptHash32 = (lockingBytecode) => lockingBytecode.length === 35 /* PayToScriptHash32.length */ &&\n    lockingBytecode[0] === 170 /* Opcodes.OP_HASH256 */ &&\n    lockingBytecode[1] === 32 /* Opcodes.OP_PUSHBYTES_32 */ &&\n    lockingBytecode[34 /* PayToScriptHash32.lastElement */] === 135 /* Opcodes.OP_EQUAL */;\n/**\n * Attempt to match a lockingBytecode to a standard address type for use in\n * address encoding. (See {@link LockingBytecodeType} for details.)\n *\n * For a locking bytecode matching the Pay to Public Key Hash (P2PKH) pattern,\n * the returned `type` is {@link LockingBytecodeType.p2pkh} and `payload` is the\n * `HASH160` of the public key.\n *\n * For a locking bytecode matching the 20-byte Pay to Script Hash (P2SH20)\n * pattern, the returned `type` is {@link LockingBytecodeType.p2sh20} and\n * `payload` is the `HASH160` of the redeeming bytecode, A.K.A. \"redeem\n * script hash\".\n *\n * For a locking bytecode matching the Pay to Public Key (P2PK) pattern, the\n * returned `type` is {@link LockingBytecodeType.p2pk} and `payload` is the full\n * public key.\n *\n * Any other locking bytecode will return a `type` of\n * {@link LockingBytecodeType.unknown} and a payload of the\n * unmodified `bytecode`.\n *\n * @param bytecode - the locking bytecode to match\n */\n// eslint-disable-next-line complexity\nexport const lockingBytecodeToAddressContents = (bytecode) => {\n    if (isPayToPublicKeyHash(bytecode)) {\n        return {\n            payload: bytecode.slice(3 /* AddressPayload.p2pkhStart */, 23 /* AddressPayload.p2pkhEnd */),\n            type: LockingBytecodeType.p2pkh,\n        };\n    }\n    if (isPayToScriptHash20(bytecode)) {\n        return {\n            payload: bytecode.slice(2 /* AddressPayload.p2sh20Start */, 22 /* AddressPayload.p2sh20End */),\n            type: LockingBytecodeType.p2sh20,\n        };\n    }\n    if (isPayToScriptHash32(bytecode)) {\n        return {\n            payload: bytecode.slice(2 /* AddressPayload.p2sh32Start */, 34 /* AddressPayload.p2sh32End */),\n            type: LockingBytecodeType.p2sh32,\n        };\n    }\n    if (isPayToPublicKeyUncompressed(bytecode)) {\n        return {\n            payload: bytecode.slice(1 /* AddressPayload.p2pkUncompressedStart */, 66 /* AddressPayload.p2pkUncompressedEnd */),\n            type: LockingBytecodeType.p2pk,\n        };\n    }\n    if (isPayToPublicKeyCompressed(bytecode)) {\n        return {\n            payload: bytecode.slice(1 /* AddressPayload.p2pkCompressedStart */, 34 /* AddressPayload.p2pkCompressedEnd */),\n            type: LockingBytecodeType.p2pk,\n        };\n    }\n    return { payload: bytecode.slice(), type: 'unknown' };\n};\n/**\n * Given the 20-byte {@link hash160} of a compressed public key, return a P2PKH\n * locking bytecode:\n * `OP_DUP OP_HASH160 OP_PUSHBYTES_20 publicKeyHash OP_EQUALVERIFY OP_CHECKSIG`.\n *\n * This method does not validate `publicKeyHash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param publicKeyHash - the 20-byte hash of the compressed public key\n * @returns\n */\nexport const encodeLockingBytecodeP2pkh = (publicKeyHash) => Uint8Array.from([\n    118 /* Opcodes.OP_DUP */,\n    169 /* Opcodes.OP_HASH160 */,\n    20 /* Opcodes.OP_PUSHBYTES_20 */,\n    ...publicKeyHash,\n    136 /* Opcodes.OP_EQUALVERIFY */,\n    172 /* Opcodes.OP_CHECKSIG */,\n]);\n/**\n * Given the 20-byte {@link hash160} of a P2SH20 redeem bytecode, encode a\n * P2SH20 locking bytecode:\n * `OP_HASH160 OP_PUSHBYTES_20 redeemBytecodeHash OP_EQUAL`.\n *\n * This method does not validate `p2sh20Hash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param p2sh20Hash - the 20-byte, p2sh20 redeem bytecode hash\n */\nexport const encodeLockingBytecodeP2sh20 = (p2sh20Hash) => Uint8Array.from([\n    169 /* Opcodes.OP_HASH160 */,\n    20 /* Opcodes.OP_PUSHBYTES_20 */,\n    ...p2sh20Hash,\n    135 /* Opcodes.OP_EQUAL */,\n]);\n/**\n * Given the 32-byte {@link hash256} of a P2SH32 redeem bytecode, encode a\n * P2SH32 locking bytecode:\n * `OP_HASH256 OP_PUSHBYTES_32 redeemBytecodeHash OP_EQUAL`.\n *\n * This method does not validate `p2sh32Hash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param p2sh32Hash - the 32-byte, p2sh32 redeem bytecode hash\n */\nexport const encodeLockingBytecodeP2sh32 = (p2sh32Hash) => Uint8Array.from([\n    170 /* Opcodes.OP_HASH256 */,\n    32 /* Opcodes.OP_PUSHBYTES_32 */,\n    ...p2sh32Hash,\n    135 /* Opcodes.OP_EQUAL */,\n]);\n/**\n * Given a 33-byte compressed or 65-byte uncompressed public key, encode a P2PK\n * locking bytecode: `OP_PUSHBYTES_33 publicKey OP_CHECKSIG` or\n * `OP_PUSHBYTES_65 publicKey OP_CHECKSIG`.\n *\n * This method does not validate `publicKey` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param publicKey - the 33-byte or 65-byte public key\n */\nexport const encodeLockingBytecodeP2pk = (publicKey) => publicKey.length === 33 /* AddressPayload.compressedPublicKeyLength */\n    ? Uint8Array.from([\n        33 /* Opcodes.OP_PUSHBYTES_33 */,\n        ...publicKey,\n        172 /* Opcodes.OP_CHECKSIG */,\n    ])\n    : Uint8Array.from([\n        65 /* Opcodes.OP_PUSHBYTES_65 */,\n        ...publicKey,\n        172 /* Opcodes.OP_CHECKSIG */,\n    ]);\n/**\n * Get the locking bytecode for a {@link KnownAddressTypeContents}. See\n * {@link lockingBytecodeToAddressContents} for details.\n *\n * @param addressContents - the `AddressContents` to encode\n */\nexport const addressContentsToLockingBytecode = ({ payload, type, }) => {\n    if (type === LockingBytecodeType.p2pkh) {\n        return encodeLockingBytecodeP2pkh(payload);\n    }\n    if (type === LockingBytecodeType.p2sh20) {\n        return encodeLockingBytecodeP2sh20(payload);\n    }\n    if (type === LockingBytecodeType.p2sh32) {\n        return encodeLockingBytecodeP2sh32(payload);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (type === LockingBytecodeType.p2pk) {\n        return encodeLockingBytecodeP2pk(payload);\n    }\n    return unknownValue(type, `Unrecognized addressContents type:`);\n};\n/**\n * Encode a locking bytecode as a CashAddress.\n *\n * If `bytecode` matches a standard pattern, it is encoded using the proper\n * address type and returned as a {@link CashAddressResult}.\n *\n * If `bytecode` cannot be encoded as an address (i.e. because the pattern is\n * not standard), an error message is returned as a `string`.\n *\n * For the reverse, see {@link cashAddressToLockingBytecode}.\n *\n * Due to the high likelihood of runtime errors in a variety of use cases (e.g.\n * attempting to convert P2PK or arbitrary data outputs to CashAddresses for\n * display in a transaction viewer or block explorer), this function returns\n * encoding errors in a type-safe way (as a `string`) rather than via thrown\n * `Error` objects.\n *\n * For applications in which the input to `lockingBytecodeToCashAddress` is\n * trusted (e.g. the application is encoding an address for self-generated\n * locking bytecode), consider using `assertSuccess` to simplify error handling:\n *\n * ```ts\n * import {\n *   assertSuccess,\n *   lockingBytecodeToCashAddress\n * } from '@bitauth/libauth';\n * import { lockingBytecode, useTheAddress } from './my/app.js';\n *\n * const { address } = assertSuccess(\n *   lockingBytecodeToCashAddress(lockingBytecode)\n * );\n *\n * useTheAddress(address);\n * ```\n *\n * @param bytecode - the locking bytecode to encode\n * @param prefix - the network prefix to use, e.g. `bitcoincash`, `bchtest`, or\n * `bchreg`, defaults to `bitcoincash`\n * @param tokenSupport - If `true`, the address will indicate that the receiver\n * accepts CashTokens; defaults to `false`.\n */\n// eslint-disable-next-line complexity\nexport const lockingBytecodeToCashAddress = ({ prefix = 'bitcoincash', bytecode, tokenSupport = false, }) => {\n    const { payload, type } = lockingBytecodeToAddressContents(bytecode);\n    if (type === LockingBytecodeType.p2pkh) {\n        return tokenSupport\n            ? encodeCashAddress({\n                payload,\n                prefix,\n                throwErrors: false,\n                type: CashAddressType.p2pkhWithTokens,\n            })\n            : encodeCashAddress({\n                payload,\n                prefix,\n                throwErrors: false,\n                type: CashAddressType.p2pkh,\n            });\n    }\n    if (type === LockingBytecodeType.p2sh20 ||\n        type === LockingBytecodeType.p2sh32) {\n        return tokenSupport\n            ? encodeCashAddress({\n                payload,\n                prefix,\n                throwErrors: false,\n                type: CashAddressType.p2shWithTokens,\n            })\n            : encodeCashAddress({\n                payload,\n                prefix,\n                throwErrors: false,\n                type: CashAddressType.p2sh,\n            });\n    }\n    if (type === 'P2PK') {\n        return CashAddressEncodingError.noTypeBitsValueStandardizedForP2pk;\n    }\n    return CashAddressEncodingError.unknownLockingBytecodeType;\n};\n/**\n * Convert a CashAddress to its respective locking bytecode.\n *\n * This method returns the locking bytecode and network prefix. If an error\n * occurs, an error message is returned as a string.\n *\n * For the reverse, see {@link lockingBytecodeToCashAddress}.\n *\n * @param address - the CashAddress to convert\n */\n// eslint-disable-next-line complexity\nexport const cashAddressToLockingBytecode = (address) => {\n    const decoded = decodeCashAddress(address);\n    if (typeof decoded === 'string')\n        return decoded;\n    if (decoded.type === CashAddressType.p2pkh ||\n        decoded.type === CashAddressType.p2pkhWithTokens) {\n        return {\n            bytecode: addressContentsToLockingBytecode({\n                payload: decoded.payload,\n                type: LockingBytecodeType.p2pkh,\n            }),\n            prefix: decoded.prefix,\n            tokenSupport: decoded.type === CashAddressType.p2pkhWithTokens,\n        };\n    }\n    if (decoded.type === CashAddressType.p2sh ||\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        decoded.type === CashAddressType.p2shWithTokens) {\n        return {\n            bytecode: addressContentsToLockingBytecode({\n                payload: decoded.payload,\n                type: decoded.payload.length === 32 /* AddressPayload.p2sh32Length */\n                    ? LockingBytecodeType.p2sh32\n                    : LockingBytecodeType.p2sh20,\n            }),\n            prefix: decoded.prefix,\n            tokenSupport: decoded.type === CashAddressType.p2shWithTokens,\n        };\n    }\n    /* c8 ignore next 2 */\n    return unknownValue(decoded.type);\n};\n/**\n * Encode a locking bytecode as a Base58Address for a given network.\n *\n * If `bytecode` matches a standard pattern, it is encoded using the proper\n * address type and returned as a valid Base58Address (string).\n *\n * If `bytecode` cannot be encoded as an address (i.e. because the pattern is\n * not standard), the resulting {@link AddressContents} is returned.\n *\n * For the reverse, see {@link base58AddressToLockingBytecode}.\n *\n * Note, Base58Addresses cannot accept tokens; to accept tokens,\n * use {@link lockingBytecodeToCashAddress} with `tokenSupport` set\n * to `true`.\n *\n * @param bytecode - the locking bytecode to encode\n * @param network - the network for which to encode the address (`mainnet`,\n * `testnet`, or 'copayBCH'), defaults to `mainnet`\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nexport const lockingBytecodeToBase58Address = (bytecode, network = 'mainnet', sha256 = internalSha256) => {\n    const contents = lockingBytecodeToAddressContents(bytecode);\n    if (contents.type === LockingBytecodeType.p2pkh) {\n        return encodeBase58AddressFormat({\n            copayBCH: Base58AddressFormatVersion.p2pkhCopayBCH,\n            mainnet: Base58AddressFormatVersion.p2pkh,\n            testnet: Base58AddressFormatVersion.p2pkhTestnet,\n        }[network], contents.payload, sha256);\n    }\n    if (contents.type === LockingBytecodeType.p2sh20) {\n        return encodeBase58AddressFormat({\n            copayBCH: Base58AddressFormatVersion.p2sh20CopayBCH,\n            mainnet: Base58AddressFormatVersion.p2sh20,\n            testnet: Base58AddressFormatVersion.p2sh20Testnet,\n        }[network], contents.payload, sha256);\n    }\n    return contents;\n};\n/**\n * Convert a Base58Address to its respective locking bytecode.\n *\n * This method returns the locking bytecode and network version. If an error\n * occurs, an error message is returned as a string.\n *\n * For the reverse, see {@link lockingBytecodeToBase58Address}.\n *\n * @param address - the CashAddress to convert\n */\nexport const base58AddressToLockingBytecode = (address, sha256 = internalSha256) => {\n    const decoded = decodeBase58Address(address, sha256);\n    if (typeof decoded === 'string')\n        return decoded;\n    return {\n        bytecode: addressContentsToLockingBytecode({\n            payload: decoded.payload,\n            type: [\n                Base58AddressFormatVersion.p2pkh,\n                Base58AddressFormatVersion.p2pkhCopayBCH,\n                Base58AddressFormatVersion.p2pkhTestnet,\n            ].includes(decoded.version)\n                ? LockingBytecodeType.p2pkh\n                : LockingBytecodeType.p2sh20,\n        }),\n        version: decoded.version,\n    };\n};\n//# sourceMappingURL=locking-bytecode.js.map","/**\n * The capability assigned to a particular non-fungible token.\n */\nexport var NonFungibleTokenCapability;\n(function (NonFungibleTokenCapability) {\n    /**\n     * No capability, i.e. the token is an **immutable token**.\n     */\n    NonFungibleTokenCapability[\"none\"] = \"none\";\n    /**\n     * The mutable capability (`0x01`), i.e. the token is a **mutable token**.\n     */\n    NonFungibleTokenCapability[\"mutable\"] = \"mutable\";\n    /**\n     * The minting capability (`0x02`), i.e. the token is a **minting token**.\n     */\n    NonFungibleTokenCapability[\"minting\"] = \"minting\";\n})(NonFungibleTokenCapability || (NonFungibleTokenCapability = {}));\n/**\n * The maximum uint64 value – an impossibly large, intentionally invalid value\n * for `valueSatoshis`. See {@link Transaction.valueSatoshis} for details.\n */\n// prettier-ignore\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nexport const excessiveSatoshis = Uint8Array.from([255, 255, 255, 255, 255, 255, 255, 255]);\n//# sourceMappingURL=transaction-types.js.map","import { hash256, sha256 as internalSha256 } from '../crypto/crypto.js';\nimport { bigIntToCompactUint, binToHex, flattenBinArray, formatError, numberToBinUint32LE, readCompactUintMinimal, readItemCount, readMultiple, valueSatoshisToBin, } from '../format/format.js';\nimport { readBytes, readCompactUintPrefixedBin, readRemainingBytes, readUint32LE, readUint64LE, } from './read-components.js';\nimport { NonFungibleTokenCapability } from './transaction-types.js';\n/**\n * Encode a single input for inclusion in an encoded transaction.\n *\n * @param input - the input to encode\n */\nexport const encodeTransactionInput = (input) => flattenBinArray([\n    input.outpointTransactionHash.slice().reverse(),\n    numberToBinUint32LE(input.outpointIndex),\n    bigIntToCompactUint(BigInt(input.unlockingBytecode.length)),\n    input.unlockingBytecode,\n    numberToBinUint32LE(input.sequenceNumber),\n]);\nexport var TransactionDecodingError;\n(function (TransactionDecodingError) {\n    TransactionDecodingError[\"transaction\"] = \"Error reading transaction.\";\n    TransactionDecodingError[\"endsWithUnexpectedBytes\"] = \"Error decoding transaction: the provided input includes unexpected bytes after the encoded transaction.\";\n    TransactionDecodingError[\"input\"] = \"Error reading transaction input.\";\n    TransactionDecodingError[\"inputs\"] = \"Error reading transaction inputs.\";\n    TransactionDecodingError[\"output\"] = \"Error reading transaction output.\";\n    TransactionDecodingError[\"outputs\"] = \"Error reading transaction outputs.\";\n    TransactionDecodingError[\"outputsEndWithUnexpectedBytes\"] = \"Error decoding transaction outputs: the provided serialization includes unexpected bytes after the encoded transaction outputs.\";\n    TransactionDecodingError[\"lockingBytecodeLength\"] = \"Error reading locking bytecode length.\";\n})(TransactionDecodingError || (TransactionDecodingError = {}));\n/**\n * Read a transaction {@link Input} from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Input} and the next {@link ReadPosition}.\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction output\n */\nexport const readTransactionInput = (position) => {\n    const inputRead = readMultiple(position, [\n        readBytes(32 /* TransactionConstants.outpointTransactionHashLength */),\n        readUint32LE,\n        readCompactUintPrefixedBin,\n        readUint32LE,\n    ]);\n    if (typeof inputRead === 'string') {\n        return formatError(TransactionDecodingError.input, inputRead);\n    }\n    const { position: nextPosition, result: [outpointTransactionHash, outpointIndex, unlockingBytecode, sequenceNumber,], } = inputRead;\n    return {\n        position: nextPosition,\n        result: {\n            outpointIndex,\n            outpointTransactionHash: outpointTransactionHash.reverse(),\n            sequenceNumber,\n            unlockingBytecode,\n        },\n    };\n};\n/**\n * Encode a set of {@link Input}s for inclusion in an encoded transaction\n * including the prefixed number of inputs.\n *\n * Format: [CompactUint: input count] [encoded inputs]\n *\n * @param inputs - the set of inputs to encode\n */\nexport const encodeTransactionInputs = (inputs) => flattenBinArray([\n    bigIntToCompactUint(BigInt(inputs.length)),\n    ...inputs.map(encodeTransactionInput),\n]);\n/**\n * Read a set of transaction {@link Input}s beginning at {@link ReadPosition}.\n * A CompactUint will be read to determine the number of inputs, and that\n * number of transaction inputs will be read and returned. Returns either an\n * error message (as a string) or an object containing the array of inputs and\n * the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction inputs\n */\nexport const readTransactionInputs = (position) => {\n    const inputsRead = readItemCount(position, readTransactionInput);\n    if (typeof inputsRead === 'string') {\n        return formatError(TransactionDecodingError.inputs, inputsRead);\n    }\n    return inputsRead;\n};\nconst maximumTokenAmount = 9223372036854775807n;\nexport const nftCapabilityNumberToLabel = [\n    NonFungibleTokenCapability.none,\n    NonFungibleTokenCapability.mutable,\n    NonFungibleTokenCapability.minting,\n];\nexport const nftCapabilityLabelToNumber = {\n    [NonFungibleTokenCapability.none]: 0,\n    [NonFungibleTokenCapability.mutable]: 1,\n    [NonFungibleTokenCapability.minting]: 2,\n};\nexport var CashTokenDecodingError;\n(function (CashTokenDecodingError) {\n    CashTokenDecodingError[\"invalidPrefix\"] = \"Error reading token prefix.\";\n    CashTokenDecodingError[\"insufficientLength\"] = \"Invalid token prefix: insufficient length.\";\n    CashTokenDecodingError[\"reservedBit\"] = \"Invalid token prefix: reserved bit is set.\";\n    CashTokenDecodingError[\"invalidCapability\"] = \"Invalid token prefix: capability must be none (0), mutable (1), or minting (2).\";\n    CashTokenDecodingError[\"commitmentWithoutNft\"] = \"Invalid token prefix: commitment requires an NFT.\";\n    CashTokenDecodingError[\"capabilityWithoutNft\"] = \"Invalid token prefix: capability requires an NFT.\";\n    CashTokenDecodingError[\"commitmentLengthZero\"] = \"Invalid token prefix: if encoded, commitment length must be greater than 0.\";\n    CashTokenDecodingError[\"invalidCommitment\"] = \"Invalid token prefix: invalid non-fungible token commitment.\";\n    CashTokenDecodingError[\"invalidAmountEncoding\"] = \"Invalid token prefix: invalid fungible token amount encoding.\";\n    CashTokenDecodingError[\"zeroAmount\"] = \"Invalid token prefix: if encoded, fungible token amount must be greater than 0.\";\n    CashTokenDecodingError[\"excessiveAmount\"] = \"Invalid token prefix: exceeds maximum fungible token amount of 9223372036854775807.\";\n    CashTokenDecodingError[\"noTokens\"] = \"Invalid token prefix: must encode at least one token.\";\n})(CashTokenDecodingError || (CashTokenDecodingError = {}));\n/**\n * Read a token amount from the provided {@link ReadPosition}, returning either\n * an error message (as a string) or an object containing the value and the next\n * {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * token amount.\n */\nexport const readTokenAmount = (position) => {\n    const amountRead = readCompactUintMinimal(position);\n    if (typeof amountRead === 'string') {\n        return formatError(CashTokenDecodingError.invalidAmountEncoding, amountRead);\n    }\n    if (amountRead.result > maximumTokenAmount) {\n        return formatError(CashTokenDecodingError.excessiveAmount, `Encoded amount: ${amountRead.result}`);\n    }\n    if (amountRead.result === 0n) {\n        return formatError(CashTokenDecodingError.zeroAmount);\n    }\n    return amountRead;\n};\n/**\n * Attempt to read a transaction {@link Output}'s token prefix from the provided\n * {@link ReadPosition}, returning either an error message (as a string) or an\n * object containing the (optional) token information and the\n * next {@link ReadPosition}.\n *\n * Rather than using this function directly, most applications\n * should use {@link readLockingBytecodeWithPrefix}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * token prefix\n */\n// eslint-disable-next-line complexity\nexport const readTokenPrefix = (position) => {\n    const { bin, index } = position;\n    if (bin[index] !== 239 /* CashTokens.PREFIX_TOKEN */) {\n        return { position, result: {} };\n    }\n    if (bin.length < index + 34 /* CashTokens.minimumPrefixLength */) {\n        return formatError(CashTokenDecodingError.insufficientLength, `The minimum possible length is ${34 /* CashTokens.minimumPrefixLength */}. Missing bytes: ${34 /* CashTokens.minimumPrefixLength */ - (bin.length - index)}`);\n    }\n    const category = bin\n        .slice(index + 1, index + 33 /* CashTokens.tokenBitfieldIndex */)\n        .reverse();\n    const tokenBitfield = bin[index + 33 /* CashTokens.tokenBitfieldIndex */]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    /* eslint-disable no-bitwise */\n    const prefixStructure = tokenBitfield & 240 /* CashTokens.tokenFormatMask */;\n    if ((prefixStructure & 128 /* CashTokens.RESERVED_BIT */) !== 0) {\n        return formatError(CashTokenDecodingError.reservedBit, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const nftCapabilityInt = tokenBitfield & 15 /* CashTokens.nftCapabilityMask */;\n    if (nftCapabilityInt > 2 /* CashTokens.maximumCapability */) {\n        return formatError(CashTokenDecodingError.invalidCapability, `Capability value: ${nftCapabilityInt}`);\n    }\n    const capability = nftCapabilityNumberToLabel[nftCapabilityInt]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    const hasNft = (prefixStructure & 32 /* CashTokens.HAS_NFT */) !== 0;\n    const hasCommitmentLength = (prefixStructure & 64 /* CashTokens.HAS_COMMITMENT_LENGTH */) !== 0;\n    if (hasCommitmentLength && !hasNft) {\n        return formatError(CashTokenDecodingError.commitmentWithoutNft, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const hasAmount = (prefixStructure & 16 /* CashTokens.HAS_AMOUNT */) !== 0;\n    /* eslint-enable no-bitwise */\n    const nextPosition = {\n        bin,\n        index: index + 33 /* CashTokens.tokenBitfieldIndex */ + 1,\n    };\n    if (hasNft) {\n        const commitmentRead = hasCommitmentLength\n            ? readCompactUintPrefixedBin(nextPosition)\n            : { position: nextPosition, result: Uint8Array.of() };\n        if (typeof commitmentRead === 'string') {\n            return formatError(CashTokenDecodingError.invalidCommitment, commitmentRead);\n        }\n        if (hasCommitmentLength && commitmentRead.result.length === 0) {\n            return formatError(CashTokenDecodingError.commitmentLengthZero);\n        }\n        const amountRead = hasAmount\n            ? readTokenAmount(commitmentRead.position)\n            : { position: commitmentRead.position, result: 0n };\n        if (typeof amountRead === 'string') {\n            return amountRead;\n        }\n        return {\n            position: amountRead.position,\n            result: {\n                token: {\n                    amount: amountRead.result,\n                    category,\n                    nft: { capability, commitment: commitmentRead.result },\n                },\n            },\n        };\n    }\n    if (capability !== NonFungibleTokenCapability.none) {\n        return formatError(CashTokenDecodingError.capabilityWithoutNft, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    if (!hasAmount) {\n        return formatError(CashTokenDecodingError.noTokens, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const amountRead = readTokenAmount(nextPosition);\n    if (typeof amountRead === 'string') {\n        return amountRead;\n    }\n    return {\n        position: amountRead.position,\n        result: { token: { amount: amountRead.result, category } },\n    };\n};\n/**\n * Read the locking bytecode and token prefix (if present) of a transaction\n * {@link Output}, beginning at the `CompactUint` indicating the\n * combined length.\n * @param position - the {@link ReadPosition} at which to start reading the\n * optional token prefix and locking bytecode\n */\nexport const readLockingBytecodeWithPrefix = (position) => {\n    const bytecodeRead = readCompactUintPrefixedBin(position);\n    if (typeof bytecodeRead === 'string') {\n        return formatError(TransactionDecodingError.lockingBytecodeLength, bytecodeRead);\n    }\n    const { result: contents, position: nextPosition } = bytecodeRead;\n    const contentsRead = readMultiple({ bin: contents, index: 0 }, [\n        readTokenPrefix,\n        readRemainingBytes,\n    ]);\n    if (typeof contentsRead === 'string') {\n        return formatError(CashTokenDecodingError.invalidPrefix, contentsRead);\n    }\n    const { result: [{ token }, lockingBytecode], } = contentsRead;\n    return {\n        position: nextPosition,\n        result: { lockingBytecode, ...(token === undefined ? {} : { token }) },\n    };\n};\n/**\n * Read a transaction {@link Output} from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Output} and the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction output\n */\nexport const readTransactionOutput = (position) => {\n    const outputRead = readMultiple(position, [\n        readUint64LE,\n        readLockingBytecodeWithPrefix,\n    ]);\n    if (typeof outputRead === 'string') {\n        return formatError(TransactionDecodingError.output, outputRead);\n    }\n    const { position: nextPosition, result: [valueSatoshis, { lockingBytecode, token }], } = outputRead;\n    return {\n        position: nextPosition,\n        result: {\n            lockingBytecode,\n            ...(token === undefined ? {} : { token }),\n            valueSatoshis,\n        },\n    };\n};\n/**\n * Given {@link Output.token} data, encode a token prefix.\n *\n * This function does not fail, but returns an empty Uint8Array if the token\n * data does not encode any tokens (even if `token.category` is set).\n *\n * @param token - the token data to encode\n */\n// eslint-disable-next-line complexity\nexport const encodeTokenPrefix = (token) => {\n    if (token === undefined || (token.nft === undefined && token.amount < 1n)) {\n        return Uint8Array.of();\n    }\n    const hasNft = token.nft === undefined ? 0 : 32 /* CashTokens.HAS_NFT */;\n    const capabilityInt = token.nft === undefined\n        ? 0\n        : nftCapabilityLabelToNumber[token.nft.capability];\n    const hasCommitmentLength = token.nft !== undefined && token.nft.commitment.length > 0\n        ? 64 /* CashTokens.HAS_COMMITMENT_LENGTH */\n        : 0;\n    const hasAmount = token.amount > 0n ? 16 /* CashTokens.HAS_AMOUNT */ : 0;\n    const tokenBitfield = \n    // eslint-disable-next-line no-bitwise\n    hasNft | hasCommitmentLength | hasAmount | capabilityInt;\n    return flattenBinArray([\n        Uint8Array.of(239 /* CashTokens.PREFIX_TOKEN */),\n        token.category.slice().reverse(),\n        Uint8Array.of(tokenBitfield),\n        ...(hasCommitmentLength === 0\n            ? []\n            : [\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                bigIntToCompactUint(BigInt(token.nft.commitment.length)),\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                token.nft.commitment,\n            ]),\n        ...(hasAmount === 0 ? [] : [bigIntToCompactUint(token.amount)]),\n    ]);\n};\n/**\n * Encode a single {@link Output} for inclusion in an encoded transaction.\n *\n * @param output - the output to encode\n */\nexport const encodeTransactionOutput = (output) => {\n    const lockingBytecodeField = flattenBinArray([\n        encodeTokenPrefix(output.token),\n        output.lockingBytecode,\n    ]);\n    return flattenBinArray([\n        valueSatoshisToBin(output.valueSatoshis),\n        bigIntToCompactUint(BigInt(lockingBytecodeField.length)),\n        lockingBytecodeField,\n    ]);\n};\n/**\n * Read a set of transaction {@link Output}s beginning at {@link ReadPosition}.\n * A CompactUint will be read to determine the number of outputs, and that\n * number of transaction outputs will be read and returned. Returns either an\n * error message (as a string) or an object containing the array of outputs and\n * the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction outputs\n */\nexport const readTransactionOutputs = (position) => {\n    const outputsRead = readItemCount(position, readTransactionOutput);\n    if (typeof outputsRead === 'string') {\n        return formatError(TransactionDecodingError.outputs, outputsRead);\n    }\n    return outputsRead;\n};\n/**\n * Decode a CompactUint-prefixed series of Transaction {@link Output}s\n * according to the version 1/2 P2P network transaction format.\n *\n * This function verifies that the provided `bin` contains one `CompactUint`\n * followed by the indicated number of serialized transaction outputs with no\n * additional data. To read a transaction from a\n * specific location within a `Uint8Array`, use {@link readTransactionCommon}.\n *\n * For the reverse, see {@link encodeTransactionOutputs}.\n *\n * @param bin - the encoded transaction to decode\n */\nexport const decodeTransactionOutputs = (bin) => {\n    const outputsRead = readTransactionOutputs({ bin, index: 0 });\n    if (typeof outputsRead === 'string') {\n        return outputsRead;\n    }\n    if (outputsRead.position.index !== bin.length) {\n        return formatError(TransactionDecodingError.outputsEndWithUnexpectedBytes, `Last encoded transaction output ends at index ${outputsRead.position.index - 1}, leaving ${bin.length - outputsRead.position.index} remaining byte(s).`);\n    }\n    return outputsRead.result;\n};\n/**\n * Encode a set of {@link Output}s for inclusion in an encoded transaction\n * including the prefixed number of outputs. Note, this encoding differs from\n * {@link encodeTransactionOutputsForSigning} (used for signing serializations).\n *\n * Format: `[CompactUint: output count] [encoded outputs]`\n *\n * For the reverse, see {@link decodeTransactionOutputs}.\n *\n * @param outputs - the set of outputs to encode\n */\nexport const encodeTransactionOutputs = (outputs) => flattenBinArray([\n    bigIntToCompactUint(BigInt(outputs.length)),\n    ...outputs.map(encodeTransactionOutput),\n]);\n/**\n * Read a version 1 or 2 transaction beginning at {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Transaction} and the next {@link ReadPosition}. Rather than using this\n * function directly, most applications should\n * use {@link decodeTransactionCommon}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * {@link TransactionCommon}\n */\nexport const readTransactionCommon = (position) => {\n    const transactionRead = readMultiple(position, [\n        readUint32LE,\n        readTransactionInputs,\n        readTransactionOutputs,\n        readUint32LE,\n    ]);\n    if (typeof transactionRead === 'string') {\n        return formatError(TransactionDecodingError.transaction, transactionRead);\n    }\n    const { position: nextPosition, result: [version, inputs, outputs, locktime], } = transactionRead;\n    return {\n        position: nextPosition,\n        result: { inputs, locktime, outputs, version },\n    };\n};\nexport const readTransaction = readTransactionCommon;\nexport const readTransactionOutputNonTokenAware = (pos) => {\n    const outputRead = readMultiple(pos, [\n        readUint64LE,\n        readCompactUintPrefixedBin,\n    ]);\n    if (typeof outputRead === 'string') {\n        return formatError(TransactionDecodingError.output, outputRead);\n    }\n    const { position: nextPosition, result: [valueSatoshis, lockingBytecode], } = outputRead;\n    return {\n        position: nextPosition,\n        result: { lockingBytecode, valueSatoshis },\n    };\n};\nexport const readTransactionOutputsNonTokenAware = (pos) => {\n    const outputsRead = readItemCount(pos, readTransactionOutputNonTokenAware);\n    if (typeof outputsRead === 'string') {\n        return formatError(TransactionDecodingError.outputs, outputsRead);\n    }\n    return outputsRead;\n};\n/**\n * Read a version 1 or 2 transaction beginning at a {@link ReadPosition} as if\n * CHIP-2022-02-CashTokens were not deployed, returning either an error message\n * (as a string) or an object containing the {@link Transaction} and the next\n * {@link ReadPosition}.\n *\n * This function emulates legacy transaction parsing to test behavior prior to\n * deployment of CHIP-2022-02-CashTokens; most applications should instead\n * use {@link readTransactionCommon}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * {@link TransactionCommon}\n */\nexport const readTransactionNonTokenAware = (position) => {\n    const transactionRead = readMultiple(position, [\n        readUint32LE,\n        readTransactionInputs,\n        readTransactionOutputsNonTokenAware,\n        readUint32LE,\n    ]);\n    if (typeof transactionRead === 'string') {\n        return formatError(TransactionDecodingError.transaction, transactionRead);\n    }\n    const { position: nextPosition, result: [version, inputs, outputs, locktime], } = transactionRead;\n    return {\n        position: nextPosition,\n        result: { inputs, locktime, outputs, version },\n    };\n};\n/**\n * Decode a {@link TransactionCommon} according to the version 1/2 P2P network\n * transaction format.\n *\n * This function verifies that the provided `bin` contains only one transaction\n * and no additional data. To read a transaction from a specific location within\n * a `Uint8Array`, use {@link readTransactionCommon}.\n *\n * For the reverse, see {@link encodeTransactionCommon}.\n *\n * @param bin - the encoded transaction to decode\n */\nexport const decodeTransactionCommon = (bin) => {\n    const transactionRead = readTransactionCommon({ bin, index: 0 });\n    if (typeof transactionRead === 'string') {\n        return transactionRead;\n    }\n    if (transactionRead.position.index !== bin.length) {\n        return formatError(TransactionDecodingError.endsWithUnexpectedBytes, `Encoded transaction ends at index ${transactionRead.position.index - 1}, leaving ${bin.length - transactionRead.position.index} remaining bytes.`);\n    }\n    return transactionRead.result;\n};\nexport const decodeTransactionBCH = decodeTransactionCommon;\nexport const decodeTransaction = decodeTransactionBCH;\n/**\n * Decode a {@link TransactionCommon} from a trusted source according to the\n * version 1/2 P2P network transaction format.\n *\n * Note: this method throws runtime errors when attempting to decode messages\n * which do not properly follow the transaction format. If the input is\n * untrusted, use {@link decodeTransactionCommon}.\n *\n * @param bin - the raw message to decode\n */\nexport const decodeTransactionUnsafeCommon = (bin) => {\n    const result = decodeTransactionCommon(bin);\n    if (typeof result === 'string') {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new Error(result);\n    }\n    return result;\n};\nexport const decodeTransactionUnsafeBCH = decodeTransactionUnsafeCommon;\nexport const decodeTransactionUnsafe = decodeTransactionUnsafeBCH;\n/**\n * Encode a {@link Transaction} using the standard P2P network format. This\n * serialization is also used when computing the transaction's hash (A.K.A.\n * \"transaction ID\" or \"TXID\").\n *\n * For the reverse, see {@link decodeTransactionCommon}.\n */\nexport const encodeTransactionCommon = (tx) => flattenBinArray([\n    numberToBinUint32LE(tx.version),\n    encodeTransactionInputs(tx.inputs),\n    encodeTransactionOutputs(tx.outputs),\n    numberToBinUint32LE(tx.locktime),\n]);\nexport const encodeTransactionBCH = encodeTransactionCommon;\nexport const encodeTransaction = encodeTransactionBCH;\n/**\n * @deprecated use `structuredClone` instead\n */\nexport const cloneTransactionInputsCommon = (inputs) => inputs.map((input) => ({\n    outpointIndex: input.outpointIndex,\n    outpointTransactionHash: input.outpointTransactionHash.slice(),\n    sequenceNumber: input.sequenceNumber,\n    unlockingBytecode: input.unlockingBytecode.slice(),\n}));\n/**\n * @deprecated use `structuredClone` instead\n */\nexport const cloneTransactionOutputsCommon = (outputs) => outputs.map((output) => ({\n    lockingBytecode: output.lockingBytecode.slice(),\n    ...(output.token === undefined\n        ? {}\n        : {\n            token: {\n                amount: output.token.amount,\n                category: output.token.category.slice(),\n                ...(output.token.nft === undefined\n                    ? {}\n                    : {\n                        nft: {\n                            capability: output.token.nft.capability,\n                            commitment: output.token.nft.commitment.slice(),\n                        },\n                    }),\n            },\n        }),\n    valueSatoshis: output.valueSatoshis,\n}));\n/**\n * @deprecated use `structuredClone` instead\n */\nexport const cloneTransactionCommon = (transaction) => ({\n    inputs: cloneTransactionInputsCommon(transaction.inputs),\n    locktime: transaction.locktime,\n    outputs: cloneTransactionOutputsCommon(transaction.outputs),\n    version: transaction.version,\n});\n/**\n * Compute a transaction hash (A.K.A. \"transaction ID\" or \"TXID\") from an\n * encoded transaction in P2P network message order. This is the byte order\n * produced by most sha256 libraries and used by encoded P2P network messages.\n * It is also the byte order produced by `OP_SHA256` and `OP_HASH256` in the\n * virtual machine.\n *\n * @returns the transaction hash in P2P network message byte order\n *\n * @param transaction - the encoded transaction\n * @param sha256 - an implementation of sha256\n */\nexport const hashTransactionP2pOrder = (transaction, sha256 = internalSha256) => hash256(transaction, sha256);\n/**\n * Compute a transaction hash (A.K.A. \"transaction ID\" or \"TXID\") from an\n * encoded transaction in user interface byte order. This is the byte order\n * typically used by block explorers, wallets, and other user interfaces.\n *\n * To return this result as a `string`, use {@link hashTransaction}.\n *\n * @returns the transaction hash in User Interface byte order\n *\n * @param transaction - the encoded transaction\n * @param sha256 - an implementation of sha256\n */\nexport const hashTransactionUiOrder = (transaction, sha256 = internalSha256) => hashTransactionP2pOrder(transaction, sha256).reverse();\n/**\n * Return an encoded {@link Transaction}'s hash/ID as a string in user interface\n * byte order (typically used by wallets and block explorers).\n *\n * To return this result as a `Uint8Array`, use {@link hashTransactionUiOrder}.\n *\n * @param transaction - the encoded transaction\n */\nexport const hashTransaction = (transaction) => binToHex(hashTransactionUiOrder(transaction));\n/**\n * Encode all outpoints in a series of transaction inputs. (For use in\n * {@link hashTransactionOutpoints}.)\n *\n * @param inputs - the series of inputs from which to extract the outpoints\n */\nexport const encodeTransactionOutpoints = (inputs) => flattenBinArray(inputs.map((i) => flattenBinArray([\n    i.outpointTransactionHash.slice().reverse(),\n    numberToBinUint32LE(i.outpointIndex),\n])));\n/**\n * Encode an array of transaction {@link Output}s for use in transaction signing\n * serializations. Note, this encoding differs from\n * {@link encodeTransactionOutputs} (used for encoding full transactions).\n *\n * @param outputs - the array of outputs to encode\n */\nexport const encodeTransactionOutputsForSigning = (outputs) => flattenBinArray(outputs.map(encodeTransactionOutput));\n/**\n * Encode the sequence numbers of an array of transaction inputs for use in\n * transaction signing serializations.\n *\n * @param inputs - the array of inputs from which to extract the sequence\n * numbers\n */\nexport const encodeTransactionInputSequenceNumbersForSigning = (inputs) => flattenBinArray(inputs.map((i) => numberToBinUint32LE(i.sequenceNumber)));\n//# sourceMappingURL=transaction-encoding.js.map","import { hash256, sha256 as internalSha256 } from '../../../crypto/crypto.js';\nimport { bigIntToCompactUint, flattenBinArray, numberToBinUint32LE, valueSatoshisToBin, } from '../../../format/format.js';\nimport { encodeTokenPrefix, encodeTransactionInputSequenceNumbersForSigning, encodeTransactionOutpoints, encodeTransactionOutput, encodeTransactionOutputsForSigning, } from '../../../message/message.js';\n/**\n * A.K.A. `sighash` flags\n */\nexport var SigningSerializationFlag;\n(function (SigningSerializationFlag) {\n    /**\n     * A.K.A. `SIGHASH_ALL`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"allOutputs\"] = 1] = \"allOutputs\";\n    /**\n     * A.K.A `SIGHASH_NONE`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"noOutputs\"] = 2] = \"noOutputs\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"correspondingOutput\"] = 3] = \"correspondingOutput\";\n    /**\n     * A.K.A. `SIGHASH_UTXOS`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"utxos\"] = 32] = \"utxos\";\n    SigningSerializationFlag[SigningSerializationFlag[\"forkId\"] = 64] = \"forkId\";\n    /**\n     * A.K.A `ANYONE_CAN_PAY`/`SIGHASH_ANYONECANPAY`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"singleInput\"] = 128] = \"singleInput\";\n})(SigningSerializationFlag || (SigningSerializationFlag = {}));\n/* eslint-disable no-bitwise, @typescript-eslint/prefer-literal-enum-member */\nexport var SigningSerializationType;\n(function (SigningSerializationType) {\n    SigningSerializationType[SigningSerializationType[\"allOutputs\"] = 65] = \"allOutputs\";\n    SigningSerializationType[SigningSerializationType[\"allOutputsAllUtxos\"] = 97] = \"allOutputsAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"allOutputsSingleInput\"] = 193] = \"allOutputsSingleInput\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutput\"] = 67] = \"correspondingOutput\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutputAllUtxos\"] = 99] = \"correspondingOutputAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutputSingleInput\"] = 195] = \"correspondingOutputSingleInput\";\n    SigningSerializationType[SigningSerializationType[\"noOutputs\"] = 66] = \"noOutputs\";\n    SigningSerializationType[SigningSerializationType[\"noOutputsAllUtxos\"] = 98] = \"noOutputsAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"noOutputsSingleInput\"] = 194] = \"noOutputsSingleInput\";\n})(SigningSerializationType || (SigningSerializationType = {}));\n/* eslint-enable no-bitwise, @typescript-eslint/prefer-literal-enum-member */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SigningSerializationTypeBCH = SigningSerializationType;\nconst match = (type, flag) => \n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n(type[0] & flag) !== 0;\nconst equals = (type, flag) => (type[0] & 31 /* Internal.mask5Bits */) === flag;\nconst shouldSerializeSingleInput = (type) => match(type, SigningSerializationFlag.singleInput);\nconst shouldSerializeCorrespondingOutput = (type) => equals(type, SigningSerializationFlag.correspondingOutput);\nconst shouldSerializeNoOutputs = (type) => equals(type, SigningSerializationFlag.noOutputs);\nconst shouldSerializeUtxos = (type) => match(type, SigningSerializationFlag.utxos);\nconst emptyHash = () => new Uint8Array(32 /* Internal.sha256HashByteLength */).fill(0);\n/**\n * Return the proper `hashPrevouts` value for a given a signing serialization\n * type.\n */\nexport const hashPrevouts = ({ signingSerializationType, transactionOutpoints, }, sha256 = internalSha256) => shouldSerializeSingleInput(signingSerializationType)\n    ? emptyHash()\n    : hash256(transactionOutpoints, sha256);\n/**\n * Return the proper `hashUtxos` value for a given a signing serialization\n * type.\n */\nexport const hashUtxos = ({ signingSerializationType, transactionUtxos, }, sha256 = internalSha256) => shouldSerializeUtxos(signingSerializationType)\n    ? hash256(transactionUtxos, sha256)\n    : Uint8Array.of();\n/**\n * Return the proper `hashSequence` value for a given a signing serialization\n * type.\n */\nexport const hashSequence = ({ signingSerializationType, transactionSequenceNumbers, }, sha256 = internalSha256) => !shouldSerializeSingleInput(signingSerializationType) &&\n    !shouldSerializeCorrespondingOutput(signingSerializationType) &&\n    !shouldSerializeNoOutputs(signingSerializationType)\n    ? hash256(transactionSequenceNumbers, sha256)\n    : emptyHash();\n/**\n * Return the proper `hashOutputs` value for a given a signing serialization\n * type.\n */\nexport const hashOutputs = ({ correspondingOutput, signingSerializationType, transactionOutputs, }, sha256 = internalSha256) => !shouldSerializeCorrespondingOutput(signingSerializationType) &&\n    !shouldSerializeNoOutputs(signingSerializationType)\n    ? hash256(transactionOutputs, sha256)\n    : shouldSerializeCorrespondingOutput(signingSerializationType)\n        ? correspondingOutput === undefined\n            ? emptyHash()\n            : hash256(correspondingOutput, sha256)\n        : emptyHash();\n/**\n * Encode the signature-protected properties of a transaction following the\n * algorithm required by the `signingSerializationType` of a signature.\n *\n * Note: When validating transactions with multiple signatures,\n * performance-critical applications should use a memoized sha256 implementation\n * to avoid re-computing hashes.\n */\nexport const encodeSigningSerializationBCH = ({ correspondingOutput, coveredBytecode, forkId = new Uint8Array([0, 0, 0]), locktime, outpointIndex, outpointTransactionHash, outputTokenPrefix, outputValue, sequenceNumber, signingSerializationType, transactionOutpoints, transactionOutputs, transactionSequenceNumbers, transactionUtxos, version, }, sha256 = internalSha256) => flattenBinArray([\n    numberToBinUint32LE(version),\n    hashPrevouts({ signingSerializationType, transactionOutpoints }, sha256),\n    hashUtxos({ signingSerializationType, transactionUtxos }, sha256),\n    hashSequence({\n        signingSerializationType,\n        transactionSequenceNumbers,\n    }, sha256),\n    outpointTransactionHash.slice().reverse(),\n    numberToBinUint32LE(outpointIndex),\n    outputTokenPrefix,\n    bigIntToCompactUint(BigInt(coveredBytecode.length)),\n    coveredBytecode,\n    outputValue,\n    numberToBinUint32LE(sequenceNumber),\n    hashOutputs({\n        correspondingOutput,\n        signingSerializationType,\n        transactionOutputs,\n    }, sha256),\n    numberToBinUint32LE(locktime),\n    signingSerializationType,\n    forkId,\n]);\n/**\n * Generate the encoded components of a BCH signing serialization from\n * compilation context.\n */\nexport const generateSigningSerializationComponentsBCH = (context) => ({\n    correspondingOutput: context.inputIndex < context.transaction.outputs.length\n        ? encodeTransactionOutput(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        context.transaction.outputs[context.inputIndex])\n        : undefined,\n    locktime: context.transaction.locktime,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    outpointIndex: context.transaction.inputs[context.inputIndex].outpointIndex,\n    outpointTransactionHash: \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.transaction.inputs[context.inputIndex].outpointTransactionHash,\n    outputTokenPrefix: encodeTokenPrefix(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.sourceOutputs[context.inputIndex].token),\n    outputValue: valueSatoshisToBin(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.sourceOutputs[context.inputIndex].valueSatoshis),\n    sequenceNumber: \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.transaction.inputs[context.inputIndex].sequenceNumber,\n    transactionOutpoints: encodeTransactionOutpoints(context.transaction.inputs),\n    transactionOutputs: encodeTransactionOutputsForSigning(context.transaction.outputs),\n    transactionSequenceNumbers: encodeTransactionInputSequenceNumbersForSigning(context.transaction.inputs),\n    transactionUtxos: encodeTransactionOutputsForSigning(context.sourceOutputs),\n    version: context.transaction.version,\n});\n/**\n * Generate the signing serialization for a particular transaction input\n * following the algorithm required by the provided `signingSerializationType`.\n *\n * Note: When validating transactions with multiple signatures,\n * performance-critical applications should use a memoized sha256 implementation\n * to avoid re-computing hashes.\n */\nexport const generateSigningSerializationBCH = (context, { coveredBytecode, signingSerializationType, }, sha256 = internalSha256) => encodeSigningSerializationBCH({\n    ...generateSigningSerializationComponentsBCH(context),\n    coveredBytecode,\n    signingSerializationType,\n}, sha256);\n/**\n * @param signingSerializationType - the 32-bit number indicating the signing\n * serialization algorithm to use\n */\nexport const isLegacySigningSerialization = (signingSerializationType) => {\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const forkValue = signingSerializationType >> 8;\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const newForkValue = (forkValue ^ 0xdead) | 0xff0000;\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const sighashType = (newForkValue << 8) | (signingSerializationType & 0xff);\n    // eslint-disable-next-line no-bitwise\n    return (sighashType & SigningSerializationFlag.forkId) === 0;\n};\n//# sourceMappingURL=signing-serialization.js.map","import { SigningSerializationTypeBCH } from './signing-serialization.js';\n/**\n * Consensus settings for the `BCH_2022_05` instruction set.\n */\nexport var ConsensusCommon;\n(function (ConsensusCommon) {\n    /**\n     * A.K.A. `MAX_SCRIPT_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumBytecodeLength\"] = 10000] = \"maximumBytecodeLength\";\n    /**\n     * A.K.A. `MAX_OP_RETURN_RELAY`, `nMaxDatacarrierBytes`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumDataCarrierBytes\"] = 223] = \"maximumDataCarrierBytes\";\n    /**\n     * A.K.A. `MAX_OPS_PER_SCRIPT`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumOperationCount\"] = 201] = \"maximumOperationCount\";\n    /**\n     * A.K.A. `MAX_STACK_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStackDepth\"] = 1000] = \"maximumStackDepth\";\n    /**\n     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStackItemLength\"] = 520] = \"maximumStackItemLength\";\n    /**\n     * A.K.A. `MAX_STANDARD_VERSION`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardVersion\"] = 2] = \"maximumStandardVersion\";\n    /**\n     * A.K.A. `MAX_TX_IN_SCRIPT_SIG_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardUnlockingBytecodeLength\"] = 1650] = \"maximumStandardUnlockingBytecodeLength\";\n    /**\n     * A.K.A. `MIN_TX_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"minimumTransactionSize\"] = 100] = \"minimumTransactionSize\";\n    /**\n     * A.K.A. `MAX_STANDARD_TX_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardTransactionSize\"] = 100000] = \"maximumStandardTransactionSize\";\n    /**\n     * A.K.A. `MAX_TX_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumTransactionSize\"] = 1000000] = \"maximumTransactionSize\";\n    /**\n     * A.K.A. `MAXIMUM_ELEMENT_SIZE_64_BIT`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumVmNumberLength\"] = 8] = \"maximumVmNumberLength\";\n    // eslint-disable-next-line @typescript-eslint/no-mixed-enums\n    ConsensusCommon[\"minVmNumber\"] = \"-9223372036854775807\";\n    ConsensusCommon[\"maxVmNumber\"] = \"9223372036854775807\";\n    ConsensusCommon[ConsensusCommon[\"schnorrSignatureLength\"] = 64] = \"schnorrSignatureLength\";\n})(ConsensusCommon || (ConsensusCommon = {}));\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SigningSerializationTypesCommon = [\n    SigningSerializationTypeBCH.allOutputs,\n    SigningSerializationTypeBCH.allOutputsSingleInput,\n    SigningSerializationTypeBCH.correspondingOutput,\n    SigningSerializationTypeBCH.correspondingOutputSingleInput,\n    SigningSerializationTypeBCH.noOutputs,\n    SigningSerializationTypeBCH.noOutputsSingleInput,\n];\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SigningSerializationTypesBCH = SigningSerializationTypesCommon;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const ConsensusBCH = ConsensusCommon;\n//# sourceMappingURL=consensus.js.map","import { formatError } from '../../../format/format.js';\nexport var AuthenticationErrorCommon;\n(function (AuthenticationErrorCommon) {\n    AuthenticationErrorCommon[\"calledReserved\"] = \"Program called an unassigned, reserved operation.\";\n    AuthenticationErrorCommon[\"calledReturn\"] = \"Program called an OP_RETURN operation.\";\n    AuthenticationErrorCommon[\"calledUpgradableNop\"] = \"Program called a disallowed upgradable non-operation (OP_NOP1-OP_NOP10).\";\n    AuthenticationErrorCommon[\"checkSequenceUnavailable\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation, but OP_CHECKSEQUENCEVERIFY requires transaction version 2 or higher.\";\n    AuthenticationErrorCommon[\"disabledOpcode\"] = \"Program contains a disabled opcode.\";\n    AuthenticationErrorCommon[\"divisionByZero\"] = \"Program attempted to divide a number by zero.\";\n    AuthenticationErrorCommon[\"emptyAlternateStack\"] = \"Tried to read from an empty alternate stack.\";\n    AuthenticationErrorCommon[\"emptyStack\"] = \"Tried to read from an empty stack.\";\n    AuthenticationErrorCommon[\"exceededMaximumBytecodeLengthLocking\"] = \"The provided locking bytecode exceeds the maximum bytecode length (10,000 bytes).\";\n    AuthenticationErrorCommon[\"exceededMaximumBytecodeLengthUnlocking\"] = \"The provided unlocking bytecode exceeds the maximum bytecode length (10,000 bytes).\";\n    AuthenticationErrorCommon[\"exceededMaximumVmNumberLength\"] = \"Program attempted an OP_BIN2NUM operation on a byte sequence that cannot be encoded within the maximum VM Number length.\";\n    AuthenticationErrorCommon[\"exceededMaximumStackDepth\"] = \"Program exceeded the maximum stack depth (1,000 items).\";\n    AuthenticationErrorCommon[\"exceededMaximumStackItemLength\"] = \"Program attempted to push a stack item that exceeded the maximum stack item length (520 bytes).\";\n    AuthenticationErrorCommon[\"exceededMaximumOperationCount\"] = \"Program exceeded the maximum operation count (201 operations).\";\n    AuthenticationErrorCommon[\"exceedsMaximumMultisigPublicKeyCount\"] = \"Program called an OP_CHECKMULTISIG that exceeds the maximum public key count (20 public keys).\";\n    AuthenticationErrorCommon[\"failedVerify\"] = \"Program failed an OP_VERIFY operation.\";\n    AuthenticationErrorCommon[\"invalidStackIndex\"] = \"Tried to read from an invalid stack index.\";\n    AuthenticationErrorCommon[\"incompatibleLocktimeType\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation with an incompatible locktime type. The transaction locktime and required locktime must both refer to either a block height or a block time.\";\n    AuthenticationErrorCommon[\"incompatibleSequenceType\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation with an incompatible sequence type flag. The input sequence number and required sequence number must both use the same sequence locktime type.\";\n    AuthenticationErrorCommon[\"insufficientLength\"] = \"Program called an OP_NUM2BIN operation with an insufficient byte length to re-encode the provided number.\";\n    AuthenticationErrorCommon[\"insufficientPublicKeys\"] = \"Program called an OP_CHECKMULTISIG operation that requires signatures from more public keys than are provided.\";\n    AuthenticationErrorCommon[\"invalidNaturalNumber\"] = \"Invalid input: the key/signature count inputs for OP_CHECKMULTISIG require a natural number (n > 0).\";\n    AuthenticationErrorCommon[\"invalidProtocolBugValue\"] = \"The OP_CHECKMULTISIG protocol bug value must be a VM Number 0 (to comply with the \\\"NULLDUMMY\\\" rule).\";\n    AuthenticationErrorCommon[\"invalidPublicKeyEncoding\"] = \"Encountered an improperly encoded public key.\";\n    AuthenticationErrorCommon[\"invalidVmNumber\"] = \"Invalid input: this operation requires a valid VM Number.\";\n    AuthenticationErrorCommon[\"invalidSignatureEncoding\"] = \"Encountered an improperly encoded signature.\";\n    AuthenticationErrorCommon[\"invalidSplitIndex\"] = \"Program called an OP_SPLIT operation with an invalid index.\";\n    AuthenticationErrorCommon[\"invalidTransactionInputIndex\"] = \"Program attempted to read from an invalid transaction input index.\";\n    AuthenticationErrorCommon[\"invalidTransactionOutputIndex\"] = \"Program attempted to read from an invalid transaction output index.\";\n    AuthenticationErrorCommon[\"invalidTransactionUtxoIndex\"] = \"Program attempted to read from an invalid transaction UTXO index.\";\n    AuthenticationErrorCommon[\"locktimeDisabled\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation, but locktime is disabled for this transaction.\";\n    AuthenticationErrorCommon[\"mismatchedBitwiseOperandLength\"] = \"Program attempted a bitwise operation on operands of different lengths.\";\n    AuthenticationErrorCommon[\"malformedLockingBytecode\"] = \"The provided locking bytecode is malformed.\";\n    AuthenticationErrorCommon[\"malformedP2shBytecode\"] = \"Redeem bytecode was malformed prior to P2SH evaluation.\";\n    AuthenticationErrorCommon[\"malformedPush\"] = \"Program must be long enough to push the requested number of bytes.\";\n    AuthenticationErrorCommon[\"malformedUnlockingBytecode\"] = \"The provided unlocking bytecode is malformed.\";\n    AuthenticationErrorCommon[\"negativeLocktime\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY or OP_CHECKSEQUENCEVERIFY operation with a negative locktime.\";\n    AuthenticationErrorCommon[\"nonEmptyControlStack\"] = \"The active bytecode completed with a non-empty control stack (missing `OP_ENDIF`).\";\n    AuthenticationErrorCommon[\"nonMinimalPush\"] = \"Push operations must use the smallest possible encoding.\";\n    AuthenticationErrorCommon[\"nonNullSignatureFailure\"] = \"Program failed a signature verification with a non-null signature (violating the \\\"NULLFAIL\\\" rule).\";\n    AuthenticationErrorCommon[\"overflowsVmNumberRange\"] = \"Program attempted an arithmetic operation which exceeds the range of VM Numbers.\";\n    AuthenticationErrorCommon[\"requiresCleanStack\"] = \"Program completed with an unexpected number of items on the stack (must be exactly 1).\";\n    AuthenticationErrorCommon[\"requiresPushOnly\"] = \"Unlocking bytecode may contain only push operations.\";\n    AuthenticationErrorCommon[\"schnorrSizedSignatureInCheckMultiSig\"] = \"Program used a schnorr-sized signature (65 bytes) in an OP_CHECKMULTISIG operation.\";\n    AuthenticationErrorCommon[\"unexpectedElse\"] = \"Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block.\";\n    AuthenticationErrorCommon[\"unexpectedEndIf\"] = \"Encountered an OP_ENDIF that is not following a matching OP_IF.\";\n    AuthenticationErrorCommon[\"unknownOpcode\"] = \"Called an unknown opcode.\";\n    AuthenticationErrorCommon[\"unmatchedSequenceDisable\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation requiring the disable flag, but the input's sequence number is missing the disable flag.\";\n    AuthenticationErrorCommon[\"unsatisfiedLocktime\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation that requires a locktime greater than the transaction's locktime.\";\n    AuthenticationErrorCommon[\"unsatisfiedSequenceNumber\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation that requires a sequence number greater than the input's sequence number.\";\n    AuthenticationErrorCommon[\"unsuccessfulEvaluation\"] = \"Unsuccessful evaluation: completed with a non-truthy value on top of the stack.\";\n})(AuthenticationErrorCommon || (AuthenticationErrorCommon = {}));\n/**\n * Applies the `error` to a `state`.\n *\n * @remarks\n * If the state already has an error, this method does not override it.\n * (Evaluation should end after the first encountered error, so further errors\n * aren't relevant.)\n */\nexport const applyError = (state, errorType, errorDetails) => ({\n    ...state,\n    error: state.error ?? formatError(errorType, errorDetails),\n});\n//# sourceMappingURL=errors.js.map","/**\n * The `BCH_2023_05` instruction set.\n */\nexport var OpcodesBCH2023;\n(function (OpcodesBCH2023) {\n    /**\n     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    /**\n     * A.K.A. `OP_TRUE`\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SPLIT\"] = 127] = \"OP_SPLIT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NUM2BIN\"] = 128] = \"OP_NUM2BIN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_BIN2NUM\"] = 129] = \"OP_BIN2NUM\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKDATASIG\"] = 186] = \"OP_CHECKDATASIG\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_CHECKDATASIGVERIFY\"] = 187] = \"OP_CHECKDATASIGVERIFY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_REVERSEBYTES\"] = 188] = \"OP_REVERSEBYTES\";\n    /**\n     * First codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    /**\n     * Last codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_INPUTINDEX\"] = 192] = \"OP_INPUTINDEX\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_ACTIVEBYTECODE\"] = 193] = \"OP_ACTIVEBYTECODE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TXVERSION\"] = 194] = \"OP_TXVERSION\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TXINPUTCOUNT\"] = 195] = \"OP_TXINPUTCOUNT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TXOUTPUTCOUNT\"] = 196] = \"OP_TXOUTPUTCOUNT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_TXLOCKTIME\"] = 197] = \"OP_TXLOCKTIME\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOVALUE\"] = 198] = \"OP_UTXOVALUE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOBYTECODE\"] = 199] = \"OP_UTXOBYTECODE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPOINTTXHASH\"] = 200] = \"OP_OUTPOINTTXHASH\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPOINTINDEX\"] = 201] = \"OP_OUTPOINTINDEX\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_INPUTBYTECODE\"] = 202] = \"OP_INPUTBYTECODE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_INPUTSEQUENCENUMBER\"] = 203] = \"OP_INPUTSEQUENCENUMBER\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTVALUE\"] = 204] = \"OP_OUTPUTVALUE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTBYTECODE\"] = 205] = \"OP_OUTPUTBYTECODE\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOTOKENCATEGORY\"] = 206] = \"OP_UTXOTOKENCATEGORY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOTOKENCOMMITMENT\"] = 207] = \"OP_UTXOTOKENCOMMITMENT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UTXOTOKENAMOUNT\"] = 208] = \"OP_UTXOTOKENAMOUNT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTTOKENCATEGORY\"] = 209] = \"OP_OUTPUTTOKENCATEGORY\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTTOKENCOMMITMENT\"] = 210] = \"OP_OUTPUTTOKENCOMMITMENT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_OUTPUTTOKENAMOUNT\"] = 211] = \"OP_OUTPUTTOKENAMOUNT\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    /**\n     * A.K.A. `OP_PREFIX_BEGIN`\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    /**\n     * A.K.A. `OP_PREFIX_END`\n     */\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN250\"] = 250] = \"OP_UNKNOWN250\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN251\"] = 251] = \"OP_UNKNOWN251\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN253\"] = 253] = \"OP_UNKNOWN253\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN254\"] = 254] = \"OP_UNKNOWN254\";\n    OpcodesBCH2023[OpcodesBCH2023[\"OP_UNKNOWN255\"] = 255] = \"OP_UNKNOWN255\";\n})(OpcodesBCH2023 || (OpcodesBCH2023 = {}));\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const OpcodesBCH = OpcodesBCH2023;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Opcodes = OpcodesBCH;\n//# sourceMappingURL=bch-2023-opcodes.js.map","import { isPayToPublicKey, isPayToPublicKeyHash, isPayToScriptHash20, isPayToScriptHash32, } from '../../../address/address.js';\nimport { binToHex, flattenBinArray, numberToBinUint16LE, numberToBinUint32LE, } from '../../../format/format.js';\nimport { encodeTransactionOutput } from '../../../message/message.js';\nimport { OpcodesBCH } from '../bch/2023/bch-2023-opcodes.js';\nimport { OpcodesBTC } from '../btc/btc-opcodes.js';\n/**\n * A type-guard that checks if the provided instruction is malformed.\n * @param instruction - the instruction to check\n */\nexport const authenticationInstructionIsMalformed = (instruction) => 'malformed' in instruction;\n/**\n * A type-guard that checks if the final instruction in the provided array of\n * instructions is malformed. (Only the final instruction can be malformed.)\n * @param instructions - the array of instructions to check\n */\nexport const authenticationInstructionsAreMalformed = (instructions) => instructions.length > 0 &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    authenticationInstructionIsMalformed(instructions[instructions.length - 1]);\nexport const authenticationInstructionsArePushInstructions = (instructions) => instructions.every((instruction) => 'data' in instruction);\nconst uint8Bytes = 1;\nconst uint16Bytes = 2;\nconst uint32Bytes = 4;\n/**\n * Read a little endian number of `length` from the provided\n * {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading\n * @param length - the length of the little endian number to read\n */\nexport const readLittleEndianNumber = (position, length) => {\n    const view = new DataView(position.bin.buffer, position.index, length);\n    const readAsLittleEndian = true;\n    return length === uint8Bytes\n        ? view.getUint8(0)\n        : length === uint16Bytes\n            ? view.getUint16(0, readAsLittleEndian)\n            : view.getUint32(0, readAsLittleEndian);\n};\n/**\n * Returns the number of bytes used to indicate the length of the push in this\n * operation.\n * @param opcode - an opcode between 0x00 and 0xff\n */\nexport const opcodeToPushLength = (opcode) => ({\n    [76 /* CommonPushOpcodes.OP_PUSHDATA_1 */]: uint8Bytes,\n    [77 /* CommonPushOpcodes.OP_PUSHDATA_2 */]: uint16Bytes,\n    [78 /* CommonPushOpcodes.OP_PUSHDATA_4 */]: uint32Bytes,\n})[opcode] ?? 0;\n/**\n * Decode one virtual machine bytecode instruction from the\n * provided {@link ReadPosition}.\n *\n * Returns an object with an `instruction` referencing a\n * {@link AuthenticationInstructionMaybeMalformed} and the next position.\n *\n * If the next index is greater than or equal to the length of the bytecode, the\n * bytecode has been fully decoded.\n *\n * The final {@link AuthenticationInstructionMaybeMalformed} in the bytecode may\n * be malformed if 1) the final operation is a push and 2) too few bytes remain\n * for the push operation to complete.\n *\n * @param position - the {@link ReadPosition} at which to start reading\n */\n// eslint-disable-next-line complexity\nexport const readAuthenticationInstruction = (position) => {\n    const { bin, index } = position;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const opcode = bin[index];\n    if (opcode > 78 /* CommonPushOpcodes.OP_PUSHDATA_4 */) {\n        return {\n            instruction: { opcode },\n            position: { bin, index: index + 1 },\n        };\n    }\n    const lengthBytes = opcodeToPushLength(opcode);\n    if (lengthBytes !== 0 && index + lengthBytes >= bin.length) {\n        const sliceStart = index + 1;\n        const sliceEnd = sliceStart + lengthBytes;\n        return {\n            instruction: {\n                expectedLengthBytes: lengthBytes,\n                length: bin.slice(sliceStart, sliceEnd),\n                malformed: true,\n                opcode,\n            },\n            position: { bin, index: sliceEnd },\n        };\n    }\n    const dataBytes = lengthBytes === 0\n        ? opcode\n        : readLittleEndianNumber({ bin, index: index + 1 }, lengthBytes);\n    const dataStart = index + 1 + lengthBytes;\n    const dataEnd = dataStart + dataBytes;\n    return {\n        instruction: {\n            data: bin.slice(dataStart, dataEnd),\n            ...(dataEnd > bin.length\n                ? { expectedDataBytes: dataEnd - dataStart, malformed: true }\n                : undefined),\n            opcode,\n        },\n        position: { bin, index: dataEnd },\n    };\n};\n/**\n * @param instruction - the {@link AuthenticationInstruction} to clone.\n * @returns A copy of the provided {@link AuthenticationInstruction}.\n *\n * @deprecated use `structuredClone` instead\n */\nexport const cloneAuthenticationInstruction = (instruction) => ({\n    ...('data' in instruction ? { data: instruction.data } : {}),\n    opcode: instruction.opcode,\n});\n/**\n * Decode authentication virtual machine bytecode (`lockingBytecode` or\n * `unlockingBytecode`) into {@link AuthenticationInstructionsMaybeMalformed}.\n * The method {@link authenticationInstructionsAreMalformed} can be used to\n * check if these instructions include a malformed instruction. If not, they are\n * valid {@link AuthenticationInstructions}.\n *\n * @param bytecode - the authentication virtual machine bytecode to decode\n */\nexport const decodeAuthenticationInstructions = (bytecode) => {\n    const instructions = [];\n    // eslint-disable-next-line functional/no-let\n    let i = 0;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (i < bytecode.length) {\n        const { instruction, position } = readAuthenticationInstruction({\n            bin: bytecode,\n            index: i,\n        });\n        // eslint-disable-next-line functional/no-expression-statements\n        i = position.index;\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        instructions.push(instruction);\n    }\n    return instructions;\n};\n/**\n * OP_0 is the only single-word push. All other push instructions will\n * disassemble to multiple ASM words. (OP_1-OP_16 are handled like normal\n * operations.)\n */\nconst isMultiWordPush = (opcode) => opcode !== 0 /* CommonPushOpcodes.OP_0 */;\nconst formatAsmPushHex = (data) => data.length > 0 ? `0x${binToHex(data)}` : '';\nconst formatMissingBytesAsm = (missing) => `[missing ${missing} byte${missing === 1 ? '' : 's'}]`;\nconst hasMalformedLength = (instruction) => 'length' in instruction;\nconst isPushData = (pushOpcode) => pushOpcode >= 76 /* CommonPushOpcodes.OP_PUSHDATA_1 */;\n/**\n * Disassemble a malformed authentication instruction into a string description.\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the {@link AuthenticationInstructionMalformed} to\n * disassemble\n */\nexport const disassembleAuthenticationInstructionMalformed = (opcodes, instruction) => `${opcodes[instruction.opcode] ?? 'OP_UNKNOWN'} ${hasMalformedLength(instruction)\n    ? `${formatAsmPushHex(instruction.length)}${formatMissingBytesAsm(instruction.expectedLengthBytes - instruction.length.length)}`\n    : `${isPushData(instruction.opcode)\n        ? `${instruction.expectedDataBytes} `\n        : ''}${formatAsmPushHex(instruction.data)}${formatMissingBytesAsm(instruction.expectedDataBytes - instruction.data.length)}`}`;\n/**\n * Disassemble a properly-formed authentication instruction into a string\n * description.\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the instruction to disassemble\n */\nexport const disassembleAuthenticationInstruction = (opcodes, instruction) => `${opcodes[instruction.opcode] ?? 'OP_UNKNOWN'}${'data' in instruction && isMultiWordPush(instruction.opcode)\n    ? ` ${isPushData(instruction.opcode) ? `${instruction.data.length} ` : ''}${formatAsmPushHex(instruction.data)}`\n    : ''}`;\n/**\n * Disassemble a single {@link AuthenticationInstructionMaybeMalformed} into its\n * ASM representation.\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the instruction to disassemble\n */\nexport const disassembleAuthenticationInstructionMaybeMalformed = (opcodes, instruction) => authenticationInstructionIsMalformed(instruction)\n    ? disassembleAuthenticationInstructionMalformed(opcodes, instruction)\n    : disassembleAuthenticationInstruction(opcodes, instruction);\n/**\n * Disassemble an array of {@link AuthenticationInstructionMaybeMalformed}\n * (including potentially malformed instructions) into its ASM representation.\n *\n * This method supports disassembling an array including multiple\n * {@link AuthenticationInstructionMaybeMalformed}s, rather than the more\n * constrained {@link AuthenticationInstructionsMaybeMalformed} (may only\n * include one malformed instruction as the last item in the array).\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instructions - the array of instructions to disassemble\n */\nexport const disassembleAuthenticationInstructionsMaybeMalformed = (opcodes, instructions) => instructions\n    .map((instruction) => disassembleAuthenticationInstructionMaybeMalformed(opcodes, instruction))\n    .join(' ');\n/**\n * Disassemble authentication bytecode into a lossless ASM representation. (All\n * push operations are represented with the same opcodes used in the bytecode,\n * even when non-minimally encoded.)\n *\n * For the reverse, see {@link assembleBytecode}.\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param bytecode - the authentication bytecode to disassemble\n */\nexport const disassembleBytecode = (opcodes, bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(opcodes, decodeAuthenticationInstructions(bytecode));\n/**\n * Disassemble BCH authentication bytecode into its ASM representation.\n *\n * Note, this method automatically uses the latest BCH instruction set. To\n * manually select an instruction set, use {@link disassembleBytecode}.\n *\n * For the reverse, see {@link assembleBytecodeBCH}.\n *\n * @param bytecode - the virtual machine bytecode to disassemble\n */\nexport const disassembleBytecodeBCH = (bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(OpcodesBCH, decodeAuthenticationInstructions(bytecode));\n/**\n * Disassemble BTC authentication bytecode into its ASM representation.\n *\n * Note, this method automatically uses the latest BTC instruction set. To\n * manually select an instruction set, use {@link disassembleBytecode}.\n *\n * For the reverse, see {@link assembleBytecodeBTC}.\n *\n * @param bytecode - the virtual machine bytecode to disassemble\n */\nexport const disassembleBytecodeBTC = (bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(OpcodesBTC, decodeAuthenticationInstructions(bytecode));\n/**\n * Create an object where each key is an opcode identifier and each value is\n * the bytecode value (`Uint8Array`) it represents.\n * @param opcodes - An opcode enum, e.g. {@link OpcodesBCH}\n */\nexport const generateBytecodeMap = (opcodes) => Object.entries(opcodes)\n    .filter((entry) => typeof entry[1] === 'number')\n    .reduce((identifiers, pair) => ({\n    ...identifiers,\n    [pair[0]]: Uint8Array.of(pair[1]),\n}), {});\nconst getInstructionLengthBytes = (instruction) => {\n    const { opcode } = instruction;\n    const expectedLength = opcodeToPushLength(opcode);\n    return expectedLength === uint8Bytes\n        ? Uint8Array.of(instruction.data.length)\n        : expectedLength === uint16Bytes\n            ? numberToBinUint16LE(instruction.data.length)\n            : numberToBinUint32LE(instruction.data.length);\n};\n/**\n * Re-encode a valid authentication instruction.\n * @param instruction - the instruction to encode\n */\nexport const encodeAuthenticationInstruction = (instruction) => Uint8Array.from([\n    instruction.opcode,\n    ...('data' in instruction\n        ? [\n            ...(isPushData(instruction.opcode)\n                ? getInstructionLengthBytes(instruction)\n                : []),\n            ...instruction.data,\n        ]\n        : []),\n]);\n/**\n * Re-encode a malformed authentication instruction.\n * @param instruction - the {@link AuthenticationInstructionMalformed} to encode\n */\nexport const encodeAuthenticationInstructionMalformed = (instruction) => {\n    const { opcode } = instruction;\n    if (hasMalformedLength(instruction)) {\n        return Uint8Array.from([opcode, ...instruction.length]);\n    }\n    if (isPushData(opcode)) {\n        return Uint8Array.from([\n            opcode,\n            ...(opcode === 76 /* CommonPushOpcodes.OP_PUSHDATA_1 */\n                ? Uint8Array.of(instruction.expectedDataBytes)\n                : opcode === 77 /* CommonPushOpcodes.OP_PUSHDATA_2 */\n                    ? numberToBinUint16LE(instruction.expectedDataBytes)\n                    : numberToBinUint32LE(instruction.expectedDataBytes)),\n            ...instruction.data,\n        ]);\n    }\n    return Uint8Array.from([opcode, ...instruction.data]);\n};\n/**\n * Re-encode a potentially-malformed authentication instruction.\n * @param instruction - the {@link AuthenticationInstructionMaybeMalformed}\n * to encode\n */\nexport const encodeAuthenticationInstructionMaybeMalformed = (instruction) => authenticationInstructionIsMalformed(instruction)\n    ? encodeAuthenticationInstructionMalformed(instruction)\n    : encodeAuthenticationInstruction(instruction);\n/**\n * Re-encode an array of valid authentication instructions.\n * @param instructions - the array of valid instructions to encode\n */\nexport const encodeAuthenticationInstructions = (instructions) => flattenBinArray(instructions.map(encodeAuthenticationInstruction));\n/**\n * Re-encode an array of potentially-malformed authentication instructions.\n * @param instructions - the array of\n * {@link AuthenticationInstructionMaybeMalformed}s to encode\n */\nexport const encodeAuthenticationInstructionsMaybeMalformed = (instructions) => flattenBinArray(instructions.map(encodeAuthenticationInstructionMaybeMalformed));\nexport var VmNumberError;\n(function (VmNumberError) {\n    VmNumberError[\"outOfRange\"] = \"Failed to decode VM Number: overflows VM Number range.\";\n    VmNumberError[\"requiresMinimal\"] = \"Failed to decode VM Number: the number is not minimally-encoded.\";\n})(VmNumberError || (VmNumberError = {}));\nexport const isVmNumberError = (value) => value === VmNumberError.outOfRange || value === VmNumberError.requiresMinimal;\nconst typicalMaximumVmNumberByteLength = 8;\n/**\n * This method attempts to decode a VM Number, a format in which numeric values\n * are represented on the stack. (The Satoshi implementation calls this\n * `CScriptNum`.)\n *\n * If `bytes` is a valid VM Number, this method returns the represented number\n * in BigInt format. If `bytes` is not valid, a {@link VmNumberError}\n * is returned.\n *\n * All common operations accepting numeric parameters or pushing numeric values\n * to the stack currently use the VM Number format. The binary format of numbers\n * wouldn't be important if they could only be operated on by arithmetic\n * operators, but since the results of these operations may become input to\n * other operations (e.g. hashing), the specific representation is consensus-\n * critical.\n *\n * For the reverse, see {@link bigIntToVmNumber}.\n *\n * @param bytes - a Uint8Array from the stack\n */\n// eslint-disable-next-line complexity\nexport const vmNumberToBigInt = (bytes, { maximumVmNumberByteLength = typicalMaximumVmNumberByteLength, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: typicalMaximumVmNumberByteLength,\n    requireMinimalEncoding: true,\n}) => {\n    if (bytes.length === 0) {\n        return 0n;\n    }\n    if (bytes.length > maximumVmNumberByteLength) {\n        return VmNumberError.outOfRange;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const mostSignificantByte = bytes[bytes.length - 1];\n    const secondMostSignificantByte = bytes[bytes.length - 1 - 1];\n    const allButTheSignBit = 127;\n    const justTheSignBit = 128;\n    if (requireMinimalEncoding &&\n        // eslint-disable-next-line no-bitwise\n        (mostSignificantByte & allButTheSignBit) === 0 &&\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n        (bytes.length <= 1 || (secondMostSignificantByte & justTheSignBit) === 0)) {\n        return VmNumberError.requiresMinimal;\n    }\n    const bitsPerByte = 8;\n    const signFlippingByte = 0x80;\n    // eslint-disable-next-line functional/no-let\n    let result = 0n;\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let byte = 0; byte < bytes.length; byte++) {\n        // eslint-disable-next-line functional/no-expression-statements,  no-bitwise, @typescript-eslint/no-non-null-assertion\n        result |= BigInt(bytes[byte]) << BigInt(byte * bitsPerByte);\n    }\n    /* eslint-disable no-bitwise */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const isNegative = (bytes[bytes.length - 1] & signFlippingByte) !== 0;\n    return isNegative\n        ? -(result &\n            ~(BigInt(signFlippingByte) << BigInt(bitsPerByte * (bytes.length - 1))))\n        : result;\n    /* eslint-enable no-bitwise */\n};\n/**\n * Convert a BigInt into the VM Number format. See {@link vmNumberToBigInt} for\n * more information.\n *\n * For the reverse, use {@link vmNumberToBigInt}.\n *\n * @param integer - the BigInt to encode as a VM Number\n */\n// eslint-disable-next-line complexity\nexport const bigIntToVmNumber = (integer) => {\n    if (integer === 0n) {\n        return new Uint8Array();\n    }\n    const bytes = [];\n    const isNegative = integer < 0;\n    const byteStates = 0xff;\n    const bitsPerByte = 8;\n    // eslint-disable-next-line functional/no-let\n    let remaining = isNegative ? -integer : integer;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (remaining > 0) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data, no-bitwise\n        bytes.push(Number(remaining & BigInt(byteStates)));\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise\n        remaining >>= BigInt(bitsPerByte);\n    }\n    const signFlippingByte = 0x80;\n    // eslint-disable-next-line no-bitwise, functional/no-conditional-statements, @typescript-eslint/no-non-null-assertion\n    if ((bytes[bytes.length - 1] & signFlippingByte) > 0) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        bytes.push(isNegative ? signFlippingByte : 0x00);\n        // eslint-disable-next-line functional/no-conditional-statements\n    }\n    else if (isNegative) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data, no-bitwise\n        bytes[bytes.length - 1] |= signFlippingByte;\n    }\n    return new Uint8Array(bytes);\n};\n/**\n * Returns true if the provided stack item is \"truthy\" in the sense required\n * by several operations (anything but zero and \"negative zero\").\n *\n * The Satoshi implementation calls this method `CastToBool`.\n *\n * To cast a boolean value to a stack item (VM number),\n * use {@link booleanToVmNumber}.\n *\n * @param item - the stack item to check for truthiness\n */\nexport const stackItemIsTruthy = (item) => {\n    const signFlippingByte = 0x80;\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < item.length; i++) {\n        if (item[i] !== 0) {\n            if (i === item.length - 1 && item[i] === signFlippingByte) {\n                return false;\n            }\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Convert a boolean into VM Number format (the type used to express\n * boolean values emitted by several operations).\n *\n * For the less-strict inverse used by the VM, see {@link stackItemIsTruthy}.\n *\n * @param value - the boolean value to convert\n */\nexport const booleanToVmNumber = (value) => value ? bigIntToVmNumber(1n) : bigIntToVmNumber(0n);\n/**\n * From C++ implementation:\n * Note that IsPushOnly() *does* consider OP_RESERVED to be a push-type\n * opcode, however execution of OP_RESERVED fails, so it's not relevant to\n * P2SH/BIP62 as the scriptSig would fail prior to the P2SH special\n * validation code being executed.\n */\nexport const isPushOperation = (opcode) => opcode <= 96 /* Opcodes.OP_16 */;\nexport const isPushOnly = (bytecode) => {\n    const instructions = decodeAuthenticationInstructions(bytecode);\n    return instructions.every((instruction) => isPushOperation(instruction.opcode));\n};\nexport const isPushOnlyAccurate = (bytecode) => {\n    const instructions = decodeAuthenticationInstructions(bytecode);\n    return (!authenticationInstructionsAreMalformed(instructions) &&\n        authenticationInstructionsArePushInstructions(instructions));\n};\n/**\n * Test if the provided locking bytecode is an arbitrary data output (A.K.A.\n * `TX_NULL_DATA`, \"data carrier\", or OP_RETURN output).\n * @param lockingBytecode - the locking bytecode to test\n */\nexport const isArbitraryDataOutput = (lockingBytecode) => lockingBytecode.length >= 1 &&\n    lockingBytecode[0] === 106 /* Opcodes.OP_RETURN */ &&\n    isPushOnly(lockingBytecode.slice(1));\n/**\n * Given a number of bytes and a fee rate in satoshis-per-kilobyte, return the\n * minimum required fee. This calculation is important for standardness in dust\n * threshold calculation.\n *\n * @param length - the number of bytes for which the fee is to be paid\n * @param feeRateSatsPerKb - the fee rate in satoshis per 1000 bytes\n */\nexport const getMinimumFee = (length, feeRateSatsPerKb) => {\n    if (length < 1n)\n        return 0n;\n    const truncated = (length * feeRateSatsPerKb) / BigInt(1000 /* Dust.bytesPerKb */);\n    return truncated === 0n ? 1n : truncated;\n};\n/**\n * Given an encoded output length, return the minimum output value in satoshis\n * required to exceed the dust threshold. See {@link getDustThreshold}\n * for details.\n *\n * Most applications should instead use {@link getDustThreshold} to ensure\n * proper encoding and proper treatment of arbitrary data outputs\n * ({@link isArbitraryDataOutput}).\n *\n * @param outputLength - the length of the serialized output\n * @param dustRelayFeeSatPerKb - the \"dust relay fee\", defaults to `1000n`\n */\nexport const getDustThresholdForLength = (outputLength, dustRelayFeeSatPerKb = BigInt(1000 /* Dust.standardDustRelayFee */)) => {\n    const expectedTotalLength = outputLength + 148 /* Dust.p2pkhInputLength */;\n    return (BigInt(3 /* Dust.minimumFeeMultiple */) *\n        getMinimumFee(BigInt(expectedTotalLength), dustRelayFeeSatPerKb));\n};\n/**\n * Given an {@link Output} and (optionally) a dust relay fee in\n * satoshis-per-kilobyte, return the minimum satoshi value for this output to\n * not be considered a \"dust output\". **For nodes to relay or mine a transaction\n * with this output, the output must have a satoshi value greater than or equal\n * to this threshold.**\n *\n * By standardness, if an output is expected to cost more than 1/3 of it's value\n * in fees to spend, it is considered dust. When calculating the expected fee,\n * the input size is assumed to be (at least) the size of a typical P2PKH input\n * spent using a 72-byte ECDSA signature, 148 bytes:\n * - Outpoint transaction hash: 32 bytes\n * - Outpoint index: 4 bytes\n * - Unlocking bytecode length: 1 byte\n * - Push of 72-byte ECDSA signature: 72 + 1 byte\n * - Push of public key: 33 + 1 byte\n * - Sequence number: 4 bytes\n *\n * The encoded length of the serialized output is added to 148 bytes, and the\n * dust threshold for the output is 3 times the minimum fee for the total bytes.\n * For a P2PKH output (34 bytes) and the standard 1000 sat/Kb dust relay fee,\n * this results in a dust limit of `546` satoshis (`(34+148)*3*1000/1000`).\n *\n * Note, arbitrary data outputs are not required to meet the dust limit as\n * they are provably unspendable and can be pruned from the UTXO set.\n *\n * @param output - the output to test\n * @param dustRelayFeeSatPerKb - the \"dust relay fee\", defaults to `1000n`\n */\nexport const getDustThreshold = (output, dustRelayFeeSatPerKb = BigInt(1000 /* Dust.standardDustRelayFee */)) => {\n    if (isArbitraryDataOutput(output.lockingBytecode)) {\n        return 0n;\n    }\n    const encodedOutputLength = encodeTransactionOutput(output).length;\n    return getDustThresholdForLength(encodedOutputLength, dustRelayFeeSatPerKb);\n};\n/**\n * Given an {@link Output} and (optionally) a dust relay fee in\n * satoshis-per-kilobyte, return `true` if the provided output is considered\n * a \"dust output\", or `false` otherwise.\n *\n * @param output - the output to test\n * @param dustRelayFeeSatPerKb - the \"dust relay fee\", defaults to `1000n`\n */\nexport const isDustOutput = (output, dustRelayFeeSatPerKb = BigInt(1000 /* Dust.standardDustRelayFee */)) => output.valueSatoshis < getDustThreshold(output, dustRelayFeeSatPerKb);\nexport const isValidUncompressedPublicKeyEncoding = (publicKey) => publicKey.length === 65 /* PublicKey.uncompressedByteLength */ &&\n    publicKey[0] === 4 /* PublicKey.uncompressedHeaderByte */;\nexport const isValidCompressedPublicKeyEncoding = (publicKey) => publicKey.length === 33 /* PublicKey.compressedByteLength */ &&\n    (publicKey[0] === 2 /* PublicKey.compressedHeaderByteEven */ ||\n        publicKey[0] === 3 /* PublicKey.compressedHeaderByteOdd */);\nexport const isValidPublicKeyEncoding = (publicKey) => isValidCompressedPublicKeyEncoding(publicKey) ||\n    isValidUncompressedPublicKeyEncoding(publicKey);\n// eslint-disable-next-line complexity\nexport const pushNumberOpcodeToNumber = (opcode) => {\n    if (opcode === 0 /* Opcodes.OP_0 */) {\n        return 0;\n    }\n    if (opcode === 79 /* Opcodes.OP_1NEGATE */) {\n        return -1;\n    }\n    if (!Number.isInteger(opcode) ||\n        opcode < 81 /* Opcodes.OP_1 */ ||\n        opcode > 96 /* Opcodes.OP_16 */) {\n        return false;\n    }\n    return opcode - 80 /* Opcodes.OP_RESERVED */;\n};\n// eslint-disable-next-line complexity\nexport const isSimpleMultisig = (lockingBytecode) => {\n    const instructions = decodeAuthenticationInstructions(lockingBytecode);\n    if (authenticationInstructionsAreMalformed(instructions)) {\n        return false;\n    }\n    const lastIndex = instructions.length - 1;\n    if (instructions.length < 4 /* Multisig.minimumInstructions */ ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        instructions[lastIndex].opcode !== 174 /* Opcodes.OP_CHECKMULTISIG */) {\n        return false;\n    }\n    /**\n     * The required count of signers (the `m` in `m-of-n`).\n     */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const m = pushNumberOpcodeToNumber(instructions[0].opcode);\n    /**\n     * The total count of signers (the `n` in `m-of-n`).\n     */\n    const n = pushNumberOpcodeToNumber(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    instructions[lastIndex - 1].opcode);\n    if (n === false || m === false) {\n        return false;\n    }\n    const publicKeyInstructions = instructions.slice(1 /* Multisig.keyStart */, -2 /* Multisig.keyEnd */);\n    if (!authenticationInstructionsArePushInstructions(publicKeyInstructions)) {\n        return false;\n    }\n    const publicKeys = publicKeyInstructions.map((instruction) => instruction.data);\n    if (publicKeys.some((key) => !isValidPublicKeyEncoding(key))) {\n        return false;\n    }\n    return { m, n, publicKeys };\n};\n// eslint-disable-next-line complexity\nexport const isStandardMultisig = (lockingBytecode) => {\n    const multisigProperties = isSimpleMultisig(lockingBytecode);\n    if (multisigProperties === false) {\n        return false;\n    }\n    const { m, n } = multisigProperties;\n    if (n < 1 || n > 3 /* Multisig.maximumStandardN */ || m < 1 || m > n) {\n        return false;\n    }\n    return true;\n};\nexport const isStandardOutputBytecode = (lockingBytecode) => isPayToPublicKeyHash(lockingBytecode) ||\n    isPayToScriptHash20(lockingBytecode) ||\n    isPayToPublicKey(lockingBytecode) ||\n    isArbitraryDataOutput(lockingBytecode) ||\n    isStandardMultisig(lockingBytecode);\n// eslint-disable-next-line complexity\nexport const isStandardOutputBytecode2023 = (lockingBytecode) => isPayToPublicKeyHash(lockingBytecode) ||\n    isPayToScriptHash20(lockingBytecode) ||\n    isPayToScriptHash32(lockingBytecode) ||\n    isPayToPublicKey(lockingBytecode) ||\n    isArbitraryDataOutput(lockingBytecode) ||\n    isStandardMultisig(lockingBytecode);\n/**\n * Test a stack item for the SegWit Recovery Rules activated in `BCH_2019_05`.\n *\n * @param bytecode - the stack item to test\n */\n// eslint-disable-next-line complexity\nexport const isWitnessProgram = (bytecode) => {\n    const correctLength = bytecode.length >= 4 /* SegWit.minimumLength */ &&\n        bytecode.length <= 42 /* SegWit.maximumLength */;\n    const validVersionPush = bytecode[0] === 0 /* SegWit.OP_0 */ ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        (bytecode[0] >= 81 /* SegWit.OP_1 */ && bytecode[0] <= 96 /* SegWit.OP_16 */);\n    const correctLengthByte = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    bytecode[1] + 2 /* SegWit.versionAndLengthBytes */ === bytecode.length;\n    return correctLength && validVersionPush && correctLengthByte;\n};\n//# sourceMappingURL=instruction-sets-utils.js.map","import { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { bigIntToVmNumber, isVmNumberError, vmNumberToBigInt, } from './instruction-sets-utils.js';\nexport const incrementOperationCount = (operation) => (state) => {\n    const nextState = operation(state);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    nextState.operationCount += 1;\n    return nextState;\n};\nexport const conditionallyEvaluate = (operation) => (state) => state.controlStack.every((item) => item) ? operation(state) : state;\n/**\n * Map a function over each operation in an {@link InstructionSet.operations}\n * object, assigning the result to the same `opcode` in the resulting object.\n * @param operationMap - an operations map from an {@link InstructionSet}\n * @param combinators - a list of functions to apply (in order) to\n * each operation\n */\nexport const mapOverOperations = (combinators, operationMap) => Object.keys(operationMap).reduce((result, opcode) => ({\n    ...result,\n    [opcode]: combinators.reduce((op, combinator) => combinator(op), \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    operationMap[Number(opcode)]),\n}), {});\n/**\n * Pop one stack item off of `state.stack` and provide that item to `operation`.\n */\nexport const useOneStackItem = (state, operation) => {\n    // eslint-disable-next-line functional/immutable-data\n    const item = state.stack.pop();\n    if (item === undefined) {\n        return applyError(state, AuthenticationErrorCommon.emptyStack);\n    }\n    return operation(state, [item]);\n};\nexport const useTwoStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueTwo]) => useOneStackItem(nextState, (lastState, [valueTop]) => operation(lastState, [valueTop, valueTwo])));\nexport const useThreeStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueThree]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree])));\nexport const useFourStackItems = (state, operation) => useTwoStackItems(state, (nextState, [valueThree, valueFour]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree, valueFour])));\nexport const useSixStackItems = (state, operation) => useFourStackItems(state, (nextState, [valueThree, valueFour, valueFive, valueSix]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [\n    valueTop,\n    valueTwo,\n    valueThree,\n    valueFour,\n    valueFive,\n    valueSix,\n])));\nconst typicalMaximumVmNumberByteLength = 8;\nexport const useOneVmNumber = (state, operation, { maximumVmNumberByteLength = typicalMaximumVmNumberByteLength, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: typicalMaximumVmNumberByteLength,\n    requireMinimalEncoding: true,\n}) => useOneStackItem(state, (nextState, [item]) => {\n    const value = vmNumberToBigInt(item, {\n        maximumVmNumberByteLength,\n        requireMinimalEncoding,\n    });\n    if (isVmNumberError(value)) {\n        return applyError(state, AuthenticationErrorCommon.invalidVmNumber);\n    }\n    return operation(nextState, [value]);\n});\nexport const useTwoVmNumbers = (state, operation, { maximumVmNumberByteLength = typicalMaximumVmNumberByteLength, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: typicalMaximumVmNumberByteLength,\n    requireMinimalEncoding: true,\n}) => useOneVmNumber(state, (nextState, [secondValue]) => useOneVmNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue]), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n}), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n});\nexport const useThreeVmNumbers = (state, operation, { maximumVmNumberByteLength = typicalMaximumVmNumberByteLength, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: typicalMaximumVmNumberByteLength,\n    requireMinimalEncoding: true,\n}) => useTwoVmNumbers(state, (nextState, [secondValue, thirdValue]) => useOneVmNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue, thirdValue]), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n}), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n});\n/**\n * Return the provided state with the provided value pushed to its stack.\n * @param state - the state to update and return\n * @param data - the value to push to the stack\n */\nexport const pushToStack = (state, \n// eslint-disable-next-line functional/functional-parameters\n...data) => {\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.stack.push(...data);\n    return state;\n};\n/**\n * If the provided item exceeds the maximum stack item length, apply an error.\n * Otherwise, return the provided state with the item pushed to its stack.\n * @param state - the state to update and return\n * @param item - the value to push to the stack\n */\nexport const pushToStackChecked = (state, item, maximumLength = ConsensusCommon.maximumStackItemLength) => {\n    if (item.length > maximumLength) {\n        return applyError(state, `${AuthenticationErrorCommon.exceededMaximumStackItemLength} Item length: ${item.length} bytes.`);\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.stack.push(item);\n    return state;\n};\n/**\n * Return the provided state with the VM number pushed to its stack.\n * @param state - the state to update and return\n * @param vmNumber - the number to push to the stack\n */\nexport const pushToStackVmNumber = (state, vmNumber) => pushToStack(state, bigIntToVmNumber(vmNumber));\n/**\n * If the provided number is outside the VM number range, apply an error.\n * Otherwise, return the provided state with the VM number pushed to its stack.\n * @param state - the state to update and return\n * @param vmNumber - the VM number to push to the stack\n */\nexport const pushToStackVmNumberChecked = (state, vmNumber, { minVmNumber = BigInt(ConsensusCommon.minVmNumber), maxVmNumber = BigInt(ConsensusCommon.maxVmNumber), } = {}) => {\n    if (vmNumber > maxVmNumber || vmNumber < minVmNumber) {\n        return applyError(state, AuthenticationErrorCommon.overflowsVmNumberRange);\n    }\n    return pushToStackVmNumber(state, vmNumber);\n};\nexport const combineOperations = (firstOperation, secondOperation) => (state) => secondOperation(firstOperation(state));\n//# sourceMappingURL=combinators.js.map","import { useOneStackItem } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { stackItemIsTruthy } from './instruction-sets-utils.js';\nexport const opVerify = (state) => useOneStackItem(state, (nextState, [item]) => stackItemIsTruthy(item)\n    ? nextState\n    : applyError(nextState, AuthenticationErrorCommon.failedVerify));\nexport const reservedOperation = (state) => applyError(state, AuthenticationErrorCommon.calledReserved);\nexport const opReturn = (state) => applyError(state, AuthenticationErrorCommon.calledReturn);\nexport const opIf = (state) => {\n    if (state.controlStack.every((item) => item)) {\n        return useOneStackItem(state, (nextState, [item]) => {\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            nextState.controlStack.push(stackItemIsTruthy(item));\n            return state;\n        });\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.controlStack.push(false);\n    return state;\n};\n/**\n * Note, `OP_NOTIF` is not completely equivalent to `OP_NOT OP_IF`. `OP_NOT`\n * operates on a VM Number (as the inverse of `OP_0NOTEQUAL`), while `OP_NOTIF`\n * checks the \"truthy-ness\" of a stack item like `OP_IF`.\n */\nexport const opNotIf = (state) => {\n    if (state.controlStack.every((item) => item)) {\n        return useOneStackItem(state, (nextState, [item]) => {\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            nextState.controlStack.push(!stackItemIsTruthy(item));\n            return state;\n        });\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.controlStack.push(false);\n    return state;\n};\nexport const opEndIf = (state) => {\n    // eslint-disable-next-line functional/immutable-data\n    const element = state.controlStack.pop();\n    if (element === undefined) {\n        return applyError(state, AuthenticationErrorCommon.unexpectedEndIf);\n    }\n    return state;\n};\nexport const opElse = (state) => {\n    const top = state.controlStack[state.controlStack.length - 1];\n    if (top === undefined) {\n        return applyError(state, AuthenticationErrorCommon.unexpectedElse);\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.controlStack[state.controlStack.length - 1] = !top;\n    return state;\n};\n//# sourceMappingURL=flow-control.js.map","import { combineOperations, pushToStack, pushToStackVmNumberChecked, useOneVmNumber, useThreeVmNumbers, useTwoVmNumbers, } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { opVerify } from './flow-control.js';\nimport { bigIntToVmNumber, booleanToVmNumber, } from './instruction-sets-utils.js';\nexport const op1Add = (state) => useOneVmNumber(state, (nextState, [value]) => pushToStackVmNumberChecked(nextState, value + 1n));\nexport const op1Sub = (state) => useOneVmNumber(state, (nextState, [value]) => pushToStack(nextState, bigIntToVmNumber(value - 1n)));\nexport const opNegate = (state) => useOneVmNumber(state, (nextState, [value]) => pushToStack(nextState, bigIntToVmNumber(-value)));\nexport const opAbs = (state) => useOneVmNumber(state, (nextState, [value]) => pushToStack(nextState, bigIntToVmNumber(value < 0 ? -value : value)));\nexport const opNot = (state) => useOneVmNumber(state, (nextState, [value]) => pushToStack(nextState, value === 0n ? bigIntToVmNumber(1n) : bigIntToVmNumber(0n)));\nexport const op0NotEqual = (state) => useOneVmNumber(state, (nextState, [value]) => pushToStack(nextState, value === 0n ? bigIntToVmNumber(0n) : bigIntToVmNumber(1n)));\nexport const opAdd = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStackVmNumberChecked(nextState, firstValue + secondValue));\nexport const opSub = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, bigIntToVmNumber(firstValue - secondValue)));\nexport const opBoolAnd = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, booleanToVmNumber(firstValue !== 0n && secondValue !== 0n)));\nexport const opBoolOr = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, booleanToVmNumber(firstValue !== 0n || secondValue !== 0n)));\nexport const opNumEqual = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, booleanToVmNumber(firstValue === secondValue)));\nexport const opNumEqualVerify = combineOperations(opNumEqual, opVerify);\nexport const opNumNotEqual = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, booleanToVmNumber(firstValue !== secondValue)));\nexport const opLessThan = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, booleanToVmNumber(firstValue < secondValue)));\nexport const opLessThanOrEqual = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, booleanToVmNumber(firstValue <= secondValue)));\nexport const opGreaterThan = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, booleanToVmNumber(firstValue > secondValue)));\nexport const opGreaterThanOrEqual = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, booleanToVmNumber(firstValue >= secondValue)));\nexport const opMin = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, bigIntToVmNumber(firstValue < secondValue ? firstValue : secondValue)));\nexport const opMax = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStack(nextState, bigIntToVmNumber(firstValue > secondValue ? firstValue : secondValue)));\nexport const opWithin = (state) => useThreeVmNumbers(state, (nextState, [firstValue, secondValue, thirdValue]) => pushToStack(nextState, booleanToVmNumber(secondValue <= firstValue && firstValue < thirdValue)));\nexport const opMul = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => pushToStackVmNumberChecked(nextState, firstValue * secondValue));\nexport const opDiv = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => secondValue === 0n\n    ? applyError(nextState, AuthenticationErrorCommon.divisionByZero)\n    : pushToStack(nextState, bigIntToVmNumber(firstValue / secondValue)));\nexport const opMod = (state) => useTwoVmNumbers(state, (nextState, [firstValue, secondValue]) => secondValue === 0n\n    ? applyError(nextState, AuthenticationErrorCommon.divisionByZero)\n    : pushToStack(nextState, bigIntToVmNumber(firstValue % secondValue)));\n//# sourceMappingURL=arithmetic.js.map","import { binsAreEqual } from '../../../format/format.js';\nimport { combineOperations, pushToStack, useTwoStackItems, } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { opVerify } from './flow-control.js';\nimport { booleanToVmNumber } from './instruction-sets-utils.js';\nexport const opEqual = (state) => useTwoStackItems(state, (nextState, [element1, element2]) => pushToStack(nextState, booleanToVmNumber(binsAreEqual(element1, element2))));\nexport const opEqualVerify = combineOperations(opEqual, opVerify);\nexport const bitwiseOperation = (combine) => (state) => useTwoStackItems(state, (nextState, [a, b]) => a.length === b.length\n    ? pushToStack(nextState, combine(a, b))\n    : applyError(nextState, AuthenticationErrorCommon.mismatchedBitwiseOperandLength));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nexport const opAnd = bitwiseOperation((a, b) => a.map((v, i) => v & b[i]));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nexport const opOr = bitwiseOperation((a, b) => a.map((v, i) => v | b[i]));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nexport const opXor = bitwiseOperation((a, b) => a.map((v, i) => v ^ b[i]));\n//# sourceMappingURL=bitwise.js.map","import { cloneTransactionCommon, cloneTransactionOutputsCommon, } from '../../../message/message.js';\nimport { conditionallyEvaluate } from './combinators.js';\nimport { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { cloneAuthenticationInstruction } from './instruction-sets-utils.js';\nexport const undefinedOperation = conditionallyEvaluate((state) => applyError(state, AuthenticationErrorCommon.unknownOpcode));\nexport const checkLimitsCommon = (operation) => (state) => {\n    const nextState = operation(state);\n    return nextState.stack.length + nextState.alternateStack.length >\n        ConsensusCommon.maximumStackDepth\n        ? applyError(nextState, AuthenticationErrorCommon.exceededMaximumStackDepth)\n        : nextState.operationCount > ConsensusCommon.maximumOperationCount\n            ? applyError(nextState, AuthenticationErrorCommon.exceededMaximumOperationCount)\n            : nextState;\n};\n/**\n * @deprecated use `structuredClone` instead\n */\nexport const cloneStack = (stack) => stack.map((item) => item.slice());\nexport const createAuthenticationProgramStateCommon = ({ program, instructions, stack, }) => ({\n    alternateStack: [],\n    controlStack: [],\n    instructions,\n    ip: 0,\n    lastCodeSeparator: -1,\n    operationCount: 0,\n    program,\n    signatureOperationsCount: 0,\n    signedMessages: [],\n    stack,\n});\n/**\n * @deprecated use `structuredClone` instead\n */\nexport const cloneAuthenticationProgramCommon = (program) => ({\n    inputIndex: program.inputIndex,\n    sourceOutputs: cloneTransactionOutputsCommon(program.sourceOutputs),\n    transaction: cloneTransactionCommon(program.transaction),\n});\n/**\n * @deprecated use `structuredClone` instead\n */\nexport const cloneAuthenticationProgramStateCommon = (state) => ({\n    ...(state.error === undefined ? {} : { error: state.error }),\n    alternateStack: cloneStack(state.alternateStack),\n    controlStack: state.controlStack.slice(),\n    instructions: state.instructions.map(cloneAuthenticationInstruction),\n    ip: state.ip,\n    lastCodeSeparator: state.lastCodeSeparator,\n    operationCount: state.operationCount,\n    program: cloneAuthenticationProgramCommon(state.program),\n    signatureOperationsCount: state.signatureOperationsCount,\n    signedMessages: state.signedMessages.map((item) => ({\n        digest: item.digest.slice(),\n        ...('serialization' in item\n            ? { serialization: item.serialization.slice() }\n            : { message: item.message.slice() }),\n    })),\n    stack: cloneStack(state.stack),\n});\n/**\n * @deprecated use `structuredClone` instead\n */\nexport const cloneAuthenticationProgramStateBCH = cloneAuthenticationProgramStateCommon;\n/**\n * @deprecated use `structuredClone` instead\n */\nexport const cloneAuthenticationProgramState = cloneAuthenticationProgramStateBCH;\nconst sha256HashLength = 32;\n/**\n * This is a meaningless but complete {@link CompilationContextCommon} that uses\n * a default value for each property. This is useful for testing\n * and debugging.\n */\n// eslint-disable-next-line complexity\nexport const createCompilationContextCommonTesting = ({ sourceOutputs, inputs, locktime, version, outputs, } = {}) => ({\n    inputIndex: 0,\n    sourceOutputs: sourceOutputs\n        ? sourceOutputs\n        : [\n            {\n                lockingBytecode: Uint8Array.from([]),\n                valueSatoshis: 0xffffffffffffffffn,\n            },\n        ],\n    transaction: {\n        inputs: inputs\n            ? inputs\n            : [\n                {\n                    outpointIndex: 0,\n                    outpointTransactionHash: new Uint8Array(sha256HashLength).fill(1),\n                    sequenceNumber: 0,\n                    unlockingBytecode: undefined,\n                },\n            ],\n        locktime: locktime ?? 0,\n        outputs: outputs ?? [\n            {\n                lockingBytecode: Uint8Array.from([]),\n                valueSatoshis: 0xffffffffffffffffn,\n            },\n        ],\n        version: version ?? 0,\n    },\n});\n//# sourceMappingURL=common-types.js.map","import { ConsensusCommon } from './consensus.js';\nconst isNegative = (value) => \n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n(value & 128 /* Mask.negative */) !== 0;\nconst hasUnnecessaryPadding = (length, firstByte, secondByte) => length > 1 && firstByte === 0 && !isNegative(secondByte);\nconst isValidInteger = (signature, tagIndex, length, valueIndex) => signature[tagIndex] === 2 /* ASN1.integerTagType */ &&\n    length !== 0 &&\n    !isNegative(signature[valueIndex]) &&\n    !hasUnnecessaryPadding(length, signature[valueIndex], signature[valueIndex + 1]);\n/**\n * Validate a DER-encoded signature.\n *\n * @remarks\n * This function is consensus-critical since BIP66, but differs from the BIP66\n * specification in that it does not validate the existence of a signing\n * serialization type byte at the end of the signature (to support\n * OP_CHECKDATASIG). To validate a bitcoin-encoded signature (including null\n * signatures), use {@link isValidSignatureEncodingBCHTransaction}.\n *\n * @privateRemarks\n * From the Bitcoin ABC C++ implementation:\n *\n * Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n * total-length: 1-byte length descriptor of everything that follows,\n * excluding the sighash byte.\n * R-length: 1-byte length descriptor of the R value that follows.\n * R: arbitrary-length big-endian encoded R value. It must use the\n * shortest possible encoding for a positive integers (which means no null\n * bytes at the start, except a single one when the next byte has its highest\n * bit set).\n * S-length: 1-byte length descriptor of the S value that follows.\n * S: arbitrary-length big-endian encoded S value. The same rules apply.\n */\n// eslint-disable-next-line complexity\nexport const isValidSignatureEncodingDER = (signature) => {\n    const correctLengthRange = signature.length > 8 /* DER.minimumLength */ &&\n        signature.length < 72 /* DER.maximumLength */;\n    const correctSequenceTagType = signature[0 /* DER.sequenceTagIndex */] === 48 /* ASN1.sequenceTagType */;\n    const correctSequenceLength = signature[1 /* DER.sequenceLengthIndex */] ===\n        signature.length - 2 /* DER.sequenceMetadataBytes */;\n    const rLength = signature[3 /* DER.rLengthIndex */];\n    if (rLength === undefined) {\n        return false;\n    }\n    const consistentRLength = rLength <= signature.length - 7 /* DER.minimumNonRValueBytes */;\n    const rIsValid = isValidInteger(signature, 2 /* DER.rTagIndex */, rLength, 4 /* DER.rValueIndex */);\n    const sTagIndex = 4 /* DER.rValueIndex */ + rLength;\n    const sLengthIndex = sTagIndex + 1;\n    const sLength = signature[sLengthIndex];\n    if (sLength === undefined) {\n        return false;\n    }\n    const sValueIndex = sLengthIndex + 1;\n    const consistentSLength = sValueIndex + sLength === signature.length;\n    const sIsValid = isValidInteger(signature, sTagIndex, sLength, sValueIndex);\n    return (correctLengthRange &&\n        correctSequenceTagType &&\n        correctSequenceLength &&\n        consistentRLength &&\n        rIsValid &&\n        consistentSLength &&\n        sIsValid);\n};\n/**\n * Validate the encoding of a transaction signature, including a signing\n * serialization type byte (A.K.A. \"sighash\" byte).\n *\n * @param transactionSignature - the full transaction signature\n */\nexport const isValidSignatureEncodingBCHTransaction = (transactionSignature, validSigningSerializationTypes) => transactionSignature.length === 0 ||\n    (validSigningSerializationTypes.includes(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    transactionSignature[transactionSignature.length - 1]) &&\n        (transactionSignature.length ===\n            ConsensusCommon.schnorrSignatureLength + 1 ||\n            isValidSignatureEncodingDER(transactionSignature.slice(0, transactionSignature.length - 1))));\n/**\n * Split a bitcoin-encoded signature into a signature and signing serialization\n * type.\n *\n * While a bitcoin-encoded signature only includes a single byte to encode the\n * signing serialization type, a 3-byte forkId can be appended to the signing\n * serialization to provide replay-protection between different forks. (See\n * Bitcoin Cash's Replay Protected Sighash spec for details.)\n *\n * @param encodedSignature - a signature that passes\n * {@link isValidSignatureEncodingBCHTransaction}\n */\nexport const decodeBitcoinSignature = (encodedSignature) => ({\n    signature: encodedSignature.slice(0, -1),\n    signingSerializationType: encodedSignature.slice(-1),\n});\n//# sourceMappingURL=encoding.js.map","import { hash256, ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha1 as internalSha1, sha256 as internalSha256, } from '../../../crypto/crypto.js';\nimport { binToHex } from '../../../format/format.js';\nimport { combineOperations, pushToStack, useOneStackItem, useOneVmNumber, useThreeStackItems, useTwoStackItems, } from './combinators.js';\nimport { ConsensusCommon, SigningSerializationTypesBCH } from './consensus.js';\nimport { decodeBitcoinSignature, isValidSignatureEncodingBCHTransaction, isValidSignatureEncodingDER, } from './encoding.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { opVerify } from './flow-control.js';\nimport { booleanToVmNumber, encodeAuthenticationInstructions, isValidPublicKeyEncoding, } from './instruction-sets-utils.js';\nimport { generateSigningSerializationBCH } from './signing-serialization.js';\nexport const opRipemd160 = ({ ripemd160, } = { ripemd160: internalRipemd160 }) => (state) => useOneStackItem(state, (nextState, [value]) => pushToStack(nextState, ripemd160.hash(value)));\nexport const opSha1 = ({ sha1, } = { sha1: internalSha1 }) => (state) => useOneStackItem(state, (nextState, [value]) => pushToStack(nextState, sha1.hash(value)));\nexport const opSha256 = ({ sha256, } = { sha256: internalSha256 }) => (state) => useOneStackItem(state, (nextState, [value]) => pushToStack(nextState, sha256.hash(value)));\nexport const opHash160 = ({ ripemd160, sha256, } = { ripemd160: internalRipemd160, sha256: internalSha256 }) => (state) => useOneStackItem(state, (nextState, [value]) => pushToStack(nextState, ripemd160.hash(sha256.hash(value))));\nexport const opHash256 = ({ sha256, } = { sha256: internalSha256 }) => (state) => useOneStackItem(state, (nextState, [value]) => pushToStack(nextState, hash256(value, sha256)));\nexport const opCodeSeparator = (state) => {\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.lastCodeSeparator = state.ip;\n    return state;\n};\nexport const opCheckSig = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => (s) => \n// eslint-disable-next-line complexity\nuseTwoStackItems(s, (state, [bitcoinEncodedSignature, publicKey]) => {\n    if (!isValidPublicKeyEncoding(publicKey)) {\n        return applyError(state, AuthenticationErrorCommon.invalidPublicKeyEncoding);\n    }\n    if (!isValidSignatureEncodingBCHTransaction(bitcoinEncodedSignature, SigningSerializationTypesBCH)) {\n        return applyError(state, AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization): ${binToHex(bitcoinEncodedSignature)}`);\n    }\n    const coveredBytecode = encodeAuthenticationInstructions(state.instructions).subarray(state.lastCodeSeparator + 1);\n    const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n    const serialization = generateSigningSerializationBCH(state.program, { coveredBytecode, signingSerializationType }, sha256);\n    const digest = hash256(serialization, sha256);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.signedMessages.push({ digest, serialization });\n    const useSchnorr = signature.length === ConsensusCommon.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return !success && signature.length !== 0\n        ? applyError(state, AuthenticationErrorCommon.nonNullSignatureFailure)\n        : pushToStack(state, booleanToVmNumber(success));\n});\n// TODO: implement schnorr multisig https://gitlab.com/bitcoin-cash-node/bchn-sw/bitcoincash-upgrade-specifications/-/blob/master/spec/2019-11-15-schnorrmultisig.md\nexport const opCheckMultiSig = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => (s) => useOneVmNumber(s, (state, publicKeysValue) => {\n    const potentialPublicKeys = Number(publicKeysValue);\n    if (potentialPublicKeys < 0) {\n        return applyError(state, AuthenticationErrorCommon.invalidNaturalNumber);\n    }\n    if (potentialPublicKeys > 20 /* Multisig.maximumPublicKeys */) {\n        return applyError(state, AuthenticationErrorCommon.exceedsMaximumMultisigPublicKeyCount);\n    }\n    const publicKeys = \n    // eslint-disable-next-line functional/immutable-data\n    potentialPublicKeys > 0 ? state.stack.splice(-potentialPublicKeys) : [];\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.operationCount += potentialPublicKeys;\n    return state.operationCount > ConsensusCommon.maximumOperationCount\n        ? applyError(state, AuthenticationErrorCommon.exceededMaximumOperationCount)\n        : useOneVmNumber(state, (nextState, approvingKeys) => {\n            const requiredApprovingPublicKeys = Number(approvingKeys);\n            if (requiredApprovingPublicKeys < 0) {\n                return applyError(nextState, AuthenticationErrorCommon.invalidNaturalNumber);\n            }\n            if (requiredApprovingPublicKeys > potentialPublicKeys) {\n                return applyError(nextState, AuthenticationErrorCommon.insufficientPublicKeys);\n            }\n            const signatures = requiredApprovingPublicKeys > 0\n                ? // eslint-disable-next-line functional/immutable-data\n                    nextState.stack.splice(-requiredApprovingPublicKeys)\n                : [];\n            return useOneStackItem(nextState, \n            // eslint-disable-next-line complexity\n            (finalState, [protocolBugValue]) => {\n                if (protocolBugValue.length !== 0) {\n                    return applyError(finalState, AuthenticationErrorCommon.invalidProtocolBugValue);\n                }\n                const coveredBytecode = encodeAuthenticationInstructions(finalState.instructions).subarray(finalState.lastCodeSeparator + 1);\n                let approvingPublicKeys = 0; // eslint-disable-line functional/no-let\n                let remainingSignatures = signatures.length; // eslint-disable-line functional/no-let\n                let remainingPublicKeys = publicKeys.length; // eslint-disable-line functional/no-let\n                // eslint-disable-next-line functional/no-loop-statements\n                while (remainingSignatures > 0 &&\n                    remainingPublicKeys > 0 &&\n                    approvingPublicKeys + remainingPublicKeys >=\n                        remainingSignatures &&\n                    approvingPublicKeys !== requiredApprovingPublicKeys) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const publicKey = publicKeys[remainingPublicKeys - 1];\n                    const bitcoinEncodedSignature = \n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    signatures[remainingSignatures - 1];\n                    if (!isValidPublicKeyEncoding(publicKey)) {\n                        return applyError(finalState, AuthenticationErrorCommon.invalidPublicKeyEncoding);\n                    }\n                    if (!isValidSignatureEncodingBCHTransaction(bitcoinEncodedSignature, SigningSerializationTypesBCH)) {\n                        return applyError(finalState, AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization type): ${binToHex(bitcoinEncodedSignature)}`);\n                    }\n                    const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n                    const serialization = generateSigningSerializationBCH(state.program, { coveredBytecode, signingSerializationType }, sha256);\n                    const digest = hash256(serialization, sha256);\n                    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n                    finalState.signedMessages.push({ digest, serialization });\n                    if (signature.length ===\n                        ConsensusCommon.schnorrSignatureLength) {\n                        return applyError(finalState, AuthenticationErrorCommon.schnorrSizedSignatureInCheckMultiSig);\n                    }\n                    const signed = secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n                    // eslint-disable-next-line functional/no-conditional-statements\n                    if (signed) {\n                        approvingPublicKeys += 1; // eslint-disable-line functional/no-expression-statements\n                        remainingSignatures -= 1; // eslint-disable-line functional/no-expression-statements\n                    }\n                    remainingPublicKeys -= 1; // eslint-disable-line functional/no-expression-statements\n                }\n                const success = approvingPublicKeys === requiredApprovingPublicKeys;\n                if (!success &&\n                    !signatures.every((signature) => signature.length === 0)) {\n                    return applyError(finalState, AuthenticationErrorCommon.nonNullSignatureFailure);\n                }\n                return pushToStack(finalState, booleanToVmNumber(success));\n            });\n        });\n});\nexport const opCheckSigVerify = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => combineOperations(opCheckSig({ secp256k1, sha256 }), opVerify);\nexport const opCheckMultiSigVerify = ({ secp256k1, sha256, }) => combineOperations(opCheckMultiSig({ secp256k1, sha256 }), opVerify);\n/**\n * Validate the encoding of a raw signature – a signature without a signing\n * serialization type byte (A.K.A. \"sighash\" byte).\n *\n * @param signature - the raw signature\n */\nexport const isValidSignatureEncodingBCHRaw = (signature) => signature.length === 0 ||\n    signature.length === ConsensusCommon.schnorrSignatureLength ||\n    isValidSignatureEncodingDER(signature);\nexport const opCheckDataSig = ({ secp256k1, sha256, }) => (state) => \n// eslint-disable-next-line complexity\nuseThreeStackItems(state, (nextState, [signature, message, publicKey]) => {\n    if (!isValidSignatureEncodingBCHRaw(signature)) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidSignatureEncoding, `Data signature: ${binToHex(signature)}`);\n    }\n    if (!isValidPublicKeyEncoding(publicKey)) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidPublicKeyEncoding);\n    }\n    const digest = sha256.hash(message);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    nextState.signedMessages.push({ digest, message });\n    const useSchnorr = signature.length === ConsensusCommon.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return !success && signature.length !== 0\n        ? applyError(nextState, AuthenticationErrorCommon.nonNullSignatureFailure)\n        : pushToStack(nextState, booleanToVmNumber(success));\n});\nexport const opCheckDataSigVerify = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => combineOperations(opCheckDataSig({ secp256k1, sha256 }), opVerify);\nexport const opReverseBytes = (state) => useOneStackItem(state, (nextState, [item]) => pushToStack(nextState, item.slice().reverse()));\n//# sourceMappingURL=crypto.js.map","import { flattenBinArray } from '../../../format/format.js';\nimport { pushToStack, pushToStackChecked, useOneStackItem, useOneVmNumber, useTwoStackItems, } from './combinators.js';\nimport { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { bigIntToVmNumber } from './instruction-sets-utils.js';\nexport const opCat = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStackChecked(nextState, flattenBinArray([a, b])));\nexport const opSplit = (state) => useOneVmNumber(state, (nextState, value) => {\n    const index = Number(value);\n    return useOneStackItem(nextState, (finalState, [item]) => index < 0 || index > item.length\n        ? applyError(finalState, AuthenticationErrorCommon.invalidSplitIndex)\n        : pushToStack(finalState, item.slice(0, index), item.slice(index)));\n});\n/**\n * Pad a minimally-encoded VM number for `OP_NUM2BIN`.\n */\nexport const padMinimallyEncodedVmNumber = (vmNumber, length) => {\n    // eslint-disable-next-line functional/no-let\n    let signBit = 0 /* Constants.positiveSign */;\n    // eslint-disable-next-line functional/no-conditional-statements\n    if (vmNumber.length > 0) {\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n        signBit = vmNumber[vmNumber.length - 1] & 128 /* Constants.negativeSign */;\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, functional/immutable-data\n        vmNumber[vmNumber.length - 1] &= 128 /* Constants.negativeSign */ - 1;\n    }\n    const result = Array.from(vmNumber);\n    // eslint-disable-next-line functional/no-loop-statements\n    while (result.length < length - 1) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(0);\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    result.push(signBit);\n    return Uint8Array.from(result);\n};\nexport const opNum2Bin = (state) => useOneVmNumber(state, (nextState, value) => {\n    const targetLength = Number(value);\n    return targetLength > ConsensusCommon.maximumStackItemLength\n        ? applyError(nextState, `${AuthenticationErrorCommon.exceededMaximumStackItemLength} Item length: ${targetLength} bytes.`)\n        : useOneVmNumber(nextState, (finalState, [target]) => {\n            const minimallyEncoded = bigIntToVmNumber(target);\n            return minimallyEncoded.length > targetLength\n                ? applyError(finalState, AuthenticationErrorCommon.insufficientLength)\n                : minimallyEncoded.length === targetLength\n                    ? pushToStack(finalState, minimallyEncoded)\n                    : pushToStack(finalState, padMinimallyEncodedVmNumber(minimallyEncoded, targetLength));\n        }, {\n            maximumVmNumberByteLength: \n            // TODO: is this right?\n            ConsensusCommon.maximumStackItemLength,\n            requireMinimalEncoding: false,\n        });\n});\nexport const opBin2Num = (state) => useOneVmNumber(state, (nextState, [target]) => {\n    const minimallyEncoded = bigIntToVmNumber(target);\n    return minimallyEncoded.length > ConsensusCommon.maximumVmNumberLength\n        ? applyError(nextState, AuthenticationErrorCommon.exceededMaximumVmNumberLength)\n        : pushToStack(nextState, minimallyEncoded);\n}, {\n    // TODO: is this right?\n    maximumVmNumberByteLength: ConsensusCommon.maximumStackItemLength,\n    requireMinimalEncoding: false,\n});\n//# sourceMappingURL=format.js.map","import { int32UnsignedToSigned } from '../../../format/format.js';\nimport { pushToStackChecked, pushToStackVmNumberChecked, useOneVmNumber, } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { encodeAuthenticationInstructions } from './instruction-sets-utils.js';\nexport const opInputIndex = (state) => pushToStackVmNumberChecked(state, BigInt(state.program.inputIndex));\nexport const opActiveBytecode = (state) => pushToStackChecked(state, encodeAuthenticationInstructions(state.instructions.slice(state.lastCodeSeparator + 1)));\nexport const opTxVersion = (state) => pushToStackVmNumberChecked(state, BigInt(int32UnsignedToSigned(state.program.transaction.version)));\nexport const opTxInputCount = (state) => pushToStackVmNumberChecked(state, BigInt(state.program.transaction.inputs.length));\nexport const opTxOutputCount = (state) => pushToStackVmNumberChecked(state, BigInt(state.program.transaction.outputs.length));\nexport const opTxLocktime = (state) => pushToStackVmNumberChecked(state, BigInt(state.program.transaction.locktime));\nexport const useTransactionUtxo = (state, operation) => useOneVmNumber(state, (nextState, [index]) => {\n    const utxo = nextState.program.sourceOutputs[Number(index)];\n    if (utxo === undefined) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidTransactionUtxoIndex);\n    }\n    return operation(state, [utxo]);\n});\nexport const opUtxoValue = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushToStackVmNumberChecked(nextState, utxo.valueSatoshis));\nexport const opUtxoBytecode = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushToStackChecked(nextState, utxo.lockingBytecode.slice()));\nexport const useTransactionInput = (state, operation) => useOneVmNumber(state, (nextState, [index]) => {\n    const input = nextState.program.transaction.inputs[Number(index)];\n    if (input === undefined) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidTransactionInputIndex);\n    }\n    return operation(state, [input]);\n});\nexport const opOutpointTxHash = (state) => useTransactionInput(state, (nextState, [input]) => pushToStackChecked(nextState, input.outpointTransactionHash.slice().reverse()));\nexport const opOutpointIndex = (state) => useTransactionInput(state, (nextState, [input]) => pushToStackVmNumberChecked(nextState, BigInt(input.outpointIndex)));\nexport const opInputBytecode = (state) => useTransactionInput(state, (nextState, [input]) => pushToStackChecked(nextState, input.unlockingBytecode.slice()));\nexport const opInputSequenceNumber = (state) => useTransactionInput(state, (nextState, [input]) => pushToStackVmNumberChecked(nextState, BigInt(input.sequenceNumber)));\nexport const useTransactionOutput = (state, operation) => useOneVmNumber(state, (nextState, [index]) => {\n    const input = nextState.program.transaction.outputs[Number(index)];\n    if (input === undefined) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidTransactionOutputIndex);\n    }\n    return operation(state, [input]);\n});\nexport const opOutputValue = (state) => useTransactionOutput(state, (nextState, [output]) => pushToStackVmNumberChecked(nextState, output.valueSatoshis));\nexport const opOutputBytecode = (state) => useTransactionOutput(state, (nextState, [output]) => pushToStackChecked(nextState, output.lockingBytecode.slice()));\n//# sourceMappingURL=inspection.js.map","import { applyError, AuthenticationErrorCommon } from './errors.js';\nexport const opNop = (state) => state;\nexport const opNopDisallowed = (state) => applyError(state, AuthenticationErrorCommon.calledUpgradableNop);\n/**\n * \"Disabled\" operations are explicitly forbidden from occurring anywhere in VM\n * bytecode, even within an unexecuted branch.\n */\nexport const disabledOperation = (state) => applyError(state, AuthenticationErrorCommon.unknownOpcode);\n//# sourceMappingURL=nop.js.map","import { numberToBinUint16LE, numberToBinUint32LE, } from '../../../format/format.js';\nimport { pushToStack } from './combinators.js';\nimport { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { bigIntToVmNumber } from './instruction-sets-utils.js';\n/**\n * Returns the minimal bytecode required to push the provided `data` to the\n * stack.\n *\n * @remarks\n * This method conservatively encodes a `Uint8Array` as a data push. For VM\n * Numbers that can be pushed using a single opcode (-1 through 16), the\n * equivalent bytecode value is returned. Other `data` values will be prefixed\n * with the proper opcode and push length bytes (if necessary) to create the\n * minimal push instruction.\n *\n * Note, while some single-byte VM Number pushes will be minimally-encoded by\n * this method, all larger inputs will be encoded as-is (it cannot be assumed\n * that inputs are intended to be used as VM Numbers). To encode the push of a\n * VM Number, minimally-encode the number before passing it to this\n * method, e.g.:\n * `encodeDataPush(bigIntToVmNumber(decodeVmNumber(nonMinimalNumber)))`.\n *\n * The maximum `bytecode` length that can be encoded for a push in the Bitcoin\n * system is `4294967295` (~4GB). This method assumes a smaller input – if\n * `bytecode` has the potential to be longer, it should be checked (and the\n * error handled) prior to calling this method.\n *\n * @param data - the Uint8Array to push to the stack\n */\n// eslint-disable-next-line complexity\nexport const encodeDataPush = (data) => data.length <= 75 /* PushOperationConstants.maximumPushByteOperationSize */\n    ? data.length === 0\n        ? Uint8Array.of(0)\n        : data.length === 1\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                data[0] !== 0 && data[0] <= 16 /* PushOperationConstants.pushNumberOpcodes */\n                    ? Uint8Array.of(\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    data[0] + 80 /* PushOperationConstants.pushNumberOpcodesOffset */)\n                    : data[0] === 129 /* PushOperationConstants.negativeOne */\n                        ? Uint8Array.of(79 /* PushOperationConstants.OP_1NEGATE */)\n                        : Uint8Array.from([1, ...data])\n            : Uint8Array.from([data.length, ...data])\n    : data.length <= 255 /* PushOperationConstants.maximumPushData1Size */\n        ? Uint8Array.from([\n            76 /* PushOperationConstants.OP_PUSHDATA_1 */,\n            data.length,\n            ...data,\n        ])\n        : data.length <= 65535 /* PushOperationConstants.maximumPushData2Size */\n            ? Uint8Array.from([\n                77 /* PushOperationConstants.OP_PUSHDATA_2 */,\n                ...numberToBinUint16LE(data.length),\n                ...data,\n            ])\n            : Uint8Array.from([\n                78 /* PushOperationConstants.OP_PUSHDATA_4 */,\n                ...numberToBinUint32LE(data.length),\n                ...data,\n            ]);\n/**\n * Returns true if the provided `data` is minimally-encoded by the provided\n * `opcode`.\n * @param opcode - the opcode used to push `data`\n * @param data - the contents of the push\n */\n// eslint-disable-next-line complexity\nexport const isMinimalDataPush = (opcode, data) => {\n    if (data.length === 0) {\n        return opcode === 0 /* PushOperationConstants.OP_0 */;\n    }\n    if (data.length === 1) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        if (data[0] >= 1 && data[0] <= 16 /* PushOperationConstants.pushNumberOpcodes */) {\n            return (\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            opcode === data[0] + 80 /* PushOperationConstants.pushNumberOpcodesOffset */);\n        }\n        if (data[0] === 129 /* PushOperationConstants.negativeOne */) {\n            return opcode === 79 /* PushOperationConstants.OP_1NEGATE */;\n        }\n        return true;\n    }\n    if (data.length <= 75 /* PushOperationConstants.maximumPushByteOperationSize */) {\n        return opcode === data.length;\n    }\n    if (data.length <= 255 /* PushOperationConstants.maximumPushData1Size */) {\n        return opcode === 76 /* PushOperationConstants.OP_PUSHDATA_1 */;\n    }\n    if (data.length <= 65535 /* PushOperationConstants.maximumPushData2Size */) {\n        return opcode === 77 /* PushOperationConstants.OP_PUSHDATA_2 */;\n    }\n    if (data.length <= 4294967295 /* PushOperationConstants.maximumPushData4Size */) {\n        return opcode === 78 /* PushOperationConstants.OP_PUSHDATA_4 */;\n    }\n    return false;\n};\nconst executionIsActive = (state) => state.controlStack.every((item) => item);\n// TODO: add tests that verify the order of operations below (are non-minimal pushes OK inside unexecuted conditionals?)\nexport const pushOperation = (maximumPushSize = ConsensusCommon.maximumStackItemLength) => (state) => {\n    const instruction = state.instructions[state.ip];\n    return instruction.data.length > maximumPushSize\n        ? applyError(state, `${AuthenticationErrorCommon.exceededMaximumStackItemLength} Item length: ${instruction.data.length} bytes.`)\n        : executionIsActive(state)\n            ? isMinimalDataPush(instruction.opcode, instruction.data)\n                ? pushToStack(state, instruction.data)\n                : applyError(state, AuthenticationErrorCommon.nonMinimalPush)\n            : state;\n};\n/**\n * @param number - the number that is pushed to the stack by this operation.\n * @returns an operation that pushes a number to the stack.\n */\nexport const pushNumberOperation = (number) => {\n    const value = bigIntToVmNumber(BigInt(number));\n    return (state) => pushToStack(state, value);\n};\n//# sourceMappingURL=push.js.map","import { pushToStack, useFourStackItems, useOneStackItem, useOneVmNumber, useSixStackItems, useThreeStackItems, useTwoStackItems, } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { bigIntToVmNumber, stackItemIsTruthy, } from './instruction-sets-utils.js';\nexport const opToAltStack = (state) => useOneStackItem(state, (nextState, [item]) => {\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    nextState.alternateStack.push(item);\n    return nextState;\n});\nexport const opFromAltStack = (state) => {\n    // eslint-disable-next-line functional/immutable-data\n    const item = state.alternateStack.pop();\n    if (item === undefined) {\n        return applyError(state, AuthenticationErrorCommon.emptyAlternateStack);\n    }\n    return pushToStack(state, item);\n};\nexport const op2Drop = (state) => useTwoStackItems(state, (nextState) => nextState);\nexport const op2Dup = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStack(nextState, a, b, a.slice(), b.slice()));\nexport const op3Dup = (state) => useThreeStackItems(state, (nextState, [a, b, c]) => pushToStack(nextState, a, b, c, a.slice(), b.slice(), c.slice()));\nexport const op2Over = (state) => useFourStackItems(state, (nextState, [a, b, c, d]) => pushToStack(nextState, a, b, c, d, a.slice(), b.slice()));\nexport const op2Rot = (state) => useSixStackItems(state, (nextState, [a, b, c, d, e, f]) => pushToStack(nextState, c, d, e, f, a, b));\nexport const op2Swap = (state) => useFourStackItems(state, (nextState, [a, b, c, d]) => pushToStack(nextState, c, d, a, b));\nexport const opIfDup = (state) => useOneStackItem(state, (nextState, [item]) => pushToStack(nextState, ...(stackItemIsTruthy(item) ? [item, item.slice()] : [item])));\nexport const opDepth = (state) => pushToStack(state, bigIntToVmNumber(BigInt(state.stack.length)));\nexport const opDrop = (state) => useOneStackItem(state, (nextState) => nextState);\nexport const opDup = (state) => useOneStackItem(state, (nextState, [item]) => pushToStack(nextState, item, item.slice()));\nexport const opNip = (state) => useTwoStackItems(state, (nextState, [, b]) => pushToStack(nextState, b));\nexport const opOver = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStack(nextState, a, b, a.slice()));\nexport const opPick = (state) => useOneVmNumber(state, (nextState, depth) => {\n    const item = nextState.stack[nextState.stack.length - 1 - Number(depth)];\n    if (item === undefined) {\n        return applyError(state, AuthenticationErrorCommon.invalidStackIndex);\n    }\n    return pushToStack(nextState, item.slice());\n});\nexport const opRoll = (state) => useOneVmNumber(state, (nextState, depth) => {\n    const index = nextState.stack.length - 1 - Number(depth);\n    if (index < 0 || index > nextState.stack.length - 1) {\n        return applyError(state, AuthenticationErrorCommon.invalidStackIndex);\n    }\n    // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-non-null-assertion\n    return pushToStack(nextState, nextState.stack.splice(index, 1)[0]);\n});\nexport const opRot = (state) => useThreeStackItems(state, (nextState, [a, b, c]) => pushToStack(nextState, b, c, a));\nexport const opSwap = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStack(nextState, b, a));\nexport const opTuck = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStack(nextState, b.slice(), a, b));\nexport const opSize = (state) => useOneStackItem(state, (nextState, [item]) => pushToStack(nextState, item, bigIntToVmNumber(BigInt(item.length))));\n//# sourceMappingURL=stack.js.map","import { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { isVmNumberError, vmNumberToBigInt } from './instruction-sets-utils.js';\nexport const useLocktime = (state, operation) => {\n    const item = state.stack[state.stack.length - 1];\n    if (item === undefined) {\n        return applyError(state, AuthenticationErrorCommon.emptyStack);\n    }\n    const decodedLocktime = vmNumberToBigInt(item, {\n        maximumVmNumberByteLength: 5 /* Constants.locktimeVmNumberByteLength */,\n        requireMinimalEncoding: true,\n    });\n    if (isVmNumberError(decodedLocktime)) {\n        return applyError(state, AuthenticationErrorCommon.invalidVmNumber);\n    }\n    const locktime = Number(decodedLocktime);\n    if (locktime < 0) {\n        return applyError(state, AuthenticationErrorCommon.negativeLocktime);\n    }\n    return operation(state, locktime);\n};\nconst locktimeTypesAreCompatible = (locktime, requiredLocktime) => (locktime < 500000000 /* Constants.locktimeThreshold */ &&\n    requiredLocktime < 500000000 /* Constants.locktimeThreshold */) ||\n    (locktime >= 500000000 /* Constants.locktimeThreshold */ &&\n        requiredLocktime >= 500000000 /* Constants.locktimeThreshold */);\nexport const opCheckLockTimeVerify = (state) => useLocktime(state, (nextState, requiredLocktime) => {\n    if (!locktimeTypesAreCompatible(nextState.program.transaction.locktime, requiredLocktime)) {\n        return applyError(nextState, AuthenticationErrorCommon.incompatibleLocktimeType);\n    }\n    if (requiredLocktime > nextState.program.transaction.locktime) {\n        return applyError(nextState, AuthenticationErrorCommon.unsatisfiedLocktime);\n    }\n    const { sequenceNumber } = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    nextState.program.transaction.inputs[nextState.program.inputIndex];\n    if (sequenceNumber === 4294967295 /* Constants.locktimeDisablingSequenceNumber */) {\n        return applyError(nextState, AuthenticationErrorCommon.locktimeDisabled);\n    }\n    return nextState;\n});\n// eslint-disable-next-line no-bitwise\nconst includesFlag = (value, flag) => (value & flag) !== 0;\nexport const opCheckSequenceVerify = (state) => useLocktime(state, \n// eslint-disable-next-line complexity\n(nextState, requiredSequence) => {\n    const { sequenceNumber } = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    nextState.program.transaction.inputs[nextState.program.inputIndex];\n    const sequenceLocktimeDisabled = includesFlag(requiredSequence, 2147483648 /* Constants.sequenceLocktimeDisableFlag */);\n    if (sequenceLocktimeDisabled) {\n        return nextState;\n    }\n    if (nextState.program.transaction.version <\n        2 /* Constants.sequenceLocktimeTransactionVersionMinimum */) {\n        return applyError(nextState, AuthenticationErrorCommon.checkSequenceUnavailable);\n    }\n    if (includesFlag(sequenceNumber, 2147483648 /* Constants.sequenceLocktimeDisableFlag */)) {\n        return applyError(nextState, AuthenticationErrorCommon.unmatchedSequenceDisable);\n    }\n    if (includesFlag(requiredSequence, 4194304 /* Constants.sequenceLocktimeTypeFlag */) !==\n        includesFlag(sequenceNumber, 4194304 /* Constants.sequenceLocktimeTypeFlag */)) {\n        return applyError(nextState, AuthenticationErrorCommon.incompatibleSequenceType);\n    }\n    if (\n    // eslint-disable-next-line no-bitwise\n    (requiredSequence & 65535 /* Constants.sequenceLocktimeMask */) >\n        // eslint-disable-next-line no-bitwise\n        (sequenceNumber & 65535 /* Constants.sequenceLocktimeMask */)) {\n        return applyError(nextState, AuthenticationErrorCommon.unsatisfiedSequenceNumber);\n    }\n    return nextState;\n});\n//# sourceMappingURL=time.js.map","import { SigningSerializationTypeBCH, SigningSerializationTypesBCH, } from '../../common/common.js';\n/**\n * Consensus settings for the `BCH_2023_05` instruction set.\n */\nexport var ConsensusBCH2023;\n(function (ConsensusBCH2023) {\n    /**\n     * A.K.A. `MAX_SCRIPT_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumBytecodeLength\"] = 10000] = \"maximumBytecodeLength\";\n    /**\n     * A.K.A. `MAX_OP_RETURN_RELAY`, `nMaxDatacarrierBytes`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumDataCarrierBytes\"] = 223] = \"maximumDataCarrierBytes\";\n    /**\n     * A.K.A. `MAX_OPS_PER_SCRIPT`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumOperationCount\"] = 201] = \"maximumOperationCount\";\n    /**\n     * A.K.A. `MAX_STACK_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStackDepth\"] = 1000] = \"maximumStackDepth\";\n    /**\n     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStackItemLength\"] = 520] = \"maximumStackItemLength\";\n    /**\n     * A.K.A. `MAX_STANDARD_VERSION`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStandardVersion\"] = 2] = \"maximumStandardVersion\";\n    /**\n     * A.K.A. `MAX_TX_IN_SCRIPT_SIG_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStandardUnlockingBytecodeLength\"] = 1650] = \"maximumStandardUnlockingBytecodeLength\";\n    /**\n     * Transactions smaller than 65 bytes are forbidden to prevent exploits of the\n     * transaction Merkle tree design.\n     *\n     * A.K.A. `MIN_TX_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"minimumTransactionSize\"] = 65] = \"minimumTransactionSize\";\n    /**\n     * A.K.A. `MAX_STANDARD_TX_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumStandardTransactionSize\"] = 100000] = \"maximumStandardTransactionSize\";\n    /**\n     * A.K.A. `MAX_TX_SIZE`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumTransactionSize\"] = 1000000] = \"maximumTransactionSize\";\n    /**\n     * A.K.A. `MAXIMUM_ELEMENT_SIZE_64_BIT`\n     */\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumVmNumberLength\"] = 8] = \"maximumVmNumberLength\";\n    // eslint-disable-next-line @typescript-eslint/no-mixed-enums\n    ConsensusBCH2023[\"minVmNumber\"] = \"-9223372036854775807\";\n    ConsensusBCH2023[\"maxVmNumber\"] = \"9223372036854775807\";\n    ConsensusBCH2023[ConsensusBCH2023[\"schnorrSignatureLength\"] = 64] = \"schnorrSignatureLength\";\n    ConsensusBCH2023[ConsensusBCH2023[\"maximumCommitmentLength\"] = 40] = \"maximumCommitmentLength\";\n})(ConsensusBCH2023 || (ConsensusBCH2023 = {}));\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SigningSerializationTypesBCH2023 = [\n    ...SigningSerializationTypesBCH,\n    SigningSerializationTypeBCH.allOutputsAllUtxos,\n    SigningSerializationTypeBCH.correspondingOutputAllUtxos,\n    SigningSerializationTypeBCH.noOutputsAllUtxos,\n];\n//# sourceMappingURL=bch-2023-consensus.js.map","import { hash256, secp256k1 as internalSecp256k1, sha256 as internalSha256, } from '../../../../crypto/crypto.js';\nimport { binToHex } from '../../../../format/format.js';\nimport { applyError, AuthenticationErrorCommon, booleanToVmNumber, combineOperations, ConsensusCommon, decodeBitcoinSignature, encodeAuthenticationInstructions, generateSigningSerializationBCH, isValidPublicKeyEncoding, isValidSignatureEncodingBCHTransaction, opVerify, pushToStack, useOneStackItem, useOneVmNumber, useTwoStackItems, } from '../../common/common.js';\nimport { SigningSerializationTypesBCH2023 } from './bch-2023-consensus.js';\nexport const opCheckSigBCH2023 = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => (s) => \n// eslint-disable-next-line complexity\nuseTwoStackItems(s, (state, [bitcoinEncodedSignature, publicKey]) => {\n    if (!isValidPublicKeyEncoding(publicKey)) {\n        return applyError(state, AuthenticationErrorCommon.invalidPublicKeyEncoding);\n    }\n    if (!isValidSignatureEncodingBCHTransaction(bitcoinEncodedSignature, SigningSerializationTypesBCH2023)) {\n        return applyError(state, AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization): ${binToHex(bitcoinEncodedSignature)}`);\n    }\n    const coveredBytecode = encodeAuthenticationInstructions(state.instructions).subarray(state.lastCodeSeparator + 1);\n    const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n    const serialization = generateSigningSerializationBCH(state.program, { coveredBytecode, signingSerializationType }, sha256);\n    const digest = hash256(serialization, sha256);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.signedMessages.push({ digest, serialization });\n    const useSchnorr = signature.length === ConsensusCommon.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return !success && signature.length !== 0\n        ? applyError(state, AuthenticationErrorCommon.nonNullSignatureFailure)\n        : pushToStack(state, booleanToVmNumber(success));\n});\n// TODO: implement schnorr multisig https://gitlab.com/bitcoin-cash-node/bchn-sw/bitcoincash-upgrade-specifications/-/blob/master/spec/2019-11-15-schnorrmultisig.md\nexport const opCheckMultiSigBCH2023 = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => (s) => useOneVmNumber(s, (state, publicKeysValue) => {\n    const potentialPublicKeys = Number(publicKeysValue);\n    if (potentialPublicKeys < 0) {\n        return applyError(state, AuthenticationErrorCommon.invalidNaturalNumber);\n    }\n    if (potentialPublicKeys > 20 /* Multisig.maximumPublicKeys */) {\n        return applyError(state, AuthenticationErrorCommon.exceedsMaximumMultisigPublicKeyCount);\n    }\n    const publicKeys = \n    // eslint-disable-next-line functional/immutable-data\n    potentialPublicKeys > 0 ? state.stack.splice(-potentialPublicKeys) : [];\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.operationCount += potentialPublicKeys;\n    return state.operationCount > ConsensusCommon.maximumOperationCount\n        ? applyError(state, AuthenticationErrorCommon.exceededMaximumOperationCount)\n        : useOneVmNumber(state, (nextState, approvingKeys) => {\n            const requiredApprovingPublicKeys = Number(approvingKeys);\n            if (requiredApprovingPublicKeys < 0) {\n                return applyError(nextState, AuthenticationErrorCommon.invalidNaturalNumber);\n            }\n            if (requiredApprovingPublicKeys > potentialPublicKeys) {\n                return applyError(nextState, AuthenticationErrorCommon.insufficientPublicKeys);\n            }\n            const signatures = requiredApprovingPublicKeys > 0\n                ? // eslint-disable-next-line functional/immutable-data\n                    nextState.stack.splice(-requiredApprovingPublicKeys)\n                : [];\n            return useOneStackItem(nextState, \n            // eslint-disable-next-line complexity\n            (finalState, [protocolBugValue]) => {\n                if (protocolBugValue.length !== 0) {\n                    return applyError(finalState, AuthenticationErrorCommon.invalidProtocolBugValue);\n                }\n                const coveredBytecode = encodeAuthenticationInstructions(finalState.instructions).subarray(finalState.lastCodeSeparator + 1);\n                let approvingPublicKeys = 0; // eslint-disable-line functional/no-let\n                let remainingSignatures = signatures.length; // eslint-disable-line functional/no-let\n                let remainingPublicKeys = publicKeys.length; // eslint-disable-line functional/no-let\n                // eslint-disable-next-line functional/no-loop-statements\n                while (remainingSignatures > 0 &&\n                    remainingPublicKeys > 0 &&\n                    approvingPublicKeys + remainingPublicKeys >=\n                        remainingSignatures &&\n                    approvingPublicKeys !== requiredApprovingPublicKeys) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const publicKey = publicKeys[remainingPublicKeys - 1];\n                    const bitcoinEncodedSignature = \n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    signatures[remainingSignatures - 1];\n                    if (!isValidPublicKeyEncoding(publicKey)) {\n                        return applyError(finalState, AuthenticationErrorCommon.invalidPublicKeyEncoding);\n                    }\n                    if (!isValidSignatureEncodingBCHTransaction(bitcoinEncodedSignature, SigningSerializationTypesBCH2023)) {\n                        return applyError(finalState, AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization type): ${binToHex(bitcoinEncodedSignature)}`);\n                    }\n                    const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n                    const serialization = generateSigningSerializationBCH(state.program, { coveredBytecode, signingSerializationType }, sha256);\n                    const digest = hash256(serialization, sha256);\n                    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n                    finalState.signedMessages.push({ digest, serialization });\n                    if (signature.length ===\n                        ConsensusCommon.schnorrSignatureLength) {\n                        return applyError(finalState, AuthenticationErrorCommon.schnorrSizedSignatureInCheckMultiSig);\n                    }\n                    const signed = secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n                    // eslint-disable-next-line functional/no-conditional-statements\n                    if (signed) {\n                        approvingPublicKeys += 1; // eslint-disable-line functional/no-expression-statements\n                        remainingSignatures -= 1; // eslint-disable-line functional/no-expression-statements\n                    }\n                    remainingPublicKeys -= 1; // eslint-disable-line functional/no-expression-statements\n                }\n                const success = approvingPublicKeys === requiredApprovingPublicKeys;\n                if (!success &&\n                    !signatures.every((signature) => signature.length === 0)) {\n                    return applyError(finalState, AuthenticationErrorCommon.nonNullSignatureFailure);\n                }\n                return pushToStack(finalState, booleanToVmNumber(success));\n            });\n        });\n});\nexport const opCheckSigVerifyBCH2023 = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => combineOperations(opCheckSigBCH2023({ secp256k1, sha256 }), opVerify);\nexport const opCheckMultiSigVerifyBCH2023 = ({ secp256k1, sha256, }) => combineOperations(opCheckMultiSigBCH2023({ secp256k1, sha256 }), opVerify);\n//# sourceMappingURL=bch-2023-crypto.js.map","import { binToHex, flattenBinArray } from '../../../../format/format.js';\nimport { pushToStackChecked, pushToStackVmNumber, pushToStackVmNumberChecked, useTransactionOutput, useTransactionUtxo, } from '../../common/common.js';\nimport { ConsensusBCH2023 } from './bch-2023-consensus.js';\n/**\n * Given a list of transaction inputs, extract a hex-encoded list of all\n * {@link Input.outpointTransactionHash}es from inputs that spend output `0` of\n * that transaction (i.e. where {@link Input.outpointIndex} is `0`).\n * @param inputs - a list of transaction inputs\n * @returns a hex-encoded list of {@link Input.outpointTransactionHash}es\n */\nexport const extractGenesisCategories = (inputs) => inputs.reduce((agg, input) => input.outpointIndex === 0\n    ? [...agg, binToHex(input.outpointTransactionHash)]\n    : agg, []);\n/**\n * Given the resolved list of a transaction's source outputs – the Unspent\n * Transaction Outputs (UTXOs) spent by the transaction, extract all token data\n * for token-aware validation. See CHIP-2022-02-CashTokens for details.\n * @param sourceOutputs - a list of resolved source outputs (UTXOs)\n * @returns an object containing `availableImmutableTokens`,\n * `availableMutableTokensByCategory`, `availableSumsByCategory`, and\n * `inputMintingCategories`. See CHIP-2022-02-CashTokens for details.\n */\nexport const extractSourceOutputTokenData = (sourceOutputs) => sourceOutputs.reduce(\n// eslint-disable-next-line complexity\n(agg, sourceOutput) => {\n    if (sourceOutput.token === undefined)\n        return agg;\n    const categoryHex = binToHex(sourceOutput.token.category);\n    return {\n        availableImmutableTokens: [\n            ...agg.availableImmutableTokens,\n            ...(sourceOutput.token.nft?.capability === 'none'\n                ? [\n                    {\n                        categoryHex: binToHex(sourceOutput.token.category),\n                        commitmentHex: binToHex(sourceOutput.token.nft.commitment),\n                    },\n                ]\n                : []),\n        ],\n        availableMutableTokensByCategory: sourceOutput.token.nft?.capability === 'mutable'\n            ? {\n                ...agg.availableMutableTokensByCategory,\n                [categoryHex]: (agg.availableMutableTokensByCategory[categoryHex] ?? 0) + 1,\n            }\n            : agg.availableMutableTokensByCategory,\n        availableSumsByCategory: {\n            ...agg.availableSumsByCategory,\n            [categoryHex]: (agg.availableSumsByCategory[categoryHex] ?? 0n) +\n                sourceOutput.token.amount,\n        },\n        inputMintingCategories: [\n            ...agg.inputMintingCategories,\n            ...(sourceOutput.token.nft?.capability === 'minting'\n                ? [binToHex(sourceOutput.token.category)]\n                : []),\n        ],\n    };\n}, {\n    availableImmutableTokens: [],\n    availableMutableTokensByCategory: {},\n    availableSumsByCategory: {},\n    inputMintingCategories: [],\n});\n/**\n * Given a transaction's outputs, extract all token data for token-aware\n * validation. See CHIP-2022-02-CashTokens for details.\n * @param outputs - a list of transaction outputs\n * @returns an object containing `outputImmutableTokens`,\n * `outputMintingCategories`, `outputMutableTokensByCategory`, and\n * `outputSumsByCategory`. See CHIP-2022-02-CashTokens for details.\n */\nexport const extractTransactionOutputTokenData = (outputs) => outputs.reduce(\n// eslint-disable-next-line complexity\n(agg, output) => {\n    if (output.token === undefined)\n        return agg;\n    const categoryHex = binToHex(output.token.category);\n    return {\n        outputImmutableTokens: [\n            ...agg.outputImmutableTokens,\n            ...(output.token.nft?.capability === 'none'\n                ? [\n                    {\n                        categoryHex: binToHex(output.token.category),\n                        commitmentHex: binToHex(output.token.nft.commitment),\n                    },\n                ]\n                : []),\n        ],\n        outputMintingCategories: [\n            ...agg.outputMintingCategories,\n            ...(output.token.nft?.capability === 'minting'\n                ? [binToHex(output.token.category)]\n                : []),\n        ],\n        outputMutableTokensByCategory: output.token.nft?.capability === 'mutable'\n            ? {\n                ...agg.outputMutableTokensByCategory,\n                [categoryHex]: (agg.outputMutableTokensByCategory[categoryHex] ?? 0) + 1,\n            }\n            : agg.outputMutableTokensByCategory,\n        outputSumsByCategory: {\n            ...agg.outputSumsByCategory,\n            [categoryHex]: (agg.outputSumsByCategory[categoryHex] ?? 0n) + output.token.amount,\n        },\n    };\n}, {\n    outputImmutableTokens: [],\n    outputMintingCategories: [],\n    outputMutableTokensByCategory: {},\n    outputSumsByCategory: {},\n});\n/**\n * Given a transaction and its resolved source outputs – the Unspent Transaction\n * Outputs (UTXOs) it spends – verify that the transaction passes token-aware\n * validation.\n * @param transaction - the transaction to verify\n * @param sourceOutputs - the resolved list of the transaction's source outputs\n * @returns `true` on success, or an error message (string) on failure.\n */\n// eslint-disable-next-line complexity\nexport const verifyTransactionTokens = (transaction, sourceOutputs) => {\n    const excessiveCommitment = [...sourceOutputs, ...transaction.outputs].find((output) => output.token?.nft?.commitment !== undefined &&\n        output.token.nft.commitment.length >\n            ConsensusBCH2023.maximumCommitmentLength);\n    if (excessiveCommitment !== undefined) {\n        return `Transaction violates token validation: a token commitment exceeds the consensus limit of ${ConsensusBCH2023.maximumCommitmentLength} bytes. Excessive token commitment length: ${\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        excessiveCommitment.token.nft.commitment.length}`;\n    }\n    const genesisCategories = extractGenesisCategories(transaction.inputs);\n    const { availableSumsByCategory, availableMutableTokensByCategory, inputMintingCategories, availableImmutableTokens, } = extractSourceOutputTokenData(sourceOutputs);\n    const { outputSumsByCategory, outputMutableTokensByCategory, outputMintingCategories, outputImmutableTokens, } = extractTransactionOutputTokenData(transaction.outputs);\n    const availableMintingCategories = [\n        ...genesisCategories,\n        ...inputMintingCategories,\n    ];\n    const missingMintingCategory = outputMintingCategories.find((category) => !availableMintingCategories.includes(category));\n    if (missingMintingCategory !== undefined) {\n        return `Transaction violates token validation: the transaction outputs include a minting token that is not substantiated by the transaction's inputs. Invalid output minting token category: ${missingMintingCategory}`;\n    }\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const [categoryHex, sum] of Object.entries(outputSumsByCategory)) {\n        if (sum > BigInt(ConsensusBCH2023.maxVmNumber)) {\n            return `Transaction violates token validation: the transaction outputs include a sum of fungible tokens for a category exceeding the maximum supply (${ConsensusBCH2023.maxVmNumber}). Category: ${categoryHex}, total amount: ${sum.toString()}.`;\n        }\n        const availableSum = availableSumsByCategory[categoryHex];\n        if (availableSum === undefined &&\n            sum > 0 &&\n            !genesisCategories.includes(categoryHex)) {\n            return `Transaction violates token validation: the transaction creates new fungible tokens for a category without a matching genesis input. Category: ${categoryHex}, tokens created: ${sum}`;\n        }\n        if (availableSum !== undefined && sum > availableSum) {\n            return `Transaction violates token validation: the sum of fungible tokens in the transaction's outputs exceed that of the transactions inputs for a category. Category: ${categoryHex}, input amount: ${availableSum}, output amount: ${sum}`;\n        }\n    }\n    const remainingMutableTokens = Object.entries(outputMutableTokensByCategory).reduce((agg, [categoryHex, sum]) => {\n        if (availableMintingCategories.includes(categoryHex)) {\n            return agg;\n        }\n        return { ...agg, [categoryHex]: (agg[categoryHex] ?? 0) - sum };\n    }, availableMutableTokensByCategory);\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const [categoryHex, sum] of Object.entries(remainingMutableTokens)) {\n        if (sum < 0) {\n            return `Transaction violates token validation: the transaction creates more mutable tokens than are available for a category without a matching minting token. Category: ${categoryHex}, excess mutable tokens: ${0 - sum}`;\n        }\n    }\n    const { unmatchedImmutableTokens } = outputImmutableTokens.reduce((agg, token) => {\n        const { categoryHex, commitmentHex } = token;\n        if (availableMintingCategories.includes(categoryHex)) {\n            return agg;\n        }\n        const firstMatch = availableImmutableTokens.findIndex((available) => available.categoryHex === categoryHex &&\n            available.commitmentHex === commitmentHex);\n        if (firstMatch === -1) {\n            return {\n                availableImmutableTokens: agg.availableImmutableTokens,\n                unmatchedImmutableTokens: [...agg.unmatchedImmutableTokens, token],\n            };\n        }\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        agg.availableImmutableTokens.splice(firstMatch, 1);\n        return agg;\n    }, {\n        availableImmutableTokens,\n        unmatchedImmutableTokens: [],\n    });\n    const requiredMutableTokens = unmatchedImmutableTokens.reduce((agg, token) => ({\n        ...agg,\n        [token.categoryHex]: (agg[token.categoryHex] ?? 0) + 1,\n    }), {});\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const [categoryHex, required] of Object.entries(requiredMutableTokens)) {\n        const available = remainingMutableTokens[categoryHex] ?? 0;\n        if (available < required) {\n            return `Transaction violates token validation: the transaction creates an immutable token for a category without a matching minting token or sufficient mutable tokens. Category ${categoryHex}, available mutable tokens: ${available}, new immutable tokens: ${required}`;\n        }\n    }\n    return true;\n};\nexport const pushTokenExtendedCategory = (state, utxo) => {\n    const { token } = utxo;\n    if (token === undefined) {\n        return pushToStackVmNumber(state, 0n);\n    }\n    const capabilityByte = token.nft?.capability === 'minting'\n        ? [2 /* Constants.mintingCapabilityByte */]\n        : token.nft?.capability === 'mutable'\n            ? [1 /* Constants.mutableCapabilityByte */]\n            : [];\n    const extendedCategory = flattenBinArray([\n        token.category.slice().reverse(),\n        Uint8Array.from(capabilityByte),\n    ]);\n    return pushToStackChecked(state, extendedCategory);\n};\nexport const pushTokenCommitment = (state, utxo) => {\n    const { token } = utxo;\n    if (token?.nft === undefined) {\n        return pushToStackVmNumber(state, 0n);\n    }\n    return pushToStackChecked(state, token.nft.commitment);\n};\nexport const pushTokenAmount = (state, utxo) => {\n    const { token } = utxo;\n    if (token === undefined) {\n        return pushToStackVmNumber(state, 0n);\n    }\n    return pushToStackVmNumberChecked(state, token.amount);\n};\nexport const opUtxoTokenCategory = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushTokenExtendedCategory(nextState, utxo));\nexport const opUtxoTokenCommitment = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushTokenCommitment(nextState, utxo));\nexport const opUtxoTokenAmount = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushTokenAmount(nextState, utxo));\nexport const opOutputTokenCategory = (state) => useTransactionOutput(state, (nextState, [output]) => pushTokenExtendedCategory(nextState, output));\nexport const opOutputTokenCommitment = (state) => useTransactionOutput(state, (nextState, [output]) => pushTokenCommitment(nextState, output));\nexport const opOutputTokenAmount = (state) => useTransactionOutput(state, (nextState, [output]) => pushTokenAmount(nextState, output));\n//# sourceMappingURL=bch-2023-tokens.js.map","import { isPayToScriptHash20, isPayToScriptHash32, } from '../../../../address/address.js';\nimport { ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha1 as internalSha1, sha256 as internalSha256, } from '../../../../crypto/crypto.js';\nimport { binToHex } from '../../../../format/format.js';\nimport { encodeTransactionBCH } from '../../../../message/message.js';\nimport { applyError, AuthenticationErrorCommon, authenticationInstructionsAreMalformed, cloneAuthenticationProgramStateBCH, cloneStack, conditionallyEvaluate, createAuthenticationProgramStateCommon, decodeAuthenticationInstructions, disabledOperation, getDustThreshold, incrementOperationCount, isArbitraryDataOutput, isDustOutput, isPushOnly, isStandardOutputBytecode2023, isWitnessProgram, mapOverOperations, op0NotEqual, op1Add, op1Sub, op2Drop, op2Dup, op2Over, op2Rot, op2Swap, op3Dup, opAbs, opActiveBytecode, opAdd, opAnd, opBin2Num, opBoolAnd, opBoolOr, opCat, opCheckDataSig, opCheckDataSigVerify, opCheckLockTimeVerify, opCheckSequenceVerify, opCodeSeparator, opDepth, opDiv, opDrop, opDup, opElse, opEndIf, opEqual, opEqualVerify, opFromAltStack, opGreaterThan, opGreaterThanOrEqual, opHash160, opHash256, opIf, opIfDup, opInputBytecode, opInputIndex, opInputSequenceNumber, opLessThan, opLessThanOrEqual, opMax, opMin, opMod, opMul, opNegate, opNip, opNop, opNopDisallowed, opNot, opNotIf, opNum2Bin, opNumEqual, opNumEqualVerify, opNumNotEqual, opOr, opOutpointIndex, opOutpointTxHash, opOutputBytecode, opOutputValue, opOver, opPick, opReturn, opReverseBytes, opRipemd160, opRoll, opRot, opSha1, opSha256, opSize, opSplit, opSub, opSwap, opToAltStack, opTuck, opTxInputCount, opTxLocktime, opTxOutputCount, opTxVersion, opUtxoBytecode, opUtxoValue, opVerify, opWithin, opXor, pushNumberOperation, pushOperation, reservedOperation, stackItemIsTruthy, undefinedOperation, } from '../../common/common.js';\nimport { ConsensusBCH2023 } from './bch-2023-consensus.js';\nimport { opCheckMultiSigBCH2023, opCheckMultiSigVerifyBCH2023, opCheckSigBCH2023, opCheckSigVerifyBCH2023, } from './bch-2023-crypto.js';\nimport { OpcodesBCH2023 } from './bch-2023-opcodes.js';\nimport { opOutputTokenAmount, opOutputTokenCategory, opOutputTokenCommitment, opUtxoTokenAmount, opUtxoTokenCategory, opUtxoTokenCommitment, verifyTransactionTokens, } from './bch-2023-tokens.js';\n/**\n * create an instance of the BCH 2023 virtual machine instruction set.\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nexport const createInstructionSetBCH2023 = (standard = true, { ripemd160, secp256k1, sha1, sha256, } = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha1: internalSha1,\n    sha256: internalSha256,\n}) => {\n    const conditionallyPush = pushOperation();\n    return {\n        clone: cloneAuthenticationProgramStateBCH,\n        continue: (state) => state.error === undefined && state.ip < state.instructions.length,\n        // eslint-disable-next-line complexity\n        evaluate: (program, stateEvaluate) => {\n            const { unlockingBytecode } = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            program.transaction.inputs[program.inputIndex];\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const { lockingBytecode } = program.sourceOutputs[program.inputIndex];\n            const unlockingInstructions = decodeAuthenticationInstructions(unlockingBytecode);\n            const lockingInstructions = decodeAuthenticationInstructions(lockingBytecode);\n            const initialState = createAuthenticationProgramStateCommon({\n                instructions: unlockingInstructions,\n                program,\n                stack: [],\n            });\n            if (unlockingBytecode.length > ConsensusBCH2023.maximumBytecodeLength) {\n                return applyError(initialState, `The provided unlocking bytecode (${unlockingBytecode.length} bytes) exceeds the maximum bytecode length (${ConsensusBCH2023.maximumBytecodeLength} bytes).`);\n            }\n            if (authenticationInstructionsAreMalformed(unlockingInstructions)) {\n                return applyError(initialState, AuthenticationErrorCommon.malformedUnlockingBytecode);\n            }\n            if (!isPushOnly(unlockingBytecode)) {\n                return applyError(initialState, AuthenticationErrorCommon.requiresPushOnly);\n            }\n            if (lockingBytecode.length > ConsensusBCH2023.maximumBytecodeLength) {\n                return applyError(initialState, AuthenticationErrorCommon.exceededMaximumBytecodeLengthLocking);\n            }\n            if (authenticationInstructionsAreMalformed(lockingInstructions)) {\n                return applyError(initialState, AuthenticationErrorCommon.malformedLockingBytecode);\n            }\n            const unlockingResult = stateEvaluate(initialState);\n            if (unlockingResult.error !== undefined) {\n                return unlockingResult;\n            }\n            if (unlockingResult.controlStack.length !== 0) {\n                return applyError(initialState, AuthenticationErrorCommon.nonEmptyControlStack);\n            }\n            const lockingResult = stateEvaluate(createAuthenticationProgramStateCommon({\n                instructions: lockingInstructions,\n                program,\n                stack: unlockingResult.stack,\n            }));\n            const p2sh20 = isPayToScriptHash20(lockingBytecode);\n            const p2sh32 = isPayToScriptHash32(lockingBytecode);\n            if (!p2sh20 && !p2sh32) {\n                return lockingResult;\n            }\n            const p2shStack = cloneStack(unlockingResult.stack);\n            // eslint-disable-next-line functional/immutable-data\n            const p2shScript = p2shStack.pop() ?? Uint8Array.of();\n            if (p2sh20 && p2shStack.length === 0 && isWitnessProgram(p2shScript)) {\n                return lockingResult;\n            }\n            const p2shInstructions = decodeAuthenticationInstructions(p2shScript);\n            return authenticationInstructionsAreMalformed(p2shInstructions)\n                ? {\n                    ...lockingResult,\n                    error: AuthenticationErrorCommon.malformedP2shBytecode,\n                }\n                : stateEvaluate(createAuthenticationProgramStateCommon({\n                    instructions: p2shInstructions,\n                    program,\n                    stack: p2shStack,\n                }));\n        },\n        every: (state) => \n        // TODO: implement sigchecks https://gitlab.com/bitcoin-cash-node/bchn-sw/bitcoincash-upgrade-specifications/-/blob/master/spec/2020-05-15-sigchecks.md\n        state.stack.length + state.alternateStack.length >\n            ConsensusBCH2023.maximumStackDepth\n            ? applyError(state, AuthenticationErrorCommon.exceededMaximumStackDepth)\n            : state.operationCount > ConsensusBCH2023.maximumOperationCount\n                ? applyError(state, AuthenticationErrorCommon.exceededMaximumOperationCount)\n                : state,\n        operations: {\n            [OpcodesBCH2023.OP_0]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_1]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_2]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_3]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_4]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_5]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_6]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_7]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_8]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_9]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_10]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_11]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_12]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_13]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_14]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_15]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_16]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_17]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_18]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_19]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_20]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_21]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_22]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_23]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_24]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_25]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_26]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_27]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_28]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_29]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_30]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_31]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_32]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_33]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_34]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_35]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_36]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_37]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_38]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_39]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_40]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_41]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_42]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_43]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_44]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_45]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_46]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_47]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_48]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_49]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_50]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_51]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_52]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_53]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_54]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_55]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_56]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_57]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_58]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_59]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_60]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_61]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_62]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_63]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_64]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_65]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_66]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_67]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_68]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_69]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_70]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_71]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_72]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_73]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_74]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHBYTES_75]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHDATA_1]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHDATA_2]: conditionallyPush,\n            [OpcodesBCH2023.OP_PUSHDATA_4]: conditionallyPush,\n            [OpcodesBCH2023.OP_1NEGATE]: conditionallyEvaluate(pushNumberOperation(-1)),\n            [OpcodesBCH2023.OP_RESERVED]: conditionallyEvaluate(reservedOperation),\n            [OpcodesBCH2023.OP_1]: conditionallyEvaluate(pushNumberOperation(1)),\n            /* eslint-disable @typescript-eslint/no-magic-numbers */\n            [OpcodesBCH2023.OP_2]: conditionallyEvaluate(pushNumberOperation(2)),\n            [OpcodesBCH2023.OP_3]: conditionallyEvaluate(pushNumberOperation(3)),\n            [OpcodesBCH2023.OP_4]: conditionallyEvaluate(pushNumberOperation(4)),\n            [OpcodesBCH2023.OP_5]: conditionallyEvaluate(pushNumberOperation(5)),\n            [OpcodesBCH2023.OP_6]: conditionallyEvaluate(pushNumberOperation(6)),\n            [OpcodesBCH2023.OP_7]: conditionallyEvaluate(pushNumberOperation(7)),\n            [OpcodesBCH2023.OP_8]: conditionallyEvaluate(pushNumberOperation(8)),\n            [OpcodesBCH2023.OP_9]: conditionallyEvaluate(pushNumberOperation(9)),\n            [OpcodesBCH2023.OP_10]: conditionallyEvaluate(pushNumberOperation(10)),\n            [OpcodesBCH2023.OP_11]: conditionallyEvaluate(pushNumberOperation(11)),\n            [OpcodesBCH2023.OP_12]: conditionallyEvaluate(pushNumberOperation(12)),\n            [OpcodesBCH2023.OP_13]: conditionallyEvaluate(pushNumberOperation(13)),\n            [OpcodesBCH2023.OP_14]: conditionallyEvaluate(pushNumberOperation(14)),\n            [OpcodesBCH2023.OP_15]: conditionallyEvaluate(pushNumberOperation(15)),\n            [OpcodesBCH2023.OP_16]: conditionallyEvaluate(pushNumberOperation(16)),\n            /* eslint-enable @typescript-eslint/no-magic-numbers */\n            ...mapOverOperations([incrementOperationCount], {\n                [OpcodesBCH2023.OP_NOP]: conditionallyEvaluate(opNop),\n                [OpcodesBCH2023.OP_VER]: conditionallyEvaluate(reservedOperation),\n                [OpcodesBCH2023.OP_IF]: opIf,\n                [OpcodesBCH2023.OP_NOTIF]: opNotIf,\n                [OpcodesBCH2023.OP_VERIF]: reservedOperation,\n                [OpcodesBCH2023.OP_VERNOTIF]: reservedOperation,\n                [OpcodesBCH2023.OP_ELSE]: opElse,\n                [OpcodesBCH2023.OP_ENDIF]: opEndIf,\n                [OpcodesBCH2023.OP_VERIFY]: conditionallyEvaluate(opVerify),\n                [OpcodesBCH2023.OP_RETURN]: conditionallyEvaluate(opReturn),\n                [OpcodesBCH2023.OP_TOALTSTACK]: conditionallyEvaluate(opToAltStack),\n                [OpcodesBCH2023.OP_FROMALTSTACK]: conditionallyEvaluate(opFromAltStack),\n                [OpcodesBCH2023.OP_2DROP]: conditionallyEvaluate(op2Drop),\n                [OpcodesBCH2023.OP_2DUP]: conditionallyEvaluate(op2Dup),\n                [OpcodesBCH2023.OP_3DUP]: conditionallyEvaluate(op3Dup),\n                [OpcodesBCH2023.OP_2OVER]: conditionallyEvaluate(op2Over),\n                [OpcodesBCH2023.OP_2ROT]: conditionallyEvaluate(op2Rot),\n                [OpcodesBCH2023.OP_2SWAP]: conditionallyEvaluate(op2Swap),\n                [OpcodesBCH2023.OP_IFDUP]: conditionallyEvaluate(opIfDup),\n                [OpcodesBCH2023.OP_DEPTH]: conditionallyEvaluate(opDepth),\n                [OpcodesBCH2023.OP_DROP]: conditionallyEvaluate(opDrop),\n                [OpcodesBCH2023.OP_DUP]: conditionallyEvaluate(opDup),\n                [OpcodesBCH2023.OP_NIP]: conditionallyEvaluate(opNip),\n                [OpcodesBCH2023.OP_OVER]: conditionallyEvaluate(opOver),\n                [OpcodesBCH2023.OP_PICK]: conditionallyEvaluate(opPick),\n                [OpcodesBCH2023.OP_ROLL]: conditionallyEvaluate(opRoll),\n                [OpcodesBCH2023.OP_ROT]: conditionallyEvaluate(opRot),\n                [OpcodesBCH2023.OP_SWAP]: conditionallyEvaluate(opSwap),\n                [OpcodesBCH2023.OP_TUCK]: conditionallyEvaluate(opTuck),\n                [OpcodesBCH2023.OP_CAT]: conditionallyEvaluate(opCat),\n                [OpcodesBCH2023.OP_SPLIT]: conditionallyEvaluate(opSplit),\n                [OpcodesBCH2023.OP_NUM2BIN]: conditionallyEvaluate(opNum2Bin),\n                [OpcodesBCH2023.OP_BIN2NUM]: conditionallyEvaluate(opBin2Num),\n                [OpcodesBCH2023.OP_SIZE]: conditionallyEvaluate(opSize),\n                [OpcodesBCH2023.OP_INVERT]: disabledOperation,\n                [OpcodesBCH2023.OP_AND]: conditionallyEvaluate(opAnd),\n                [OpcodesBCH2023.OP_OR]: conditionallyEvaluate(opOr),\n                [OpcodesBCH2023.OP_XOR]: conditionallyEvaluate(opXor),\n                [OpcodesBCH2023.OP_EQUAL]: conditionallyEvaluate(opEqual),\n                [OpcodesBCH2023.OP_EQUALVERIFY]: conditionallyEvaluate(opEqualVerify),\n                [OpcodesBCH2023.OP_RESERVED1]: conditionallyEvaluate(reservedOperation),\n                [OpcodesBCH2023.OP_RESERVED2]: conditionallyEvaluate(reservedOperation),\n                [OpcodesBCH2023.OP_1ADD]: conditionallyEvaluate(op1Add),\n                [OpcodesBCH2023.OP_1SUB]: conditionallyEvaluate(op1Sub),\n                [OpcodesBCH2023.OP_2MUL]: disabledOperation,\n                [OpcodesBCH2023.OP_2DIV]: disabledOperation,\n                [OpcodesBCH2023.OP_NEGATE]: conditionallyEvaluate(opNegate),\n                [OpcodesBCH2023.OP_ABS]: conditionallyEvaluate(opAbs),\n                [OpcodesBCH2023.OP_NOT]: conditionallyEvaluate(opNot),\n                [OpcodesBCH2023.OP_0NOTEQUAL]: conditionallyEvaluate(op0NotEqual),\n                [OpcodesBCH2023.OP_ADD]: conditionallyEvaluate(opAdd),\n                [OpcodesBCH2023.OP_SUB]: conditionallyEvaluate(opSub),\n                [OpcodesBCH2023.OP_MUL]: conditionallyEvaluate(opMul),\n                [OpcodesBCH2023.OP_DIV]: conditionallyEvaluate(opDiv),\n                [OpcodesBCH2023.OP_MOD]: conditionallyEvaluate(opMod),\n                [OpcodesBCH2023.OP_LSHIFT]: disabledOperation,\n                [OpcodesBCH2023.OP_RSHIFT]: disabledOperation,\n                [OpcodesBCH2023.OP_BOOLAND]: conditionallyEvaluate(opBoolAnd),\n                [OpcodesBCH2023.OP_BOOLOR]: conditionallyEvaluate(opBoolOr),\n                [OpcodesBCH2023.OP_NUMEQUAL]: conditionallyEvaluate(opNumEqual),\n                [OpcodesBCH2023.OP_NUMEQUALVERIFY]: conditionallyEvaluate(opNumEqualVerify),\n                [OpcodesBCH2023.OP_NUMNOTEQUAL]: conditionallyEvaluate(opNumNotEqual),\n                [OpcodesBCH2023.OP_LESSTHAN]: conditionallyEvaluate(opLessThan),\n                [OpcodesBCH2023.OP_GREATERTHAN]: conditionallyEvaluate(opGreaterThan),\n                [OpcodesBCH2023.OP_LESSTHANOREQUAL]: conditionallyEvaluate(opLessThanOrEqual),\n                [OpcodesBCH2023.OP_GREATERTHANOREQUAL]: conditionallyEvaluate(opGreaterThanOrEqual),\n                [OpcodesBCH2023.OP_MIN]: conditionallyEvaluate(opMin),\n                [OpcodesBCH2023.OP_MAX]: conditionallyEvaluate(opMax),\n                [OpcodesBCH2023.OP_WITHIN]: conditionallyEvaluate(opWithin),\n                [OpcodesBCH2023.OP_RIPEMD160]: conditionallyEvaluate(opRipemd160({ ripemd160 })),\n                [OpcodesBCH2023.OP_SHA1]: conditionallyEvaluate(opSha1({ sha1 })),\n                [OpcodesBCH2023.OP_SHA256]: conditionallyEvaluate(opSha256({ sha256 })),\n                [OpcodesBCH2023.OP_HASH160]: conditionallyEvaluate(opHash160({ ripemd160, sha256 })),\n                [OpcodesBCH2023.OP_HASH256]: conditionallyEvaluate(opHash256({ sha256 })),\n                [OpcodesBCH2023.OP_CODESEPARATOR]: conditionallyEvaluate(opCodeSeparator),\n                [OpcodesBCH2023.OP_CHECKSIG]: conditionallyEvaluate(opCheckSigBCH2023({ secp256k1, sha256 })),\n                [OpcodesBCH2023.OP_CHECKSIGVERIFY]: conditionallyEvaluate(opCheckSigVerifyBCH2023({ secp256k1, sha256 })),\n                [OpcodesBCH2023.OP_CHECKMULTISIG]: conditionallyEvaluate(opCheckMultiSigBCH2023({ secp256k1, sha256 })),\n                [OpcodesBCH2023.OP_CHECKMULTISIGVERIFY]: conditionallyEvaluate(opCheckMultiSigVerifyBCH2023({ secp256k1, sha256 })),\n                ...(standard\n                    ? {\n                        [OpcodesBCH2023.OP_NOP1]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBCH2023.OP_CHECKLOCKTIMEVERIFY]: conditionallyEvaluate(opCheckLockTimeVerify),\n                        [OpcodesBCH2023.OP_CHECKSEQUENCEVERIFY]: conditionallyEvaluate(opCheckSequenceVerify),\n                        [OpcodesBCH2023.OP_NOP4]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBCH2023.OP_NOP5]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBCH2023.OP_NOP6]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBCH2023.OP_NOP7]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBCH2023.OP_NOP8]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBCH2023.OP_NOP9]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBCH2023.OP_NOP10]: conditionallyEvaluate(opNopDisallowed),\n                    }\n                    : {\n                        [OpcodesBCH2023.OP_NOP1]: conditionallyEvaluate(opNop),\n                        [OpcodesBCH2023.OP_CHECKLOCKTIMEVERIFY]: conditionallyEvaluate(opCheckLockTimeVerify),\n                        [OpcodesBCH2023.OP_CHECKSEQUENCEVERIFY]: conditionallyEvaluate(opCheckSequenceVerify),\n                        [OpcodesBCH2023.OP_NOP4]: conditionallyEvaluate(opNop),\n                        [OpcodesBCH2023.OP_NOP5]: conditionallyEvaluate(opNop),\n                        [OpcodesBCH2023.OP_NOP6]: conditionallyEvaluate(opNop),\n                        [OpcodesBCH2023.OP_NOP7]: conditionallyEvaluate(opNop),\n                        [OpcodesBCH2023.OP_NOP8]: conditionallyEvaluate(opNop),\n                        [OpcodesBCH2023.OP_NOP9]: conditionallyEvaluate(opNop),\n                        [OpcodesBCH2023.OP_NOP10]: conditionallyEvaluate(opNop),\n                    }),\n                [OpcodesBCH2023.OP_CHECKDATASIG]: conditionallyEvaluate(opCheckDataSig({ secp256k1, sha256 })),\n                [OpcodesBCH2023.OP_CHECKDATASIGVERIFY]: conditionallyEvaluate(opCheckDataSigVerify({ secp256k1, sha256 })),\n                [OpcodesBCH2023.OP_REVERSEBYTES]: conditionallyEvaluate(opReverseBytes),\n                [OpcodesBCH2023.OP_INPUTINDEX]: conditionallyEvaluate(opInputIndex),\n                [OpcodesBCH2023.OP_ACTIVEBYTECODE]: conditionallyEvaluate(opActiveBytecode),\n                [OpcodesBCH2023.OP_TXVERSION]: conditionallyEvaluate(opTxVersion),\n                [OpcodesBCH2023.OP_TXINPUTCOUNT]: conditionallyEvaluate(opTxInputCount),\n                [OpcodesBCH2023.OP_TXOUTPUTCOUNT]: conditionallyEvaluate(opTxOutputCount),\n                [OpcodesBCH2023.OP_TXLOCKTIME]: conditionallyEvaluate(opTxLocktime),\n                [OpcodesBCH2023.OP_UTXOVALUE]: conditionallyEvaluate(opUtxoValue),\n                [OpcodesBCH2023.OP_UTXOBYTECODE]: conditionallyEvaluate(opUtxoBytecode),\n                [OpcodesBCH2023.OP_OUTPOINTTXHASH]: conditionallyEvaluate(opOutpointTxHash),\n                [OpcodesBCH2023.OP_OUTPOINTINDEX]: conditionallyEvaluate(opOutpointIndex),\n                [OpcodesBCH2023.OP_INPUTBYTECODE]: conditionallyEvaluate(opInputBytecode),\n                [OpcodesBCH2023.OP_INPUTSEQUENCENUMBER]: conditionallyEvaluate(opInputSequenceNumber),\n                [OpcodesBCH2023.OP_OUTPUTVALUE]: conditionallyEvaluate(opOutputValue),\n                [OpcodesBCH2023.OP_OUTPUTBYTECODE]: conditionallyEvaluate(opOutputBytecode),\n                [OpcodesBCH2023.OP_UTXOTOKENCATEGORY]: conditionallyEvaluate(opUtxoTokenCategory),\n                [OpcodesBCH2023.OP_UTXOTOKENCOMMITMENT]: conditionallyEvaluate(opUtxoTokenCommitment),\n                [OpcodesBCH2023.OP_UTXOTOKENAMOUNT]: conditionallyEvaluate(opUtxoTokenAmount),\n                [OpcodesBCH2023.OP_OUTPUTTOKENCATEGORY]: conditionallyEvaluate(opOutputTokenCategory),\n                [OpcodesBCH2023.OP_OUTPUTTOKENCOMMITMENT]: conditionallyEvaluate(opOutputTokenCommitment),\n                [OpcodesBCH2023.OP_OUTPUTTOKENAMOUNT]: conditionallyEvaluate(opOutputTokenAmount),\n            }),\n        },\n        success: (state) => {\n            if (state.error !== undefined) {\n                return state.error;\n            }\n            if (state.controlStack.length !== 0) {\n                return AuthenticationErrorCommon.nonEmptyControlStack;\n            }\n            if (state.stack.length !== 1) {\n                return AuthenticationErrorCommon.requiresCleanStack;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            if (!stackItemIsTruthy(state.stack[0])) {\n                return AuthenticationErrorCommon.unsuccessfulEvaluation;\n            }\n            return true;\n        },\n        undefined: undefinedOperation,\n        // eslint-disable-next-line complexity\n        verify: ({ sourceOutputs, transaction }, evaluate, stateSuccess) => {\n            if (transaction.inputs.length === 0) {\n                return 'Transactions must have at least one input.';\n            }\n            if (transaction.outputs.length === 0) {\n                return 'Transactions must have at least one output.';\n            }\n            if (transaction.inputs.length !== sourceOutputs.length) {\n                return 'Unable to verify transaction: a single spent output must be provided for each transaction input.';\n            }\n            const transactionSize = encodeTransactionBCH(transaction).length;\n            if (transactionSize < ConsensusBCH2023.minimumTransactionSize) {\n                return `Invalid transaction size: the transaction is ${transactionSize} bytes, but transactions must be no smaller than ${ConsensusBCH2023.minimumTransactionSize} bytes to prevent an exploit of the transaction Merkle tree design.`;\n            }\n            if (transactionSize > ConsensusBCH2023.maximumTransactionSize) {\n                return `Transaction exceeds maximum size: the transaction is ${transactionSize} bytes, but the maximum transaction size is ${ConsensusBCH2023.maximumTransactionSize} bytes.`;\n            }\n            const inputValue = sourceOutputs.reduce((sum, utxo) => sum + utxo.valueSatoshis, 0n);\n            const outputValue = transaction.outputs.reduce((sum, output) => sum + output.valueSatoshis, 0n);\n            if (outputValue > inputValue) {\n                return `Unable to verify transaction: the sum of transaction outputs exceeds the sum of transaction inputs. Input value: ${inputValue}, output value: ${outputValue}`;\n            }\n            const outpointList = transaction.inputs.map((input) => `outpointTransactionHash: ${binToHex(input.outpointTransactionHash)}, outpointIndex: ${input.outpointIndex}`);\n            const firstDuplicate = outpointList.find((outpoint, index) => outpointList.lastIndexOf(outpoint) !== index);\n            /**\n             * This check isn't strictly necessary to perform in the VM (assuming the\n             * provider of `sourceOutputs` is checking for double spends), but it's\n             * included here for debugging purposes.\n             */\n            if (firstDuplicate !== undefined) {\n                return `Unable to verify transaction: the transaction attempts to spend the same outpoint in multiple inputs. ${firstDuplicate}`;\n            }\n            if (standard) {\n                if (transaction.version < 1 ||\n                    transaction.version > ConsensusBCH2023.maximumStandardVersion) {\n                    return `Standard transactions must have a version no less than 1 and no greater than ${ConsensusBCH2023.maximumStandardVersion}.`;\n                }\n                if (transactionSize > ConsensusBCH2023.maximumStandardTransactionSize) {\n                    return `Transaction exceeds maximum standard size: this transaction is ${transactionSize} bytes, but the maximum standard transaction size is ${ConsensusBCH2023.maximumStandardTransactionSize} bytes.`;\n                }\n                // eslint-disable-next-line functional/no-loop-statements\n                for (const [index, output] of sourceOutputs.entries()) {\n                    if (!isStandardOutputBytecode2023(output.lockingBytecode)) {\n                        return `Standard transactions may only spend standard output types, but source output ${index} is non-standard.`;\n                    }\n                }\n                // eslint-disable-next-line functional/no-let\n                let totalArbitraryDataBytes = 0;\n                // eslint-disable-next-line functional/no-loop-statements\n                for (const [index, output] of transaction.outputs.entries()) {\n                    if (!isStandardOutputBytecode2023(output.lockingBytecode)) {\n                        return `Standard transactions may only create standard output types, but transaction output ${index} is non-standard.`;\n                    }\n                    // eslint-disable-next-line functional/no-conditional-statements\n                    if (isArbitraryDataOutput(output.lockingBytecode)) {\n                        // eslint-disable-next-line functional/no-expression-statements\n                        totalArbitraryDataBytes += output.lockingBytecode.length + 1;\n                    }\n                    if (isDustOutput(output)) {\n                        return `Standard transactions may not have dust outputs, but transaction output ${index} is a dust output. Output ${index} must have a value of at least ${getDustThreshold(output)} satoshis. Current value: ${output.valueSatoshis}`;\n                    }\n                }\n                if (totalArbitraryDataBytes > ConsensusBCH2023.maximumDataCarrierBytes) {\n                    return `Standard transactions may carry no more than ${ConsensusBCH2023.maximumDataCarrierBytes} bytes in arbitrary data outputs; this transaction includes ${totalArbitraryDataBytes} bytes of arbitrary data.`;\n                }\n                // eslint-disable-next-line functional/no-loop-statements\n                for (const [index, input] of transaction.inputs.entries()) {\n                    if (input.unlockingBytecode.length >\n                        ConsensusBCH2023.maximumStandardUnlockingBytecodeLength) {\n                        return `Input index ${index} is non-standard: the unlocking bytecode (${input.unlockingBytecode.length} bytes) exceeds the maximum standard unlocking bytecode length (${ConsensusBCH2023.maximumStandardUnlockingBytecodeLength} bytes).`;\n                    }\n                    if (!isPushOnly(input.unlockingBytecode)) {\n                        return `Input index ${index} is non-standard: unlocking bytecode may contain only push operations.`;\n                    }\n                }\n            }\n            const tokenValidationResult = verifyTransactionTokens(transaction, sourceOutputs);\n            if (tokenValidationResult !== true) {\n                return tokenValidationResult;\n            }\n            // eslint-disable-next-line functional/no-loop-statements\n            for (const index of transaction.inputs.keys()) {\n                const state = evaluate({\n                    inputIndex: index,\n                    sourceOutputs,\n                    transaction,\n                });\n                const result = stateSuccess(state);\n                if (typeof result === 'string') {\n                    return `Error in evaluating input index ${index}: ${result}`;\n                }\n            }\n            return true;\n        },\n    };\n};\nexport const createInstructionSetBCH = createInstructionSetBCH2023;\n//# sourceMappingURL=bch-2023-instruction-set.js.map","import { range } from '../format/format.js';\n/**\n * Create an {@link AuthenticationVirtualMachine} to evaluate authentication\n * programs constructed from operations in the `instructionSet`.\n * @param instructionSet - an {@link InstructionSet}\n */\nexport const createVirtualMachine = (instructionSet) => {\n    const availableOpcodes = 256;\n    const operators = range(availableOpcodes).map((codepoint) => instructionSet.operations[codepoint] ?? instructionSet.undefined);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getCodepoint = (state) => state.instructions[state.ip];\n    const after = (state) => {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        state.ip += 1;\n        return state;\n    };\n    const getOperation = (state) => \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    operators[getCodepoint(state).opcode];\n    const noOp = ((state) => state);\n    const stateEvery = instructionSet.every ?? noOp;\n    const stateStepMutate = (state) => {\n        const operator = getOperation(state);\n        return after(stateEvery(operator(state)));\n    };\n    const stateContinue = instructionSet.continue;\n    /**\n     * When we get real tail call optimization, this can be replaced\n     * with recursion.\n     */\n    const untilComplete = (state, stepFunction) => {\n        // eslint-disable-next-line functional/no-loop-statements\n        while (stateContinue(state)) {\n            // eslint-disable-next-line functional/no-expression-statements, no-param-reassign\n            state = stepFunction(state);\n        }\n        return state;\n    };\n    const stateClone = instructionSet.clone;\n    const { success } = instructionSet;\n    const stateEvaluate = (state) => untilComplete(stateClone(state), stateStepMutate);\n    const stateDebugStep = (state) => {\n        const operator = getOperation(state);\n        return after(stateEvery(operator(stateClone(state))));\n    };\n    const stateDebug = (state) => {\n        const trace = [];\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        trace.push(state);\n        // eslint-disable-next-line functional/no-expression-statements\n        untilComplete(state, (currentState) => {\n            const nextState = stateDebugStep(currentState);\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            trace.push(nextState);\n            return nextState;\n        });\n        return trace;\n    };\n    const stateStep = (state) => stateStepMutate(stateClone(state));\n    const evaluate = (program) => instructionSet.evaluate(program, stateEvaluate);\n    const debug = (program) => {\n        const results = [];\n        const proxyDebug = (state) => {\n            const debugResult = stateDebug(state);\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            results.push(...debugResult);\n            return debugResult[debugResult.length - 1] ?? state;\n        };\n        const finalResult = instructionSet.evaluate(program, proxyDebug);\n        return [...results, finalResult];\n    };\n    const verify = (resolvedTransaction) => instructionSet.verify(resolvedTransaction, evaluate, success);\n    return {\n        debug,\n        evaluate,\n        stateClone,\n        stateContinue,\n        stateDebug,\n        stateEvaluate,\n        stateStep,\n        stateStepMutate,\n        stateSuccess: success,\n        verify,\n    };\n};\nexport const createAuthenticationVirtualMachine = createVirtualMachine;\n//# sourceMappingURL=virtual-machine.js.map","import { createVirtualMachine } from '../../../virtual-machine.js';\nimport { createInstructionSetBCH2023 } from './bch-2023-instruction-set.js';\n/**\n * Initialize a virtual machine using the `BCH_2023_05` instruction set.\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nexport const createVirtualMachineBCH2023 = (standard = true) => createVirtualMachine(createInstructionSetBCH2023(standard));\nexport const createVirtualMachineBCH = createVirtualMachineBCH2023;\n//# sourceMappingURL=bch-2023-vm.js.map","/**\n * The `BCH_CHIPs` instruction set.\n *\n * Note: to maximize script compilation compatibility, this instruction set also\n * includes the previous names for new opcodes (e.g. `OP_VERIF` for `OP_BEGIN`).\n */\nexport var OpcodesBCHCHIPs;\n(function (OpcodesBCHCHIPs) {\n    /**\n     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`\n     */\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    /**\n     * A.K.A. `OP_TRUE`\n     */\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_BEGIN\"] = 101] = \"OP_BEGIN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNTIL\"] = 102] = \"OP_UNTIL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SPLIT\"] = 127] = \"OP_SPLIT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NUM2BIN\"] = 128] = \"OP_NUM2BIN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_BIN2NUM\"] = 129] = \"OP_BIN2NUM\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_0EQUAL\"] = 145] = \"OP_0EQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKDATASIG\"] = 186] = \"OP_CHECKDATASIG\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_CHECKDATASIGVERIFY\"] = 187] = \"OP_CHECKDATASIGVERIFY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_REVERSEBYTES\"] = 188] = \"OP_REVERSEBYTES\";\n    /**\n     * First codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    /**\n     * Last codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_INPUTINDEX\"] = 192] = \"OP_INPUTINDEX\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_ACTIVEBYTECODE\"] = 193] = \"OP_ACTIVEBYTECODE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TXVERSION\"] = 194] = \"OP_TXVERSION\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TXINPUTCOUNT\"] = 195] = \"OP_TXINPUTCOUNT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TXOUTPUTCOUNT\"] = 196] = \"OP_TXOUTPUTCOUNT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_TXLOCKTIME\"] = 197] = \"OP_TXLOCKTIME\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOVALUE\"] = 198] = \"OP_UTXOVALUE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOBYTECODE\"] = 199] = \"OP_UTXOBYTECODE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPOINTTXHASH\"] = 200] = \"OP_OUTPOINTTXHASH\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPOINTINDEX\"] = 201] = \"OP_OUTPOINTINDEX\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_INPUTBYTECODE\"] = 202] = \"OP_INPUTBYTECODE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_INPUTSEQUENCENUMBER\"] = 203] = \"OP_INPUTSEQUENCENUMBER\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTVALUE\"] = 204] = \"OP_OUTPUTVALUE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTBYTECODE\"] = 205] = \"OP_OUTPUTBYTECODE\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOTOKENCATEGORY\"] = 206] = \"OP_UTXOTOKENCATEGORY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOTOKENCOMMITMENT\"] = 207] = \"OP_UTXOTOKENCOMMITMENT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UTXOTOKENAMOUNT\"] = 208] = \"OP_UTXOTOKENAMOUNT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTTOKENCATEGORY\"] = 209] = \"OP_OUTPUTTOKENCATEGORY\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTTOKENCOMMITMENT\"] = 210] = \"OP_OUTPUTTOKENCOMMITMENT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_OUTPUTTOKENAMOUNT\"] = 211] = \"OP_OUTPUTTOKENAMOUNT\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN250\"] = 250] = \"OP_UNKNOWN250\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN251\"] = 251] = \"OP_UNKNOWN251\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN253\"] = 253] = \"OP_UNKNOWN253\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN254\"] = 254] = \"OP_UNKNOWN254\";\n    OpcodesBCHCHIPs[OpcodesBCHCHIPs[\"OP_UNKNOWN255\"] = 255] = \"OP_UNKNOWN255\";\n})(OpcodesBCHCHIPs || (OpcodesBCHCHIPs = {}));\n//# sourceMappingURL=bch-chips-opcodes.js.map","/* eslint-disable max-lines */\nimport { hmacSha512, ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha256 as internalSha256, sha512 as internalSha512, } from '../crypto/crypto.js';\nimport { base58ToBin, bigIntToBinUint256BEClamped, binsAreEqual, binToBase58, binToBigIntUint256BE, binToHex, flattenBinArray, formatError, numberToBinUint32BE, utf8ToBin, } from '../format/format.js';\n/**\n * Verify that a private key is valid for the Secp256k1 curve. Returns `true`\n * for success, or `false` on failure.\n *\n * Private keys are 256-bit numbers encoded as a 32-byte, big-endian Uint8Array.\n * Nearly every 256-bit number is a valid secp256k1 private key. Specifically,\n * any 256-bit number greater than `0x01` and less than\n * `0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141`\n * is a valid private key. This range is part of the definition of the\n * secp256k1 elliptic curve parameters.\n *\n * This method does not require a `Secp256k1` implementation.\n *\n * @param privateKey - The private key to validate.\n */\nexport const validateSecp256k1PrivateKey = (privateKey) => {\n    if (privateKey.length !== 32 /* Secp256k1Constants.privateKeyLength */ ||\n        privateKey.every((value) => value === 0)) {\n        return false;\n    }\n    /**\n     * The largest possible Secp256k1 private key – equal to the order of the\n     * Secp256k1 curve minus one.\n     */\n    // prettier-ignore\n    const maximumSecp256k1PrivateKey = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 186, 174, 220, 230, 175, 72, 160, 59, 191, 210, 94, 140, 208, 54, 65, 64]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n    const firstDifference = privateKey.findIndex((value, i) => value !== maximumSecp256k1PrivateKey[i]);\n    if (firstDifference === -1 ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        privateKey[firstDifference] < maximumSecp256k1PrivateKey[firstDifference]) {\n        return true;\n    }\n    return false;\n};\n/**\n * An error in the derivation of child HD public or private nodes.\n */\nexport var HdNodeDerivationError;\n(function (HdNodeDerivationError) {\n    HdNodeDerivationError[\"childIndexExceedsMaximum\"] = \"HD node derivation error: child index exceeds maximum (4294967295).\";\n    HdNodeDerivationError[\"requiresZeroDepthNode\"] = \"HD node derivation error: absolute derivation requires an HD node with a depth of 0.\";\n    HdNodeDerivationError[\"hardenedDerivationRequiresPrivateNode\"] = \"HD node derivation error: derivation for hardened child indexes (indexes greater than or equal to 2147483648) requires an HD private node.\";\n    HdNodeDerivationError[\"invalidAbsoluteDerivationPath\"] = \"HD node derivation error: invalid absolute derivation path; path must begin with \\\"m\\\" or \\\"M\\\" and contain only positive child index numbers, separated by forward slashes (\\\"/\\\"), with zero or one apostrophe (\\\"'\\\") after each child index number.\";\n    HdNodeDerivationError[\"invalidRelativeDerivationPath\"] = \"HD node derivation error: invalid relative derivation path; path must contain only positive child index numbers, separated by forward slashes (\\\"/\\\"), with zero or one apostrophe (\\\"'\\\") after each child index number.\";\n    HdNodeDerivationError[\"invalidDerivedKey\"] = \"HD node derivation error: an astronomically rare HMAC-SHA512 result produced an invalid Secp256k1 key.\";\n    HdNodeDerivationError[\"invalidPrivateDerivationPrefix\"] = \"HD node derivation error: private derivation paths must begin with \\\"m\\\".\";\n    HdNodeDerivationError[\"invalidPublicDerivationPrefix\"] = \"HD node derivation error: public derivation paths must begin with \\\"M\\\".\";\n})(HdNodeDerivationError || (HdNodeDerivationError = {}));\n/**\n * An error in the decoding of an HD public or private key.\n */\nexport var HdKeyDecodingError;\n(function (HdKeyDecodingError) {\n    HdKeyDecodingError[\"incorrectLength\"] = \"HD key decoding error: length is incorrect (must encode 82 bytes).\";\n    HdKeyDecodingError[\"invalidChecksum\"] = \"HD key decoding error: checksum is invalid.\";\n    HdKeyDecodingError[\"invalidPublicKey\"] = \"HD key decoding error: the public key for this HD public node is not a valid Secp256k1 public key.\";\n    HdKeyDecodingError[\"invalidPrivateKey\"] = \"HD key decoding error: the key for this HD private node is not a valid Secp256k1 private key.\";\n    HdKeyDecodingError[\"missingPrivateKeyPaddingByte\"] = \"HD key decoding error: version indicates a private key, but the key data is missing a padding byte.\";\n    HdKeyDecodingError[\"privateKeyExpected\"] = \"HD key decoding error: expected an HD private key, but encountered an HD public key.\";\n    HdKeyDecodingError[\"publicKeyExpected\"] = \"HD key decoding error: expected an HD public key, but encountered an HD private key.\";\n    HdKeyDecodingError[\"unknownCharacter\"] = \"HD key decoding error: key includes a non-base58 character.\";\n    HdKeyDecodingError[\"unknownVersion\"] = \"HD key decoding error: key uses an unknown version.\";\n    HdKeyDecodingError[\"zeroDepthWithNonZeroChildIndex\"] = \"HD key decoding error: key encodes a depth of zero with a non-zero child index.\";\n    HdKeyDecodingError[\"zeroDepthWithNonZeroParentFingerprint\"] = \"HD key decoding error: key encodes a depth of zero with a non-zero parent fingerprint.\";\n})(HdKeyDecodingError || (HdKeyDecodingError = {}));\n/**\n * An error in the encoding of an HD public or private key.\n */\nexport var HdKeyEncodingError;\n(function (HdKeyEncodingError) {\n    HdKeyEncodingError[\"invalidChainCodeLength\"] = \"HD key encoding error: invalid chain code length. Chain code must be 32 bytes.\";\n    HdKeyEncodingError[\"invalidChildDepth\"] = \"HD key encoding error: invalid child depth. Child depth must be between 0 and 255 (inclusive).\";\n    HdKeyEncodingError[\"invalidChildIndex\"] = \"HD key encoding error: invalid child index. Child index must be between 0 and 4294967295 (inclusive).\";\n    HdKeyEncodingError[\"invalidParentFingerprintLength\"] = \"HD key encoding error: invalid parent fingerprint length. Parent fingerprint must be 4 bytes.\";\n    HdKeyEncodingError[\"invalidPrivateKeyLength\"] = \"HD key encoding error: invalid private key length. Secp256k1 private keys must be 32 bytes.\";\n    HdKeyEncodingError[\"invalidPublicKeyLength\"] = \"HD key encoding error: invalid public key length. Public key must be 33 bytes (compressed).\";\n    HdKeyEncodingError[\"invalidPublicKey\"] = \"HD key encoding error: the public key for this HD public node is not a valid Secp256k1 public key.\";\n    HdKeyEncodingError[\"zeroDepthWithNonZeroChildIndex\"] = \"HD key encoding error: attempted to encode a zero depth key with a non-zero child index.\";\n    HdKeyEncodingError[\"zeroDepthWithNonZeroParentFingerprint\"] = \"HD key encoding error: attempted to encode a zero depth key with a non-zero parent fingerprint.\";\n})(HdKeyEncodingError || (HdKeyEncodingError = {}));\nconst emptyParentFingerprint = Uint8Array.from([0, 0, 0, 0]);\n/**\n * The HMAC SHA-512 key used by BIP32, \"Bitcoin seed\"\n * (`utf8ToBin('Bitcoin seed')`)\n */\nexport const bip32HmacSha512Key = utf8ToBin('Bitcoin seed');\n/**\n * Derive an {@link HdPrivateNode} from the provided seed following the BIP32\n * specification. A seed should include between 16 bytes and 64 bytes of\n * entropy (recommended: 32 bytes).\n *\n * @param seed - the entropy from which to derive the {@link HdPrivateNode}\n */\nexport const deriveHdPrivateNodeFromSeed = (seed, { assumeValidity, crypto = { sha512: internalSha512 }, hmacSha512Key = bip32HmacSha512Key, throwErrors = true, } = {}) => {\n    const mac = hmacSha512(hmacSha512Key, seed, crypto.sha512);\n    const privateKey = mac.slice(0, 32 /* Bip32Constants.halfHmacSha512Length */);\n    const chainCode = mac.slice(32 /* Bip32Constants.halfHmacSha512Length */);\n    const depth = 0;\n    const childIndex = 0;\n    const parentFingerprint = emptyParentFingerprint.slice();\n    const valid = assumeValidity ?? validateSecp256k1PrivateKey(privateKey);\n    if (throwErrors && !valid)\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new Error(HdNodeDerivationError.invalidDerivedKey);\n    return (valid\n        ? { chainCode, childIndex, depth, parentFingerprint, privateKey }\n        : {\n            chainCode,\n            childIndex,\n            depth,\n            invalidMaterial: privateKey,\n            parentFingerprint,\n        });\n};\n/**\n * Derive the public identifier for a given {@link HdPrivateNode}. This is used\n * to uniquely identify HD nodes in software. The first 4 bytes of this\n * identifier are considered its \"fingerprint\".\n *\n * @param hdPrivateNode - The {@link HdPrivateNode} from which to derive the\n * public identifier.\n */\nexport const deriveHdPrivateNodeIdentifier = (hdPrivateNode, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n}, } = {}) => {\n    const publicKey = crypto.secp256k1.derivePublicKeyCompressed(hdPrivateNode.privateKey);\n    if (typeof publicKey === 'string')\n        return publicKey;\n    return crypto.ripemd160.hash(crypto.sha256.hash(publicKey));\n};\n/**\n * Derive the public identifier for a given {@link HdPublicNodeValid}. This is\n * used to uniquely identify HD nodes in software. The first 4 bytes of this\n * identifier are considered its fingerprint.\n *\n * @param node - The {@link HdPublicNodeValid} from which to derive the\n * public identifier.\n */\nexport const deriveHdPublicNodeIdentifier = (node, { crypto = { ripemd160: internalRipemd160, sha256: internalSha256 }, } = {}) => crypto.ripemd160.hash(crypto.sha256.hash(node.publicKey));\n/**\n * The 4-byte version indicating the network and type of an {@link HdPrivateKey}\n * or {@link HdPublicKey}.\n */\nexport var HdKeyVersion;\n(function (HdKeyVersion) {\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the main network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `xprv`.\n     *\n     * Hex: `0x0488ade4`\n     */\n    HdKeyVersion[HdKeyVersion[\"mainnetPrivateKey\"] = 76066276] = \"mainnetPrivateKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the main network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `xpub`.\n     *\n     * Hex: `0x0488b21e`\n     */\n    HdKeyVersion[HdKeyVersion[\"mainnetPublicKey\"] = 76067358] = \"mainnetPublicKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the test network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `tprv`.\n     *\n     * Hex: `0x04358394`\n     */\n    HdKeyVersion[HdKeyVersion[\"testnetPrivateKey\"] = 70615956] = \"testnetPrivateKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the test network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `tpub`.\n     *\n     * Hex: `0x043587cf`\n     */\n    HdKeyVersion[HdKeyVersion[\"testnetPublicKey\"] = 70617039] = \"testnetPublicKey\";\n})(HdKeyVersion || (HdKeyVersion = {}));\nexport const hdKeyVersionIsPublicKey = (version) => version === HdKeyVersion.mainnetPublicKey ||\n    version === HdKeyVersion.testnetPublicKey;\nexport const hdKeyVersionIsPrivateKey = (version) => version === HdKeyVersion.mainnetPrivateKey ||\n    version === HdKeyVersion.testnetPrivateKey;\n/**\n * Decode a string following the HD key format as defined by BIP32, returning a\n * `node` and a `version`. Decoding errors are returned as strings.\n *\n * This is a less strict variant of {@link decodeHdKey}; most applications\n * should instead use {@link decodeHdKey}, or if the type of the key is known,\n * either {@link decodeHdPrivateKey} or {@link decodeHdPublicKey}.\n *\n * @param hdKey - A BIP32 HD private key or HD public key.\n */\n// eslint-disable-next-line complexity\nexport const decodeHdKeyUnchecked = (hdKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const decoded = base58ToBin(hdKey);\n    if (typeof decoded === 'string')\n        return formatError(HdKeyDecodingError.unknownCharacter, decoded);\n    if (decoded.length !== 82 /* Bip32Constants.hdKeyLength */)\n        return formatError(HdKeyDecodingError.incorrectLength, `Length: ${decoded.length}.`);\n    const payload = decoded.slice(0, 78 /* Bip32Constants.hdKeyChecksumIndex */);\n    const checksumBits = decoded.slice(78 /* Bip32Constants.hdKeyChecksumIndex */);\n    const checksum = crypto.sha256.hash(crypto.sha256.hash(payload));\n    if (!checksumBits.every((value, i) => value === checksum[i])) {\n        return formatError(HdKeyDecodingError.invalidChecksum, `Encoded: ${binToHex(checksumBits)}; computed: ${binToHex(checksum.slice(0, 4 /* Bip32Constants.hdKeyChecksumLength */))}.`);\n    }\n    const depthIndex = 4;\n    const fingerprintIndex = 5;\n    const childIndexIndex = 9;\n    const chainCodeIndex = 13;\n    const keyDataIndex = 45;\n    const version = new DataView(decoded.buffer, decoded.byteOffset, depthIndex).getUint32(0);\n    const depth = decoded[depthIndex];\n    const parentFingerprint = decoded.slice(fingerprintIndex, childIndexIndex);\n    const childIndex = new DataView(decoded.buffer, decoded.byteOffset + childIndexIndex, decoded.byteOffset + chainCodeIndex).getUint32(0);\n    const chainCode = decoded.slice(chainCodeIndex, keyDataIndex);\n    const keyData = decoded.slice(keyDataIndex, 78 /* Bip32Constants.hdKeyChecksumIndex */);\n    const isPrivateKey = hdKeyVersionIsPrivateKey(version);\n    if (isPrivateKey && keyData[0] !== 0x00) {\n        return HdKeyDecodingError.missingPrivateKeyPaddingByte;\n    }\n    if (isPrivateKey) {\n        const privateKey = keyData.slice(1);\n        const valid = validateSecp256k1PrivateKey(privateKey);\n        return {\n            node: valid\n                ? {\n                    chainCode,\n                    childIndex,\n                    depth,\n                    parentFingerprint,\n                    privateKey,\n                }\n                : {\n                    chainCode,\n                    childIndex,\n                    depth,\n                    invalidMaterial: privateKey,\n                    parentFingerprint,\n                },\n            version,\n        };\n    }\n    const isPublicKey = hdKeyVersionIsPublicKey(version);\n    if (!isPublicKey) {\n        return formatError(HdKeyDecodingError.unknownVersion, `Version: ${version}`);\n    }\n    const publicKey = keyData;\n    const valid = crypto.secp256k1.validatePublicKey(publicKey);\n    return {\n        node: valid\n            ? {\n                chainCode,\n                childIndex,\n                depth,\n                parentFingerprint,\n                publicKey,\n            }\n            : {\n                chainCode,\n                childIndex,\n                depth,\n                invalidMaterial: publicKey,\n                parentFingerprint,\n            },\n        version,\n    };\n};\n/**\n * Decode an HD key as defined by BIP32, returning a `node` and a `network`.\n * Decoding errors are returned as strings.\n *\n * If the type of the key is known, use {@link decodeHdPrivateKey} or\n * {@link decodeHdPublicKey}. For a variant with less strict validation,\n * use {@link decodeHdKeyUnchecked}.\n *\n * @param hdKey - A BIP32 HD private key or HD public key.\n */\n// eslint-disable-next-line complexity\nexport const decodeHdKey = (hdKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const decoded = decodeHdKeyUnchecked(hdKey, { crypto });\n    if (typeof decoded === 'string')\n        return decoded;\n    const { node, version } = decoded;\n    if (node.depth === 0) {\n        if (node.childIndex !== 0) {\n            return formatError(HdKeyDecodingError.zeroDepthWithNonZeroChildIndex, `Child index: ${node.childIndex}.`);\n        }\n        if (!binsAreEqual(node.parentFingerprint, emptyParentFingerprint)) {\n            return formatError(HdKeyDecodingError.zeroDepthWithNonZeroParentFingerprint, `Parent fingerprint: ${node.parentFingerprint.join(',')}.`);\n        }\n    }\n    const isPublicKey = hdKeyVersionIsPublicKey(version);\n    if ('invalidMaterial' in node) {\n        return isPublicKey\n            ? formatError(HdKeyDecodingError.invalidPublicKey, `Invalid public key: ${binToHex(node.invalidMaterial)}.`)\n            : formatError(HdKeyDecodingError.invalidPrivateKey);\n    }\n    const network = version === HdKeyVersion.mainnetPrivateKey ||\n        version === HdKeyVersion.mainnetPublicKey\n        ? 'mainnet'\n        : 'testnet';\n    return { network, node };\n};\n/**\n * Decode an HD private key as defined by BIP32.\n *\n * This method is similar to {@link decodeHdKey} but ensures that the result is\n * a valid HD private node. Decoding error messages are returned as strings.\n *\n * @param hdPrivateKey - A BIP32 HD private key.\n */\nexport const decodeHdPrivateKey = (hdPrivateKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const decoded = decodeHdKey(hdPrivateKey, { crypto });\n    if (typeof decoded === 'string')\n        return decoded;\n    const { network, node } = decoded;\n    if ('publicKey' in node) {\n        return HdKeyDecodingError.privateKeyExpected;\n    }\n    return { network, node };\n};\n/**\n * Decode an HD public key as defined by BIP32.\n *\n * This method is similar to {@link decodeHdKey} but ensures that the result is\n * a valid HD public node. Decoding error messages are returned as strings.\n *\n * @param hdPublicKey - A BIP32 HD public key.\n */\nexport const decodeHdPublicKey = (hdPublicKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const decoded = decodeHdKey(hdPublicKey, { crypto });\n    if (typeof decoded === 'string')\n        return decoded;\n    const { network, node } = decoded;\n    if ('privateKey' in node) {\n        return HdKeyDecodingError.publicKeyExpected;\n    }\n    return { network, node };\n};\n/**\n * Decode the provided HD private key and compute its identifier. Error messages\n * are returned as a string.\n */\nexport const hdPrivateKeyToIdentifier = (hdPrivateKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const privateKeyParams = decodeHdPrivateKey(hdPrivateKey, { crypto });\n    if (typeof privateKeyParams === 'string') {\n        return privateKeyParams;\n    }\n    return deriveHdPrivateNodeIdentifier(privateKeyParams.node);\n};\n/**\n * Decode the provided HD public key and compute its identifier. Error messages\n * are returned as a string.\n */\nexport const hdPublicKeyToIdentifier = (hdPublicKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const publicKeyParams = decodeHdPublicKey(hdPublicKey, { crypto });\n    if (typeof publicKeyParams === 'string') {\n        return publicKeyParams;\n    }\n    return deriveHdPublicNodeIdentifier(publicKeyParams.node);\n};\n/**\n * Encode the metadata portion of an HD key payload.\n */\n// eslint-disable-next-line complexity\nexport const encodeHdKeyPayloadMetadata = ({ version, keyParameters, throwErrors = true, }) => {\n    if (keyParameters.node.depth === 0) {\n        if (keyParameters.node.childIndex !== 0) {\n            return formatError(HdKeyEncodingError.zeroDepthWithNonZeroChildIndex, `Child index: ${keyParameters.node.childIndex}.`, throwErrors);\n        }\n        if (!binsAreEqual(keyParameters.node.parentFingerprint, emptyParentFingerprint)) {\n            return formatError(HdKeyEncodingError.zeroDepthWithNonZeroParentFingerprint, `Parent fingerprint: ${keyParameters.node.parentFingerprint.join(',')}.`, throwErrors);\n        }\n    }\n    if (keyParameters.node.chainCode.length !== 32 /* Bip32Constants.halfHmacSha512Length */) {\n        return formatError(HdKeyEncodingError.invalidChainCodeLength, `Chain code length: ${keyParameters.node.chainCode.length}.`, throwErrors);\n    }\n    if (keyParameters.node.parentFingerprint.length !==\n        4 /* Bip32Constants.parentFingerprintLength */) {\n        return formatError(HdKeyEncodingError.invalidParentFingerprintLength, `Parent fingerprint length: ${keyParameters.node.parentFingerprint.length}.`, throwErrors);\n    }\n    if (keyParameters.node.depth < 0 ||\n        keyParameters.node.depth > 255 /* Bip32Constants.maximumEncodingDepth */) {\n        return formatError(HdKeyEncodingError.invalidChildDepth, `Depth: ${keyParameters.node.depth}.`, throwErrors);\n    }\n    const depth = Uint8Array.of(keyParameters.node.depth);\n    if (keyParameters.node.childIndex < 0 ||\n        keyParameters.node.childIndex > 4294967295 /* Bip32Constants.maximumChildIndex */) {\n        return formatError(HdKeyEncodingError.invalidChildIndex, `Child index: ${keyParameters.node.childIndex}.`, throwErrors);\n    }\n    const childIndex = numberToBinUint32BE(keyParameters.node.childIndex);\n    const payload = flattenBinArray([\n        version,\n        depth,\n        keyParameters.node.parentFingerprint,\n        childIndex,\n        keyParameters.node.chainCode,\n    ]);\n    return payload;\n};\n/**\n * Encode an HD private key (as defined by BIP32) payload (without the checksum)\n * given a valid {@link HdPrivateNode} and network.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * @param keyParameters - A valid HD private node and the network for which to\n * encode the key.\n */\nexport const encodeHdPrivateKeyPayload = (keyParameters, { throwErrors = true, } = {}) => {\n    const version = numberToBinUint32BE(keyParameters.network === 'mainnet'\n        ? HdKeyVersion.mainnetPrivateKey\n        : HdKeyVersion.testnetPrivateKey);\n    if (keyParameters.node.privateKey.length !== 32 /* Bip32Constants.halfHmacSha512Length */) {\n        return formatError(HdKeyEncodingError.invalidPrivateKeyLength, `Private key length: ${keyParameters.node.privateKey.length}.`, throwErrors);\n    }\n    const metadata = encodeHdKeyPayloadMetadata({\n        keyParameters,\n        throwErrors,\n        version,\n    });\n    if (typeof metadata === 'string') {\n        return metadata;\n    }\n    const isPrivateKey = Uint8Array.of(0x00);\n    const payload = flattenBinArray([\n        metadata,\n        isPrivateKey,\n        keyParameters.node.privateKey,\n    ]);\n    return payload;\n};\n/**\n * Encode an HD public key (as defined by BIP32) payload (without the checksum)\n * given a valid {@link HdPublicNodeValid} and network.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * @param keyParameters - A valid HD public node and the network for which to\n * encode the key.\n */\nexport const encodeHdPublicKeyPayload = (keyParameters, { throwErrors = true, } = {}) => {\n    const version = numberToBinUint32BE(keyParameters.network === 'mainnet'\n        ? HdKeyVersion.mainnetPublicKey\n        : HdKeyVersion.testnetPublicKey);\n    if (keyParameters.node.publicKey.length !== 33 /* Bip32Constants.publicKeyLength */) {\n        return formatError(HdKeyEncodingError.invalidPublicKeyLength, `Public key length: ${keyParameters.node.publicKey.length}.`, throwErrors);\n    }\n    const metadata = encodeHdKeyPayloadMetadata({\n        keyParameters,\n        throwErrors,\n        version,\n    });\n    if (typeof metadata === 'string') {\n        return metadata;\n    }\n    const payload = flattenBinArray([metadata, keyParameters.node.publicKey]);\n    return payload;\n};\n/**\n * Encode an HD public or private key (as defined by BIP32) payload with\n * a checksum.\n *\n * @param payload - the HD public or private key payload to encode\n */\nexport const encodeHdKeyPayloadWithChecksum = (payload, { crypto = { sha256: internalSha256 }, } = {}) => {\n    const checksumLength = 4;\n    const checksum = crypto.sha256\n        .hash(crypto.sha256.hash(payload))\n        .slice(0, checksumLength);\n    return binToBase58(flattenBinArray([payload, checksum]));\n};\n/**\n * Encode an HD private key (as defined by BIP32) given a valid\n * {@link HdPrivateNode} and network.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * @param keyParameters - A valid HD private node and the network for which to\n * encode the key.\n */\nexport const encodeHdPrivateKey = (keyParameters, { crypto = { sha256: internalSha256 }, throwErrors = true, } = {}) => {\n    const payload = encodeHdPrivateKeyPayload(keyParameters, { throwErrors });\n    return typeof payload === 'string'\n        ? payload\n        : { hdPrivateKey: encodeHdKeyPayloadWithChecksum(payload, { crypto }) };\n};\n/**\n * Encode an HD public key (as defined by BIP32) given a valid\n * {@link HdPublicNodeValid} and network.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * @param keyParameters - An HD public node and the network for which to encode\n * the key.\n */\nexport const encodeHdPublicKey = (keyParameters, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, throwErrors = true, } = {}) => {\n    if (!crypto.secp256k1.validatePublicKey(keyParameters.node.publicKey)) {\n        return formatError(HdKeyEncodingError.invalidPublicKey, `Invalid public key: \"${binToHex(keyParameters.node.publicKey)}\".`, throwErrors);\n    }\n    const payload = encodeHdPublicKeyPayload(keyParameters, { throwErrors });\n    return typeof payload === 'string'\n        ? payload\n        : { hdPublicKey: encodeHdKeyPayloadWithChecksum(payload, { crypto }) };\n};\n/**\n * Derive the HD public node of an HD private node.\n *\n * Though private keys cannot be derived from HD public keys, sharing HD public\n * keys still carries risk. Along with allowing an attacker to associate wallet\n * addresses together (breaking privacy), should an attacker gain knowledge of a\n * single child private key, **it's possible to derive all parent HD private\n * keys**. See {@link crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode} for\n * details.\n *\n * To derive an HD public key from an encoded HD private key,\n * use {@link deriveHdPublicKey}.\n *\n * @param node - A valid HD private node.\n */\nexport const deriveHdPublicNode = (node, { crypto = { secp256k1: internalSecp256k1 }, } = {}) => ({\n    chainCode: node.chainCode,\n    childIndex: node.childIndex,\n    depth: node.depth,\n    parentFingerprint: node.parentFingerprint,\n    ...(node.parentIdentifier === undefined\n        ? {}\n        : { parentIdentifier: node.parentIdentifier }),\n    publicKey: crypto.secp256k1.derivePublicKeyCompressed(node.privateKey),\n});\n/**\n * Derive the HD public key of an HD private key.\n *\n * Though private keys cannot be derived from HD public keys, sharing HD public\n * keys still carries risk. Along with allowing an attacker to associate wallet\n * addresses together (breaking privacy), should an attacker gain knowledge of a\n * single child private key, **it's possible to derive all parent HD private\n * keys**. See {@link crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode} for\n * details.\n *\n * To derive the HD public node of an already-decoded HD private node,\n * use {@link deriveHdPublicNode}.\n *\n * Note that this function defaults to throwing errors. To handle errors in a\n * type-safe way, set `throwErrors` to `false`.\n *\n * @param hdPrivateKey - A BIP32 HD private key.\n */\nexport const deriveHdPublicKey = (privateKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, throwErrors = true, } = {}) => {\n    const decoded = decodeHdPrivateKey(privateKey, { crypto });\n    if (typeof decoded === 'string') {\n        return formatError(decoded, undefined, throwErrors);\n    }\n    const node = deriveHdPublicNode(decoded.node, { crypto });\n    return encodeHdPublicKey({ network: decoded.network, node }, { crypto, throwErrors });\n};\n/**\n * Derive a child HD private node from an HD private node.\n *\n * To derive a child HD public node, use {@link deriveHdPublicNode} on the\n * result of this method. If the child uses a non-hardened index, it's also\n * possible to use {@link deriveHdPublicNodeChild}.\n *\n * Note that this function defaults to throwing errors. To handle errors in a\n * type-safe way, set `throwErrors` to `false`.\n *\n * This function has a less than 1 in 2^127 probability of producing\n * an invalid result (where the resulting private key is not a valid Secp256k1\n * private key, see {@link validateSecp256k1PrivateKey}). While this scenario is\n * unlikely to ever occur without a weakness in HMAC-SHA512, the\n * `returnInvalidNodes` parameter can be set to `true` to return the resulting\n * {@link HdPrivateNodeInvalid} rather than an error (defaults to `false`).\n *\n * @param node - The valid HD private node from which to derive the child node.\n * @param index - The index at which to derive the child node - indexes greater\n * than or equal to the hardened index offset (`0x80000000`/`2147483648`) are\n * derived using the \"hardened\" derivation algorithm.\n */\n// eslint-disable-next-line complexity\nexport const deriveHdPrivateNodeChild = (node, index, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n    sha512: internalSha512,\n}, throwErrors = true, returnInvalidNodes = false, } = {}) => {\n    const maximumIndex = 0xffffffff;\n    if (index > maximumIndex) {\n        return formatError(HdNodeDerivationError.childIndexExceedsMaximum, `Child index: ${index}.`, throwErrors);\n    }\n    const parentIdentifier = deriveHdPrivateNodeIdentifier(node, { crypto });\n    const parentFingerprint = parentIdentifier.slice(0, 4 /* Bip32Constants.parentFingerprintLength */);\n    const depth = node.depth + 1;\n    const hardenedIndexOffset = 0x80000000;\n    const useHardenedAlgorithm = index >= hardenedIndexOffset;\n    const keyMaterial = useHardenedAlgorithm\n        ? node.privateKey\n        : crypto.secp256k1.derivePublicKeyCompressed(node.privateKey);\n    const serialization = Uint8Array.from([\n        ...(useHardenedAlgorithm ? [0x00] : []),\n        ...keyMaterial,\n        ...numberToBinUint32BE(index),\n    ]);\n    const derivation = hmacSha512(node.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = derivation.slice(0, tweakValueLength);\n    const nextChainCode = derivation.slice(tweakValueLength);\n    const nextPrivateKey = crypto.secp256k1.addTweakPrivateKey(node.privateKey, tweakValue);\n    if (typeof nextPrivateKey === 'string') {\n        const error = formatError(HdNodeDerivationError.invalidDerivedKey, `Invalid child index: ${index}.`, throwErrors);\n        if (returnInvalidNodes) {\n            return {\n                chainCode: nextChainCode,\n                childIndex: index,\n                depth,\n                invalidMaterial: tweakValue,\n                parentFingerprint,\n                parentIdentifier,\n            };\n        }\n        return error;\n    }\n    return {\n        chainCode: nextChainCode,\n        childIndex: index,\n        depth,\n        parentFingerprint,\n        parentIdentifier,\n        privateKey: nextPrivateKey,\n    };\n};\n/**\n * Derive a non-hardened, child HD public node from an HD public node.\n *\n * Because hardened derivation also requires knowledge of the parent private\n * node, it's not possible to use an HD public node to derive a hardened child\n * HD public node. (See {@link deriveHdPath} or {@link deriveHdPublicNode}.)\n *\n * Though private keys cannot be derived from HD public keys, sharing HD public\n * keys still carries risk. Along with allowing an attacker to associate wallet\n * addresses together (breaking privacy), should an attacker gain knowledge of a\n * single child private key, **it's possible to derive all parent HD private\n * keys**. See {@link crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode}\n * for details.\n *\n * This function has a less than 1 in 2^127 probability of producing\n * an invalid result (where the resulting public key is not a valid Secp256k1\n * public key). While this scenario is unlikely to ever occur without a weakness\n * in HMAC-SHA512, the `returnInvalidNodes` parameter can be set to `true` to\n * return the resulting {@link HdPrivateNodeInvalid} rather than an error\n * (defaults to `false`).\n *\n * @param node - The valid HD public node from which to derive the child\n * public node.\n * @param index - The index at which to derive the child node.\n */\nexport const deriveHdPublicNodeChild = (node, index, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n    sha512: internalSha512,\n}, returnInvalidNodes = false, throwErrors = true, } = {}) => {\n    const hardenedIndexOffset = 0x80000000;\n    if (index >= hardenedIndexOffset) {\n        return formatError(HdNodeDerivationError.hardenedDerivationRequiresPrivateNode, `Requested index: ${index}.`, throwErrors);\n    }\n    const parentIdentifier = deriveHdPublicNodeIdentifier(node, { crypto });\n    const parentFingerprint = parentIdentifier.slice(0, 4 /* Bip32Constants.parentFingerprintLength */);\n    const depth = node.depth + 1;\n    const serialization = Uint8Array.from([\n        ...node.publicKey,\n        ...numberToBinUint32BE(index),\n    ]);\n    const derivation = hmacSha512(node.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = derivation.slice(0, tweakValueLength);\n    const nextChainCode = derivation.slice(tweakValueLength);\n    const nextPublicKey = crypto.secp256k1.addTweakPublicKeyCompressed(node.publicKey, tweakValue);\n    if (typeof nextPublicKey === 'string') {\n        const error = formatError(HdNodeDerivationError.invalidDerivedKey, `Invalid child index: ${index}.`, throwErrors);\n        if (returnInvalidNodes) {\n            return {\n                chainCode: nextChainCode,\n                childIndex: index,\n                depth,\n                invalidMaterial: tweakValue,\n                parentFingerprint,\n                parentIdentifier,\n            };\n        }\n        return error;\n    }\n    return {\n        chainCode: nextChainCode,\n        childIndex: index,\n        depth,\n        parentFingerprint,\n        parentIdentifier,\n        publicKey: nextPublicKey,\n    };\n};\n/**\n * Derive a child HD node from a parent node given a relative derivation path.\n * The resulting node is the same type as the parent node – private nodes return\n * private nodes, public nodes return public nodes. (To prevent implementation\n * errors, this function will not internally derive a public node from any\n * private node; for public derivation, use {@link deriveHdPublicNode} at the\n * desired BIP32 account level and provide the HD public key to this function.)\n *\n * Where possible, consider instead using {@link deriveHdPath} to reduce the\n * likelihood of implementation errors.\n *\n * By default, this function throws an `Error` rather than returning the error\n * as string when the provided path is invalid or cannot be derived from the\n * provided HD node (e.g. the path requests an excessive child index, a hardened\n * path is requested from a public node, or an astronomically rare HMAC-SHA512\n * result produces and invalid node).\n *\n * While the throwing behavior is reasonable for the common case of deriving\n * known, fixed paths (e.g. the BCH account as standardized by SLIP44 at\n * `m/44'/145'/0'`), **it is recommended that `throwErrors` be set to `false`\n * for use cases where dynamic or user-specified paths might be derived**. In\n * these cases, deliberate error handling is recommended, e.g. saving any data\n * and safely shutting down, displaying troubleshooting information to the\n * user, etc.\n *\n * The derivation path uses the notation specified in BIP32; see\n * {@link deriveHdPath} for details.\n *\n * @param node - The HD node from which to begin the derivation – for private\n * derivation, an {@link HdPrivateNodeValid}; for public derivation,\n * an {@link HdPublicNodeValid}.\n * @param path - The relative BIP32 derivation path, e.g. `1'/2` or `3/4/5`.\n */\nexport const deriveHdPathRelative = (node, path, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n    sha512: internalSha512,\n}, throwErrors = true, } = {}) => {\n    if (path === '') {\n        return node;\n    }\n    const validRelativeDerivationPath = /^(?:[0-9]+'?)(?:\\/[0-9]+'?)*$/u;\n    if (!validRelativeDerivationPath.test(path)) {\n        return formatError(HdNodeDerivationError.invalidRelativeDerivationPath, `Invalid path: \"${path}\".`, throwErrors);\n    }\n    const parsed = path.split('/');\n    const isPrivateDerivation = 'privateKey' in node;\n    const base = 10;\n    const hardenedIndexOffset = 0x80000000;\n    const indexes = parsed.map((index) => index.endsWith(\"'\")\n        ? parseInt(index.slice(0, -1), base) + hardenedIndexOffset\n        : parseInt(index, base));\n    return (isPrivateDerivation\n        ? indexes.reduce((result, nextIndex) => typeof result === 'string'\n            ? result\n            : deriveHdPrivateNodeChild(result, nextIndex, {\n                crypto,\n                throwErrors,\n            }), node)\n        : indexes.reduce((result, nextIndex) => typeof result === 'string'\n            ? result\n            : deriveHdPublicNodeChild(result, nextIndex, {\n                crypto,\n                throwErrors,\n            }), node));\n};\n/**\n * Derive a child HD node from a master node given an absolute derivation path.\n * The resulting node is the same type as the parent node – private nodes return\n * private nodes, public nodes return public nodes. (To prevent implementation\n * errors, this function will not internally derive a public node from any\n * private node; for public derivation, use {@link deriveHdPublicNode} at the\n * desired BIP32 account level and provide the HD public key to this function.)\n *\n * The derivation path uses the notation specified in BIP32: the first character\n * must be either `m` for private derivation or `M` for public derivation,\n * followed by sets of `/` and a number representing the child index used in the\n * derivation at that depth. Hardened derivation is represented by a trailing\n * `'`, and may only appear in private derivation paths (hardened derivation\n * requires knowledge of the private key). Hardened child indexes are\n * represented with the hardened index offset (`2147483648`) subtracted.\n *\n * For example, `m/0/1'/2` uses private derivation (`m`), with child indexes in\n * the following order:\n *\n * `derivePrivate(derivePrivate(derivePrivate(node, 0), 2147483648 + 1), 2)`\n *\n * Likewise, `M/3/4/5` uses public derivation (`M`), with child indexes in the\n * following order:\n *\n * `derivePublic(derivePublic(derivePublic(node, 3), 4), 5)`\n *\n * Because hardened derivation requires a private node, paths that specify\n * public derivation (`M`) using hardened derivation (`'`) will return an error.\n * To derive the public node associated with a child private node that requires\n * hardened derivation, begin with private derivation, then provide the result\n * to {@link deriveHdPublicNode} or {@link deriveHdPathRelative}.\n *\n * By default, this function throws an `Error` rather than returning the error\n * as string when the provided path is invalid or cannot be derived from the\n * provided HD node (e.g. the path requests an excessive child index, a hardened\n * path is requested from a public node, or an astronomically rare HMAC-SHA512\n * result produces and invalid node).\n *\n * While the throwing behavior is reasonable for the common case of deriving\n * known, fixed paths (e.g. the BCH account as standardized by SLIP44 at\n * `m/44'/145'/0'`), **it is recommended that `throwErrors` be set to `false`\n * for use cases where dynamic or user-specified paths might be derived**. In\n * these cases, deliberate error handling is recommended, e.g. saving any data\n * and safely shutting down, displaying troubleshooting information to the\n * user, etc.\n *\n * @param node - The HD node from which to begin the derivation – for paths\n * beginning with `m`, an {@link HdPrivateNodeValid}; for paths beginning with\n * `M`, an {@link HdPublicNodeValid}.\n * @param path - The BIP32 derivation path, e.g. `m/0/1'/2` or `M/3/4/5`.\n */\n// eslint-disable-next-line complexity\nexport const deriveHdPath = (node, path, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n    sha512: internalSha512,\n}, throwErrors = true, } = {}) => {\n    if (node.depth !== 0) {\n        return formatError(HdNodeDerivationError.requiresZeroDepthNode, `Depth of provided HD node: ${node.depth}.`, throwErrors);\n    }\n    const validDerivationPath = /^[mM](?:\\/[0-9]+'?)*$/u;\n    if (!validDerivationPath.test(path)) {\n        return formatError(HdNodeDerivationError.invalidAbsoluteDerivationPath, `Invalid path: \"${path}\".`, throwErrors);\n    }\n    const parsed = path.split('/');\n    const isPrivateDerivation = 'privateKey' in node;\n    if (isPrivateDerivation && parsed[0] !== 'm') {\n        return formatError(HdNodeDerivationError.invalidPrivateDerivationPrefix, `Invalid path: \"${path}\".`, throwErrors);\n    }\n    if (!isPrivateDerivation && parsed[0] !== 'M') {\n        return formatError(HdNodeDerivationError.invalidPublicDerivationPrefix, `Invalid path: \"${path}\".`, throwErrors);\n    }\n    if (parsed.length === 1) {\n        return node;\n    }\n    const relativePath = parsed.slice(1).join('/');\n    return deriveHdPathRelative(node, relativePath, {\n        crypto,\n        throwErrors,\n    });\n};\nexport var HdNodeCrackingError;\n(function (HdNodeCrackingError) {\n    HdNodeCrackingError[\"cannotCrackHardenedDerivation\"] = \"HD node cracking error: cannot crack an HD parent node using hardened child node.\";\n})(HdNodeCrackingError || (HdNodeCrackingError = {}));\n/**\n * Derive the HD private node from a HD public node, given any non-hardened\n * child private node.\n *\n * This exploits the \"non-hardened\" BIP32 derivation algorithm. Because\n * non-hardened derivation only requires knowledge of the \"chain code\" (rather\n * than requiring knowledge of the parent private key) it's possible to\n * calculate the value by which the parent private key is \"tweaked\" to arrive at\n * the child private key. Since we have the child private key, we simply\n * subtract this \"tweaked\" amount to get back to the parent private key.\n *\n * The BIP32 \"hardened\" derivation algorithm is designed to address this\n * weakness. Using hardened derivation, child private nodes can be shared\n * without risk of leaking the parent private node, but this comes at the cost\n * of public node derivation. Given only a parent public node, it is not\n * possible to derive hardened child public keys, so applications must choose\n * between support for HD public node derivation or support for sharing child\n * private nodes.\n *\n * @param parentPublicNode - the parent HD public node for which to derive a\n * private node.\n * @param childPrivateNode - Any non-hardened child private node of the parent\n * node (only the `privateKey` and the `childIndex` are required).\n */\nexport const crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode = (parentPublicNode, childPrivateNode, { crypto = { sha512: internalSha512 }, } = {}) => {\n    const hardenedIndexOffset = 0x80000000;\n    if (childPrivateNode.childIndex >= hardenedIndexOffset) {\n        return HdNodeCrackingError.cannotCrackHardenedDerivation;\n    }\n    const serialization = Uint8Array.from([\n        ...parentPublicNode.publicKey,\n        ...numberToBinUint32BE(childPrivateNode.childIndex),\n    ]);\n    const derivation = hmacSha512(parentPublicNode.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = binToBigIntUint256BE(derivation.slice(0, tweakValueLength));\n    const childPrivateValue = binToBigIntUint256BE(childPrivateNode.privateKey);\n    const secp256k1OrderN = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\n    const trueMod = (n, m) => ((n % m) + m) % m;\n    const parentPrivateValue = trueMod(childPrivateValue - tweakValue, secp256k1OrderN);\n    const privateKey = bigIntToBinUint256BEClamped(parentPrivateValue);\n    return {\n        chainCode: parentPublicNode.chainCode,\n        childIndex: parentPublicNode.childIndex,\n        depth: parentPublicNode.depth,\n        parentFingerprint: parentPublicNode.parentFingerprint,\n        ...(parentPublicNode.parentIdentifier === undefined\n            ? {}\n            : { parentIdentifier: parentPublicNode.parentIdentifier }),\n        privateKey,\n    };\n};\n//# sourceMappingURL=hd-key.js.map","export var IdentifierResolutionType;\n(function (IdentifierResolutionType) {\n    IdentifierResolutionType[\"opcode\"] = \"opcode\";\n    IdentifierResolutionType[\"variable\"] = \"variable\";\n    IdentifierResolutionType[\"script\"] = \"script\";\n})(IdentifierResolutionType || (IdentifierResolutionType = {}));\nexport var IdentifierResolutionErrorType;\n(function (IdentifierResolutionErrorType) {\n    IdentifierResolutionErrorType[\"unknown\"] = \"unknown\";\n    IdentifierResolutionErrorType[\"variable\"] = \"variable\";\n    IdentifierResolutionErrorType[\"script\"] = \"script\";\n})(IdentifierResolutionErrorType || (IdentifierResolutionErrorType = {}));\n//# sourceMappingURL=language-types.js.map","import { binToHex, flattenBinArray } from '../format/format.js';\nimport { authenticationInstructionIsMalformed, decodeAuthenticationInstructions, encodeAuthenticationInstructionMalformed, OpcodesBCHCHIPs, vmNumberToBigInt, } from '../vm/vm.js';\nconst pluckStartPosition = (range) => ({\n    startColumn: range.startColumn,\n    startLineNumber: range.startLineNumber,\n});\nconst pluckEndPosition = (range) => ({\n    endColumn: range.endColumn,\n    endLineNumber: range.endLineNumber,\n});\n/**\n * Combine an array of `Range`s into a single larger `Range`.\n *\n * @param ranges - an array of `Range`s\n * @param parentRange - the range to assume if `ranges` is an empty array\n */\nexport const mergeRanges = (ranges, parentRange = {\n    endColumn: 0,\n    endLineNumber: 0,\n    startColumn: 0,\n    startLineNumber: 0,\n}) => {\n    const minimumRangesToMerge = 2;\n    const unsortedMerged = ranges.length < minimumRangesToMerge\n        ? ranges.length === 1\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                ranges[0]\n            : parentRange\n        : ranges.reduce(\n        // eslint-disable-next-line complexity\n        (merged, range) => ({\n            ...(range.endLineNumber > merged.endLineNumber\n                ? pluckEndPosition(range)\n                : range.endLineNumber === merged.endLineNumber &&\n                    range.endColumn > merged.endColumn\n                    ? pluckEndPosition(range)\n                    : pluckEndPosition(merged)),\n            ...(range.startLineNumber < merged.startLineNumber\n                ? pluckStartPosition(range)\n                : range.startLineNumber === merged.startLineNumber &&\n                    range.startColumn < merged.startColumn\n                    ? pluckStartPosition(range)\n                    : pluckStartPosition(merged)),\n        }), \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        ranges[0]);\n    return {\n        ...pluckEndPosition(unsortedMerged),\n        ...pluckStartPosition(unsortedMerged),\n    };\n};\n/**\n * Returns true if the `outerRange` fully contains the `innerRange`, otherwise,\n * `false`.\n *\n * @param outerRange - the bounds of the outer range\n * @param innerRange - the inner range to test\n * @param exclusive - disallow the `innerRange` from overlapping the\n * `outerRange` (such that the outer start and end columns may not be equal) –\n * defaults to `true`\n */\n// eslint-disable-next-line complexity\nexport const containsRange = (outerRange, innerRange, exclusive = true) => {\n    const startsAfter = outerRange.startLineNumber < innerRange.startLineNumber\n        ? true\n        : outerRange.startLineNumber === innerRange.startLineNumber\n            ? exclusive\n                ? outerRange.startColumn < innerRange.startColumn\n                : outerRange.startColumn <= innerRange.startColumn\n            : false;\n    const endsBefore = outerRange.endLineNumber > innerRange.endLineNumber\n        ? true\n        : outerRange.endLineNumber === innerRange.endLineNumber\n            ? exclusive\n                ? outerRange.endColumn > innerRange.endColumn\n                : outerRange.endColumn >= innerRange.endColumn\n            : false;\n    return startsAfter && endsBefore;\n};\n/**\n * Extract a list of the errors that occurred while resolving a script.\n *\n * @param resolvedScript - the result of {@link resolveScript} from which to\n * extract errors\n */\nexport const getResolutionErrors = (resolvedScript) => resolvedScript.reduce((errors, segment) => {\n    switch (segment.type) {\n        case 'error':\n            return [\n                ...errors,\n                {\n                    error: segment.value,\n                    ...(segment.missingIdentifier === undefined\n                        ? {}\n                        : {\n                            missingIdentifier: segment.missingIdentifier,\n                            owningEntity: segment.owningEntity,\n                        }),\n                    range: segment.range,\n                },\n            ];\n        case 'push':\n        case 'evaluation':\n            return [...errors, ...getResolutionErrors(segment.value)];\n        default:\n            return errors;\n    }\n}, []);\n/**\n * Verify that every error in the provided array can be resolved by providing\n * additional variables in the compilation data (rather than deeper issues, like\n * problems with the wallet template or wallet implementation).\n *\n * Note, errors are only recoverable if the \"entity ownership\" of each missing\n * identifier is known (specified in `CompilationData`'s `entityOwnership`).\n *\n * @param errors - an array of compilation errors\n */\nexport const allErrorsAreRecoverable = (errors) => errors.every((error) => 'missingIdentifier' in error && 'owningEntity' in error);\n/**\n * Get an array of all resolutions used in a {@link ResolvedScript}.\n * @param resolvedScript - the resolved script to search\n */\nexport const extractBytecodeResolutions = (resolvedScript) => \n// eslint-disable-next-line complexity\nresolvedScript.reduce((all, segment) => {\n    switch (segment.type) {\n        case 'push':\n        case 'evaluation':\n            return [...all, ...extractBytecodeResolutions(segment.value)];\n        case 'bytecode':\n            if ('variable' in segment) {\n                return [\n                    ...all,\n                    {\n                        bytecode: segment.value,\n                        text: segment.variable,\n                        type: 'variable',\n                    },\n                ];\n            }\n            if ('script' in segment) {\n                return [\n                    ...all,\n                    ...extractBytecodeResolutions(segment.source.resolve),\n                    {\n                        bytecode: segment.value,\n                        text: segment.script,\n                        type: 'script',\n                    },\n                ];\n            }\n            if ('opcode' in segment) {\n                return [\n                    ...all,\n                    {\n                        bytecode: segment.value,\n                        text: segment.opcode,\n                        type: 'opcode',\n                    },\n                ];\n            }\n            return [\n                ...all,\n                {\n                    bytecode: segment.value,\n                    text: segment.literal,\n                    type: segment.literalType,\n                },\n            ];\n        default:\n            return all;\n    }\n}, []);\n/**\n * Extract an object mapping the variable identifiers used in a\n * {@link ResolvedScript} to their resolved bytecode.\n *\n * @param resolvedScript - the resolved script to search\n */\nexport const extractResolvedVariableBytecodeMap = (resolvedScript) => extractBytecodeResolutions(resolvedScript).reduce((all, resolution) => resolution.type === 'variable'\n    ? { ...all, [resolution.text]: resolution.bytecode }\n    : all, {});\n/**\n * Format a list of {@link CompilationError}s into a single string, with an\n * error start position following each error. E.g. for line 1, column 2:\n * `The error message. [1, 2]`\n *\n * Errors are separated with the `separator`, which defaults to `; `, e.g.:\n * `The first error message. [1, 2]; The second error message. [3, 4]`\n *\n * @param errors - an array of compilation errors\n * @param separator - the characters with which to join the formatted errors.\n */\nexport const stringifyErrors = (errors, separator = '; ') => errors\n    .map((error) => `[${error.range.startLineNumber}, ${error.range.startColumn}] ${error.error}`)\n    .join(separator);\n/**\n * Extract a set of \"evaluation samples\" from the result of a CashAssembly\n * compilation and a matching debug trace (from `vm.debug`), pairing program\n * states with the source ranges that produced them – like a \"source map\" for\n * complete evaluations. This is useful for omniscient debuggers like\n * Bitauth IDE.\n *\n * Returns an array of samples and an array of unmatched program states\n * remaining if `nodes` doesn't contain enough instructions to consume all\n * program states provided in `trace`. Returned samples are ordered by the\n * ending position (line and column) of their range.\n *\n * If all program states are consumed before the available nodes are exhausted,\n * the remaining nodes are ignored (the produced samples end at the last\n * instruction for which a program state exists). This usually occurs when an\n * error halts evaluation before the end of the script. (Note: if this occurs,\n * the final trace state will not be used, as it is expected to be the\n * duplicated final result produced by `vm.debug`, and should not be matched\n * with the next instruction. The returned `unmatchedStates` will have a length\n * of `0`.)\n *\n * This method allows for samples to be extracted from a single evaluation;\n * most applications should use\n * {@link extractEvaluationSamplesRecursive} instead.\n *\n * @remarks\n * This method incrementally concatenates the reduced bytecode from each node,\n * parsing the result into evaluation samples.\n *\n * Each node can contain only a portion of an instruction (like a long push\n * operation), or it can contain multiple instructions (like a long hex literal\n * representing a string of bytecode or an evaluation that is not wrapped by a\n * push).\n *\n * If a node contains only a portion of an instruction, the bytecode from\n * additional nodes are concatenated (and ranges merged) until an instruction\n * can be created. If any bytecode remains after a sample has been created, the\n * next sample begins in the same range. (For this reason, it's possible that\n * samples overlap.)\n *\n * If a node contains more than one instruction, the intermediate states\n * produced before the final state for that sample are saved to the sample's\n * `intermediateStates` array.\n *\n * If the program states in `trace` are exhausted before the final instruction\n * in a sample (usually caused by an evaluation error), the last instruction\n * with a matching program state is used for the sample (with its program\n * state), and the unmatched instructions are ignored. (This allows the \"last\n * known state\" to be displayed for the sample that caused evaluation to halt.)\n *\n * ---\n *\n * For example, the following script demonstrates many of these cases:\n *\n * `0x00 0x01 0xab01 0xcd9300 $(OP_3 <0x00> OP_SWAP OP_CAT) 0x010203`\n *\n * Which compiles to `0x0001ab01cd93000003010203`, disassembled:\n *\n * `OP_0 OP_PUSHBYTES_1 0xab OP_PUSHBYTES_1 0xcd OP_ADD OP_0 OP_0 OP_PUSHBYTES_3 0x010203`\n *\n * In the script, there are 6 top-level nodes (identified below within `[]`):\n *\n * `[0x00] [0x01] [0xab01] [0xcd9300] [$(OP_3 <0x00> OP_SWAP OP_CAT)] [0x010203]`\n *\n * These nodes together encode 7 instructions, some within a single node, and\n * some split between several nodes. Below we substitute the evaluation for its\n * result `0x0003` to group instructions by `[]`:\n *\n * `[0x00] [0x01 0xab][01 0xcd][93][00] [0x00][03 0x010203]`\n *\n * The \"resolution\" of samples is limited to the range of single nodes: nodes\n * cannot always be introspected to determine where contained instructions begin\n * and end. For example, it is ambiguous which portions of the evaluation are\n * responsible for the initial `0x00` and which are responsible for the `0x03`.\n *\n * For this reason, the range of each sample is limited to the range(s) of one\n * or more adjacent nodes. Samples may overlap in the range of a node that is\n * responsible for both ending a previous sample and beginning a new sample.\n * (Though, only 2 samples can overlap. If a node is responsible for more than 2\n * instructions, the second sample includes `internalStates` for instructions\n * that occur before the end of the second sample.)\n *\n * In this case, there are 6 samples identified below within `[]`, where each\n * `[` is closed by the closest following `]` (no nesting):\n *\n * `[0x00] [0x01 [0xab01] [0xcd9300]] [[$(OP_3 <0x00> OP_SWAP OP_CAT)] 0x010203]`\n *\n * The ranges for each sample (in terms of nodes) are as follows:\n * - Sample 1: node 1\n * - Sample 2: node 2 + node 3\n * - Sample 3: node 3 + node 4\n * - Sample 4: node 4\n * - Sample 5: node 5\n * - Sample 6: node 5 + node 6\n *\n * Note that the following samples overlap:\n * - Sample 2 and Sample 3\n * - Sample 3 and Sample 4\n * - Sample 5 and Sample 6\n *\n * Finally, note that Sample 4 will have one internal state produced by the\n * `OP_ADD` instruction. Sample 4 then ends with the `OP_0` (`0x00`) instruction\n * at the end of the `0xcd9300` node.\n *\n * ---\n *\n * Note, this implementation relies on the expectation that `trace` begins with\n * the initial program state, contains a single program state per instruction,\n * and ends with the final program state (as produced by `vm.debug`). It also\n * expects the `bytecode` provided by nodes to be parsable by\n * {@link decodeAuthenticationInstructions}.\n */\n// eslint-disable-next-line complexity\nexport const extractEvaluationSamples = ({ evaluationRange, nodes, trace, }) => {\n    const traceWithoutFinalState = trace.length > 1 ? trace.slice(0, -1) : trace.slice();\n    if (traceWithoutFinalState.length === 0) {\n        return {\n            samples: [],\n            unmatchedStates: [],\n        };\n    }\n    const samples = [\n        {\n            evaluationRange,\n            internalStates: [],\n            range: {\n                endColumn: evaluationRange.startColumn,\n                endLineNumber: evaluationRange.startLineNumber,\n                startColumn: evaluationRange.startColumn,\n                startLineNumber: evaluationRange.startLineNumber,\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            state: traceWithoutFinalState[0],\n        },\n    ];\n    // eslint-disable-next-line functional/no-let\n    let nextState = 1;\n    // eslint-disable-next-line functional/no-let\n    let nextNode = 0;\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let incomplete;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (nextState < traceWithoutFinalState.length && nextNode < nodes.length) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const currentNode = nodes[nextNode];\n        const { mergedBytecode, mergedRange } = incomplete === undefined\n            ? {\n                mergedBytecode: currentNode.bytecode,\n                mergedRange: currentNode.range,\n            }\n            : {\n                mergedBytecode: flattenBinArray([\n                    incomplete.bytecode,\n                    currentNode.bytecode,\n                ]),\n                mergedRange: mergeRanges([incomplete.range, currentNode.range]),\n            };\n        const decoded = decodeAuthenticationInstructions(mergedBytecode);\n        const [zeroth] = decoded;\n        const hasNonMalformedInstructions = zeroth !== undefined && !('malformed' in zeroth);\n        if (hasNonMalformedInstructions) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const lastInstruction = decoded[decoded.length - 1];\n            const validInstructions = authenticationInstructionIsMalformed(lastInstruction)\n                ? decoded.slice(0, decoded.length - 1)\n                : decoded;\n            const firstUnmatchedStateIndex = nextState + validInstructions.length;\n            const matchingStates = traceWithoutFinalState.slice(nextState, firstUnmatchedStateIndex);\n            const pairedStates = validInstructions.map((instruction, index) => ({\n                instruction,\n                state: matchingStates[index],\n            }));\n            /**\n             * Guaranteed to have a defined `state` (or the loop would have exited).\n             */\n            const firstPairedState = pairedStates[0];\n            const closesCurrentlyOpenSample = incomplete !== undefined;\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (closesCurrentlyOpenSample) {\n                // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n                samples.push({\n                    evaluationRange,\n                    instruction: firstPairedState.instruction,\n                    internalStates: [],\n                    range: mergedRange,\n                    state: firstPairedState.state,\n                });\n            }\n            const firstUndefinedStateIndex = pairedStates.findIndex(({ state }) => state === undefined);\n            const sampleHasError = firstUndefinedStateIndex !== -1;\n            const sampleClosingIndex = sampleHasError\n                ? firstUndefinedStateIndex - 1\n                : pairedStates.length - 1;\n            const closesASecondSample = !closesCurrentlyOpenSample || sampleClosingIndex > 0;\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (closesASecondSample) {\n                const finalState = pairedStates[sampleClosingIndex];\n                const secondSamplePairsBegin = closesCurrentlyOpenSample ? 1 : 0;\n                const internalStates = pairedStates.slice(secondSamplePairsBegin, sampleClosingIndex);\n                // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n                samples.push({\n                    evaluationRange,\n                    instruction: finalState.instruction,\n                    internalStates,\n                    range: currentNode.range,\n                    state: finalState.state,\n                });\n            }\n            // eslint-disable-next-line functional/no-expression-statements\n            nextState = firstUnmatchedStateIndex;\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (authenticationInstructionIsMalformed(lastInstruction)) {\n                // eslint-disable-next-line functional/no-expression-statements\n                incomplete = {\n                    bytecode: encodeAuthenticationInstructionMalformed(lastInstruction),\n                    range: currentNode.range,\n                };\n                // eslint-disable-next-line functional/no-conditional-statements\n            }\n            else {\n                // eslint-disable-next-line functional/no-expression-statements\n                incomplete = undefined;\n            }\n            // eslint-disable-next-line functional/no-conditional-statements\n        }\n        else {\n            const lastInstruction = decoded[decoded.length - 1];\n            // eslint-disable-next-line functional/no-expression-statements\n            incomplete =\n                lastInstruction === undefined\n                    ? undefined\n                    : {\n                        bytecode: encodeAuthenticationInstructionMalformed(lastInstruction),\n                        range: mergedRange,\n                    };\n        }\n        // eslint-disable-next-line functional/no-expression-statements\n        nextNode += 1;\n    }\n    /**\n     * Because we ran out of `trace` states before all `nodes` were matched, we\n     * know an error occurred which halted evaluation. This error is indicated in\n     * the result by returning an empty array of `unmatchedStates`. Successful\n     * evaluations will always return at least one unmatched state: the final\n     * \"evaluation result\" state produced by `vm.debug`.\n     */\n    const errorOccurred = nextNode < nodes.length;\n    const unmatchedStates = errorOccurred\n        ? []\n        : trace.slice(nextState);\n    return {\n        samples,\n        unmatchedStates,\n    };\n};\n/**\n * Similar to {@link extractEvaluationSamples}, but recursively extracts samples\n * from evaluations within the provided array of nodes.\n *\n * Because CashAssembly evaluations are fully self-contained, there should never\n * be unmatched states from evaluations within a script reduction trace tree.\n * (For this reason, this method does not return the `unmatchedStates` from\n * nested evaluations.)\n *\n * Returned samples are ordered by the ending position (line and column) of\n * their range. Samples from CashAssembly evaluations that occur within an\n * outer evaluation appear before their parent sample (which uses their result).\n */\nexport const extractEvaluationSamplesRecursive = ({ \n/**\n * The range of the script node that was evaluated to produce the `trace`\n */\nevaluationRange, \n/**\n * An array of reduced nodes to parse\n */\nnodes, \n/**\n * The `vm.debug` result to map to these nodes\n */\ntrace, }) => {\n    const extractEvaluations = (node, depth = 1) => {\n        if ('push' in node) {\n            return node.push.script.reduce((all, childNode) => [...all, ...extractEvaluations(childNode, depth)], []);\n        }\n        if ('source' in node) {\n            const childSamples = node.source.script.reduce((all, childNode) => [\n                ...all,\n                ...extractEvaluations(childNode, depth + 1),\n            ], []);\n            const traceWithoutUnlockingPhase = node.trace.slice(1);\n            const evaluationBeginToken = '$(';\n            const evaluationEndToken = ')';\n            const extracted = extractEvaluationSamples({\n                evaluationRange: {\n                    endColumn: node.range.endColumn - evaluationEndToken.length,\n                    endLineNumber: node.range.endLineNumber,\n                    startColumn: node.range.startColumn + evaluationBeginToken.length,\n                    startLineNumber: node.range.startLineNumber,\n                },\n                nodes: node.source.script,\n                trace: traceWithoutUnlockingPhase,\n            });\n            return [...extracted.samples, ...childSamples];\n        }\n        return [];\n    };\n    const { samples, unmatchedStates } = extractEvaluationSamples({\n        evaluationRange,\n        nodes,\n        trace,\n    });\n    const childSamples = nodes.reduce((all, node) => [...all, ...extractEvaluations(node)], []);\n    const endingOrderedSamples = [...samples, ...childSamples].sort((a, b) => {\n        const linesOrdered = a.range.endLineNumber - b.range.endLineNumber;\n        return linesOrdered === 0\n            ? a.range.endColumn - b.range.endColumn\n            : linesOrdered;\n    });\n    return {\n        samples: endingOrderedSamples,\n        unmatchedStates,\n    };\n};\nconst stateIsExecuting = (state) => state.controlStack.every((item) => item !== false);\n/**\n * Extract an array of ranges that were unused by an evaluation. This is useful\n * in development tooling for fading out or hiding code that is unimportant to\n * the current evaluation being tested.\n *\n * @remarks\n * Only ranges that are guaranteed to be unimportant to an evaluation are\n * returned by this method. These ranges are extracted from samples that:\n * - are preceded by a sample that ends with execution disabled (e.g. an\n * unsuccessful `OP_IF`)\n * - end with execution disabled, and\n * - contain no `internalStates` that enable execution.\n *\n * Note, internal states that temporarily re-enable and then disable execution\n * again can still have an effect on the parent evaluation, so this method\n * conservatively excludes such samples. For example, the hex literal\n * `0x675167`, which encodes `OP_ELSE OP_1 OP_ELSE`, could begin and end with\n * states in which execution is disabled, yet a `1` is pushed to the stack\n * during the sample's evaluation. (Samples like this are unusual, and can\n * almost always be reformatted to clearly separate the executed and unexecuted\n * instructions.)\n *\n * @param samples - an array of samples ordered by the ending position (line and\n * column) of their range.\n * @param evaluationBegins - the line and column at which the initial sample's\n * evaluation range begins (where the preceding state is assumed to be\n * executing), defaults to `1,1`\n */\nexport const extractUnexecutedRanges = (samples, evaluationBegins = '1,1') => {\n    const reduced = samples.reduce((all, sample) => {\n        const { precedingStateSkipsByEvaluation, unexecutedRanges } = all;\n        const currentEvaluationStartLineAndColumn = `${sample.evaluationRange.startLineNumber},${sample.evaluationRange.startColumn}`;\n        const precedingStateSkips = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        precedingStateSkipsByEvaluation[currentEvaluationStartLineAndColumn];\n        const endsWithSkip = !stateIsExecuting(sample.state);\n        const sampleHasNoExecutedInstructions = endsWithSkip &&\n            sample.internalStates.every((group) => !stateIsExecuting(group.state));\n        if (precedingStateSkips && sampleHasNoExecutedInstructions) {\n            return {\n                precedingStateSkipsByEvaluation: {\n                    ...precedingStateSkipsByEvaluation,\n                    [currentEvaluationStartLineAndColumn]: true,\n                },\n                unexecutedRanges: [...unexecutedRanges, sample.range],\n            };\n        }\n        return {\n            precedingStateSkipsByEvaluation: {\n                ...precedingStateSkipsByEvaluation,\n                [currentEvaluationStartLineAndColumn]: endsWithSkip,\n            },\n            unexecutedRanges,\n        };\n    }, {\n        precedingStateSkipsByEvaluation: {\n            [evaluationBegins]: false,\n        },\n        unexecutedRanges: [],\n    });\n    const canHaveContainedRanges = 2;\n    const containedRangesExcluded = reduced.unexecutedRanges.length < canHaveContainedRanges\n        ? reduced.unexecutedRanges\n        : reduced.unexecutedRanges.slice(0, -1).reduceRight((all, range) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            if (containsRange(all[0], range)) {\n                return all;\n            }\n            return [range, ...all];\n        }, \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        [reduced.unexecutedRanges[reduced.unexecutedRanges.length - 1]]);\n    return containedRangesExcluded;\n};\n/**\n * Given a stack, return a summary of the stack's contents, encoding valid VM\n * numbers as numbers, and all other stack items as hex literals.\n *\n * @param stack - a stack of Uint8Array values\n */\nexport const summarizeStack = (stack) => stack.map((item) => {\n    const asNumber = vmNumberToBigInt(item);\n    return `0x${binToHex(item)}${typeof asNumber === 'string' ? '' : `(${asNumber.toString()})`}`;\n});\n/**\n * Given a debug trace (produced by {@link AuthenticationVirtualMachine.debug}),\n * return an array summarizing each step of the trace. Note, debug traces\n * include the full program state at the beginning of each evaluation step; the\n * summary produced by this method instead shows the resulting stacks after each\n * evaluation step.\n */\nexport const summarizeDebugTrace = (trace) => trace.reduce(\n// eslint-disable-next-line @typescript-eslint/max-params\n(steps, state, stateIndex, states) => {\n    const nextState = states[stateIndex + 1];\n    return nextState === undefined\n        ? steps\n        : [\n            ...steps,\n            {\n                alternateStack: summarizeStack(nextState.alternateStack),\n                ...(nextState.error === undefined\n                    ? {}\n                    : { error: nextState.error }),\n                execute: state.controlStack[state.controlStack.length - 1] !== false,\n                instruction: state.instructions[state.ip],\n                ip: state.ip,\n                stack: summarizeStack(nextState.stack),\n            },\n        ];\n}, []);\nconst reasonablePaddingForInstructionSetBCH = 23;\n/**\n * Return a string with the result of {@link summarizeDebugTrace} including one\n * step per line.\n *\n * @param summary - a summary produced by {@link summarizeDebugTrace}\n */\nexport const stringifyDebugTraceSummary = (summary, { opcodes = OpcodesBCHCHIPs, padInstruction = reasonablePaddingForInstructionSetBCH, } = {}) => summary\n    .map(\n// eslint-disable-next-line complexity\n(line) => `${(line.instruction === undefined\n    ? '=>'\n    : `${line.ip}. ${line.execute ? '' : '(skip)'}${opcodes[line.instruction.opcode] ??\n        `OP_UNKNOWN${line.instruction.opcode}`}:`).padEnd(padInstruction)} ${typeof line.error === 'string'\n    ? line.error\n    : `${line.stack.join(' ')}${line.alternateStack.length === 0\n        ? ''\n        : `| alt: ${line.alternateStack.join(' ')}`}`}`)\n    .join('\\n');\n//# sourceMappingURL=language-utils.js.map","/**\n * This file is derived from https://github.com/jneen/parsimmon and\n * https://github.com/DefinitelyTyped/DefinitelyTyped.\n */\n/* eslint-disable @typescript-eslint/unified-signatures, functional/prefer-property-signatures, functional/no-throw-statements, functional/no-conditional-statements, @typescript-eslint/no-this-alias, consistent-this, @typescript-eslint/ban-ts-comment, prefer-spread, func-names, @typescript-eslint/init-declarations, new-cap, guard-for-in, no-plusplus, functional/no-let, functional/no-loop-statements, @typescript-eslint/prefer-for-of, functional/immutable-data, @typescript-eslint/no-use-before-define, @typescript-eslint/strict-boolean-expressions, no-param-reassign, functional/no-expression-statements, functional/no-this-expressions, @typescript-eslint/no-explicit-any, func-style, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-return, @typescript-eslint/naming-convention, @typescript-eslint/method-signature-style, @typescript-eslint/no-confusing-void-expression, prefer-arrow-callback, functional/no-return-void, @typescript-eslint/no-unsafe-argument, functional/functional-parameters */\n// cspell: ignore accum\nfunction Parsimmon(action) {\n    // @ts-expect-error\n    if (!(this instanceof Parsimmon)) {\n        // @ts-expect-error\n        return new Parsimmon(action);\n    }\n    // @ts-expect-error\n    this._ = action;\n}\nconst _ = Parsimmon.prototype;\n// -*- Helpers -*-\nfunction makeSuccess(index, value) {\n    return {\n        expected: [],\n        furthest: -1,\n        index,\n        status: true,\n        value,\n    };\n}\nfunction makeFailure(index, expected) {\n    expected = [expected];\n    return {\n        expected,\n        furthest: index,\n        index: -1,\n        status: false,\n        value: null,\n    };\n}\nfunction mergeReplies(result, last) {\n    if (!last) {\n        return result;\n    }\n    if (result.furthest > last.furthest) {\n        return result;\n    }\n    const expected = result.furthest === last.furthest\n        ? union(result.expected, last.expected)\n        : last.expected;\n    return {\n        expected,\n        furthest: last.furthest,\n        index: result.index,\n        status: result.status,\n        value: result.value,\n    };\n}\nfunction makeLineColumnIndex(input, i) {\n    const lines = input.slice(0, i).split('\\n');\n    /*\n     * Note that unlike the character offset, the line and column offsets are\n     * 1-based.\n     */\n    const lineWeAreUpTo = lines.length;\n    const columnWeAreUpTo = lines[lines.length - 1].length + 1;\n    return {\n        column: columnWeAreUpTo,\n        line: lineWeAreUpTo,\n        offset: i,\n    };\n}\n// Returns the sorted set union of two arrays of strings\nfunction union(xs, ys) {\n    const obj = {};\n    for (let i = 0; i < xs.length; i++) {\n        // @ts-expect-error\n        obj[xs[i]] = true;\n    }\n    for (let j = 0; j < ys.length; j++) {\n        // @ts-expect-error\n        obj[ys[j]] = true;\n    }\n    const keys = [];\n    for (const k in obj) {\n        keys.push(k);\n    }\n    keys.sort();\n    return keys;\n}\n// -*- Error Formatting -*-\nfunction flags(re) {\n    const s = String(re);\n    return s.slice(s.lastIndexOf('/') + 1);\n}\nfunction anchoredRegexp(re) {\n    return RegExp(`^(?:${re.source})`, flags(re));\n}\n// -*- Combinators -*-\nfunction seq(...params) {\n    const parsers = [].slice.call(params);\n    const numParsers = parsers.length;\n    return Parsimmon(function (input, i) {\n        let result;\n        const accum = new Array(numParsers);\n        for (let j = 0; j < numParsers; j += 1) {\n            result = mergeReplies(parsers[j]._(input, i), result);\n            if (!result.status) {\n                return result;\n            }\n            accum[j] = result.value;\n            i = result.index;\n        }\n        return mergeReplies(makeSuccess(i, accum), result);\n    });\n}\nfunction seqMap(...params) {\n    const args = [].slice.call(params);\n    const mapper = args.pop();\n    return seq.apply(null, args).map(function (results) {\n        // @ts-expect-error\n        return mapper.apply(null, results);\n    });\n}\nfunction createLanguage(parsers) {\n    const language = {};\n    for (const key in parsers) {\n        (function (rule) {\n            const func = function () {\n                // @ts-expect-error\n                return parsers[rule](language);\n            };\n            // @ts-expect-error\n            language[rule] = lazy(func);\n        })(key);\n    }\n    return language;\n}\nfunction alt(...params) {\n    const parsers = [].slice.call(params);\n    return Parsimmon(function (input, i) {\n        let result;\n        for (let j = 0; j < parsers.length; j += 1) {\n            result = mergeReplies(parsers[j]._(input, i), result);\n            if (result.status) {\n                return result;\n            }\n        }\n        return result;\n    });\n}\nfunction sepBy(parser, separator) {\n    return sepBy1(parser, separator).or(succeed([]));\n}\nfunction sepBy1(parser, separator) {\n    const pairs = separator.then(parser).many();\n    return seqMap(parser, pairs, function (r, rs) {\n        return [r].concat(rs);\n    });\n}\n// -*- Core Parsing Methods -*-\n_.parse = function (input) {\n    const result = this.skip(eof)._(input, 0);\n    if (result.status) {\n        return {\n            status: true,\n            value: result.value,\n        };\n    }\n    return {\n        expected: result.expected,\n        index: makeLineColumnIndex(input, result.furthest),\n        status: false,\n    };\n};\n// -*- Other Methods -*-\n_.or = function (alternative) {\n    return alt(this, alternative);\n};\n_.then = function (next) {\n    return seq(this, next).map(function (results) {\n        return results[1];\n    });\n};\n_.many = function () {\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const accum = [];\n        let result;\n        for (;;) {\n            result = mergeReplies(self._(input, i), result);\n            if (result.status) {\n                /* c8 ignore next 6 */\n                if (i === result.index) {\n                    throw new Error('infinite loop detected in .many() parser --- calling .many() on ' +\n                        'a parser that can accept zero characters is usually the cause');\n                }\n                i = result.index;\n                accum.push(result.value);\n            }\n            else {\n                return mergeReplies(makeSuccess(i, accum), result);\n            }\n        }\n    });\n};\n_.map = function (fn) {\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const result = self._(input, i);\n        if (!result.status) {\n            return result;\n        }\n        return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\n    });\n};\n_.skip = function (next) {\n    return seq(this, next).map(function (results) {\n        return results[0];\n    });\n};\n_.node = function (name) {\n    return seqMap(index, this, index, function (start, value, end) {\n        return {\n            end,\n            name,\n            start,\n            value,\n        };\n    });\n};\n_.sepBy = function (separator) {\n    return sepBy(this, separator);\n};\n_.desc = function (expected) {\n    expected = [expected];\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const reply = self._(input, i);\n        if (!reply.status) {\n            reply.expected = expected;\n        }\n        return reply;\n    });\n};\n// -*- Constructors -*-\nfunction string(str) {\n    const expected = `'${str}'`;\n    return Parsimmon(function (input, i) {\n        const j = i + str.length;\n        const head = input.slice(i, j);\n        if (head === str) {\n            return makeSuccess(j, head);\n        }\n        return makeFailure(i, expected);\n    });\n}\nfunction regexp(re, group = 0) {\n    const anchored = anchoredRegexp(re);\n    const expected = String(re);\n    return Parsimmon(function (input, i) {\n        const match = anchored.exec(input.slice(i));\n        if (match) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const fullMatch = match[0];\n            const groupMatch = match[group];\n            return makeSuccess(i + fullMatch.length, groupMatch);\n        }\n        return makeFailure(i, expected);\n    });\n}\nfunction succeed(value) {\n    return Parsimmon(function (__, i) {\n        return makeSuccess(i, value);\n    });\n}\nfunction lazy(f) {\n    const parser = Parsimmon(function (input, i) {\n        parser._ = f()._;\n        return parser._(input, i);\n    });\n    return parser;\n}\n// -*- Base Parsers -*-\nconst index = Parsimmon(function (input, i) {\n    return makeSuccess(i, makeLineColumnIndex(input, i));\n});\nconst eof = Parsimmon(function (input, i) {\n    if (i < input.length) {\n        return makeFailure(i, 'EOF');\n    }\n    return makeSuccess(i, null);\n});\nconst optWhitespace = regexp(/\\s*/u).desc('optional whitespace');\nconst whitespace = regexp(/\\s+/u).desc('whitespace');\nexport const P = {\n    alt,\n    createLanguage,\n    index,\n    lazy,\n    makeFailure,\n    makeSuccess,\n    of: succeed,\n    optWhitespace,\n    regexp,\n    sepBy,\n    sepBy1,\n    seq,\n    seqMap,\n    string,\n    succeed,\n    whitespace,\n};\n//# sourceMappingURL=parsimmon.js.map","import { lossyNormalize } from '../format/format.js';\nimport { P } from './parsimmon.js';\n/* eslint-disable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\nconst cashAssemblyParser = P.createLanguage({\n    script: (r) => P.seqMap(P.optWhitespace, r.expression.sepBy(P.optWhitespace), P.optWhitespace, (_, expressions) => expressions).node('Script'),\n    expression: (r) => P.alt(r.comment, r.push, r.evaluation, r.utf8, r.binary, r.hex, r.bigint, r.identifier),\n    comment: (r) => P.alt(r.singleLineComment, r.multiLineComment).node('Comment'),\n    singleLineComment: () => P.seqMap(P.string('//').desc(\"the start of a single-line comment ('//')\"), P.regexp(/[^\\n]*/u), (__, comment) => comment.trim()),\n    multiLineComment: () => P.seqMap(P.string('/*').desc(\"the start of a multi-line comment ('/*')\"), P.regexp(/[\\s\\S]*?\\*\\//u).desc(\"the end of this multi-line comment ('*/')\"), (__, comment) => comment.slice(0, -'*/'.length).trim()),\n    push: (r) => P.seqMap(P.string('<').desc(\"the start of a push statement ('<')\"), r.script, P.string('>').desc(\"the end of this push statement ('>')\"), (_, push) => push).node('Push'),\n    evaluation: (r) => P.seqMap(P.string('$').desc(\"the start of an evaluation ('$')\"), P.string('(').desc(\"the opening parenthesis of this evaluation ('(')\"), r.script, P.string(')').desc(\"the closing parenthesis of this evaluation (')')\"), (_, __, evaluation) => evaluation).node('Evaluation'),\n    identifier: () => P.regexp(/[a-zA-Z_][.a-zA-Z0-9_-]*/u)\n        .desc('a valid identifier')\n        .node('Identifier'),\n    utf8: () => P.alt(P.seqMap(P.string('\"').desc('a double quote (\")'), P.regexp(/[^\"]*/u), P.string('\"').desc('a closing double quote (\")'), (__, literal) => literal), P.seqMap(P.string(\"'\").desc(\"a single quote (')\"), P.regexp(/[^']*/u), P.string(\"'\").desc(\"a closing single quote (')\"), (__, literal) => literal)).node('UTF8Literal'),\n    hex: () => P.seqMap(P.string('0x').desc(\"a hex literal ('0x...')\"), P.regexp(/[0-9a-f]_*(?:_*[0-9a-f]_*[0-9a-f]_*)*[0-9a-f]/iu).desc('a valid hexadecimal string'), (__, literal) => literal).node('HexLiteral'),\n    binary: () => P.seqMap(P.string('0b').desc(\"a binary literal ('0b...')\"), P.regexp(/[01]+(?:[01_]*[01]+)*/iu).desc('a string of binary digits'), (__, literal) => literal).node('BinaryLiteral'),\n    bigint: () => P.regexp(/-?[0-9]+(?:[0-9_]*[0-9]+)*/u)\n        .desc('an integer literal')\n        .node('BigIntLiteral'),\n});\n/* eslint-enable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\nexport const parseScript = (script) => cashAssemblyParser.script.parse(lossyNormalize(script));\n//# sourceMappingURL=parse.js.map","import { flattenBinArray } from '../format/format.js';\nimport { AuthenticationErrorCommon, encodeDataPush } from '../vm/vm.js';\nimport { mergeRanges } from './language-utils.js';\nconst emptyReductionTraceNode = (range) => ({\n    bytecode: Uint8Array.of(),\n    range,\n});\n/**\n * Perform the standard verification of CashAssembly evaluation results. This\n * ensures that evaluations complete as expected: if an error occurs while\n * computing an evaluation, script compilation should fail.\n *\n * Three requirements are enforced:\n * - the evaluation may not produce an `error`\n * - the resulting stack must contain exactly 1 item\n * - the resulting execution stack must be empty (no missing `OP_ENDIF`s)\n *\n * This differs from the virtual machine's built-in `vm.verify` in that it is\n * often more lenient, for example, evaluations can succeed with a non-truthy\n * value on top of the stack.\n *\n * @param state - the final program state to verify\n */\nexport const verifyCashAssemblyEvaluationState = (state) => {\n    if (state.error !== undefined) {\n        return state.error;\n    }\n    if (state.controlStack.length !== 0) {\n        return AuthenticationErrorCommon.nonEmptyControlStack;\n    }\n    if (state.stack.length !== 1) {\n        return AuthenticationErrorCommon.requiresCleanStack;\n    }\n    return true;\n};\n/**\n * Reduce a resolved script, returning the resulting bytecode and a trace of the\n * reduction process.\n *\n * This method will return an error if provided a {@link resolvedScript} with\n * resolution errors. To check for resolution errors, use\n * {@link getResolutionErrors}.\n *\n * @param resolvedScript - the {@link CompiledScript} to reduce\n * @param vm - the {@link AuthenticationVirtualMachine} to use for evaluations\n * @param createEvaluationProgram - a method which accepts the compiled bytecode\n * of an evaluation and returns the authentication program used to evaluate it\n */\nexport const reduceScript = (resolvedScript, vm, createEvaluationProgram) => {\n    const script = resolvedScript.map((segment) => {\n        switch (segment.type) {\n            case 'bytecode':\n                return { bytecode: segment.value, range: segment.range };\n            case 'push': {\n                const push = reduceScript(segment.value, vm, createEvaluationProgram);\n                const bytecode = encodeDataPush(push.bytecode);\n                return {\n                    bytecode,\n                    ...(push.errors === undefined ? undefined : { errors: push.errors }),\n                    push,\n                    range: segment.range,\n                };\n            }\n            case 'evaluation': {\n                if (typeof vm === 'undefined' ||\n                    typeof createEvaluationProgram === 'undefined') {\n                    return {\n                        errors: [\n                            {\n                                error: 'Both a VM and a createState method are required to reduce evaluations.',\n                                range: segment.range,\n                            },\n                        ],\n                        ...emptyReductionTraceNode(segment.range),\n                    };\n                }\n                const reductionTrace = reduceScript(segment.value, vm, createEvaluationProgram);\n                if (reductionTrace.errors !== undefined) {\n                    return {\n                        ...emptyReductionTraceNode(segment.range),\n                        errors: reductionTrace.errors,\n                        source: reductionTrace,\n                        trace: [],\n                    };\n                }\n                const trace = vm.debug(createEvaluationProgram(reductionTrace.bytecode));\n                /**\n                 * `vm.debug` should always return at least one state.\n                 */\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const lastState = trace[trace.length - 1];\n                const result = verifyCashAssemblyEvaluationState(lastState);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const bytecode = lastState.stack[lastState.stack.length - 1];\n                return {\n                    ...(typeof result === 'string'\n                        ? {\n                            bytecode: Uint8Array.of(),\n                            errors: [\n                                {\n                                    error: `Failed to reduce evaluation: ${result}`,\n                                    range: segment.range,\n                                },\n                            ],\n                        }\n                        : {\n                            bytecode,\n                        }),\n                    range: segment.range,\n                    source: reductionTrace,\n                    trace,\n                };\n            }\n            case 'comment':\n                return emptyReductionTraceNode(segment.range);\n            case 'error':\n                return {\n                    errors: [\n                        {\n                            error: `Tried to reduce a CashAssembly script with resolution errors: ${segment.value}`,\n                            range: segment.range,\n                        },\n                    ],\n                    ...emptyReductionTraceNode(segment.range),\n                };\n            default:\n                // eslint-disable-next-line functional/no-throw-statements, @typescript-eslint/no-throw-literal\n                throw new Error(`\"${segment.type}\" is not a known segment type.`);\n        }\n    });\n    const reduction = script.reduce((all, segment) => ({\n        bytecode: [...all.bytecode, segment.bytecode],\n        ranges: [...all.ranges, segment.range],\n        ...(all.errors !== undefined || segment.errors !== undefined\n            ? {\n                errors: [...(all.errors ?? []), ...(segment.errors ?? [])],\n            }\n            : undefined),\n    }), { bytecode: [], ranges: [] });\n    return {\n        ...(reduction.errors === undefined\n            ? undefined\n            : { errors: reduction.errors }),\n        bytecode: flattenBinArray(reduction.bytecode),\n        range: mergeRanges(reduction.ranges, \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        resolvedScript.length === 0 ? undefined : resolvedScript[0].range),\n        script,\n    };\n};\n//# sourceMappingURL=reduce.js.map","import { binStringToBin, hexToBin, utf8ToBin } from '../format/format.js';\nimport { decodeHdPrivateKey, decodeHdPublicKey, validateSecp256k1PrivateKey, } from '../key/key.js';\nimport { bigIntToVmNumber } from '../vm/vm.js';\nimport { IdentifierResolutionErrorType, IdentifierResolutionType, } from './language-types.js';\nimport { getResolutionErrors, stringifyErrors } from './language-utils.js';\nimport { parseScript } from './parse.js';\nimport { reduceScript } from './reduce.js';\nconst pluckRange = (node) => ({\n    endColumn: node.end.column,\n    endLineNumber: node.end.line,\n    startColumn: node.start.column,\n    startLineNumber: node.start.line,\n});\nconst removeNumericSeparators = (numericLiteral) => numericLiteral.replace(/_/gu, '');\nexport const resolveScriptSegment = (segment, resolveIdentifiers) => {\n    // eslint-disable-next-line complexity\n    const resolved = segment.value.map((child) => {\n        const range = pluckRange(child);\n        switch (child.name) {\n            case 'Identifier': {\n                const identifier = child.value;\n                const result = resolveIdentifiers(identifier);\n                const ret = result.status\n                    ? {\n                        range,\n                        type: 'bytecode',\n                        value: result.bytecode,\n                        ...(result.type === IdentifierResolutionType.opcode\n                            ? {\n                                opcode: identifier,\n                            }\n                            : result.type === IdentifierResolutionType.variable\n                                ? {\n                                    ...('debug' in result ? { debug: result.debug } : {}),\n                                    ...('signature' in result\n                                        ? { signature: result.signature }\n                                        : {}),\n                                    variable: identifier,\n                                }\n                                : // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                                    result.type === IdentifierResolutionType.script\n                                        ? { script: identifier, source: result.source }\n                                        : { unknown: identifier }),\n                    }\n                    : {\n                        ...('debug' in result ? { debug: result.debug } : {}),\n                        ...('recoverable' in result && result.recoverable\n                            ? {\n                                missingIdentifier: identifier,\n                                owningEntity: result.entityOwnership,\n                            }\n                            : {}),\n                        range,\n                        type: 'error',\n                        value: result.error,\n                    };\n                return ret;\n            }\n            case 'Push':\n                return {\n                    range,\n                    type: 'push',\n                    value: resolveScriptSegment(child.value, resolveIdentifiers),\n                };\n            case 'Evaluation':\n                return {\n                    range,\n                    type: 'evaluation',\n                    value: resolveScriptSegment(child.value, resolveIdentifiers),\n                };\n            case 'BigIntLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'BigIntLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: bigIntToVmNumber(BigInt(removeNumericSeparators(child.value))),\n                };\n            case 'BinaryLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'BinaryLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: binStringToBin(removeNumericSeparators(child.value)),\n                };\n            case 'HexLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'HexLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: hexToBin(removeNumericSeparators(child.value)),\n                };\n            case 'UTF8Literal':\n                return {\n                    literal: child.value,\n                    literalType: 'UTF8Literal',\n                    range,\n                    type: 'bytecode',\n                    value: utf8ToBin(child.value),\n                };\n            case 'Comment':\n                return {\n                    range,\n                    type: 'comment',\n                    value: child.value,\n                };\n            default:\n                return {\n                    range,\n                    type: 'error',\n                    value: `Unrecognized segment: ${child.name}`,\n                };\n        }\n    });\n    return resolved.length === 0\n        ? [{ range: pluckRange(segment), type: 'comment', value: '' }]\n        : resolved;\n};\nexport var BuiltInVariables;\n(function (BuiltInVariables) {\n    BuiltInVariables[\"currentBlockTime\"] = \"current_block_time\";\n    BuiltInVariables[\"currentBlockHeight\"] = \"current_block_height\";\n    BuiltInVariables[\"signingSerialization\"] = \"signing_serialization\";\n})(BuiltInVariables || (BuiltInVariables = {}));\nconst attemptCompilerOperation = ({ data, configuration, identifier, matchingOperations, operationExample = 'operation_identifier', operationId, variableId, variableType, }) => {\n    if (matchingOperations === undefined) {\n        return {\n            error: `The \"${variableId}\" variable type can not be resolved because the \"${variableType}\" operation has not been included in this compiler's configuration.`,\n            status: 'error',\n        };\n    }\n    if (typeof matchingOperations === 'function') {\n        const operation = matchingOperations;\n        return operation(identifier, data, configuration);\n    }\n    if (operationId === undefined) {\n        return {\n            error: `This \"${variableId}\" variable could not be resolved because this compiler's \"${variableType}\" operations require an operation identifier, e.g. '${variableId}.${operationExample}'.`,\n            status: 'error',\n        };\n    }\n    const operation = matchingOperations[operationId];\n    if (operation === undefined) {\n        return {\n            error: `The identifier \"${identifier}\" could not be resolved because the \"${variableId}.${operationId}\" operation is not available to this compiler.`,\n            status: 'error',\n        };\n    }\n    return operation(identifier, data, configuration);\n};\n/**\n * If the identifier can be successfully resolved as a variable, the result is\n * returned as a Uint8Array. If the identifier references a known variable, but\n * an error occurs in resolving it, the error is returned as a string.\n * Otherwise, the identifier is not recognized as a variable, and this method\n * simply returns `false`.\n *\n * @param identifier - The full identifier used to describe this operation, e.g.\n * `owner.schnorr_signature.all_outputs`.\n * @param data - The {@link CompilationData} provided to the compiler\n * @param configuration - The {@link CompilerConfiguration} provided to\n * the compiler\n */\nexport const resolveVariableIdentifier = ({ data, configuration, identifier, }) => {\n    const [variableId, operationId] = identifier.split('.');\n    switch (variableId) {\n        case BuiltInVariables.currentBlockHeight:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.currentBlockHeight,\n                operationId,\n                variableId,\n                variableType: 'currentBlockHeight',\n            });\n        case BuiltInVariables.currentBlockTime:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.currentBlockTime,\n                operationId,\n                variableId,\n                variableType: 'currentBlockTime',\n            });\n        case BuiltInVariables.signingSerialization:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.signingSerialization,\n                operationExample: 'version',\n                operationId,\n                variableId,\n                variableType: 'signingSerialization',\n            });\n        default: {\n            const expectedVariable = configuration.variables?.[variableId];\n            if (expectedVariable === undefined) {\n                return { status: 'skip' };\n            }\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                operationId,\n                variableId,\n                ...{\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    AddressData: {\n                        matchingOperations: configuration.operations?.addressData,\n                        variableType: 'addressData',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    HdKey: {\n                        matchingOperations: configuration.operations?.hdKey,\n                        operationExample: 'public_key',\n                        variableType: 'hdKey',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    Key: {\n                        matchingOperations: configuration.operations?.key,\n                        operationExample: 'public_key',\n                        variableType: 'key',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    WalletData: {\n                        matchingOperations: configuration.operations?.walletData,\n                        variableType: 'walletData',\n                    },\n                }[expectedVariable.type],\n            });\n        }\n    }\n};\n/**\n * A text-formatting method to pretty-print the list of expected inputs\n * (`Encountered unexpected input while parsing script. Expected ...`). If\n * present, the `EOF` expectation is always moved to the end of the list.\n * @param expectedArray - the alphabetized list of expected inputs produced by\n * `parseScript`\n */\nexport const describeExpectedInput = (expectedArray) => {\n    /**\n     * The constant used by the parser to denote the end of the input\n     */\n    const EOF = 'EOF';\n    const newArray = expectedArray.filter((value) => value !== EOF);\n    // eslint-disable-next-line functional/no-conditional-statements\n    if (newArray.length !== expectedArray.length) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        newArray.push('the end of the script');\n    }\n    const withoutLastElement = newArray.slice(0, newArray.length - 1);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const lastElement = newArray[newArray.length - 1];\n    const arrayRequiresCommas = 3;\n    const arrayRequiresOr = 2;\n    return `Encountered unexpected input while parsing script. Expected ${newArray.length >= arrayRequiresCommas\n        ? withoutLastElement.join(', ').concat(`, or ${lastElement}`)\n        : newArray.length === arrayRequiresOr\n            ? newArray.join(' or ')\n            : lastElement}.`;\n};\nexport const createEmptyRange = () => ({\n    endColumn: 0,\n    endLineNumber: 0,\n    startColumn: 0,\n    startLineNumber: 0,\n});\n/**\n * Validate all compilation data (i.e. validate all public and private keys),\n * returning an array of validation errors. If no validity issues are detected,\n * an empty array is returned.\n *\n * The function ensures that compilation fails whenever invalid compilation data\n * is provided, regardless of whether or not the offending public or private key\n * material is used. This is intended to surface software defects (particularly\n * in the software used by counterparties) as early as possible.\n */\nexport const validateCompilationData = ({ configuration, data, }) => [\n    ...(data.bytecode === undefined\n        ? []\n        : Object.entries(data.bytecode)\n            .filter(([identifier]) => identifier.endsWith('.public_key'))\n            .reduce((all, [identifier, publicKey]) => all.concat(configuration.secp256k1?.validatePublicKey(publicKey) === true\n            ? []\n            : [\n                configuration.secp256k1 === undefined\n                    ? {\n                        error: `Could not validate compilation data: the public key provided for \"${identifier}\" could not be validated because the \"secp256k1\" property was not provided in the compiler configuration.`,\n                        range: createEmptyRange(),\n                    }\n                    : {\n                        error: `Invalid compilation data detected: the public key provided for \"${identifier}\" is not a valid Secp256k1 public key.`,\n                        range: createEmptyRange(),\n                    },\n            ]), [])),\n    ...(data.keys?.privateKeys === undefined\n        ? []\n        : Object.entries(data.keys.privateKeys).reduce((all, [variableId, privateKey]) => all.concat(validateSecp256k1PrivateKey(privateKey)\n            ? []\n            : [\n                {\n                    error: `Invalid compilation data detected: the private key provided for the \"${variableId}\" variable is not a valid Secp256k1 private key.`,\n                    range: createEmptyRange(),\n                },\n            ]), [])),\n    ...(data.hdKeys?.hdPrivateKeys === undefined\n        ? []\n        : Object.entries(data.hdKeys.hdPrivateKeys).reduce((all, [entityId, hdPrivateKey]) => {\n            const decoded = decodeHdPrivateKey(hdPrivateKey);\n            return all.concat(typeof decoded === 'string'\n                ? [\n                    {\n                        error: `Invalid compilation data detected: the HD private key provided for the \"${entityId}\" entity is not a valid HD private key. ${decoded}`,\n                        range: createEmptyRange(),\n                    },\n                ]\n                : []);\n        }, [])),\n    ...(data.hdKeys?.hdPublicKeys === undefined\n        ? []\n        : Object.entries(data.hdKeys.hdPublicKeys).reduce((all, [entityId, hdPublicKey]) => {\n            const decoded = decodeHdPublicKey(hdPublicKey);\n            return all.concat(typeof decoded === 'string'\n                ? [\n                    {\n                        error: `Invalid compilation data detected: the HD public key provided for the \"${entityId}\" entity is not a valid HD public key. ${decoded}`,\n                        range: createEmptyRange(),\n                    },\n                ]\n                : []);\n        }, [])),\n];\n/**\n * This method is generally for internal use. The {@link compileScript} method\n * is the recommended API for direct compilation.\n */\nexport const compileScriptRaw = ({ data, configuration, scriptId, }) => {\n    const script = configuration.scripts[scriptId];\n    if (script === undefined) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `No script with an ID of \"${scriptId}\" was provided in the compiler configuration.`,\n                    range: createEmptyRange(),\n                },\n            ],\n            success: false,\n        };\n    }\n    if (configuration.sourceScriptIds?.includes(scriptId) === true) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `A circular dependency was encountered: script \"${scriptId}\" relies on itself to be generated. (Source scripts: ${configuration.sourceScriptIds.join(' → ')})`,\n                    range: createEmptyRange(),\n                },\n            ],\n            success: false,\n        };\n    }\n    const sourceScriptIds = configuration.sourceScriptIds === undefined\n        ? [scriptId]\n        : [...configuration.sourceScriptIds, scriptId];\n    const dataErrors = validateCompilationData({ configuration, data });\n    if (dataErrors.length !== 0) {\n        return {\n            errorType: 'parse',\n            errors: dataErrors,\n            success: false,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return compileScriptContents({\n        configuration: { ...configuration, sourceScriptIds },\n        data,\n        script,\n    });\n};\n/**\n * Compile an internal script identifier.\n *\n * @remarks\n * If the identifier can be successfully resolved as a script, the script is\n * compiled and returned as a {@link CompilationResultSuccess}. If an error\n * occurs in compiling it, the error is returned as a string.\n *\n * Otherwise, the identifier is not recognized as a script, and this method\n * simply returns `false`.\n */\nexport const resolveScriptIdentifier = ({ data, configuration, identifier, }) => {\n    if (configuration.scripts[identifier] === undefined) {\n        return false;\n    }\n    const result = compileScriptRaw({\n        configuration,\n        data,\n        scriptId: identifier,\n    });\n    if (result.success) {\n        return result;\n    }\n    return `Compilation error in resolved script \"${identifier}\": ${stringifyErrors(result.errors)}`;\n};\n/**\n * Return an {@link IdentifierResolutionFunction} for use in\n * {@link resolveScriptSegment}.\n *\n * @param scriptId - the `id` of the script for which the resulting\n * `IdentifierResolutionFunction` will be used.\n */\nexport const createIdentifierResolver = ({ data, configuration, }) => \n// eslint-disable-next-line complexity\n(identifier) => {\n    const opcodeResult = configuration.opcodes?.[identifier];\n    if (opcodeResult !== undefined) {\n        return {\n            bytecode: opcodeResult,\n            status: true,\n            type: IdentifierResolutionType.opcode,\n        };\n    }\n    const variableResult = resolveVariableIdentifier({\n        configuration,\n        data,\n        identifier,\n    });\n    if (variableResult.status !== 'skip') {\n        return variableResult.status === 'error'\n            ? {\n                ...('debug' in variableResult\n                    ? { debug: variableResult.debug }\n                    : {}),\n                error: variableResult.error,\n                ...(configuration.entityOwnership === undefined\n                    ? {}\n                    : {\n                        entityOwnership: \n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        configuration.entityOwnership[identifier.split('.')[0]],\n                    }),\n                recoverable: 'recoverable' in variableResult,\n                status: false,\n                type: IdentifierResolutionErrorType.variable,\n            }\n            : {\n                ...('debug' in variableResult\n                    ? { debug: variableResult.debug }\n                    : {}),\n                bytecode: variableResult.bytecode,\n                ...('signature' in variableResult\n                    ? {\n                        signature: variableResult.signature,\n                    }\n                    : {}),\n                status: true,\n                type: IdentifierResolutionType.variable,\n            };\n    }\n    const scriptResult = resolveScriptIdentifier({\n        configuration,\n        data,\n        identifier,\n    });\n    if (scriptResult !== false) {\n        return typeof scriptResult === 'string'\n            ? {\n                error: scriptResult,\n                scriptId: identifier,\n                status: false,\n                type: IdentifierResolutionErrorType.script,\n            }\n            : {\n                bytecode: scriptResult.bytecode,\n                source: scriptResult,\n                status: true,\n                type: IdentifierResolutionType.script,\n            };\n    }\n    return {\n        error: `Unknown identifier \"${identifier}\".`,\n        status: false,\n        type: IdentifierResolutionErrorType.unknown,\n    };\n};\n/**\n * This method is generally for internal use. The {@link compileScript} method\n * is the recommended API for direct compilation.\n */\nexport const compileScriptContents = ({ data, configuration, script, }) => {\n    const parseResult = parseScript(script);\n    if (!parseResult.status) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: describeExpectedInput(parseResult.expected),\n                    range: {\n                        endColumn: parseResult.index.column,\n                        endLineNumber: parseResult.index.line,\n                        startColumn: parseResult.index.column,\n                        startLineNumber: parseResult.index.line,\n                    },\n                },\n            ],\n            success: false,\n        };\n    }\n    const resolver = createIdentifierResolver({ configuration, data });\n    const resolvedScript = resolveScriptSegment(parseResult.value, resolver);\n    const resolutionErrors = getResolutionErrors(resolvedScript);\n    if (resolutionErrors.length !== 0) {\n        return {\n            errorType: 'resolve',\n            errors: resolutionErrors,\n            parse: parseResult.value,\n            resolve: resolvedScript,\n            success: false,\n        };\n    }\n    const reduction = reduceScript(resolvedScript, configuration.vm, configuration.createAuthenticationProgram);\n    return {\n        ...(reduction.errors === undefined\n            ? { bytecode: reduction.bytecode, success: true }\n            : { errorType: 'reduce', errors: reduction.errors, success: false }),\n        parse: parseResult.value,\n        reduce: reduction,\n        resolve: resolvedScript,\n    };\n};\n//# sourceMappingURL=resolve.js.map","import { compileScriptRaw, createEmptyRange } from './resolve.js';\n/**\n * Parse, resolve, and reduce the selected script using the provided `data` and\n * `configuration`.\n *\n * Note, locktime validation only occurs if `compilationContext` is provided in\n * the configuration.\n */\n// eslint-disable-next-line complexity\nexport const compileScript = (scriptId, data, configuration) => {\n    const locktimeDisablingSequenceNumber = 0xffffffff;\n    const lockTimeTypeBecomesTimestamp = 500000000;\n    if (data.compilationContext?.transaction.locktime !== undefined) {\n        if (configuration.unlockingScriptTimeLockTypes?.[scriptId] === 'height' &&\n            data.compilationContext.transaction.locktime >=\n                lockTimeTypeBecomesTimestamp) {\n            return {\n                errorType: 'parse',\n                errors: [\n                    {\n                        error: `The script \"${scriptId}\" requires a height-based locktime (less than 500,000,000), but this transaction uses a timestamp-based locktime (\"${data.compilationContext.transaction.locktime}\").`,\n                        range: createEmptyRange(),\n                    },\n                ],\n                success: false,\n            };\n        }\n        if (configuration.unlockingScriptTimeLockTypes?.[scriptId] === 'timestamp' &&\n            data.compilationContext.transaction.locktime <\n                lockTimeTypeBecomesTimestamp) {\n            return {\n                errorType: 'parse',\n                errors: [\n                    {\n                        error: `The script \"${scriptId}\" requires a timestamp-based locktime (greater than or equal to 500,000,000), but this transaction uses a height-based locktime (\"${data.compilationContext.transaction.locktime}\").`,\n                        range: createEmptyRange(),\n                    },\n                ],\n                success: false,\n            };\n        }\n    }\n    if (data.compilationContext?.transaction.inputs[data.compilationContext.inputIndex]?.sequenceNumber !== undefined &&\n        configuration.unlockingScriptTimeLockTypes?.[scriptId] !== undefined &&\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].sequenceNumber === locktimeDisablingSequenceNumber) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `The script \"${scriptId}\" requires a locktime, but this input's sequence number is set to disable transaction locktime (0xffffffff). This will cause the OP_CHECKLOCKTIMEVERIFY operation to error when the transaction is verified. To be valid, this input must use a sequence number that does not disable locktime.`,\n                    range: createEmptyRange(),\n                },\n            ],\n            success: false,\n        };\n    }\n    const rawResult = compileScriptRaw({\n        configuration,\n        data,\n        scriptId,\n    });\n    if (!rawResult.success) {\n        return rawResult;\n    }\n    const unlocks = configuration.unlockingScripts?.[scriptId];\n    const unlockingScriptType = unlocks === undefined\n        ? undefined\n        : configuration.lockingScriptTypes?.[unlocks];\n    const isP2shUnlock = unlockingScriptType === 'p2sh20' || unlockingScriptType === 'p2sh32';\n    const lockingScriptType = configuration.lockingScriptTypes?.[scriptId];\n    const isP2shLock = lockingScriptType === 'p2sh20' || lockingScriptType === 'p2sh32';\n    if (isP2shLock) {\n        const transformedResult = compileScriptRaw({\n            configuration: {\n                ...configuration,\n                scripts: {\n                    p2sh20Locking: 'OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL',\n                    p2sh32Locking: 'OP_HASH256 <$(<lockingBytecode> OP_HASH256)> OP_EQUAL',\n                },\n                variables: { lockingBytecode: { type: 'AddressData' } },\n            },\n            data: { bytecode: { lockingBytecode: rawResult.bytecode } },\n            scriptId: lockingScriptType === 'p2sh20' ? 'p2sh20Locking' : 'p2sh32Locking',\n        });\n        if (!transformedResult.success) {\n            return transformedResult;\n        }\n        return {\n            ...rawResult,\n            bytecode: transformedResult.bytecode,\n            transformed: lockingScriptType === 'p2sh20' ? 'p2sh20-locking' : 'p2sh32-locking',\n        };\n    }\n    if (isP2shUnlock) {\n        const lockingBytecodeResult = compileScriptRaw({\n            configuration,\n            data,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            scriptId: unlocks,\n        });\n        if (!lockingBytecodeResult.success) {\n            return lockingBytecodeResult;\n        }\n        const transformedResult = compileScriptRaw({\n            configuration: {\n                ...configuration,\n                scripts: {\n                    p2shUnlocking: 'unlockingBytecode <lockingBytecode>',\n                },\n                variables: {\n                    lockingBytecode: { type: 'AddressData' },\n                    unlockingBytecode: { type: 'AddressData' },\n                },\n            },\n            data: {\n                bytecode: {\n                    lockingBytecode: lockingBytecodeResult.bytecode,\n                    unlockingBytecode: rawResult.bytecode,\n                },\n            },\n            scriptId: 'p2shUnlocking',\n        });\n        return {\n            ...rawResult,\n            bytecode: transformedResult.bytecode,\n            transformed: unlockingScriptType === 'p2sh20'\n                ? 'p2sh20-unlocking'\n                : 'p2sh32-unlocking',\n        };\n    }\n    return rawResult;\n};\n//# sourceMappingURL=compile.js.map","/* eslint-disable @typescript-eslint/no-duplicate-enum-values */\nexport var CompilerDefaults;\n(function (CompilerDefaults) {\n    /**\n     * The `addressIndex` used by the default scenario `data`.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioAddressIndex\"] = 0] = \"defaultScenarioAddressIndex\";\n    /**\n     * The value used for `[\"slot\"]` and `[\"copy\"]` locking or unlocking bytecode\n     * when generating a scenario and no `unlockingScriptId` is provided.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-mixed-enums\n    CompilerDefaults[\"defaultScenarioBytecode\"] = \"\";\n    /**\n     *\n     * The value of `currentBlockHeight` in the default wallet template\n     * scenario. This is the height of the second mined block after the genesis\n     * block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`.\n     *\n     * This default value was chosen to be low enough to simplify the debugging of\n     * block height offsets while remaining differentiated from `0` and `1`, which\n     * are used both as boolean return values and for control flow.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioCurrentBlockHeight\"] = 2] = \"defaultScenarioCurrentBlockHeight\";\n    /**\n     * The value of `currentBlockTime` in the default wallet template\n     * scenario. This is the Median Time-Past block time (BIP113) of block `2`\n     * (the block used in\n     * {@link CompilerDefaults.defaultScenarioCurrentBlockHeight}).\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioCurrentBlockTime\"] = 1231469665] = \"defaultScenarioCurrentBlockTime\";\n    /**\n     * The default `outpointTransactionHash` of inputs in scenarios.\n     */\n    CompilerDefaults[\"defaultScenarioInputOutpointTransactionHash\"] = \"0000000000000000000000000000000000000000000000000000000000000001\";\n    /**\n     * The default `category` of tokens in scenarios.\n     */\n    CompilerDefaults[\"defaultScenarioOutputTokenCategory\"] = \"0000000000000000000000000000000000000000000000000000000000000002\";\n    /**\n     * The default `sequenceNumber` of inputs in scenarios.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioInputSequenceNumber\"] = 0] = \"defaultScenarioInputSequenceNumber\";\n    /**\n     * The default `lockingBytecode` value for scenario outputs,\n     * `OP_RETURN <\"libauth\">` (hex: `6a076c696261757468`).\n     */\n    CompilerDefaults[\"defaultScenarioOutputLockingBytecode\"] = \"6a076c696261757468\";\n    /**\n     * The default `valueSatoshis` of outputs in scenarios.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioOutputValueSatoshis\"] = 0] = \"defaultScenarioOutputValueSatoshis\";\n    /**\n     * The value of `transaction.locktime` in the default wallet template\n     * scenario.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioTransactionLocktime\"] = 0] = \"defaultScenarioTransactionLocktime\";\n    /**\n     * The value of `transaction.version` in the default wallet template\n     * scenario. Transaction version `2` enables `OP_CHECKSEQUENCEVERIFY` as\n     * described in BIP68, BIP112, and BIP113.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioTransactionVersion\"] = 2] = \"defaultScenarioTransactionVersion\";\n    /**\n     *s\n     * If unset, each `HdKey` uses this `addressOffset`.\n     */\n    CompilerDefaults[CompilerDefaults[\"hdKeyAddressOffset\"] = 0] = \"hdKeyAddressOffset\";\n    /**\n     * If unset, each `HdKey` uses this `hdPublicKeyDerivationPath`.\n     */\n    CompilerDefaults[\"hdKeyHdPublicKeyDerivationPath\"] = \"\";\n    /**\n     * If unset, each `HdKey` uses this `privateDerivationPath`.\n     */\n    CompilerDefaults[\"hdKeyPrivateDerivationPath\"] = \"i\";\n    /**\n     * The prefix used to refer to other scenario bytecode scripts from within a\n     * bytecode script. See {@link WalletTemplateScenarioData.bytecode}\n     * for details.\n     */\n    CompilerDefaults[\"scenarioBytecodeScriptPrefix\"] = \"_scenario.\";\n})(CompilerDefaults || (CompilerDefaults = {}));\n//# sourceMappingURL=compiler-defaults.js.map","import { assertSuccess } from '../format/format.js';\nimport { decodeHdPrivateKey, deriveHdPath, deriveHdPathRelative, } from '../key/key.js';\nimport { resolveScriptIdentifier } from '../language/language.js';\nimport { CompilerDefaults } from './compiler-defaults.js';\n/**\n * Attempt a series of compiler operations, skipping to the next operation if\n * the current operation returns a {@link CompilerOperationSkip} (indicating it\n * failed and can be skipped). The `finalOperation` may not be skipped, and must\n * either return {@link CompilerOperationSuccess} or\n * {@link CompilerOperationError}.\n *\n * @param operations - an array of skippable operations to try\n * @param finalOperation - a final, un-skippable operation\n */\nexport const attemptCompilerOperations = (operations, finalOperation) => (identifier, data, configuration) => {\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const operation of operations) {\n        const result = operation(identifier, data, configuration);\n        if (result.status !== 'skip')\n            return result;\n    }\n    return finalOperation(identifier, data, configuration);\n};\n/**\n * Modify a compiler operation to verify that certain properties exist in the\n * {@link CompilationData} and {@link CompilerConfiguration} before executing\n * the provided operation. If the properties don't exist, an error message\n * is returned.\n *\n * This is useful for eliminating repetitive existence checks.\n */\nexport const compilerOperationRequires = ({ \n/**\n * If `true`, the accepted operation may return `false`, and any missing\n * properties will cause the returned operation to return `false` (meaning\n * the operation should be skipped)\n */\ncanBeSkipped, \n/**\n * An array of the top-level properties required in the\n * {@link CompilationData}.\n */\ndataProperties, \n/**\n * An array of the top-level properties required in the\n * {@link CompilerConfiguration}\n */\nconfigurationProperties, \n/**\n * The operation to run if all required properties exist\n */\noperation, }) => \n// eslint-disable-next-line complexity\n(identifier, data, configuration) => {\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const property of configurationProperties) {\n        if (configuration[property] === undefined)\n            return (canBeSkipped\n                ? { status: 'skip' }\n                : {\n                    error: `Cannot resolve \"${identifier}\" - the \"${property}\" property was not provided in the compiler configuration.`,\n                    status: 'error',\n                });\n    }\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const property of dataProperties) {\n        if (data[property] ===\n            undefined)\n            return (canBeSkipped\n                ? { status: 'skip' }\n                : {\n                    error: `Cannot resolve \"${identifier}\" - the \"${property}\" property was not provided in the compilation data.`,\n                    status: 'error',\n                });\n    }\n    return operation(identifier, data, configuration);\n};\nexport const compilerOperationAttemptBytecodeResolution = compilerOperationRequires({\n    canBeSkipped: true,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return { status: 'skip' };\n    },\n});\n// eslint-disable-next-line complexity\nexport const compilerOperationHelperDeriveHdPrivateNode = ({ addressIndex, entityId, entityHdPrivateKey, configuration, hdKey, identifier, }) => {\n    const addressOffset = hdKey.addressOffset ?? CompilerDefaults.hdKeyAddressOffset;\n    const privateDerivationPath = hdKey.privateDerivationPath ?? CompilerDefaults.hdKeyPrivateDerivationPath;\n    const i = addressIndex + addressOffset;\n    const validPrivatePathWithIndex = /^(?:m|i|[0-9]+)'?(?:\\/(?:[0-9]+|i)'?)*$/u;\n    if (!validPrivatePathWithIndex.test(privateDerivationPath)) {\n        return {\n            error: `Could not generate \"${identifier}\" - the path \"${privateDerivationPath}\" is not a valid \"privateDerivationPath\".`,\n            status: 'error',\n        };\n    }\n    /**\n     * Provided keys are already verified by `validateCompilationData`.\n     */\n    const masterContents = assertSuccess(decodeHdPrivateKey(entityHdPrivateKey, {\n        crypto: configuration,\n    }));\n    const instancePath = privateDerivationPath.replace('i', i.toString());\n    const usesAbsoluteDerivation = instancePath.includes('m');\n    const instanceNode = (usesAbsoluteDerivation ? deriveHdPath : deriveHdPathRelative)(masterContents.node, instancePath, {\n        crypto: configuration,\n        throwErrors: false,\n    });\n    if (typeof instanceNode === 'string') {\n        return {\n            error: `Could not generate \"${identifier}\" - the path \"${instancePath}\" could not be derived for entity \"${entityId}\": ${instanceNode}`,\n            status: 'error',\n        };\n    }\n    return {\n        bytecode: instanceNode.privateKey,\n        status: 'success',\n    };\n};\nexport const compilerOperationHelperUnknownEntity = (identifier, variableId) => ({\n    error: `Identifier \"${identifier}\" refers to an HdKey, but the \"entityOwnership\" for \"${variableId}\" is not available in this compiler configuration.`,\n    status: 'error',\n});\nexport const compilerOperationHelperAddressIndex = (identifier) => ({\n    error: `Identifier \"${identifier}\" refers to an HdKey, but \"hdKeys.addressIndex\" was not provided in the compilation data.`,\n    status: 'error',\n});\nexport const compilerOperationHelperDeriveHdKeyPrivate = ({ configuration, hdKeys, identifier, }) => {\n    const { addressIndex, hdPrivateKeys } = hdKeys;\n    const [variableId] = identifier.split('.');\n    const entityId = configuration.entityOwnership[variableId];\n    if (entityId === undefined) {\n        return compilerOperationHelperUnknownEntity(identifier, variableId);\n    }\n    if (addressIndex === undefined) {\n        return compilerOperationHelperAddressIndex(identifier);\n    }\n    const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];\n    if (entityHdPrivateKey === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" refers to an HdKey owned by \"${entityId}\", but an HD private key for this entity (or an existing signature) was not provided in the compilation data.`,\n            recoverable: true,\n            status: 'error',\n        };\n    }\n    /**\n     * Guaranteed to be an `HdKey` if this method is reached in the compiler.\n     */\n    const hdKey = configuration.variables[variableId];\n    return compilerOperationHelperDeriveHdPrivateNode({\n        addressIndex,\n        configuration,\n        entityHdPrivateKey,\n        entityId,\n        hdKey,\n        identifier,\n    });\n};\n/**\n * Returns `false` if the target script ID doesn't exist in the compiler\n * configuration (allows for the caller to generate the error message).\n *\n * If the compilation produced errors, returns a\n * {@link CompilerOperationErrorFatal}.\n *\n * If the compilation was successful, returns the compiled bytecode as a\n * `Uint8Array`.\n */\nexport const compilerOperationHelperCompileScript = ({ targetScriptId, data, configuration, }) => {\n    const signingTarget = configuration.scripts[targetScriptId];\n    const compiledTarget = resolveScriptIdentifier({\n        configuration,\n        data,\n        identifier: targetScriptId,\n    });\n    if (signingTarget === undefined || compiledTarget === false) {\n        return false;\n    }\n    if (typeof compiledTarget === 'string') {\n        return {\n            error: compiledTarget,\n            status: 'error',\n        };\n    }\n    return compiledTarget.bytecode;\n};\n/**\n * Returns either the properly generated `coveredBytecode` or a\n * {@link CompilerOperationErrorFatal}.\n */\nexport const compilerOperationHelperGenerateCoveredBytecode = ({ data, configuration, identifier, sourceScriptIds, unlockingScripts, }) => {\n    const currentScriptId = sourceScriptIds[sourceScriptIds.length - 1];\n    if (currentScriptId === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization, but \"coveredBytecode\" cannot be determined because the compiler configuration's \"sourceScriptIds\" is empty.`,\n            status: 'error',\n        };\n    }\n    const targetLockingScriptId = unlockingScripts[currentScriptId];\n    if (targetLockingScriptId === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization, but \"coveredBytecode\" cannot be determined because \"${currentScriptId}\" is not present in the compiler configuration's \"unlockingScripts\".`,\n            status: 'error',\n        };\n    }\n    const result = compilerOperationHelperCompileScript({\n        configuration,\n        data,\n        targetScriptId: targetLockingScriptId,\n    });\n    if (result === false) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization that covers an unknown locking script, \"${targetLockingScriptId}\".`,\n            status: 'error',\n        };\n    }\n    return result;\n};\n//# sourceMappingURL=compiler-operation-helpers.js.map","import { assertSuccess, bigIntToCompactUint, numberToBinUint32LE, valueSatoshisToBin, } from '../format/format.js';\nimport { decodeHdPublicKey, deriveHdPathRelative } from '../key/key.js';\nimport { encodeTransactionInputSequenceNumbersForSigning, encodeTransactionOutpoints, encodeTransactionOutputsForSigning, } from '../message/message.js';\nimport { bigIntToVmNumber, generateSigningSerializationComponentsBCH, } from '../vm/vm.js';\nimport { CompilerDefaults } from './compiler-defaults.js';\nimport { attemptCompilerOperations, compilerOperationAttemptBytecodeResolution, compilerOperationHelperAddressIndex, compilerOperationHelperDeriveHdPrivateNode, compilerOperationHelperGenerateCoveredBytecode, compilerOperationHelperUnknownEntity, compilerOperationRequires, } from './compiler-operation-helpers.js';\nexport const compilerOperationAddressData = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to an AddressData, but \"${identifier}\" was not provided in the CompilationData \"bytecode\".`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n});\nexport const compilerOperationWalletData = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to a WalletData, but \"${identifier}\" was not provided in the CompilationData \"bytecode\".`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n});\nexport const compilerOperationCurrentBlockTime = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['currentBlockTime'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(data.currentBlockTime),\n        status: 'success',\n    }),\n});\nexport const compilerOperationCurrentBlockHeight = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['currentBlockHeight'],\n    operation: (_, data) => ({\n        bytecode: bigIntToVmNumber(BigInt(data.currentBlockHeight)),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationCorrespondingOutput = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => {\n        const { correspondingOutput } = generateSigningSerializationComponentsBCH(data.compilationContext);\n        return correspondingOutput === undefined\n            ? { bytecode: Uint8Array.of(), status: 'success' }\n            : {\n                bytecode: correspondingOutput,\n                status: 'success',\n            };\n    },\n});\nexport const compilerOperationSigningSerializationCorrespondingOutputHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => {\n        const { correspondingOutput } = generateSigningSerializationComponentsBCH(data.compilationContext);\n        return correspondingOutput === undefined\n            ? { bytecode: Uint8Array.of(), status: 'success' }\n            : {\n                bytecode: configuration.sha256.hash(configuration.sha256.hash(correspondingOutput)),\n                status: 'success',\n            };\n    },\n});\nconst compilerOperationHelperSigningSerializationCoveredBytecode = (returnLength) => compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sourceScriptIds', 'unlockingScripts'],\n    dataProperties: ['compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { unlockingScripts, sourceScriptIds } = configuration;\n        const result = compilerOperationHelperGenerateCoveredBytecode({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return {\n            bytecode: returnLength\n                ? bigIntToCompactUint(BigInt(result.length))\n                : result,\n            status: 'success',\n        };\n    },\n});\nexport const compilerOperationSigningSerializationCoveredBytecode = compilerOperationHelperSigningSerializationCoveredBytecode(false);\nexport const compilerOperationSigningSerializationCoveredBytecodeLength = compilerOperationHelperSigningSerializationCoveredBytecode(true);\nexport const compilerOperationSigningSerializationLocktime = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(data.compilationContext.transaction.locktime),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationOutpointIndex = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].outpointIndex),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationOutpointTransactionHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].outpointTransactionHash,\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationOutputValue = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: valueSatoshisToBin(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.sourceOutputs[data.compilationContext.inputIndex].valueSatoshis),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationSequenceNumber = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].sequenceNumber),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionOutpoints = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: encodeTransactionOutpoints(data.compilationContext.transaction.inputs),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionOutpointsHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash(encodeTransactionOutpoints(data.compilationContext.transaction.inputs))),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionOutputs = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: encodeTransactionOutputsForSigning(data.compilationContext.transaction.outputs),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionOutputsHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash(encodeTransactionOutputsForSigning(data.compilationContext.transaction.outputs))),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionSequenceNumbers = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: encodeTransactionInputSequenceNumbersForSigning(data.compilationContext.transaction.inputs),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionSequenceNumbersHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash(encodeTransactionInputSequenceNumbersForSigning(data.compilationContext.transaction.inputs))),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationVersion = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(data.compilationContext.transaction.version),\n        status: 'success',\n    }),\n});\nexport const compilerOperationKeyPublicKeyCommon = attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['secp256k1'],\n    dataProperties: ['keys'],\n    operation: (identifier, data, configuration) => {\n        const { keys } = data;\n        const { secp256k1 } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        if (privateKeys?.[variableId] !== undefined) {\n            return {\n                bytecode: secp256k1.derivePublicKeyCompressed(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                privateKeys[variableId]),\n                status: 'success',\n            };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to a public key, but no public or private keys for \"${variableId}\" were provided in the compilation data.`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n}));\nexport const compilerOperationHdKeyPublicKeyCommon = attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n    ],\n    dataProperties: ['hdKeys'],\n    operation: \n    // eslint-disable-next-line complexity\n    (identifier, data, configuration) => {\n        const { hdKeys } = data;\n        const { hdPrivateKeys, addressIndex, hdPublicKeys } = hdKeys;\n        const [variableId] = identifier.split('.');\n        const entityId = configuration.entityOwnership[variableId];\n        if (entityId === undefined) {\n            return compilerOperationHelperUnknownEntity(identifier, variableId);\n        }\n        if (addressIndex === undefined) {\n            return compilerOperationHelperAddressIndex(identifier);\n        }\n        const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];\n        /**\n         * Guaranteed to be an `HdKey` if this method is reached in the compiler.\n         */\n        const hdKey = configuration.variables[variableId];\n        if (entityHdPrivateKey !== undefined) {\n            const privateResult = compilerOperationHelperDeriveHdPrivateNode({\n                addressIndex,\n                configuration,\n                entityHdPrivateKey,\n                entityId,\n                hdKey,\n                identifier,\n            });\n            if (privateResult.status === 'error')\n                return privateResult;\n            return {\n                bytecode: configuration.secp256k1.derivePublicKeyCompressed(privateResult.bytecode),\n                status: 'success',\n            };\n        }\n        const entityHdPublicKey = hdPublicKeys === undefined ? undefined : hdPublicKeys[entityId];\n        if (entityHdPublicKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to an HdKey owned by \"${entityId}\", but an HD private key or HD public key for this entity was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        const addressOffset = hdKey.addressOffset ?? CompilerDefaults.hdKeyAddressOffset;\n        const privateDerivationPath = hdKey.privateDerivationPath ??\n            CompilerDefaults.hdKeyPrivateDerivationPath;\n        const hdPublicKeyDerivationPath = hdKey.hdPublicKeyDerivationPath ??\n            CompilerDefaults.hdKeyHdPublicKeyDerivationPath;\n        const publicDerivationPath = hdKey.publicDerivationPath ?? privateDerivationPath.replace('m/', '');\n        const validHdPublicKeyDerivationPath = /^(?:m|[0-9]+)'?(?:\\/(?:[0-9]+'?))*$/u;\n        if (hdPublicKeyDerivationPath !== '' &&\n            !validHdPublicKeyDerivationPath.test(hdPublicKeyDerivationPath)) {\n            return {\n                error: `Could not generate \"${identifier}\" - \"hdPublicKeyDerivationPath\" (\"${hdPublicKeyDerivationPath}\") must be a fixed (no \"i\" characters), valid absolute derivation path.`,\n                status: 'error',\n            };\n        }\n        const expected = hdPublicKeyDerivationPath === ''\n            ? publicDerivationPath\n            : `${hdPublicKeyDerivationPath}/${publicDerivationPath}`;\n        if (privateDerivationPath !== expected) {\n            return {\n                error: `Could not generate \"${identifier}\" - \"privateDerivationPath\" (\"${privateDerivationPath}\") is expected to be the combination of \"hdPublicKeyDerivationPath\" and \"publicDerivationPath\": \"${expected}\".`,\n                status: 'error',\n            };\n        }\n        /**\n         * Provided keys are already verified by `validateCompilationData`.\n         */\n        const masterContents = assertSuccess(decodeHdPublicKey(entityHdPublicKey, {\n            crypto: configuration,\n        }));\n        const i = addressIndex + addressOffset;\n        const instancePath = publicDerivationPath.replace('i', i.toString());\n        const expectedDepth = hdPublicKeyDerivationPath.split('/').length - 1;\n        if (hdPublicKeyDerivationPath !== '' &&\n            masterContents.node.depth !== expectedDepth) {\n            return {\n                error: `Could not generate \"${identifier}\" - the HD public key derivation path (\"${hdPublicKeyDerivationPath}\") indicates an expected depth of ${expectedDepth}, but the provided HD public key has a depth of ${masterContents.node.depth}.`,\n                status: 'error',\n            };\n        }\n        const instanceNode = deriveHdPathRelative(masterContents.node, instancePath, { crypto: configuration, throwErrors: false });\n        if (typeof instanceNode === 'string') {\n            return {\n                error: `Could not generate \"${identifier}\" - the path \"${instancePath}\" could not be derived for entity \"${entityId}\": ${instanceNode}`,\n                status: 'error',\n            };\n        }\n        return { bytecode: instanceNode.publicKey, status: 'success' };\n    },\n}));\n/* eslint-disable camelcase, @typescript-eslint/naming-convention */\nexport const compilerOperationsCommon = {\n    addressData: compilerOperationAddressData,\n    currentBlockHeight: compilerOperationCurrentBlockHeight,\n    currentBlockTime: compilerOperationCurrentBlockTime,\n    hdKey: {\n        public_key: compilerOperationHdKeyPublicKeyCommon,\n    },\n    key: {\n        public_key: compilerOperationKeyPublicKeyCommon,\n    },\n    signingSerialization: {\n        corresponding_output: compilerOperationSigningSerializationCorrespondingOutput,\n        corresponding_output_hash: compilerOperationSigningSerializationCorrespondingOutputHash,\n        covered_bytecode: compilerOperationSigningSerializationCoveredBytecode,\n        covered_bytecode_length: compilerOperationSigningSerializationCoveredBytecodeLength,\n        locktime: compilerOperationSigningSerializationLocktime,\n        outpoint_index: compilerOperationSigningSerializationOutpointIndex,\n        outpoint_transaction_hash: compilerOperationSigningSerializationOutpointTransactionHash,\n        output_value: compilerOperationSigningSerializationOutputValue,\n        sequence_number: compilerOperationSigningSerializationSequenceNumber,\n        transaction_outpoints: compilerOperationSigningSerializationTransactionOutpoints,\n        transaction_outpoints_hash: compilerOperationSigningSerializationTransactionOutpointsHash,\n        transaction_outputs: compilerOperationSigningSerializationTransactionOutputs,\n        transaction_outputs_hash: compilerOperationSigningSerializationTransactionOutputsHash,\n        transaction_sequence_numbers: compilerOperationSigningSerializationTransactionSequenceNumbers,\n        transaction_sequence_numbers_hash: compilerOperationSigningSerializationTransactionSequenceNumbersHash,\n        version: compilerOperationSigningSerializationVersion,\n    },\n    walletData: compilerOperationWalletData,\n};\n/* eslint-enable camelcase, @typescript-eslint/naming-convention */\n//# sourceMappingURL=compiler-operations.js.map","/* eslint-disable max-lines */\nimport { bigIntToBinUint256BEClamped, binToHex, binToValueSatoshis, hexToBin, } from '../format/format.js';\nimport { deriveHdPrivateNodeFromSeed, encodeHdPrivateKey } from '../key/key.js';\nimport { compileScriptRaw, stringifyErrors } from '../language/language.js';\nimport { CompilerDefaults } from './compiler-defaults.js';\n/**\n * Given a compiler configuration, generate the default scenario that is\n * extended by all the configuration's scenarios.\n *\n * For details on default scenario generation, see\n * {@link WalletTemplateScenario.extends}.\n *\n * @param configuration - the compiler configuration from which to generate the\n * default scenario\n */\n// eslint-disable-next-line complexity\nexport const generateDefaultScenarioDefinition = (configuration) => {\n    const { variables, entityOwnership } = configuration;\n    const keyVariableIds = variables === undefined\n        ? []\n        : Object.entries(variables)\n            .filter((entry) => entry[1].type === 'Key')\n            .map(([id]) => id);\n    const entityIds = entityOwnership === undefined\n        ? []\n        : Object.keys(Object.values(entityOwnership).reduce((all, entityId) => ({ ...all, [entityId]: true }), {}));\n    const valueMap = [...keyVariableIds, ...entityIds]\n        .sort((idA, idB) => idA.localeCompare(idB, 'en'))\n        .reduce((all, id, index) => ({\n        ...all,\n        [id]: bigIntToBinUint256BEClamped(BigInt(index + 1)),\n    }), {});\n    const privateKeys = variables === undefined\n        ? undefined\n        : Object.entries(variables).reduce((all, [variableId, variable]) => variable.type === 'Key'\n            ? {\n                ...all,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                [variableId]: binToHex(valueMap[variableId]),\n            }\n            : all, {});\n    const defaultScenario = {\n        data: {\n            currentBlockHeight: CompilerDefaults.defaultScenarioCurrentBlockHeight,\n            currentBlockTime: CompilerDefaults.defaultScenarioCurrentBlockTime,\n            ...(privateKeys === undefined || Object.keys(privateKeys).length === 0\n                ? {}\n                : { keys: { privateKeys } }),\n        },\n        sourceOutputs: [{ lockingBytecode: ['slot'] }],\n        transaction: {\n            inputs: [{ unlockingBytecode: ['slot'] }],\n            locktime: CompilerDefaults.defaultScenarioTransactionLocktime,\n            outputs: [\n                {\n                    lockingBytecode: CompilerDefaults.defaultScenarioOutputLockingBytecode,\n                },\n            ],\n            version: CompilerDefaults.defaultScenarioTransactionVersion,\n        },\n    };\n    const hasHdKeys = variables === undefined\n        ? false\n        : Object.values(variables).findIndex((variable) => variable.type === 'HdKey') !== -1;\n    if (!hasHdKeys) {\n        return defaultScenario;\n    }\n    const { sha256, sha512 } = configuration;\n    if (sha256 === undefined) {\n        return 'An implementations of \"sha256\" is required to generate defaults for HD keys, but the \"sha256\" property is not included in this compiler configuration.';\n    }\n    if (sha512 === undefined) {\n        return 'An implementations of \"sha512\" is required to generate defaults for HD keys, but the \"sha512\" property is not included in this compiler configuration.';\n    }\n    const crypto = { sha256, sha512 };\n    const hdPrivateKeys = entityIds.reduce((all, entityId) => {\n        /**\n         * The first 5,000,000,000 seeds have been tested, scenarios are\n         * unlikely to exceed this number of entities.\n         */\n        const assumeValidity = true;\n        const masterNode = deriveHdPrivateNodeFromSeed(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        valueMap[entityId], { assumeValidity, crypto });\n        const { hdPrivateKey } = encodeHdPrivateKey({ network: 'mainnet', node: masterNode }, { crypto });\n        return { ...all, [entityId]: hdPrivateKey };\n    }, {});\n    return {\n        ...defaultScenario,\n        data: {\n            ...defaultScenario.data,\n            hdKeys: {\n                addressIndex: CompilerDefaults.defaultScenarioAddressIndex,\n                hdPrivateKeys,\n            },\n        },\n    };\n};\n/**\n * Extend the `data` property of a scenario definition with values from a parent\n * scenario definition. Returns the extended value for `data`.\n *\n * @param parentData - the scenario `data` that is extended by the child\n * scenario\n * @param childData - the scenario `data` that may override values from the\n * parent scenario\n */\n// eslint-disable-next-line complexity\nexport const extendScenarioDefinitionData = (parentData, childData) => ({\n    ...parentData,\n    ...childData,\n    ...(parentData.bytecode === undefined && childData.bytecode === undefined\n        ? {}\n        : {\n            bytecode: {\n                ...parentData.bytecode,\n                ...childData.bytecode,\n            },\n        }),\n    ...(parentData.hdKeys === undefined && childData.hdKeys === undefined\n        ? {}\n        : {\n            hdKeys: {\n                ...parentData.hdKeys,\n                ...childData.hdKeys,\n                ...(parentData.hdKeys?.hdPrivateKeys === undefined &&\n                    childData.hdKeys?.hdPrivateKeys === undefined\n                    ? {}\n                    : {\n                        hdPrivateKeys: {\n                            ...parentData.hdKeys?.hdPrivateKeys,\n                            ...childData.hdKeys?.hdPrivateKeys,\n                        },\n                    }),\n                ...(parentData.hdKeys?.hdPublicKeys === undefined &&\n                    childData.hdKeys?.hdPublicKeys === undefined\n                    ? {}\n                    : {\n                        hdPublicKeys: {\n                            ...parentData.hdKeys?.hdPublicKeys,\n                            ...childData.hdKeys?.hdPublicKeys,\n                        },\n                    }),\n            },\n        }),\n    ...(parentData.keys === undefined && childData.keys === undefined\n        ? {}\n        : {\n            keys: {\n                privateKeys: {\n                    ...parentData.keys?.privateKeys,\n                    ...childData.keys?.privateKeys,\n                },\n            },\n        }),\n});\n/**\n * Extend a child scenario definition with values from a parent scenario\n * definition. Returns the extended values for `data`, `transaction`, and\n * `value`.\n *\n * @param parentScenario - the scenario that is extended by the child scenario\n * @param childScenario - the scenario that may override values from the parent\n * scenario\n */\n// eslint-disable-next-line complexity\nexport const extendScenarioDefinition = (parentScenario, childScenario) => ({\n    ...(parentScenario.data === undefined && childScenario.data === undefined\n        ? {}\n        : {\n            data: extendScenarioDefinitionData(parentScenario.data ?? {}, childScenario.data ?? {}),\n        }),\n    ...(parentScenario.transaction === undefined &&\n        childScenario.transaction === undefined\n        ? {}\n        : {\n            transaction: {\n                ...parentScenario.transaction,\n                ...childScenario.transaction,\n            },\n        }),\n    ...(parentScenario.sourceOutputs === undefined &&\n        childScenario.sourceOutputs === undefined\n        ? {}\n        : {\n            sourceOutputs: childScenario.sourceOutputs ?? parentScenario.sourceOutputs,\n        }),\n});\n/**\n * Generate the full scenario that is extended by the provided scenario\n * identifier. Scenarios for which `extends` is `undefined` extend the default\n * scenario for the provided compiler configuration.\n */\n// eslint-disable-next-line complexity\nexport const generateExtendedScenario = ({ configuration, scenarioId, sourceScenarioIds = [], }) => {\n    if (scenarioId === undefined) {\n        return generateDefaultScenarioDefinition(configuration);\n    }\n    if (sourceScenarioIds.includes(scenarioId)) {\n        return `Cannot extend scenario \"${scenarioId}\": scenario \"${scenarioId}\" extends itself. Scenario inheritance path: ${sourceScenarioIds.join(' → ')}`;\n    }\n    const scenario = configuration.scenarios?.[scenarioId];\n    if (scenario === undefined) {\n        return `Cannot extend scenario \"${scenarioId}\": a scenario with the identifier ${scenarioId} is not included in this compiler configuration.`;\n    }\n    const parentScenario = scenario.extends === undefined\n        ? generateDefaultScenarioDefinition(configuration)\n        : generateExtendedScenario({\n            configuration,\n            scenarioId: scenario.extends,\n            sourceScenarioIds: [...sourceScenarioIds, scenarioId],\n        });\n    if (typeof parentScenario === 'string') {\n        return parentScenario;\n    }\n    return extendScenarioDefinition(parentScenario, scenario);\n};\n/**\n * Derive standard {@link CompilationData} properties from an extended scenario\n * definition.\n *\n * @param definition - a scenario definition that has been extended by the\n * default scenario definition\n */\n// eslint-disable-next-line complexity\nexport const extendedScenarioDefinitionToCompilationData = (definition) => ({\n    ...(definition.data.currentBlockHeight === undefined\n        ? {}\n        : {\n            currentBlockHeight: definition.data.currentBlockHeight,\n        }),\n    ...(definition.data.currentBlockTime === undefined\n        ? {}\n        : {\n            currentBlockTime: definition.data.currentBlockTime,\n        }),\n    ...(definition.data.hdKeys === undefined\n        ? {}\n        : {\n            hdKeys: {\n                ...(definition.data.hdKeys.addressIndex === undefined\n                    ? {}\n                    : {\n                        addressIndex: definition.data.hdKeys.addressIndex,\n                    }),\n                ...(definition.data.hdKeys.hdPrivateKeys !== undefined &&\n                    Object.keys(definition.data.hdKeys.hdPrivateKeys).length > 0\n                    ? {\n                        hdPrivateKeys: definition.data.hdKeys.hdPrivateKeys,\n                    }\n                    : {}),\n                ...(definition.data.hdKeys.hdPublicKeys === undefined\n                    ? {}\n                    : {\n                        hdPublicKeys: definition.data.hdKeys.hdPublicKeys,\n                    }),\n            },\n        }),\n    ...(definition.data.keys?.privateKeys !== undefined &&\n        Object.keys(definition.data.keys.privateKeys).length > 0\n        ? {\n            keys: {\n                privateKeys: Object.entries(definition.data.keys.privateKeys).reduce((all, [id, hex]) => ({ ...all, [id]: hexToBin(hex) }), {}),\n            },\n        }\n        : {}),\n});\n/**\n * Extend a {@link CompilationData} object with the compiled result of the\n * bytecode scripts provided by an {@link WalletTemplateScenarioData}.\n */\nexport const extendCompilationDataWithScenarioBytecode = ({ compilationData, configuration, scenarioDataBytecodeScripts, }) => {\n    const prefixBytecodeScriptId = (id) => `${CompilerDefaults.scenarioBytecodeScriptPrefix}${id}`;\n    const bytecodeScripts = Object.entries(scenarioDataBytecodeScripts).reduce((all, [id, script]) => ({\n        ...all,\n        [prefixBytecodeScriptId(id)]: script,\n    }), {});\n    const bytecodeScriptExtendedConfiguration = {\n        ...configuration,\n        scripts: {\n            ...configuration.scripts,\n            ...bytecodeScripts,\n        },\n    };\n    const bytecodeCompilations = Object.keys(scenarioDataBytecodeScripts).map((id) => {\n        const result = compileScriptRaw({\n            configuration: bytecodeScriptExtendedConfiguration,\n            data: compilationData,\n            scriptId: prefixBytecodeScriptId(id),\n        });\n        if (result.success) {\n            return {\n                bytecode: result.bytecode,\n                id,\n            };\n        }\n        return {\n            errors: result.errors,\n            id,\n        };\n    });\n    const failedResults = bytecodeCompilations.filter((result) => 'errors' in result);\n    if (failedResults.length > 0) {\n        return failedResults\n            .map((result) => `Compilation error while generating bytecode for \"${result.id}\": ${stringifyErrors(result.errors)}`)\n            .join('; ');\n    }\n    const compiledBytecode = bytecodeCompilations.reduce((all, result) => ({ ...all, [result.id]: result.bytecode }), {});\n    return {\n        ...(Object.keys(compiledBytecode).length > 0\n            ? { bytecode: compiledBytecode }\n            : {}),\n        ...compilationData,\n    };\n};\n/**\n * Compile a {@link WalletTemplateScenarioOutput.valueSatoshis},\n * returning the `Uint8Array` result.\n */\nexport const compileWalletTemplateScenarioValueSatoshis = (valueSatoshisDefinition = CompilerDefaults.defaultScenarioOutputValueSatoshis) => typeof valueSatoshisDefinition === 'string'\n    ? binToValueSatoshis(hexToBin(valueSatoshisDefinition))\n    : BigInt(valueSatoshisDefinition);\n/**\n * Compile an {@link WalletTemplateScenarioBytecode} definition for an\n * {@link WalletTemplateScenario}, returning either a\n * simple `Uint8Array` result or a full CashAssembly {@link CompilationResult}.\n */\n// eslint-disable-next-line complexity\nexport const compileWalletTemplateScenarioBytecode = ({ bytecodeDefinition, compilationContext, configuration, defaultOverride, extendedScenario, generateBytecode, lockingOrUnlockingScriptIdUnderTest, }) => {\n    if (typeof bytecodeDefinition === 'string') {\n        return hexToBin(bytecodeDefinition);\n    }\n    const scriptId = bytecodeDefinition.script === undefined ||\n        Array.isArray(bytecodeDefinition.script)\n        ? lockingOrUnlockingScriptIdUnderTest\n        : bytecodeDefinition.script;\n    /**\n     * The script ID to compile. If `undefined`, we are attempting to \"copy\" the\n     * script ID in a scenario generation that does not define a locking or\n     * unlocking script under test (e.g. the scenario is only used for debugging\n     * values in an editor) - in these cases, simply return an empty `Uint8Array`.\n     */\n    if (scriptId === undefined) {\n        return hexToBin('');\n    }\n    const overrides = bytecodeDefinition.overrides ?? defaultOverride;\n    const overriddenDataDefinition = extendScenarioDefinitionData(extendedScenario.data, overrides);\n    const data = extendCompilationDataWithScenarioBytecode({\n        compilationData: extendedScenarioDefinitionToCompilationData({\n            data: overriddenDataDefinition,\n        }),\n        configuration,\n        scenarioDataBytecodeScripts: overriddenDataDefinition.bytecode ?? {},\n    });\n    if (typeof data === 'string') {\n        const error = `Could not compile scenario \"data.bytecode\": ${data}`;\n        return { errors: [{ error }], success: false };\n    }\n    return generateBytecode({\n        data: { ...data, compilationContext },\n        debug: true,\n        scriptId,\n    });\n};\n/**\n * Compile a {@link WalletTemplateScenarioOutput.token},\n * returning the {@link Output.token} result.\n */\n// eslint-disable-next-line complexity\nexport const compileScenarioOutputTokenData = (output) => output.token === undefined\n    ? {}\n    : {\n        token: {\n            amount: BigInt(output.token.amount ?? 0),\n            // TODO: doesn't verify length\n            category: hexToBin(output.token.category ??\n                CompilerDefaults.defaultScenarioOutputTokenCategory),\n            ...(output.token.nft === undefined\n                ? {}\n                : {\n                    nft: {\n                        capability: output.token.nft.capability ?? 'none',\n                        commitment: hexToBin(output.token.nft.commitment ?? ''),\n                    },\n                }),\n        },\n    };\n/**\n * Generate a scenario given a compiler configuration. If neither `scenarioId`\n * or `unlockingScriptId` are provided, the default scenario for the compiler\n * configuration will be generated.\n *\n * Returns either the full `CompilationData` for the selected scenario or an\n * error message (as a `string`).\n *\n * Note, this method should typically not be used directly, use\n * {@link Compiler.generateScenario} instead.\n */\n// eslint-disable-next-line complexity\nexport const generateScenarioBCH = ({ configuration, generateBytecode, scenarioId, unlockingScriptId, lockingScriptId: providedLockingScriptId, }, debug) => {\n    const { scenarioDefinition, scenarioName } = scenarioId === undefined\n        ? { scenarioDefinition: {}, scenarioName: `the default scenario` }\n        : {\n            scenarioDefinition: configuration.scenarios?.[scenarioId],\n            scenarioName: `scenario \"${scenarioId}\"`,\n        };\n    if (scenarioDefinition === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return `Cannot generate ${scenarioName}: a scenario definition with the identifier ${scenarioId} is not included in this compiler configuration.`;\n    }\n    const parentScenario = generateExtendedScenario({ configuration, scenarioId });\n    if (typeof parentScenario === 'string') {\n        return `Cannot generate ${scenarioName}: ${parentScenario}`;\n    }\n    const extendedScenario = extendScenarioDefinition(parentScenario, scenarioDefinition);\n    const partialCompilationData = extendedScenarioDefinitionToCompilationData(extendedScenario);\n    const fullCompilationData = extendCompilationDataWithScenarioBytecode({\n        compilationData: partialCompilationData,\n        configuration,\n        scenarioDataBytecodeScripts: extendedScenario.data.bytecode ?? {},\n    });\n    if (typeof fullCompilationData === 'string') {\n        return `Cannot generate ${scenarioName}. ${fullCompilationData}`;\n    }\n    if (extendedScenario.transaction.inputs.length !==\n        extendedScenario.sourceOutputs.length) {\n        return `Cannot generate ${scenarioName}: could not match source outputs with inputs - \"sourceOutputs\" must be the same length as \"transaction.inputs\".`;\n    }\n    const testedInputs = extendedScenario.transaction.inputs.filter((input) => Array.isArray(input.unlockingBytecode));\n    if (testedInputs.length !== 1) {\n        return `Cannot generate ${scenarioName}: the specific input under test in this scenario is ambiguous - \"transaction.inputs\" must include exactly one input that has \"unlockingBytecode\" set to [\"slot\"].`;\n    }\n    const testedInputIndex = extendedScenario.transaction.inputs.findIndex((input) => Array.isArray(input.unlockingBytecode));\n    const testedSourceOutputs = extendedScenario.sourceOutputs.filter((output) => Array.isArray(output.lockingBytecode));\n    if (testedSourceOutputs.length !== 1) {\n        return `Cannot generate ${scenarioName}: the source output unlocked by the input under test in this scenario is ambiguous - \"sourceOutputs\" must include exactly one output that has \"lockingBytecode\" set to [\"slot\"].`;\n    }\n    if (!Array.isArray(extendedScenario.sourceOutputs[testedInputIndex]?.lockingBytecode)) {\n        return `Cannot generate ${scenarioName}: the source output unlocked by the input under test in this scenario is ambiguous - the [\"slot\"] in \"transaction.inputs\" and \"sourceOutputs\" must be at the same index.`;\n    }\n    if (unlockingScriptId !== undefined &&\n        providedLockingScriptId !== undefined) {\n        return `Cannot generate ${scenarioName}: a scenario cannot be generated with both unlocking and locking script IDs defined. If an unlocking script is provided, the associated locking script ID must be read from the template.`;\n    }\n    const lockingScriptId = providedLockingScriptId ??\n        (unlockingScriptId === undefined\n            ? undefined\n            : configuration.unlockingScripts?.[unlockingScriptId]);\n    if (unlockingScriptId !== undefined && lockingScriptId === undefined) {\n        return `Cannot generate ${scenarioName} using unlocking script \"${unlockingScriptId}\": the locking script unlocked by \"${unlockingScriptId}\" is not provided in this compiler configuration.`;\n    }\n    const sourceOutputCompilations = extendedScenario.sourceOutputs.map((sourceOutput, index) => {\n        const slot = Array.isArray(sourceOutput.lockingBytecode);\n        const bytecodeDefinition = slot\n            ? lockingScriptId === undefined\n                ? CompilerDefaults.defaultScenarioBytecode\n                : { script: lockingScriptId }\n            : sourceOutput.lockingBytecode ?? {};\n        const defaultOverride = {};\n        return {\n            compiled: {\n                lockingBytecode: compileWalletTemplateScenarioBytecode({\n                    bytecodeDefinition,\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: lockingScriptId,\n                }),\n                valueSatoshis: compileWalletTemplateScenarioValueSatoshis(sourceOutput.valueSatoshis),\n                ...compileScenarioOutputTokenData(sourceOutput),\n            },\n            index,\n            slot,\n            type: 'source output',\n        };\n    });\n    const lockingCompilation = sourceOutputCompilations.find((compilation) => compilation.slot)?.compiled.lockingBytecode;\n    const transactionOutputCompilations = extendedScenario.transaction.outputs.map((transactionOutput, index) => {\n        const defaultOverride = { hdKeys: { addressIndex: 1 } };\n        return {\n            compiled: {\n                lockingBytecode: compileWalletTemplateScenarioBytecode({\n                    bytecodeDefinition: transactionOutput.lockingBytecode ?? {},\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: lockingScriptId,\n                }),\n                valueSatoshis: compileWalletTemplateScenarioValueSatoshis(transactionOutput.valueSatoshis),\n                ...compileScenarioOutputTokenData(transactionOutput),\n            },\n            index,\n            type: 'transaction output',\n        };\n    });\n    const outputCompilationErrors = [\n        ...sourceOutputCompilations,\n        ...transactionOutputCompilations,\n    ].reduce((accumulated, result) => {\n        if ('errors' in result.compiled.lockingBytecode) {\n            return [\n                ...accumulated,\n                ...result.compiled.lockingBytecode.errors.map((errorObject) => `Failed compilation of ${result.type} at index ${result.index}: ${errorObject.error}`),\n            ];\n        }\n        return accumulated;\n    }, []);\n    if (outputCompilationErrors.length > 0) {\n        const error = `Cannot generate ${scenarioName}: ${outputCompilationErrors.join(' ')}`;\n        if (debug === true) {\n            return {\n                lockingCompilation,\n                scenario: error,\n            };\n        }\n        return error;\n    }\n    const sourceOutputCompilationsSuccess = sourceOutputCompilations;\n    const transactionOutputCompilationsSuccess = transactionOutputCompilations;\n    const extractOutput = (compilation) => {\n        const { lockingBytecode, valueSatoshis, token } = compilation.compiled;\n        return {\n            lockingBytecode: 'bytecode' in lockingBytecode\n                ? lockingBytecode.bytecode\n                : lockingBytecode,\n            valueSatoshis,\n            ...(token === undefined ? {} : { token }),\n        };\n    };\n    const sourceOutputs = sourceOutputCompilationsSuccess.map(extractOutput);\n    const outputs = transactionOutputCompilationsSuccess.map(extractOutput);\n    const inputsContext = extendedScenario.transaction.inputs.map((input, inputIndex) => ({\n        outpointIndex: input.outpointIndex ?? inputIndex,\n        // TODO: doesn't verify length\n        outpointTransactionHash: hexToBin(input.outpointTransactionHash ??\n            CompilerDefaults.defaultScenarioInputOutpointTransactionHash),\n        sequenceNumber: input.sequenceNumber ??\n            CompilerDefaults.defaultScenarioInputSequenceNumber,\n        unlockingBytecode: undefined,\n    }));\n    const transactionInputCompilations = extendedScenario.transaction.inputs.map((input, index) => {\n        const slot = Array.isArray(input.unlockingBytecode);\n        const bytecodeDefinition = Array.isArray(input.unlockingBytecode)\n            ? unlockingScriptId === undefined\n                ? CompilerDefaults.defaultScenarioBytecode\n                : { script: unlockingScriptId }\n            : input.unlockingBytecode ?? {};\n        const defaultOverride = {};\n        return {\n            compiled: {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                outpointIndex: inputsContext[index].outpointIndex,\n                outpointTransactionHash: \n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                inputsContext[index].outpointTransactionHash,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                sequenceNumber: inputsContext[index].sequenceNumber,\n                unlockingBytecode: compileWalletTemplateScenarioBytecode({\n                    bytecodeDefinition,\n                    compilationContext: {\n                        inputIndex: index,\n                        sourceOutputs,\n                        transaction: {\n                            inputs: inputsContext,\n                            locktime: extendedScenario.transaction.locktime,\n                            outputs,\n                            version: extendedScenario.transaction.version,\n                        },\n                    },\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: unlockingScriptId,\n                }),\n            },\n            index,\n            slot,\n        };\n    });\n    const unlockingCompilation = transactionInputCompilations.find((compilation) => compilation.slot)?.compiled.unlockingBytecode;\n    const inputCompilationErrors = transactionInputCompilations.reduce((accumulated, result) => {\n        if ('errors' in result.compiled.unlockingBytecode) {\n            return [\n                ...accumulated,\n                ...result.compiled.unlockingBytecode.errors.map((errorObject) => `Failed compilation of input at index ${result.index}: ${errorObject.error}`),\n            ];\n        }\n        return accumulated;\n    }, []);\n    if (inputCompilationErrors.length > 0) {\n        const error = `Cannot generate ${scenarioName}: ${inputCompilationErrors.join(' ')}`;\n        if (debug === true) {\n            return {\n                lockingCompilation,\n                scenario: error,\n                unlockingCompilation,\n            };\n        }\n        return error;\n    }\n    const transactionInputCompilationsSuccess = transactionInputCompilations;\n    const inputs = transactionInputCompilationsSuccess.map((compilation) => {\n        const { outpointIndex, outpointTransactionHash, sequenceNumber, unlockingBytecode, } = compilation.compiled;\n        return {\n            outpointIndex,\n            outpointTransactionHash,\n            sequenceNumber,\n            unlockingBytecode: 'bytecode' in unlockingBytecode\n                ? unlockingBytecode.bytecode\n                : unlockingBytecode,\n        };\n    });\n    const scenario = {\n        data: fullCompilationData,\n        program: {\n            inputIndex: testedInputIndex,\n            sourceOutputs,\n            transaction: {\n                inputs,\n                locktime: extendedScenario.transaction.locktime,\n                outputs,\n                version: extendedScenario.transaction.version,\n            },\n        },\n    };\n    return (debug === true\n        ? { lockingCompilation, scenario, unlockingCompilation }\n        : scenario);\n};\n//# sourceMappingURL=scenarios.js.map","import { ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha256 as internalSha256, sha512 as internalSha512, } from '../crypto/crypto.js';\nimport { compileScript } from '../language/language.js';\nimport { generateBytecodeMap, Opcodes, OpcodesBCH, OpcodesBTC, } from '../vm/vm.js';\nimport { compilerOperationsCommon } from './compiler-operations.js';\nimport { generateScenarioBCH } from './scenarios.js';\n/**\n * Create a {@link Compiler.generateBytecode} method given a compiler\n * configuration.\n */\nexport const createCompilerGenerateBytecodeFunction = (compilerConfiguration) => ({ data, debug, scriptId, }) => {\n    const result = compileScript(scriptId, data, compilerConfiguration);\n    return (debug === true\n        ? result\n        : result.success\n            ? { bytecode: result.bytecode, success: true }\n            : {\n                errorType: result.errorType,\n                errors: result.errors,\n                success: false,\n            });\n};\n/**\n * Create a {@link Compiler} from the provided compiler configuration. This\n * method requires a full {@link CompilerConfiguration} and does not provide any\n * crypto or VM implementations.\n *\n * @param configuration - the configuration from which to create the compiler\n */\nexport const compilerConfigurationToCompilerBCH = (configuration) => {\n    const generateBytecode = createCompilerGenerateBytecodeFunction(configuration);\n    return {\n        configuration,\n        generateBytecode,\n        generateScenario: ({ lockingScriptId, unlockingScriptId, scenarioId, debug, }) => generateScenarioBCH({\n            configuration,\n            generateBytecode,\n            lockingScriptId,\n            scenarioId,\n            unlockingScriptId,\n        }, debug),\n    };\n};\nexport const compilerConfigurationToCompiler = compilerConfigurationToCompilerBCH;\nconst nullHashLength = 32;\n/**\n * A common {@link createAuthenticationProgram} implementation for\n * most compilers.\n *\n * Accepts the compiled contents of an evaluation and produces a\n * {@link AuthenticationProgramCommon} that can be evaluated to produce the\n * resulting program state.\n *\n * The precise shape of the authentication program produced by this method is\n * critical to the determinism of CashAssembly evaluations for the compiler in\n * which it is used, it therefore must be standardized between compiler\n * implementations.\n *\n * @param evaluationBytecode - the compiled bytecode to incorporate in the\n * created authentication program\n */\nexport const createAuthenticationProgramEvaluationCommon = (evaluationBytecode) => ({\n    inputIndex: 0,\n    sourceOutputs: [\n        {\n            lockingBytecode: evaluationBytecode,\n            valueSatoshis: 0n,\n        },\n    ],\n    transaction: {\n        inputs: [\n            {\n                outpointIndex: 0,\n                outpointTransactionHash: new Uint8Array(nullHashLength),\n                sequenceNumber: 0,\n                unlockingBytecode: Uint8Array.of(),\n            },\n        ],\n        locktime: 0,\n        outputs: [\n            {\n                lockingBytecode: Uint8Array.of(),\n                valueSatoshis: 0n,\n            },\n        ],\n        version: 0,\n    },\n});\n/**\n * Create a compiler using the default common compiler configuration. Because\n * this compiler has no access to a VM, it cannot compile evaluations.\n *\n * @param scriptsAndOverrides - a compiler configuration from which properties\n * will be used to override properties of the default common compiler\n * configuration – must include the `scripts` property\n */\nexport const createCompilerCommon = (scriptsAndOverrides) => compilerConfigurationToCompilerBCH({\n    ...{\n        createAuthenticationProgram: createAuthenticationProgramEvaluationCommon,\n        opcodes: generateBytecodeMap(Opcodes),\n        operations: compilerOperationsCommon,\n        ripemd160: internalRipemd160,\n        secp256k1: internalSecp256k1,\n        sha256: internalSha256,\n        sha512: internalSha512,\n    },\n    ...scriptsAndOverrides,\n});\n/**\n * Perform a simplified compilation on a CashAssembly script containing only hex\n * literals, bigint literals, UTF8 literals, and push statements. Scripts may\n * not contain variables/operations, evaluations, or opcode identifiers (use hex\n * literals instead).\n *\n * This is useful for accepting complex user input in advanced interfaces,\n * especially for `AddressData` and `WalletData`.\n *\n * Returns the compiled bytecode as a `Uint8Array`, or throws an error message.\n *\n * @param script - a simple CashAssembly script containing no variables or\n * evaluations\n */\nexport const compileCashAssembly = (script) => {\n    const result = createCompilerCommon({\n        opcodes: {},\n        operations: {},\n        scripts: { script },\n    }).generateBytecode({ data: {}, scriptId: 'script' });\n    if (result.success) {\n        return result.bytecode;\n    }\n    return `CashAssembly compilation error:${result.errors.reduce((all, { error, range }) => `${all} [${range.startLineNumber}, ${range.startColumn}]: ${error}`, '')}`;\n};\n/**\n * Re-assemble a string of disassembled bytecode\n * (see {@link disassembleBytecode}).\n *\n * @param opcodes - a mapping of opcodes to their respective Uint8Array\n * representation\n * @param disassembledBytecode - the disassembled bytecode to re-assemble\n */\nexport const assembleBytecode = (opcodes, disassembledBytecode) => {\n    const configuration = {\n        opcodes,\n        scripts: { asm: disassembledBytecode },\n    };\n    return createCompilerCommon(configuration).generateBytecode({ data: {}, scriptId: 'asm' });\n};\n/**\n * Re-assemble a string of disassembled BCH bytecode; see\n * {@link disassembleBytecodeBCH}.\n *\n * Note, this method performs automatic minimization of push instructions.\n *\n * @param disassembledBytecode - the disassembled BCH bytecode to re-assemble\n */\nexport const assembleBytecodeBCH = (disassembledBytecode) => assembleBytecode(generateBytecodeMap(OpcodesBCH), disassembledBytecode);\n/**\n * A convenience method to compile CashAssembly (using\n * {@link assembleBytecodeBCH}) to bytecode. If compilation fails, errors are\n * returned as a string.\n */\nexport const cashAssemblyToBin = (cashAssemblyScript) => {\n    const result = assembleBytecodeBCH(cashAssemblyScript);\n    return result.success\n        ? result.bytecode\n        : `CashAssembly compilation ${result.errorType} error: ${result.errors\n            .map((err) => err.error)\n            .join(' ')}`;\n};\n/**\n * Re-assemble a string of disassembled BCH bytecode; see\n * {@link disassembleBytecodeBTC}.\n *\n * Note, this method performs automatic minimization of push instructions.\n *\n * @param disassembledBytecode - the disassembled BTC bytecode to re-assemble\n */\nexport const assembleBytecodeBTC = (disassembledBytecode) => assembleBytecode(generateBytecodeMap(OpcodesBTC), disassembledBytecode);\n/**\n * Create a partial {@link CompilerConfiguration} from an\n * {@link WalletTemplate} by extracting and formatting the `scripts` and\n * `variables` properties.\n *\n * Note, if this {@link WalletTemplate} might be malformed, first\n * validate it with {@link importWalletTemplate}.\n *\n * @param template - the {@link WalletTemplate} from which to extract\n * the compiler configuration\n */\nexport const walletTemplateToCompilerConfiguration = (template) => {\n    /**\n     * Template scripts including virtualized test scripts.\n     */\n    const virtualizedScripts = Object.entries(template.scripts).reduce((all, [scriptId, script]) => {\n        if ('tests' in script) {\n            return {\n                ...all,\n                ...Object.entries(script.tests).reduce((tests, [testId, test]) => {\n                    const pushTestedScript = script.pushed === true;\n                    const checkScriptId = `${scriptId}.${testId}.check`;\n                    const virtualizedLockingScriptId = `${scriptId}.${testId}.lock`;\n                    const virtualizedUnlockingScriptId = `${scriptId}.${testId}.unlock`;\n                    return {\n                        ...tests,\n                        [checkScriptId]: { script: test.check },\n                        [virtualizedLockingScriptId]: {\n                            lockingType: 'p2sh20',\n                            script: pushTestedScript\n                                ? `<${scriptId}> ${checkScriptId}`\n                                : `${scriptId} ${checkScriptId}`,\n                        },\n                        [virtualizedUnlockingScriptId]: {\n                            script: test.setup ?? '',\n                            unlocks: virtualizedLockingScriptId,\n                        },\n                    };\n                }, {}),\n            };\n        }\n        return all;\n    }, {});\n    const allScripts = {\n        ...template.scripts,\n        ...virtualizedScripts,\n    };\n    const scripts = Object.entries(allScripts).reduce((all, [id, def]) => ({ ...all, [id]: def.script }), {});\n    const variables = Object.values(template.entities).reduce((all, entity) => ({ ...all, ...entity.variables }), {});\n    const entityOwnership = Object.entries(template.entities).reduce((all, [entityId, entity]) => ({\n        ...all,\n        ...Object.keys(entity.variables ?? {}).reduce((entityVariables, variableId) => ({\n            ...entityVariables,\n            [variableId]: entityId,\n        }), {}),\n    }), {});\n    const unlockingScripts = Object.entries(allScripts).reduce((all, [id, def]) => 'unlocks' in def && def.unlocks !== undefined\n        ? { ...all, [id]: def.unlocks }\n        : all, {});\n    const unlockingScriptTimeLockTypes = Object.entries(allScripts).reduce((all, [id, def]) => 'timeLockType' in def && def.timeLockType !== undefined\n        ? { ...all, [id]: def.timeLockType }\n        : all, {});\n    const lockingScriptTypes = Object.entries(allScripts).reduce((all, [id, def]) => 'lockingType' in def &&\n        def.lockingType !== undefined\n        ? { ...all, [id]: def.lockingType }\n        : all, {});\n    const scenarios = template.scenarios === undefined\n        ? undefined\n        : Object.entries(template.scenarios).reduce((all, [id, def]) => ({ ...all, [id]: def }), {});\n    return {\n        entityOwnership,\n        lockingScriptTypes,\n        ...(scenarios === undefined ? {} : { scenarios }),\n        scripts,\n        unlockingScriptTimeLockTypes,\n        unlockingScripts,\n        variables,\n    };\n};\n//# sourceMappingURL=compiler-utils.js.map","import { hash256, ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha256 as internalSha256, sha512 as internalSha512, } from '../../crypto/crypto.js';\nimport { encodeTokenPrefix } from '../../message/message.js';\nimport { createVirtualMachineBCH, generateBytecodeMap, generateSigningSerializationBCH, OpcodesBCHCHIPs, SigningSerializationFlag, SigningSerializationTypeBCH, } from '../../vm/vm.js';\nimport { attemptCompilerOperations, compilerOperationAttemptBytecodeResolution, compilerOperationHelperCompileScript, compilerOperationHelperDeriveHdKeyPrivate, compilerOperationHelperGenerateCoveredBytecode, compilerOperationRequires, } from '../compiler-operation-helpers.js';\nimport { compilerOperationsCommon } from '../compiler-operations.js';\nimport { compilerConfigurationToCompilerBCH, createAuthenticationProgramEvaluationCommon, walletTemplateToCompilerConfiguration, } from '../compiler-utils.js';\nexport var SigningSerializationAlgorithmIdentifier;\n(function (SigningSerializationAlgorithmIdentifier) {\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputs\"] = \"all_outputs\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsAllUtxos\"] = \"all_outputs_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsSingleInput\"] = \"all_outputs_single_input\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsSingleInputInvalidAllUtxos\"] = \"all_outputs_single_input_INVALID_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutput\"] = \"corresponding_output\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputAllUtxos\"] = \"corresponding_output_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputSingleInput\"] = \"corresponding_output_single_input\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputSingleInputInvalidAllUtxos\"] = \"corresponding_output_single_input_INVALID_all_utxos\";\n    /**\n     * An alias for `all_outputs_all_utxos`\n     * (A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID`),\n     * the most secure signing serialization algorithm.\n     *\n     * Note that as of 2022, `all_outputs` (A.K.A. `SIGHASH_ALL|SIGHASH_FORKID`)\n     * is more commonly used and is therefore a better choice for privacy in\n     * common, existing contract types.\n     */\n    SigningSerializationAlgorithmIdentifier[\"default\"] = \"default\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputs\"] = \"no_outputs\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsAllUtxos\"] = \"no_outputs_all_utxos\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsSingleInput\"] = \"no_outputs_single_input\";\n    /**\n     * A.K.A. `SIGHASH_NONE|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsSingleInputInvalidAllUtxos\"] = \"no_outputs_single_input_INVALID_all_utxos\";\n})(SigningSerializationAlgorithmIdentifier || (SigningSerializationAlgorithmIdentifier = {}));\n// eslint-disable-next-line complexity\nconst getSigningSerializationType = (algorithmIdentifier, prefix = '') => {\n    switch (algorithmIdentifier) {\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputs}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.allOutputs);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsAllUtxos}`:\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.default}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.allOutputsAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsSingleInput}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.allOutputsSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            SigningSerializationFlag.allOutputs |\n                SigningSerializationFlag.singleInput |\n                SigningSerializationFlag.utxos |\n                SigningSerializationFlag.forkId);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutput}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.correspondingOutput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputAllUtxos}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.correspondingOutputAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputSingleInput}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.correspondingOutputSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            SigningSerializationFlag.correspondingOutput |\n                SigningSerializationFlag.singleInput |\n                SigningSerializationFlag.utxos |\n                SigningSerializationFlag.forkId);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputs}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.noOutputs);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsAllUtxos}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.noOutputsAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsSingleInput}`:\n            return Uint8Array.of(SigningSerializationTypeBCH.noOutputsSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            SigningSerializationFlag.noOutputs |\n                SigningSerializationFlag.singleInput |\n                SigningSerializationFlag.utxos |\n                SigningSerializationFlag.forkId);\n        default:\n            return undefined;\n    }\n};\nexport const compilerOperationHelperComputeSignatureBCH = ({ coveredBytecode, identifier, compilationContext, operationName, privateKey, sha256, sign, }) => {\n    const [, , algorithm, unknown] = identifier.split('.');\n    if (unknown !== undefined) {\n        return {\n            error: `Unknown component in \"${identifier}\" - the fragment \"${unknown}\" is not recognized.`,\n            status: 'error',\n        };\n    }\n    if (algorithm === undefined) {\n        return {\n            error: `Invalid signature identifier. Signatures must be of the form: \"[variable_id].${operationName}.[signing_serialization_type]\".`,\n            status: 'error',\n        };\n    }\n    const signingSerializationType = getSigningSerializationType(algorithm);\n    if (signingSerializationType === undefined) {\n        return {\n            error: `Unknown signing serialization algorithm, \"${algorithm}\".`,\n            status: 'error',\n        };\n    }\n    const serialization = generateSigningSerializationBCH(compilationContext, { coveredBytecode, signingSerializationType }, sha256);\n    const digest = hash256(serialization, sha256);\n    const bitcoinEncodedSignature = Uint8Array.from([\n        ...sign(privateKey, digest),\n        ...signingSerializationType,\n    ]);\n    return {\n        bytecode: bitcoinEncodedSignature,\n        signature: { serialization },\n        status: 'success',\n    };\n};\nexport const compilerOperationHelperHdKeySignatureBCH = ({ operationName, secp256k1Method, }) => attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n        'sourceScriptIds',\n        'unlockingScripts',\n    ],\n    dataProperties: ['hdKeys', 'compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { hdKeys, compilationContext } = data;\n        const { secp256k1, sha256, sourceScriptIds, unlockingScripts } = configuration;\n        const derivationResult = compilerOperationHelperDeriveHdKeyPrivate({\n            configuration,\n            hdKeys,\n            identifier,\n        });\n        if (derivationResult.status === 'error')\n            return derivationResult;\n        const result = compilerOperationHelperGenerateCoveredBytecode({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return compilerOperationHelperComputeSignatureBCH({\n            compilationContext,\n            coveredBytecode: result,\n            identifier,\n            operationName,\n            privateKey: derivationResult.bytecode,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nexport const compilerOperationHdKeyEcdsaSignatureBCH = compilerOperationHelperHdKeySignatureBCH({\n    operationName: 'ecdsa_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nexport const compilerOperationHdKeySchnorrSignatureBCH = compilerOperationHelperHdKeySignatureBCH({\n    operationName: 'schnorr_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nexport const compilerOperationHelperKeySignatureBCH = ({ operationName, secp256k1Method, }) => attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [\n        'sha256',\n        'secp256k1',\n        'unlockingScripts',\n        'sourceScriptIds',\n    ],\n    dataProperties: ['keys', 'compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { keys, compilationContext } = data;\n        const { secp256k1, sha256, unlockingScripts, sourceScriptIds } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];\n        if (privateKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to a Key, but a private key for \"${variableId}\" (or an existing signature) was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        const result = compilerOperationHelperGenerateCoveredBytecode({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return compilerOperationHelperComputeSignatureBCH({\n            compilationContext,\n            coveredBytecode: result,\n            identifier,\n            operationName,\n            privateKey,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nexport const compilerOperationKeyEcdsaSignatureBCH = compilerOperationHelperKeySignatureBCH({\n    operationName: 'ecdsa_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nexport const compilerOperationKeySchnorrSignatureBCH = compilerOperationHelperKeySignatureBCH({\n    operationName: 'schnorr_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nexport const compilerOperationHelperComputeDataSignatureBCH = ({ data, configuration, identifier, operationName, privateKey, sha256, sign, }) => {\n    const [, , scriptId, unknown] = identifier.split('.');\n    if (unknown !== undefined) {\n        return {\n            error: `Unknown component in \"${identifier}\" - the fragment \"${unknown}\" is not recognized.`,\n            status: 'error',\n        };\n    }\n    if (scriptId === undefined) {\n        return {\n            error: `Invalid data signature identifier. Data signatures must be of the form: \"[variable_id].${operationName}.[target_script_id]\".`,\n            status: 'error',\n        };\n    }\n    const result = compilerOperationHelperCompileScript({\n        configuration,\n        data,\n        targetScriptId: scriptId,\n    });\n    if (result === false) {\n        return {\n            error: `Data signature tried to sign an unknown target script, \"${scriptId}\".`,\n            status: 'error',\n        };\n    }\n    if ('error' in result) {\n        return result;\n    }\n    const digest = sha256.hash(result);\n    return {\n        bytecode: sign(privateKey, digest),\n        signature: { digest, message: result },\n        status: 'success',\n    };\n};\nexport const compilerOperationHelperKeyDataSignatureBCH = ({ operationName, secp256k1Method, }) => attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256', 'secp256k1'],\n    dataProperties: ['keys'],\n    operation: (identifier, data, configuration) => {\n        const { keys } = data;\n        const { secp256k1, sha256 } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];\n        if (privateKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to a Key, but a private key for \"${variableId}\" (or an existing signature) was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        return compilerOperationHelperComputeDataSignatureBCH({\n            configuration,\n            data,\n            identifier,\n            operationName,\n            privateKey,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nexport const compilerOperationKeyEcdsaDataSignatureBCH = compilerOperationHelperKeyDataSignatureBCH({\n    operationName: 'ecdsa_data_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nexport const compilerOperationKeySchnorrDataSignatureBCH = compilerOperationHelperKeyDataSignatureBCH({\n    operationName: 'schnorr_data_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nexport const compilerOperationHelperHdKeyDataSignatureBCH = ({ operationName, secp256k1Method, }) => attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n    ],\n    dataProperties: ['hdKeys'],\n    operation: (identifier, data, configuration) => {\n        const { hdKeys } = data;\n        const { secp256k1, sha256 } = configuration;\n        const derivationResult = compilerOperationHelperDeriveHdKeyPrivate({\n            configuration,\n            hdKeys,\n            identifier,\n        });\n        if (derivationResult.status === 'error')\n            return derivationResult;\n        return compilerOperationHelperComputeDataSignatureBCH({\n            configuration,\n            data,\n            identifier,\n            operationName,\n            privateKey: derivationResult.bytecode,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nexport const compilerOperationHdKeyEcdsaDataSignatureBCH = compilerOperationHelperHdKeyDataSignatureBCH({\n    operationName: 'ecdsa_data_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nexport const compilerOperationHdKeySchnorrDataSignatureBCH = compilerOperationHelperHdKeyDataSignatureBCH({\n    operationName: 'schnorr_data_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nexport const compilerOperationSigningSerializationTokenPrefix = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: encodeTokenPrefix(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.sourceOutputs[data.compilationContext.inputIndex].token),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSignatureRenamed = (identifier) => ({\n    error: `The \"signature\" compiler operation was renamed to \"ecdsa_signature\". Consider fixing this error by changing \"${identifier}\" to \"${identifier.replace('signature', 'schnorr_signature')}\" (schnorr signatures reduce transaction sizes and enable multi-party signature aggregation).`,\n    status: 'error',\n});\nexport const compilerOperationDataSignatureRenamed = (identifier) => ({\n    error: `The \"data_signature\" compiler operation was renamed to \"ecdsa_data_signature\". Consider fixing this error by changing \"${identifier}\" to \"${identifier.replace('data_signature', 'schnorr_data_signature')}\" (schnorr signatures reduce transaction sizes and enable multi-party signature aggregation).`,\n    status: 'error',\n});\nexport const compilerOperationSigningSerializationFullBCH = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256', 'sourceScriptIds', 'unlockingScripts'],\n    dataProperties: ['compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const [, algorithmOrComponent, unknownPart] = identifier.split('.');\n        if (algorithmOrComponent === undefined) {\n            return {\n                error: `Invalid signing serialization operation. Include the desired component or algorithm, e.g. \"signing_serialization.version\".`,\n                status: 'error',\n            };\n        }\n        if (unknownPart !== undefined) {\n            return {\n                error: `Unknown component in \"${identifier}\" - the fragment \"${unknownPart}\" is not recognized.`,\n                status: 'error',\n            };\n        }\n        const signingSerializationType = getSigningSerializationType(algorithmOrComponent, 'full_');\n        if (signingSerializationType === undefined) {\n            return {\n                error: `Unknown signing serialization algorithm, \"${algorithmOrComponent}\".`,\n                status: 'error',\n            };\n        }\n        const { sha256, sourceScriptIds, unlockingScripts } = configuration;\n        const result = compilerOperationHelperGenerateCoveredBytecode({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        const { compilationContext } = data;\n        return {\n            bytecode: generateSigningSerializationBCH(compilationContext, {\n                coveredBytecode: result,\n                signingSerializationType,\n            }, sha256),\n            status: 'success',\n        };\n    },\n});\n/* eslint-disable camelcase, @typescript-eslint/naming-convention */\nexport const compilerOperationsBCH = {\n    ...compilerOperationsCommon,\n    hdKey: {\n        data_signature: compilerOperationDataSignatureRenamed,\n        ecdsa_data_signature: compilerOperationHdKeyEcdsaDataSignatureBCH,\n        ecdsa_signature: compilerOperationHdKeyEcdsaSignatureBCH,\n        public_key: compilerOperationsCommon.hdKey.public_key,\n        schnorr_data_signature: compilerOperationHdKeySchnorrDataSignatureBCH,\n        schnorr_signature: compilerOperationHdKeySchnorrSignatureBCH,\n        signature: compilerOperationSignatureRenamed,\n    },\n    key: {\n        data_signature: compilerOperationDataSignatureRenamed,\n        ecdsa_data_signature: compilerOperationKeyEcdsaDataSignatureBCH,\n        ecdsa_signature: compilerOperationKeyEcdsaSignatureBCH,\n        public_key: compilerOperationsCommon.key.public_key,\n        schnorr_data_signature: compilerOperationKeySchnorrDataSignatureBCH,\n        schnorr_signature: compilerOperationKeySchnorrSignatureBCH,\n        signature: compilerOperationSignatureRenamed,\n    },\n    signingSerialization: {\n        ...compilerOperationsCommon.signingSerialization,\n        full_all_outputs: compilerOperationSigningSerializationFullBCH,\n        full_all_outputs_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_all_outputs_single_input: compilerOperationSigningSerializationFullBCH,\n        full_all_outputs_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_corresponding_output: compilerOperationSigningSerializationFullBCH,\n        full_corresponding_output_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_corresponding_output_single_input: compilerOperationSigningSerializationFullBCH,\n        full_corresponding_output_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_default: compilerOperationSigningSerializationFullBCH,\n        full_no_outputs: compilerOperationSigningSerializationFullBCH,\n        full_no_outputs_all_utxos: compilerOperationSigningSerializationFullBCH,\n        full_no_outputs_single_input: compilerOperationSigningSerializationFullBCH,\n        full_no_outputs_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBCH,\n        token_prefix: compilerOperationSigningSerializationTokenPrefix,\n    },\n};\n/**\n * Create a compiler using the default BCH compiler configuration.\n *\n * Internally instantiates the necessary crypto and VM implementations – use\n * {@link compilerConfigurationToCompilerBCH} for more control.\n *\n * @param configuration - a compiler configuration from which properties\n * will be used to override properties of the default BCH configuration – must\n * include the `scripts` property\n */\nexport const createCompilerBCH = (configuration) => compilerConfigurationToCompilerBCH({\n    ...{\n        createAuthenticationProgram: createAuthenticationProgramEvaluationCommon,\n        opcodes: generateBytecodeMap(OpcodesBCHCHIPs),\n        operations: compilerOperationsBCH,\n        ripemd160: internalRipemd160,\n        secp256k1: internalSecp256k1,\n        sha256: internalSha256,\n        sha512: internalSha512,\n        vm: configuration.vm ?? createVirtualMachineBCH(),\n    },\n    ...configuration,\n});\nexport const createCompiler = createCompilerBCH;\n/**\n * Create a BCH `Compiler` from an `WalletTemplate` and an optional set\n * of overrides.\n * @param template - the `WalletTemplate` from which to create the BCH\n * compiler\n * @param overrides - a compiler configuration from which properties will be\n * used to override properties of the default BCH configuration\n */\nexport const walletTemplateToCompilerBCH = (template, overrides) => createCompilerBCH({\n    ...overrides,\n    ...walletTemplateToCompilerConfiguration(template),\n});\n//# sourceMappingURL=compiler-bch.js.map","export default validate20;\nconst schema22 = {\n    $ref: '#/definitions/WalletTemplate',\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    definitions: {\n        AuthenticationVirtualMachineIdentifier: {\n            description: \"Allowable identifiers for authentication virtual machine versions. The `BCH` prefix identifies the Bitcoin Cash network, the `XEC` prefix identifies the eCash network, the `BSV` prefix identifies the Bitcoin SV network, and the `BTC` prefix identifies the Bitcoin Core network. VM versions are named according to the date they were deployed on the indicated network.\\n\\nFor each network prefix, a `_SPEC` VM version is reserved to indicate that the template requires a custom, not-yet-deployed VM version (e.g. one or more CHIPs). By convention, templates marked for `_SPEC` VMs should indicate their requirements in the template description. After deployment of the `_SPEC` VM, when template compatibility is verified, the template's `supported` array should be updated to indicate compatibility with the live VM version.\",\n            enum: [\n                'BCH_2020_05',\n                'BCH_2021_05',\n                'BCH_2022_05',\n                'BCH_2023_05',\n                'BCH_SPEC',\n                'BSV_2020_02',\n                'BSV_SPEC',\n                'BTC_2017_08',\n                'BTC_SPEC',\n                'XEC_2020_05',\n                'XEC_SPEC',\n            ],\n            type: 'string',\n        },\n        WalletTemplate: {\n            additionalProperties: false,\n            description: 'A `WalletTemplate` specifies a set of locking scripts, unlocking scripts, and other information required to use a certain wallet protocol. Templates fully describe wallet protocols in a way that can be shared between software clients.',\n            properties: {\n                $schema: {\n                    description: 'The URI that identifies the JSON Schema used by this template. Try: `https://libauth.org/schemas/wallet-template-v0.schema.json` to enable documentation, autocompletion, and validation in JSON documents.',\n                    type: 'string',\n                },\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this wallet template (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.\\n\\nDescriptions have no length limit, but in user interfaces with limited space, they should be hidden beyond the first newline character or `140` characters until revealed by the user (e.g. by hiding the remaining description until the user activates a \"show more\" link).',\n                    type: 'string',\n                },\n                entities: {\n                    additionalProperties: { $ref: '#/definitions/WalletTemplateEntity' },\n                    description: 'A map of entities defined in this wallet template.\\n\\nObject keys are used as entity identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this authentication template (for use in user interfaces).',\n                    type: 'string',\n                },\n                scenarios: {\n                    additionalProperties: {\n                        $ref: '#/definitions/WalletTemplateScenario',\n                    },\n                    description: 'A scenario describes a context in which one or more scripts might be used. Scenarios are used for transaction estimation and as an integrated testing system for wallet templates.\\n\\nObject keys are used as scenario identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                scripts: {\n                    additionalProperties: {\n                        anyOf: [\n                            { $ref: '#/definitions/WalletTemplateScript' },\n                            { $ref: '#/definitions/WalletTemplateScriptLocking' },\n                            { $ref: '#/definitions/WalletTemplateScriptTested' },\n                            { $ref: '#/definitions/WalletTemplateScriptUnlocking' },\n                        ],\n                    },\n                    description: 'A map of scripts used in this wallet template.\\n\\nObject keys are used as script identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                supported: {\n                    description: 'A list of authentication virtual machine versions supported by this template.\\n\\nVirtual machine identifiers use the format `CODE_YYYY_MM`, where `CODE` is the currency code used to identify the network, and `YYYY_MM` is the year and month in which the specified VM version became active on the indicated network.\\n\\nIdentifiers with the `_SPEC` suffix indicate that this template is intended for compatibility with a future virtual machine version, but at the time the template was created, that virtual machine had not yet become active on the specified chain.',\n                    items: {\n                        $ref: '#/definitions/AuthenticationVirtualMachineIdentifier',\n                    },\n                    type: 'array',\n                },\n                version: {\n                    const: 0,\n                    deprecated: 'template versions are now specified via `$schema`',\n                    description: 'A number identifying the format of this WalletTemplate. Currently, this implementation allows `version` to be set to `0`.',\n                    type: 'number',\n                },\n            },\n            required: ['entities', 'scripts', 'supported'],\n            type: 'object',\n        },\n        WalletTemplateAddressData: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                type: { const: 'AddressData', type: 'string' },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        WalletTemplateEntity: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular entity within an wallet template.',\n            properties: {\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this entity (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this entity for use in user interfaces and error messages, e.g.: `Trusted Third-Party`.',\n                    type: 'string',\n                },\n                scripts: {\n                    description: 'An array of the identifiers of each script the entity must be capable of generating, e.g. each of the unlocking scripts this entity might use.\\n\\nProvided the necessary variables, any entity can construct any script, but this option allows us to hint to more advanced wallets which scripts to recommend to users. (Especially when many scripts require inter-entity communication initiated by a user.)\\n\\nIf not provided, this property is assumed to include all scripts in the template.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                variables: {\n                    additionalProperties: {\n                        $ref: '#/definitions/WalletTemplateVariable',\n                    },\n                    description: \"A map of variables that must be provided by this entity for use in the template's scripts. Some variables are required before locking script generation, while some variables can or must be resolved only before unlocking script generation.\\n\\nObject keys are used as variable identifiers, and by convention, should use `snake_case`.\",\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        WalletTemplateHdKey: {\n            additionalProperties: false,\n            properties: {\n                addressOffset: {\n                    description: 'The offset by which to increment the `addressIndex` provided in the compilation data when deriving this `HdKey`. (Default: 0)\\n\\nThis is useful for deriving the \"next\" (`1`) or \"previous\" (`-1`) address for use in the current compilation.',\n                    type: 'number',\n                },\n                description: {\n                    description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                hdPublicKeyDerivationPath: {\n                    description: \"The path to derive the entity's HD public key from the entity's provided HD private key. By default, an empty string (`\\\"\\\"`), i.e. the entity's HD public key represents the same node in the HD tree as the provided HD private key.\\n\\nThis can be used to specify another relative or absolute derivation path from which the `publicDerivationPath` begins, e.g. `m/0'/1'/2'`. See `publicDerivationPath` for details.\\n\\nThis path may optionally begin with an `m` (for relative private derivation) and must be fixed – it cannot contain any `i` characters to represent the address index, as a dynamic hardened path would require a new HD public key for each address.\\n\\nNote, `hdPublicKeyDerivationPath` could be automatically determined in some cases, but it's always defined independently to improve validation and auditability.\",\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                neverSignTwice: {\n                    description: 'If set to `true`, indicates that this key should never be used to sign two different messages.\\n\\nThis is useful for contracts that use zero-confirmation escrow systems to guarantee against double-spend attempts. By indicating that the user could be subjected to losses if a key were used in multiple signatures, templates can ensure that wallet implementations apply appropriate safeguards around use of the key.\\n\\nDefaults to `false`.',\n                    type: 'boolean',\n                },\n                privateDerivationPath: {\n                    description: \"The relative or absolute derivation path used to derive this `HdKey` from the owning entity's HD private key. By default, `i`.\\n\\nIf the first character is `m`, the path is an absolute path, otherwise, the path is a relative path. For absolute paths, the compiler will verify that the relevant entity's HD private key is a master private key (encoded with a depth of zero); `HdKey`s with relative `privateDerivationPath` may be resolved using non-master private keys (e.g. hardened accounts that have been previously derived and delegated to a sub-entity prior to compilation).\\n\\nThis path uses the notation specified in BIP32 and the `i` character to represent the `addressIndex`:\\n\\nAn optional `m` character (indicating an absolute, private derivation path), followed by sets of `/` and a number representing the child index used in the derivation at that depth. Hardened derivation is represented by a trailing `'`, and hardened child indexes are represented with the hardened index offset (`2147483648`) subtracted. All `i` characters are replaced with the value of `addressIndex` plus this `HdKey`'s `addressOffset`. If the `i` character is followed by `'`, the hardened index offset is added (`2147483648`) and hardened derivation is used.\\n\\nFor example, `m/0/1'/i'` has 3 levels of derivation, with child indexes in the following order:\\n\\n`derive(derive(derive(masterKey, 0), 2147483648 + 1), 2147483648 + addressIndex + addressOffset)`\\n\\nAs the path is absolute (begins with `m`), the compiler will also verify that a zero-depth (\\\"master\\\") HD private key is provided for the entity owning this `HdKey`.\\n\\nNote, because hardened derivation requires knowledge of the private key, `HdKey` variables with `privateDerivationPath`s that include hardened derivation must configure `hdPublicKeyDerivationPath` to support HD public derivation.\",\n                    type: 'string',\n                },\n                publicDerivationPath: {\n                    description: \"The relative derivation path used to derive this `HdKey`'s public key from the owning entity's HD public key (configured via `hdPublicKeyDerivationPath`). If not set, the relative path (following the `m/` of `privateDerivationPath`) is used. For the `privateDerivationPath` default of `i`, this is `i`.\\n\\nIf `privateDerivationPath` uses hardened derivation for some levels, but later derivation levels use non-hardened derivation, `publicDerivationPath` can be used to specify a public derivation path beginning from `hdPublicKeyDerivationPath` (i.e. `publicDerivationPath` should always be a non-hardened segment of `privateDerivationPath` that follows `hdPublicKeyDerivationPath`).\\n\\nThe `publicDerivationPath` must be a relative HD derivation path: non-hardened positive integer child indexes (between `0` and `2147483647`, without any trailing `'`s) separated by `/`s.\\n\\nFor example, if `privateDerivationPath` is `m/0'/i`, it is not possible to derive the equivalent public key with only the HD public key `M`. (The path `M/0'/i` is impossible.) However, given the HD public key for `m/0'`, it is possible to derive the public key of `m/0'/i` for any `i`. In this case, `hdPublicKeyDerivationPath` would be `m/0'` and `publicDerivationPath` would be the remaining `i`.\",\n                    type: 'string',\n                },\n                type: { const: 'HdKey', type: 'string' },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        WalletTemplateKey: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                neverSignTwice: {\n                    description: 'If set to `true`, indicates that this key should never be used to sign two different messages.\\n\\nThis is useful for contracts that use zero-confirmation escrow systems to guarantee against double-spend attempts. By indicating that the user could be subjected to losses if a key were used in multiple signatures, templates can ensure that wallet implementations apply appropriate safeguards around use of the key.\\n\\nDefaults to `false`.',\n                    type: 'boolean',\n                },\n                type: { const: 'Key', type: 'string' },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        WalletTemplateScenario: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular scenario within an wallet template.',\n            properties: {\n                data: {\n                    $ref: '#/definitions/WalletTemplateScenarioData',\n                    description: \"An object defining the data to use while compiling this scenario. The properties specified here are used to extend the existing scenario data based on this scenario's `extends` property.\\n\\nEach property is extended individually – to unset a previously-set property, the property must be individually overridden in this object.\",\n                },\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this scenario (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n                    type: 'string',\n                },\n                extends: {\n                    description: \"The identifier of the scenario that this scenario extends. Any `data` or `transaction` properties not defined in this scenario inherit from the extended parent scenario.\\n\\nIf undefined, this scenario is assumed to extend the default scenario:\\n\\n- The default values for `data` are set:   - The identifiers of all `Key` variables and entities in this template are lexicographically sorted, then each is assigned an incrementing positive integer – beginning with `1` – encoded as an unsigned, 256-bit, big-endian integer (i.e. `0x0000...0001` (32 bytes), `0x0000...0002`, `0x0000...0003`, etc.). For `Key`s, this assigned value is used as the private key; For entities, the assigned value is used as the master seed of that entity's `HdPrivateKey`. If `hdKey` is set, the `addressIndex` is set to `0`.   - `currentBlockHeight` is set to `2`. This is the height of the second mined block after the genesis block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`. This default value was chosen to be low enough to simplify the debugging of block height offsets while remaining differentiated from `0` and `1`, which are used both as boolean return values and for control flow.   - `currentBlockTime` is set to `1231469665`. This is the Median Time-Past block time (BIP113) of block `2`.\\n\\n- Then `transaction` is set based on use:   - if the scenario is being used for transaction estimation, all transaction properties are taken from the transaction being estimated.   - if the scenario is being used for script testing and validation, the default value for each `transaction` property is used.\\n\\nWhen a scenario is extended, each property of `data` and `transaction` is extended individually: if the extending scenario does not provide a new value for `data.bytecode.value` or `transaction.property`, the parent value is used. To avoid inheriting a parent value, each child value must be individually overridden.\",\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this scenario for use in user interfaces, e.g.: `Delayed Recovery`.',\n                    type: 'string',\n                },\n                sourceOutputs: {\n                    description: 'The list of source outputs (a.k.a. UTXOs) to use when generating the compilation context for this scenario.\\n\\nThe `sourceOutputs` property must have the same length as `transaction.inputs`, and each source output must be ordered to match the index of the input that spends it.\\n\\nTo be valid the `sourceOutputs` property must have exactly one source output with `lockingBytecode` set to `[\"slot\"]` – the output at the same index as the `[\"slot\"]` input in `transaction.inputs`.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": [\"slot\"] }]`.',\n                    items: { $ref: '#/definitions/WalletTemplateScenarioSourceOutput' },\n                    type: 'array',\n                },\n                transaction: {\n                    additionalProperties: false,\n                    description: 'The transaction within which this scenario should be evaluated. This is used for script testing and validation.\\n\\nIf undefined, inherits the default value for each property: ```json {   \"inputs\": [{ \"unlockingBytecode\": [\\'slot\\'] }],   \"locktime\": 0,   \"outputs\": [{ \"lockingBytecode\": {} }],   \"version\": 2 } ```\\n\\nAny `transaction` property that is not set will be inherited from the scenario specified by `extends`. when specifying the `inputs` and `outputs` properties, each input and output extends the default values for inputs and outputs, respectively.\\n\\nFor example, an input of `{}` is interpreted as: ```json {   \"outpointIndex\": 0,   \"outpointTransactionHash\":     \"0000000000000000000000000000000000000000000000000000000000000000\",   \"sequenceNumber\": 0,   \"unlockingBytecode\": [\\'slot\\'] } ``` And an output of `{}` is interpreted as: ```json {   \"lockingBytecode\": {     \"script\": [\\'copy\\'],     \"overrides\": { \"hdKeys\": { \"addressIndex\": 1 } }   },   \"valueSatoshis\": 0 } ```',\n                    properties: {\n                        inputs: {\n                            description: 'The list of inputs to use when generating the transaction for this scenario.\\n\\nTo be valid the `inputs` property must have exactly one input with `unlockingBytecode` set to `[\"slot\"]`. This is the input in which the unlocking script under test will be placed.\\n\\nIf undefined, inherits the default scenario `inputs` value: `[{ \"unlockingBytecode\": [\"slot\"] }]`.',\n                            items: { $ref: '#/definitions/WalletTemplateScenarioInput' },\n                            type: 'array',\n                        },\n                        locktime: {\n                            description: 'The locktime to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, defaults to `0`.\\n\\nLocktime can be provided as either a timestamp or a block height. Values less than `500000000` are understood to be a block height (the current block number in the chain, beginning from block `0`). Values greater than or equal to `500000000` are understood to be a UNIX timestamp.\\n\\nFor validating timestamp values, the median timestamp of the last 11 blocks (Median Time-Past) is used. The precise behavior is defined in BIP113.\\n\\nIf the `sequenceNumber` of every transaction input is set to `0xffffffff` (`4294967295`), locktime is disabled, and the transaction may be added to a block even if the specified locktime has not yet been reached. When locktime is disabled, if an `OP_CHECKLOCKTIMEVERIFY` operation is encountered during the verification of any input, an error is produced, and the transaction is invalid.',\n                            type: 'number',\n                        },\n                        outputs: {\n                            description: 'The list of outputs to use when generating the transaction for this scenario.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": {} }]`.',\n                            items: {\n                                $ref: '#/definitions/WalletTemplateScenarioTransactionOutput',\n                            },\n                            type: 'array',\n                        },\n                        version: {\n                            description: 'The version to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, inherits the default scenario `version` value: `2`.',\n                            type: 'number',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        WalletTemplateScenarioBytecode: {\n            anyOf: [\n                { type: 'string' },\n                {\n                    additionalProperties: false,\n                    properties: {\n                        overrides: {\n                            $ref: '#/definitions/WalletTemplateScenarioData',\n                            description: 'Scenario data that extends the scenario\\'s top-level `data` during script compilation.\\n\\nEach property is extended individually – to modify a property set by the top-level scenario `data`, the new value must be listed here.\\n\\nDefaults to `{}` for `sourceOutputs` and `transaction.inputs`; defaults to `{ \"hdKeys\": { \"addressIndex\": 1 } }` for `transaction.outputs`.',\n                        },\n                        script: {\n                            anyOf: [\n                                { type: 'string' },\n                                {\n                                    items: { const: 'copy', type: 'string' },\n                                    maxItems: 1,\n                                    minItems: 1,\n                                    type: 'array',\n                                },\n                            ],\n                            description: 'The identifier of the script to compile when generating this bytecode. May also be set to `[\"copy\"]`, which is automatically replaced with the identifier of the locking or unlocking script under test, respectively.\\n\\nIf undefined, defaults to `[\"copy\"]`.',\n                        },\n                    },\n                    type: 'object',\n                },\n            ],\n            description: 'A type that describes the configuration for a particular locking or unlocking bytecode within a wallet template scenario.\\n\\nBytecode may be specified as either a hexadecimal-encoded string or an object describing the required compilation.\\n\\nFor `sourceOutputs` and `transaction.inputs`, defaults to `{ script: [\"copy\"], overrides: {} }`. For `transaction.outputs`, defaults to `{ script: [\"copy\"], overrides: { \"hdKeys\": { \"addressIndex\": 1 } } }`.',\n        },\n        WalletTemplateScenarioData: {\n            additionalProperties: false,\n            description: 'An object defining the data to use while compiling a scenario.',\n            properties: {\n                bytecode: {\n                    additionalProperties: { type: 'string' },\n                    description: \"A map of full identifiers to CashAssembly scripts that compile to each identifier's value for this scenario. Allowing `bytecode` to be specified as scripts (rather than e.g. hex) offers greater power and flexibility.\\n\\nBytecode scripts have access to each other and all other template scripts and defined variables, however, cyclical references will produce an error at compile time. Also, because the results of these compilations will be used to generate the compilation context for this scenario, these scripts may not use compiler operations that themselves require access to compilation context (e.g. signatures).\\n\\nThe provided `fullIdentifier` should match the complete identifier for each item, e.g. `some_wallet_data`, `variable_id.public_key`, or `variable_id.schnorr_signature.all_outputs`.\\n\\nAll `AddressData` and `WalletData` variables must be provided via `bytecode` (though the default scenario automatically includes reasonable values), and pre-computed results for operations of other variable types (e.g. `key.public_key`) may also be provided via this property.\\n\\nBecause each bytecode identifier may precisely match the identifier of the variable it defines for this scenario, references between these scripts must refer to the target script with a `_scenario.` prefix. E.g. to reference a sibling script `my_foo` from `my_bar`, the `my_bar` script must use the identifier `_scenario.my_foo`.\",\n                    type: 'object',\n                },\n                currentBlockHeight: {\n                    description: 'The current block height at the \"address creation time\" implied in this scenario.',\n                    type: 'number',\n                },\n                currentBlockTime: {\n                    description: 'The current MTP block time as a UNIX timestamp at the \"address creation time\" implied in this scenario.\\n\\nNote, this is never a current timestamp, but rather the median timestamp of the last 11 blocks. It is therefore approximately one hour in the past.\\n\\nEvery block has a precise MTP block time, much like a block height. See BIP113 for details.',\n                    type: 'number',\n                },\n                hdKeys: {\n                    additionalProperties: false,\n                    description: 'An object describing the settings used for `HdKey` variables in this scenario.',\n                    properties: {\n                        addressIndex: {\n                            description: 'The current address index to be used for this scenario. The `addressIndex` gets added to each `HdKey`s `addressOffset` to calculate the dynamic index (`i`) used in each `privateDerivationPath` or `publicDerivationPath`.\\n\\nThis is required for any compiler operation that requires derivation. Typically, the value is incremented by one for each address in a wallet.\\n\\nDefaults to `0`.',\n                            type: 'number',\n                        },\n                        hdPrivateKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of entity IDs to master HD private keys. These master HD private keys are used to derive each `HdKey` variable assigned to that entity according to its `privateDerivationPath`.\\n\\nHD private keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                            type: 'object',\n                        },\n                        hdPublicKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of entity IDs to HD public keys. These HD public keys are used to derive public keys for each `HdKey` variable assigned to that entity according to its `publicDerivationPath`.\\n\\nHD public keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                keys: {\n                    additionalProperties: false,\n                    description: 'An object describing the settings used for `Key` variables in this scenario.',\n                    properties: {\n                        privateKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of `Key` variable IDs to their 32-byte, hexadecimal-encoded private key values.',\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        WalletTemplateScenarioInput: {\n            additionalProperties: false,\n            description: 'An example input used to define a scenario for a wallet template.',\n            properties: {\n                outpointIndex: {\n                    description: 'The index of the output in the transaction from which this input is spent.\\n\\nIf undefined, this defaults to the same index as the input itself (so that by default, every outpoint in the produced transaction is different, even if an empty `outpointTransactionHash` is used for each transaction).',\n                    type: 'number',\n                },\n                outpointTransactionHash: {\n                    description: 'A 32-byte, hexadecimal-encoded hash of the transaction from which this input is spent in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000001`\\n\\nA.K.A. Outpoint `Transaction ID`',\n                    type: 'string',\n                },\n                sequenceNumber: {\n                    description: 'The positive, 32-bit unsigned integer used as the \"sequence number\" for this input.\\n\\nIf undefined, this defaults to `0`.',\n                    type: 'number',\n                },\n                unlockingBytecode: {\n                    anyOf: [\n                        { $ref: '#/definitions/WalletTemplateScenarioBytecode' },\n                        {\n                            items: { const: 'slot', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The `unlockingBytecode` value of this input for this scenario. This must be either `[\"slot\"]`, indicating that this input contains the `unlockingBytecode` under test by the scenario, or an `WalletTemplateScenarioBytecode`.\\n\\nFor a scenario to be valid, `unlockingBytecode` must be `[\"slot\"]` for exactly one input in the scenario.\\n\\nDefaults to `[\"slot\"]`.',\n                },\n            },\n            type: 'object',\n        },\n        'WalletTemplateScenarioOutput<false>': {\n            additionalProperties: false,\n            description: 'An example output used to define a scenario for a wallet template.',\n            properties: {\n                lockingBytecode: {\n                    $ref: '#/definitions/WalletTemplateScenarioBytecode',\n                    description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n                },\n                token: {\n                    additionalProperties: false,\n                    description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n                    properties: {\n                        amount: {\n                            description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                            type: ['number', 'string'],\n                        },\n                        category: {\n                            description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                            type: 'string',\n                        },\n                        nft: {\n                            additionalProperties: false,\n                            description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                            properties: {\n                                capability: {\n                                    description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                                    enum: ['minting', 'mutable', 'none'],\n                                    type: 'string',\n                                },\n                                commitment: {\n                                    description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                                    type: 'string',\n                                },\n                            },\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                valueSatoshis: {\n                    description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n            },\n            type: 'object',\n        },\n        'WalletTemplateScenarioOutput<true>': {\n            additionalProperties: false,\n            description: 'An example output used to define a scenario for a wallet template.',\n            properties: {\n                lockingBytecode: {\n                    anyOf: [\n                        { $ref: '#/definitions/WalletTemplateScenarioBytecode' },\n                        {\n                            items: { const: 'slot', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n                },\n                token: {\n                    additionalProperties: false,\n                    description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n                    properties: {\n                        amount: {\n                            description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                            type: ['number', 'string'],\n                        },\n                        category: {\n                            description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                            type: 'string',\n                        },\n                        nft: {\n                            additionalProperties: false,\n                            description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                            properties: {\n                                capability: {\n                                    description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                                    enum: ['minting', 'mutable', 'none'],\n                                    type: 'string',\n                                },\n                                commitment: {\n                                    description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                                    type: 'string',\n                                },\n                            },\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                valueSatoshis: {\n                    description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n            },\n            type: 'object',\n        },\n        WalletTemplateScenarioSourceOutput: {\n            $ref: '#/definitions/WalletTemplateScenarioOutput<true>',\n            description: 'A source output used by a wallet template scenario.',\n        },\n        WalletTemplateScenarioTransactionOutput: {\n            $ref: '#/definitions/WalletTemplateScenarioOutput<false>',\n            description: 'A transaction output used to define a wallet template scenario transaction.',\n        },\n        WalletTemplateScript: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular script within an wallet template.',\n            properties: {\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n            },\n            required: ['script'],\n            type: 'object',\n        },\n        WalletTemplateScriptLocking: {\n            additionalProperties: false,\n            properties: {\n                lockingType: {\n                    description: 'Indicates if P2SH20 infrastructure should be used when producing bytecode related to this script. For more information on P2SH20, see BIP16.\\n\\nWhen compiling locking scripts of type `p2sh20`, the result will be placed in a P2SH20 \"redeem script\" format: `OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL`\\n\\nWhen compiling unlocking scripts that unlock locking scripts of type `p2sh20`, the result will be transformed into the P2SH20 unlocking format: `unlockingBytecode <lockingBytecode>` (where `lockingBytecode` is the compiled bytecode of the locking script, without the \"redeem script\" transformation.)\\n\\nThe presence of the `lockingType` property indicates that this script is a locking script. It must be present on any script referenced by the `unlocks` property of another script.',\n                    enum: ['p2sh20', 'p2sh32', 'standard'],\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n            },\n            required: ['lockingType', 'script'],\n            type: 'object',\n        },\n        WalletTemplateScriptTest: {\n            additionalProperties: false,\n            properties: {\n                check: {\n                    description: 'The script to evaluate after the script being tested. This can be used to check that the tested script leaves the expected results on the stack. For example, if the tested script is expected to leave 3 items of a specific size on the stack, the `check` script could pop each resulting item from the stack and examine it for correctness.\\n\\nIn scenario testing, this script is appended to the script under test, and together they are treated as the locking script. Program evaluation is considered successful if the resulting program state can be verified by the virtual machine (e.g. the resulting stack contains a single `1`, no errors are produced, etc.).',\n                    type: 'string',\n                },\n                fails: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that fails program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                invalid: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in a compilation error. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this test (for use in user interfaces).',\n                    type: 'string',\n                },\n                passes: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that passes program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                setup: {\n                    description: 'A script to evaluate before the script being tested. This can be used to push values to the stack that are operated on by the tested script.\\n\\nIn scenario testing, this script is treated as the unlocking script.',\n                    type: 'string',\n                },\n            },\n            required: ['check'],\n            type: 'object',\n        },\n        WalletTemplateScriptTested: {\n            additionalProperties: false,\n            properties: {\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                pushed: {\n                    description: 'If set to `true`, indicates that this script should be wrapped in a push statement for testing.\\n\\nThis is useful for scripts that serve as \"bytecode templates\" – e.g. formatted messages or signature preimages. These scripts are typically not evaluated as bytecode but appear within push statements elsewhere in the template.\\n\\nDefaults to `false`.',\n                    type: 'boolean',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n                tests: {\n                    additionalProperties: {\n                        $ref: '#/definitions/WalletTemplateScriptTest',\n                    },\n                    description: 'One or more tests that can be used during development and during template validation to confirm the correctness of this tested script.',\n                    type: 'object',\n                },\n            },\n            required: ['script', 'tests'],\n            type: 'object',\n        },\n        WalletTemplateScriptUnlocking: {\n            additionalProperties: false,\n            properties: {\n                ageLock: {\n                    description: 'TODO: not yet implemented\\n\\nThe minimum input age required for this unlocking script to become valid.\\n\\nThis value is provided as a CashAssembly script that must compile to the least significant 3 bytes of the minimum sequence number required for this unlocking script to be valid (the \"type bit\" and the 2-byte \"value\" – see BIP68 for details). This script has access to all other template scripts and variables, but cyclical references will produce an error at compile time.\\n\\nIn supporting wallets, this value can be computed at address creation time, and the remaining time for which any UTXO remains \"age-locked\" can be displayed in user interfaces (by parsing the \"type bit\" and \"value\" as described in BIP68).\\n\\nNote, because the precise value used by `OP_CHECKSEQUENCEVERIFY` can be provided in the unlocking script, it is trivial to create an unlocking script for which a proper value for `ageLock` is not possible to determine until the spending transaction is prepared. These cases are intentionally out-of-scope for this property. Instead, `ageLock` should only be used for unlocking scripts where the expected value can be compiled at address creation time.',\n                    type: 'string',\n                },\n                estimate: {\n                    description: 'The identifier of the scenario to use for this unlocking script when compiling an estimated transaction.\\n\\nUsing estimate scenarios, it\\'s possible for wallet software to compute an \"estimated transaction\", an invalid transaction that is guaranteed to be the same byte length as the final transaction. This length can be used to calculate the required transaction fee and assign values to the transaction\\'s change output(s). Because estimate scenarios provide \"estimated\" values for all variables, this estimation can be done by a single entity without input from other entities.\\n\\nIf not provided, the default scenario will be used for estimation. The default scenario only provides values for each `Key` and `HdKey` variable, so compilations requiring other variables will produce errors. See `WalletTemplateScenario.extends` for details.',\n                    type: 'string',\n                },\n                fails: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that fails program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                invalid: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in a compilation error.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                passes: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that passes program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n                timeLockType: {\n                    description: \"The expected type of time locks in this script.\\n\\nBecause `OP_CHECKLOCKTIMEVERIFY` reads from a transaction's `locktime` property, every input to a given transaction must share the same time lock type. This differs from `OP_CHECKSEQUENCEVERIFY` in that each input has its own `sequenceNumber`, so compatibility is not required.\\n\\nIf a transaction includes multiple inputs using scripts with `timeLockType` defined, and the types are not compatible, generation should fail.\\n\\nThe `timestamp` type indicates that the transaction's locktime is provided as a UNIX timestamp (the `locktime` value is greater than or equal to `500000000`).\\n\\nThe `height` type indicates that the transaction's locktime is provided as a block height (the `locktime` value is less than `500000000`).\\n\\nIf `timeLockType` is undefined, the script is assumed to have no reliance on absolute time locks.\",\n                    enum: ['height', 'timestamp'],\n                    type: 'string',\n                },\n                unlocks: {\n                    description: 'The identifier of the script that can be unlocked by this script.\\n\\nThe presence of the `unlocks` property indicates that this script is an unlocking script, and the script it unlocks must be a locking script.',\n                    type: 'string',\n                },\n            },\n            required: ['script', 'unlocks'],\n            type: 'object',\n        },\n        WalletTemplateVariable: {\n            anyOf: [\n                { $ref: '#/definitions/WalletTemplateAddressData' },\n                { $ref: '#/definitions/WalletTemplateHdKey' },\n                { $ref: '#/definitions/WalletTemplateKey' },\n                { $ref: '#/definitions/WalletTemplateWalletData' },\n            ],\n        },\n        WalletTemplateWalletData: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                type: { const: 'WalletData', type: 'string' },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n    },\n};\nconst schema23 = {\n    additionalProperties: false,\n    description: 'A `WalletTemplate` specifies a set of locking scripts, unlocking scripts, and other information required to use a certain wallet protocol. Templates fully describe wallet protocols in a way that can be shared between software clients.',\n    properties: {\n        $schema: {\n            description: 'The URI that identifies the JSON Schema used by this template. Try: `https://libauth.org/schemas/wallet-template-v0.schema.json` to enable documentation, autocompletion, and validation in JSON documents.',\n            type: 'string',\n        },\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this wallet template (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.\\n\\nDescriptions have no length limit, but in user interfaces with limited space, they should be hidden beyond the first newline character or `140` characters until revealed by the user (e.g. by hiding the remaining description until the user activates a \"show more\" link).',\n            type: 'string',\n        },\n        entities: {\n            additionalProperties: { $ref: '#/definitions/WalletTemplateEntity' },\n            description: 'A map of entities defined in this wallet template.\\n\\nObject keys are used as entity identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this authentication template (for use in user interfaces).',\n            type: 'string',\n        },\n        scenarios: {\n            additionalProperties: { $ref: '#/definitions/WalletTemplateScenario' },\n            description: 'A scenario describes a context in which one or more scripts might be used. Scenarios are used for transaction estimation and as an integrated testing system for wallet templates.\\n\\nObject keys are used as scenario identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        scripts: {\n            additionalProperties: {\n                anyOf: [\n                    { $ref: '#/definitions/WalletTemplateScript' },\n                    { $ref: '#/definitions/WalletTemplateScriptLocking' },\n                    { $ref: '#/definitions/WalletTemplateScriptTested' },\n                    { $ref: '#/definitions/WalletTemplateScriptUnlocking' },\n                ],\n            },\n            description: 'A map of scripts used in this wallet template.\\n\\nObject keys are used as script identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        supported: {\n            description: 'A list of authentication virtual machine versions supported by this template.\\n\\nVirtual machine identifiers use the format `CODE_YYYY_MM`, where `CODE` is the currency code used to identify the network, and `YYYY_MM` is the year and month in which the specified VM version became active on the indicated network.\\n\\nIdentifiers with the `_SPEC` suffix indicate that this template is intended for compatibility with a future virtual machine version, but at the time the template was created, that virtual machine had not yet become active on the specified chain.',\n            items: { $ref: '#/definitions/AuthenticationVirtualMachineIdentifier' },\n            type: 'array',\n        },\n        version: {\n            const: 0,\n            deprecated: 'template versions are now specified via `$schema`',\n            description: 'A number identifying the format of this WalletTemplate. Currently, this implementation allows `version` to be set to `0`.',\n            type: 'number',\n        },\n    },\n    required: ['entities', 'scripts', 'supported'],\n    type: 'object',\n};\nconst schema37 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular script within an wallet template.',\n    properties: {\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n    },\n    required: ['script'],\n    type: 'object',\n};\nconst schema38 = {\n    additionalProperties: false,\n    properties: {\n        lockingType: {\n            description: 'Indicates if P2SH20 infrastructure should be used when producing bytecode related to this script. For more information on P2SH20, see BIP16.\\n\\nWhen compiling locking scripts of type `p2sh20`, the result will be placed in a P2SH20 \"redeem script\" format: `OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL`\\n\\nWhen compiling unlocking scripts that unlock locking scripts of type `p2sh20`, the result will be transformed into the P2SH20 unlocking format: `unlockingBytecode <lockingBytecode>` (where `lockingBytecode` is the compiled bytecode of the locking script, without the \"redeem script\" transformation.)\\n\\nThe presence of the `lockingType` property indicates that this script is a locking script. It must be present on any script referenced by the `unlocks` property of another script.',\n            enum: ['p2sh20', 'p2sh32', 'standard'],\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n    },\n    required: ['lockingType', 'script'],\n    type: 'object',\n};\nconst schema41 = {\n    additionalProperties: false,\n    properties: {\n        ageLock: {\n            description: 'TODO: not yet implemented\\n\\nThe minimum input age required for this unlocking script to become valid.\\n\\nThis value is provided as a CashAssembly script that must compile to the least significant 3 bytes of the minimum sequence number required for this unlocking script to be valid (the \"type bit\" and the 2-byte \"value\" – see BIP68 for details). This script has access to all other template scripts and variables, but cyclical references will produce an error at compile time.\\n\\nIn supporting wallets, this value can be computed at address creation time, and the remaining time for which any UTXO remains \"age-locked\" can be displayed in user interfaces (by parsing the \"type bit\" and \"value\" as described in BIP68).\\n\\nNote, because the precise value used by `OP_CHECKSEQUENCEVERIFY` can be provided in the unlocking script, it is trivial to create an unlocking script for which a proper value for `ageLock` is not possible to determine until the spending transaction is prepared. These cases are intentionally out-of-scope for this property. Instead, `ageLock` should only be used for unlocking scripts where the expected value can be compiled at address creation time.',\n            type: 'string',\n        },\n        estimate: {\n            description: 'The identifier of the scenario to use for this unlocking script when compiling an estimated transaction.\\n\\nUsing estimate scenarios, it\\'s possible for wallet software to compute an \"estimated transaction\", an invalid transaction that is guaranteed to be the same byte length as the final transaction. This length can be used to calculate the required transaction fee and assign values to the transaction\\'s change output(s). Because estimate scenarios provide \"estimated\" values for all variables, this estimation can be done by a single entity without input from other entities.\\n\\nIf not provided, the default scenario will be used for estimation. The default scenario only provides values for each `Key` and `HdKey` variable, so compilations requiring other variables will produce errors. See `WalletTemplateScenario.extends` for details.',\n            type: 'string',\n        },\n        fails: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that fails program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        invalid: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in a compilation error.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        passes: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that passes program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n        timeLockType: {\n            description: \"The expected type of time locks in this script.\\n\\nBecause `OP_CHECKLOCKTIMEVERIFY` reads from a transaction's `locktime` property, every input to a given transaction must share the same time lock type. This differs from `OP_CHECKSEQUENCEVERIFY` in that each input has its own `sequenceNumber`, so compatibility is not required.\\n\\nIf a transaction includes multiple inputs using scripts with `timeLockType` defined, and the types are not compatible, generation should fail.\\n\\nThe `timestamp` type indicates that the transaction's locktime is provided as a UNIX timestamp (the `locktime` value is greater than or equal to `500000000`).\\n\\nThe `height` type indicates that the transaction's locktime is provided as a block height (the `locktime` value is less than `500000000`).\\n\\nIf `timeLockType` is undefined, the script is assumed to have no reliance on absolute time locks.\",\n            enum: ['height', 'timestamp'],\n            type: 'string',\n        },\n        unlocks: {\n            description: 'The identifier of the script that can be unlocked by this script.\\n\\nThe presence of the `unlocks` property indicates that this script is an unlocking script, and the script it unlocks must be a locking script.',\n            type: 'string',\n        },\n    },\n    required: ['script', 'unlocks'],\n    type: 'object',\n};\nconst schema42 = {\n    description: \"Allowable identifiers for authentication virtual machine versions. The `BCH` prefix identifies the Bitcoin Cash network, the `XEC` prefix identifies the eCash network, the `BSV` prefix identifies the Bitcoin SV network, and the `BTC` prefix identifies the Bitcoin Core network. VM versions are named according to the date they were deployed on the indicated network.\\n\\nFor each network prefix, a `_SPEC` VM version is reserved to indicate that the template requires a custom, not-yet-deployed VM version (e.g. one or more CHIPs). By convention, templates marked for `_SPEC` VMs should indicate their requirements in the template description. After deployment of the `_SPEC` VM, when template compatibility is verified, the template's `supported` array should be updated to indicate compatibility with the live VM version.\",\n    enum: [\n        'BCH_2020_05',\n        'BCH_2021_05',\n        'BCH_2022_05',\n        'BCH_2023_05',\n        'BCH_SPEC',\n        'BSV_2020_02',\n        'BSV_SPEC',\n        'BTC_2017_08',\n        'BTC_SPEC',\n        'XEC_2020_05',\n        'XEC_SPEC',\n    ],\n    type: 'string',\n};\nconst schema24 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular entity within an wallet template.',\n    properties: {\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this entity (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this entity for use in user interfaces and error messages, e.g.: `Trusted Third-Party`.',\n            type: 'string',\n        },\n        scripts: {\n            description: 'An array of the identifiers of each script the entity must be capable of generating, e.g. each of the unlocking scripts this entity might use.\\n\\nProvided the necessary variables, any entity can construct any script, but this option allows us to hint to more advanced wallets which scripts to recommend to users. (Especially when many scripts require inter-entity communication initiated by a user.)\\n\\nIf not provided, this property is assumed to include all scripts in the template.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        variables: {\n            additionalProperties: { $ref: '#/definitions/WalletTemplateVariable' },\n            description: \"A map of variables that must be provided by this entity for use in the template's scripts. Some variables are required before locking script generation, while some variables can or must be resolved only before unlocking script generation.\\n\\nObject keys are used as variable identifiers, and by convention, should use `snake_case`.\",\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema25 = {\n    anyOf: [\n        { $ref: '#/definitions/WalletTemplateAddressData' },\n        { $ref: '#/definitions/WalletTemplateHdKey' },\n        { $ref: '#/definitions/WalletTemplateKey' },\n        { $ref: '#/definitions/WalletTemplateWalletData' },\n    ],\n};\nconst schema26 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        type: { const: 'AddressData', type: 'string' },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema27 = {\n    additionalProperties: false,\n    properties: {\n        addressOffset: {\n            description: 'The offset by which to increment the `addressIndex` provided in the compilation data when deriving this `HdKey`. (Default: 0)\\n\\nThis is useful for deriving the \"next\" (`1`) or \"previous\" (`-1`) address for use in the current compilation.',\n            type: 'number',\n        },\n        description: {\n            description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        hdPublicKeyDerivationPath: {\n            description: \"The path to derive the entity's HD public key from the entity's provided HD private key. By default, an empty string (`\\\"\\\"`), i.e. the entity's HD public key represents the same node in the HD tree as the provided HD private key.\\n\\nThis can be used to specify another relative or absolute derivation path from which the `publicDerivationPath` begins, e.g. `m/0'/1'/2'`. See `publicDerivationPath` for details.\\n\\nThis path may optionally begin with an `m` (for relative private derivation) and must be fixed – it cannot contain any `i` characters to represent the address index, as a dynamic hardened path would require a new HD public key for each address.\\n\\nNote, `hdPublicKeyDerivationPath` could be automatically determined in some cases, but it's always defined independently to improve validation and auditability.\",\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        neverSignTwice: {\n            description: 'If set to `true`, indicates that this key should never be used to sign two different messages.\\n\\nThis is useful for contracts that use zero-confirmation escrow systems to guarantee against double-spend attempts. By indicating that the user could be subjected to losses if a key were used in multiple signatures, templates can ensure that wallet implementations apply appropriate safeguards around use of the key.\\n\\nDefaults to `false`.',\n            type: 'boolean',\n        },\n        privateDerivationPath: {\n            description: \"The relative or absolute derivation path used to derive this `HdKey` from the owning entity's HD private key. By default, `i`.\\n\\nIf the first character is `m`, the path is an absolute path, otherwise, the path is a relative path. For absolute paths, the compiler will verify that the relevant entity's HD private key is a master private key (encoded with a depth of zero); `HdKey`s with relative `privateDerivationPath` may be resolved using non-master private keys (e.g. hardened accounts that have been previously derived and delegated to a sub-entity prior to compilation).\\n\\nThis path uses the notation specified in BIP32 and the `i` character to represent the `addressIndex`:\\n\\nAn optional `m` character (indicating an absolute, private derivation path), followed by sets of `/` and a number representing the child index used in the derivation at that depth. Hardened derivation is represented by a trailing `'`, and hardened child indexes are represented with the hardened index offset (`2147483648`) subtracted. All `i` characters are replaced with the value of `addressIndex` plus this `HdKey`'s `addressOffset`. If the `i` character is followed by `'`, the hardened index offset is added (`2147483648`) and hardened derivation is used.\\n\\nFor example, `m/0/1'/i'` has 3 levels of derivation, with child indexes in the following order:\\n\\n`derive(derive(derive(masterKey, 0), 2147483648 + 1), 2147483648 + addressIndex + addressOffset)`\\n\\nAs the path is absolute (begins with `m`), the compiler will also verify that a zero-depth (\\\"master\\\") HD private key is provided for the entity owning this `HdKey`.\\n\\nNote, because hardened derivation requires knowledge of the private key, `HdKey` variables with `privateDerivationPath`s that include hardened derivation must configure `hdPublicKeyDerivationPath` to support HD public derivation.\",\n            type: 'string',\n        },\n        publicDerivationPath: {\n            description: \"The relative derivation path used to derive this `HdKey`'s public key from the owning entity's HD public key (configured via `hdPublicKeyDerivationPath`). If not set, the relative path (following the `m/` of `privateDerivationPath`) is used. For the `privateDerivationPath` default of `i`, this is `i`.\\n\\nIf `privateDerivationPath` uses hardened derivation for some levels, but later derivation levels use non-hardened derivation, `publicDerivationPath` can be used to specify a public derivation path beginning from `hdPublicKeyDerivationPath` (i.e. `publicDerivationPath` should always be a non-hardened segment of `privateDerivationPath` that follows `hdPublicKeyDerivationPath`).\\n\\nThe `publicDerivationPath` must be a relative HD derivation path: non-hardened positive integer child indexes (between `0` and `2147483647`, without any trailing `'`s) separated by `/`s.\\n\\nFor example, if `privateDerivationPath` is `m/0'/i`, it is not possible to derive the equivalent public key with only the HD public key `M`. (The path `M/0'/i` is impossible.) However, given the HD public key for `m/0'`, it is possible to derive the public key of `m/0'/i` for any `i`. In this case, `hdPublicKeyDerivationPath` would be `m/0'` and `publicDerivationPath` would be the remaining `i`.\",\n            type: 'string',\n        },\n        type: { const: 'HdKey', type: 'string' },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema28 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        neverSignTwice: {\n            description: 'If set to `true`, indicates that this key should never be used to sign two different messages.\\n\\nThis is useful for contracts that use zero-confirmation escrow systems to guarantee against double-spend attempts. By indicating that the user could be subjected to losses if a key were used in multiple signatures, templates can ensure that wallet implementations apply appropriate safeguards around use of the key.\\n\\nDefaults to `false`.',\n            type: 'boolean',\n        },\n        type: { const: 'Key', type: 'string' },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema29 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        type: { const: 'WalletData', type: 'string' },\n    },\n    required: ['type'],\n    type: 'object',\n};\nfunction validate23(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    const _errs1 = errors;\n    const _errs2 = errors;\n    if (errors === _errs2) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if (data.type === undefined && (missing0 = 'type')) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: '#/definitions/WalletTemplateAddressData/required',\n                    keyword: 'required',\n                    params: { missingProperty: missing0 },\n                    message: \"must have required property '\" + missing0 + \"'\",\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n            else {\n                const _errs4 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'description' || key0 === 'name' || key0 === 'type')) {\n                        const err1 = {\n                            instancePath,\n                            schemaPath: '#/definitions/WalletTemplateAddressData/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err1];\n                        }\n                        else {\n                            vErrors.push(err1);\n                        }\n                        errors++;\n                        break;\n                    }\n                }\n                if (_errs4 === errors) {\n                    if (data.description !== undefined) {\n                        const _errs5 = errors;\n                        if (typeof data.description !== 'string') {\n                            const err2 = {\n                                instancePath: instancePath + '/description',\n                                schemaPath: '#/definitions/WalletTemplateAddressData/properties/description/type',\n                                keyword: 'type',\n                                params: { type: 'string' },\n                                message: 'must be string',\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err2];\n                            }\n                            else {\n                                vErrors.push(err2);\n                            }\n                            errors++;\n                        }\n                        var valid2 = _errs5 === errors;\n                    }\n                    else {\n                        var valid2 = true;\n                    }\n                    if (valid2) {\n                        if (data.name !== undefined) {\n                            const _errs7 = errors;\n                            if (typeof data.name !== 'string') {\n                                const err3 = {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/definitions/WalletTemplateAddressData/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err3];\n                                }\n                                else {\n                                    vErrors.push(err3);\n                                }\n                                errors++;\n                            }\n                            var valid2 = _errs7 === errors;\n                        }\n                        else {\n                            var valid2 = true;\n                        }\n                        if (valid2) {\n                            if (data.type !== undefined) {\n                                let data2 = data.type;\n                                const _errs9 = errors;\n                                if (typeof data2 !== 'string') {\n                                    const err4 = {\n                                        instancePath: instancePath + '/type',\n                                        schemaPath: '#/definitions/WalletTemplateAddressData/properties/type/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err4];\n                                    }\n                                    else {\n                                        vErrors.push(err4);\n                                    }\n                                    errors++;\n                                }\n                                if ('AddressData' !== data2) {\n                                    const err5 = {\n                                        instancePath: instancePath + '/type',\n                                        schemaPath: '#/definitions/WalletTemplateAddressData/properties/type/const',\n                                        keyword: 'const',\n                                        params: { allowedValue: 'AddressData' },\n                                        message: 'must be equal to constant',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err5];\n                                    }\n                                    else {\n                                        vErrors.push(err5);\n                                    }\n                                    errors++;\n                                }\n                                var valid2 = _errs9 === errors;\n                            }\n                            else {\n                                var valid2 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            const err6 = {\n                instancePath,\n                schemaPath: '#/definitions/WalletTemplateAddressData/type',\n                keyword: 'type',\n                params: { type: 'object' },\n                message: 'must be object',\n            };\n            if (vErrors === null) {\n                vErrors = [err6];\n            }\n            else {\n                vErrors.push(err6);\n            }\n            errors++;\n        }\n    }\n    var _valid0 = _errs1 === errors;\n    valid0 = valid0 || _valid0;\n    if (!valid0) {\n        const _errs11 = errors;\n        const _errs12 = errors;\n        if (errors === _errs12) {\n            if (data && typeof data == 'object' && !Array.isArray(data)) {\n                let missing1;\n                if (data.type === undefined && (missing1 = 'type')) {\n                    const err7 = {\n                        instancePath,\n                        schemaPath: '#/definitions/WalletTemplateHdKey/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing1 },\n                        message: \"must have required property '\" + missing1 + \"'\",\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err7];\n                    }\n                    else {\n                        vErrors.push(err7);\n                    }\n                    errors++;\n                }\n                else {\n                    const _errs14 = errors;\n                    for (const key1 in data) {\n                        if (!(key1 === 'addressOffset' ||\n                            key1 === 'description' ||\n                            key1 === 'hdPublicKeyDerivationPath' ||\n                            key1 === 'name' ||\n                            key1 === 'neverSignTwice' ||\n                            key1 === 'privateDerivationPath' ||\n                            key1 === 'publicDerivationPath' ||\n                            key1 === 'type')) {\n                            const err8 = {\n                                instancePath,\n                                schemaPath: '#/definitions/WalletTemplateHdKey/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key1 },\n                                message: 'must NOT have additional properties',\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err8];\n                            }\n                            else {\n                                vErrors.push(err8);\n                            }\n                            errors++;\n                            break;\n                        }\n                    }\n                    if (_errs14 === errors) {\n                        if (data.addressOffset !== undefined) {\n                            let data3 = data.addressOffset;\n                            const _errs15 = errors;\n                            if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                const err9 = {\n                                    instancePath: instancePath + '/addressOffset',\n                                    schemaPath: '#/definitions/WalletTemplateHdKey/properties/addressOffset/type',\n                                    keyword: 'type',\n                                    params: { type: 'number' },\n                                    message: 'must be number',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err9];\n                                }\n                                else {\n                                    vErrors.push(err9);\n                                }\n                                errors++;\n                            }\n                            var valid4 = _errs15 === errors;\n                        }\n                        else {\n                            var valid4 = true;\n                        }\n                        if (valid4) {\n                            if (data.description !== undefined) {\n                                const _errs17 = errors;\n                                if (typeof data.description !== 'string') {\n                                    const err10 = {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/definitions/WalletTemplateHdKey/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err10];\n                                    }\n                                    else {\n                                        vErrors.push(err10);\n                                    }\n                                    errors++;\n                                }\n                                var valid4 = _errs17 === errors;\n                            }\n                            else {\n                                var valid4 = true;\n                            }\n                            if (valid4) {\n                                if (data.hdPublicKeyDerivationPath !== undefined) {\n                                    const _errs19 = errors;\n                                    if (typeof data.hdPublicKeyDerivationPath !== 'string') {\n                                        const err11 = {\n                                            instancePath: instancePath + '/hdPublicKeyDerivationPath',\n                                            schemaPath: '#/definitions/WalletTemplateHdKey/properties/hdPublicKeyDerivationPath/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err11];\n                                        }\n                                        else {\n                                            vErrors.push(err11);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid4 = _errs19 === errors;\n                                }\n                                else {\n                                    var valid4 = true;\n                                }\n                                if (valid4) {\n                                    if (data.name !== undefined) {\n                                        const _errs21 = errors;\n                                        if (typeof data.name !== 'string') {\n                                            const err12 = {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/definitions/WalletTemplateHdKey/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err12];\n                                            }\n                                            else {\n                                                vErrors.push(err12);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid4 = _errs21 === errors;\n                                    }\n                                    else {\n                                        var valid4 = true;\n                                    }\n                                    if (valid4) {\n                                        if (data.neverSignTwice !== undefined) {\n                                            const _errs23 = errors;\n                                            if (typeof data.neverSignTwice !== 'boolean') {\n                                                const err13 = {\n                                                    instancePath: instancePath + '/neverSignTwice',\n                                                    schemaPath: '#/definitions/WalletTemplateHdKey/properties/neverSignTwice/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'boolean' },\n                                                    message: 'must be boolean',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err13];\n                                                }\n                                                else {\n                                                    vErrors.push(err13);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid4 = _errs23 === errors;\n                                        }\n                                        else {\n                                            var valid4 = true;\n                                        }\n                                        if (valid4) {\n                                            if (data.privateDerivationPath !== undefined) {\n                                                const _errs25 = errors;\n                                                if (typeof data.privateDerivationPath !== 'string') {\n                                                    const err14 = {\n                                                        instancePath: instancePath + '/privateDerivationPath',\n                                                        schemaPath: '#/definitions/WalletTemplateHdKey/properties/privateDerivationPath/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err14];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err14);\n                                                    }\n                                                    errors++;\n                                                }\n                                                var valid4 = _errs25 === errors;\n                                            }\n                                            else {\n                                                var valid4 = true;\n                                            }\n                                            if (valid4) {\n                                                if (data.publicDerivationPath !== undefined) {\n                                                    const _errs27 = errors;\n                                                    if (typeof data.publicDerivationPath !== 'string') {\n                                                        const err15 = {\n                                                            instancePath: instancePath + '/publicDerivationPath',\n                                                            schemaPath: '#/definitions/WalletTemplateHdKey/properties/publicDerivationPath/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err15];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err15);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid4 = _errs27 === errors;\n                                                }\n                                                else {\n                                                    var valid4 = true;\n                                                }\n                                                if (valid4) {\n                                                    if (data.type !== undefined) {\n                                                        let data10 = data.type;\n                                                        const _errs29 = errors;\n                                                        if (typeof data10 !== 'string') {\n                                                            const err16 = {\n                                                                instancePath: instancePath + '/type',\n                                                                schemaPath: '#/definitions/WalletTemplateHdKey/properties/type/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'string' },\n                                                                message: 'must be string',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err16];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err16);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        if ('HdKey' !== data10) {\n                                                            const err17 = {\n                                                                instancePath: instancePath + '/type',\n                                                                schemaPath: '#/definitions/WalletTemplateHdKey/properties/type/const',\n                                                                keyword: 'const',\n                                                                params: { allowedValue: 'HdKey' },\n                                                                message: 'must be equal to constant',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err17];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err17);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        var valid4 = _errs29 === errors;\n                                                    }\n                                                    else {\n                                                        var valid4 = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                const err18 = {\n                    instancePath,\n                    schemaPath: '#/definitions/WalletTemplateHdKey/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                };\n                if (vErrors === null) {\n                    vErrors = [err18];\n                }\n                else {\n                    vErrors.push(err18);\n                }\n                errors++;\n            }\n        }\n        var _valid0 = _errs11 === errors;\n        valid0 = valid0 || _valid0;\n        if (!valid0) {\n            const _errs31 = errors;\n            const _errs32 = errors;\n            if (errors === _errs32) {\n                if (data && typeof data == 'object' && !Array.isArray(data)) {\n                    let missing2;\n                    if (data.type === undefined && (missing2 = 'type')) {\n                        const err19 = {\n                            instancePath,\n                            schemaPath: '#/definitions/WalletTemplateKey/required',\n                            keyword: 'required',\n                            params: { missingProperty: missing2 },\n                            message: \"must have required property '\" + missing2 + \"'\",\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err19];\n                        }\n                        else {\n                            vErrors.push(err19);\n                        }\n                        errors++;\n                    }\n                    else {\n                        const _errs34 = errors;\n                        for (const key2 in data) {\n                            if (!(key2 === 'description' ||\n                                key2 === 'name' ||\n                                key2 === 'neverSignTwice' ||\n                                key2 === 'type')) {\n                                const err20 = {\n                                    instancePath,\n                                    schemaPath: '#/definitions/WalletTemplateKey/additionalProperties',\n                                    keyword: 'additionalProperties',\n                                    params: { additionalProperty: key2 },\n                                    message: 'must NOT have additional properties',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err20];\n                                }\n                                else {\n                                    vErrors.push(err20);\n                                }\n                                errors++;\n                                break;\n                            }\n                        }\n                        if (_errs34 === errors) {\n                            if (data.description !== undefined) {\n                                const _errs35 = errors;\n                                if (typeof data.description !== 'string') {\n                                    const err21 = {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/definitions/WalletTemplateKey/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err21];\n                                    }\n                                    else {\n                                        vErrors.push(err21);\n                                    }\n                                    errors++;\n                                }\n                                var valid6 = _errs35 === errors;\n                            }\n                            else {\n                                var valid6 = true;\n                            }\n                            if (valid6) {\n                                if (data.name !== undefined) {\n                                    const _errs37 = errors;\n                                    if (typeof data.name !== 'string') {\n                                        const err22 = {\n                                            instancePath: instancePath + '/name',\n                                            schemaPath: '#/definitions/WalletTemplateKey/properties/name/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err22];\n                                        }\n                                        else {\n                                            vErrors.push(err22);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid6 = _errs37 === errors;\n                                }\n                                else {\n                                    var valid6 = true;\n                                }\n                                if (valid6) {\n                                    if (data.neverSignTwice !== undefined) {\n                                        const _errs39 = errors;\n                                        if (typeof data.neverSignTwice !== 'boolean') {\n                                            const err23 = {\n                                                instancePath: instancePath + '/neverSignTwice',\n                                                schemaPath: '#/definitions/WalletTemplateKey/properties/neverSignTwice/type',\n                                                keyword: 'type',\n                                                params: { type: 'boolean' },\n                                                message: 'must be boolean',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err23];\n                                            }\n                                            else {\n                                                vErrors.push(err23);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid6 = _errs39 === errors;\n                                    }\n                                    else {\n                                        var valid6 = true;\n                                    }\n                                    if (valid6) {\n                                        if (data.type !== undefined) {\n                                            let data14 = data.type;\n                                            const _errs41 = errors;\n                                            if (typeof data14 !== 'string') {\n                                                const err24 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/WalletTemplateKey/properties/type/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err24];\n                                                }\n                                                else {\n                                                    vErrors.push(err24);\n                                                }\n                                                errors++;\n                                            }\n                                            if ('Key' !== data14) {\n                                                const err25 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/WalletTemplateKey/properties/type/const',\n                                                    keyword: 'const',\n                                                    params: { allowedValue: 'Key' },\n                                                    message: 'must be equal to constant',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err25];\n                                                }\n                                                else {\n                                                    vErrors.push(err25);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid6 = _errs41 === errors;\n                                        }\n                                        else {\n                                            var valid6 = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    const err26 = {\n                        instancePath,\n                        schemaPath: '#/definitions/WalletTemplateKey/type',\n                        keyword: 'type',\n                        params: { type: 'object' },\n                        message: 'must be object',\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err26];\n                    }\n                    else {\n                        vErrors.push(err26);\n                    }\n                    errors++;\n                }\n            }\n            var _valid0 = _errs31 === errors;\n            valid0 = valid0 || _valid0;\n            if (!valid0) {\n                const _errs43 = errors;\n                const _errs44 = errors;\n                if (errors === _errs44) {\n                    if (data && typeof data == 'object' && !Array.isArray(data)) {\n                        let missing3;\n                        if (data.type === undefined && (missing3 = 'type')) {\n                            const err27 = {\n                                instancePath,\n                                schemaPath: '#/definitions/WalletTemplateWalletData/required',\n                                keyword: 'required',\n                                params: { missingProperty: missing3 },\n                                message: \"must have required property '\" + missing3 + \"'\",\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err27];\n                            }\n                            else {\n                                vErrors.push(err27);\n                            }\n                            errors++;\n                        }\n                        else {\n                            const _errs46 = errors;\n                            for (const key3 in data) {\n                                if (!(key3 === 'description' ||\n                                    key3 === 'name' ||\n                                    key3 === 'type')) {\n                                    const err28 = {\n                                        instancePath,\n                                        schemaPath: '#/definitions/WalletTemplateWalletData/additionalProperties',\n                                        keyword: 'additionalProperties',\n                                        params: { additionalProperty: key3 },\n                                        message: 'must NOT have additional properties',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err28];\n                                    }\n                                    else {\n                                        vErrors.push(err28);\n                                    }\n                                    errors++;\n                                    break;\n                                }\n                            }\n                            if (_errs46 === errors) {\n                                if (data.description !== undefined) {\n                                    const _errs47 = errors;\n                                    if (typeof data.description !== 'string') {\n                                        const err29 = {\n                                            instancePath: instancePath + '/description',\n                                            schemaPath: '#/definitions/WalletTemplateWalletData/properties/description/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err29];\n                                        }\n                                        else {\n                                            vErrors.push(err29);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid8 = _errs47 === errors;\n                                }\n                                else {\n                                    var valid8 = true;\n                                }\n                                if (valid8) {\n                                    if (data.name !== undefined) {\n                                        const _errs49 = errors;\n                                        if (typeof data.name !== 'string') {\n                                            const err30 = {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/definitions/WalletTemplateWalletData/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err30];\n                                            }\n                                            else {\n                                                vErrors.push(err30);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid8 = _errs49 === errors;\n                                    }\n                                    else {\n                                        var valid8 = true;\n                                    }\n                                    if (valid8) {\n                                        if (data.type !== undefined) {\n                                            let data17 = data.type;\n                                            const _errs51 = errors;\n                                            if (typeof data17 !== 'string') {\n                                                const err31 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/WalletTemplateWalletData/properties/type/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err31];\n                                                }\n                                                else {\n                                                    vErrors.push(err31);\n                                                }\n                                                errors++;\n                                            }\n                                            if ('WalletData' !== data17) {\n                                                const err32 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/WalletTemplateWalletData/properties/type/const',\n                                                    keyword: 'const',\n                                                    params: { allowedValue: 'WalletData' },\n                                                    message: 'must be equal to constant',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err32];\n                                                }\n                                                else {\n                                                    vErrors.push(err32);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid8 = _errs51 === errors;\n                                        }\n                                        else {\n                                            var valid8 = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        const err33 = {\n                            instancePath,\n                            schemaPath: '#/definitions/WalletTemplateWalletData/type',\n                            keyword: 'type',\n                            params: { type: 'object' },\n                            message: 'must be object',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err33];\n                        }\n                        else {\n                            vErrors.push(err33);\n                        }\n                        errors++;\n                    }\n                }\n                var _valid0 = _errs43 === errors;\n                valid0 = valid0 || _valid0;\n            }\n        }\n    }\n    if (!valid0) {\n        const err34 = {\n            instancePath,\n            schemaPath: '#/anyOf',\n            keyword: 'anyOf',\n            params: {},\n            message: 'must match a schema in anyOf',\n        };\n        if (vErrors === null) {\n            vErrors = [err34];\n        }\n        else {\n            vErrors.push(err34);\n        }\n        errors++;\n        validate23.errors = vErrors;\n        return false;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate23.errors = vErrors;\n    return errors === 0;\n}\nfunction validate22(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'description' ||\n                    key0 === 'name' ||\n                    key0 === 'scripts' ||\n                    key0 === 'variables')) {\n                    validate22.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.description !== undefined) {\n                    const _errs2 = errors;\n                    if (typeof data.description !== 'string') {\n                        validate22.errors = [\n                            {\n                                instancePath: instancePath + '/description',\n                                schemaPath: '#/properties/description/type',\n                                keyword: 'type',\n                                params: { type: 'string' },\n                                message: 'must be string',\n                            },\n                        ];\n                        return false;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.name !== undefined) {\n                        const _errs4 = errors;\n                        if (typeof data.name !== 'string') {\n                            validate22.errors = [\n                                {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs4 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.scripts !== undefined) {\n                            let data2 = data.scripts;\n                            const _errs6 = errors;\n                            if (errors === _errs6) {\n                                if (Array.isArray(data2)) {\n                                    var valid1 = true;\n                                    const len0 = data2.length;\n                                    for (let i0 = 0; i0 < len0; i0++) {\n                                        const _errs8 = errors;\n                                        if (typeof data2[i0] !== 'string') {\n                                            validate22.errors = [\n                                                {\n                                                    instancePath: instancePath + '/scripts/' + i0,\n                                                    schemaPath: '#/properties/scripts/items/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid1 = _errs8 === errors;\n                                        if (!valid1) {\n                                            break;\n                                        }\n                                    }\n                                }\n                                else {\n                                    validate22.errors = [\n                                        {\n                                            instancePath: instancePath + '/scripts',\n                                            schemaPath: '#/properties/scripts/type',\n                                            keyword: 'type',\n                                            params: { type: 'array' },\n                                            message: 'must be array',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                            }\n                            var valid0 = _errs6 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.variables !== undefined) {\n                                let data4 = data.variables;\n                                const _errs10 = errors;\n                                if (errors === _errs10) {\n                                    if (data4 &&\n                                        typeof data4 == 'object' &&\n                                        !Array.isArray(data4)) {\n                                        for (const key1 in data4) {\n                                            const _errs13 = errors;\n                                            if (!validate23(data4[key1], {\n                                                instancePath: instancePath +\n                                                    '/variables/' +\n                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                parentData: data4,\n                                                parentDataProperty: key1,\n                                                rootData,\n                                            })) {\n                                                vErrors =\n                                                    vErrors === null\n                                                        ? validate23.errors\n                                                        : vErrors.concat(validate23.errors);\n                                                errors = vErrors.length;\n                                            }\n                                            var valid2 = _errs13 === errors;\n                                            if (!valid2) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        validate22.errors = [\n                                            {\n                                                instancePath: instancePath + '/variables',\n                                                schemaPath: '#/properties/variables/type',\n                                                keyword: 'type',\n                                                params: { type: 'object' },\n                                                message: 'must be object',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                }\n                                var valid0 = _errs10 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate22.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate22.errors = vErrors;\n    return errors === 0;\n}\nconst schema30 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular scenario within an wallet template.',\n    properties: {\n        data: {\n            $ref: '#/definitions/WalletTemplateScenarioData',\n            description: \"An object defining the data to use while compiling this scenario. The properties specified here are used to extend the existing scenario data based on this scenario's `extends` property.\\n\\nEach property is extended individually – to unset a previously-set property, the property must be individually overridden in this object.\",\n        },\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this scenario (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n            type: 'string',\n        },\n        extends: {\n            description: \"The identifier of the scenario that this scenario extends. Any `data` or `transaction` properties not defined in this scenario inherit from the extended parent scenario.\\n\\nIf undefined, this scenario is assumed to extend the default scenario:\\n\\n- The default values for `data` are set:   - The identifiers of all `Key` variables and entities in this template are lexicographically sorted, then each is assigned an incrementing positive integer – beginning with `1` – encoded as an unsigned, 256-bit, big-endian integer (i.e. `0x0000...0001` (32 bytes), `0x0000...0002`, `0x0000...0003`, etc.). For `Key`s, this assigned value is used as the private key; For entities, the assigned value is used as the master seed of that entity's `HdPrivateKey`. If `hdKey` is set, the `addressIndex` is set to `0`.   - `currentBlockHeight` is set to `2`. This is the height of the second mined block after the genesis block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`. This default value was chosen to be low enough to simplify the debugging of block height offsets while remaining differentiated from `0` and `1`, which are used both as boolean return values and for control flow.   - `currentBlockTime` is set to `1231469665`. This is the Median Time-Past block time (BIP113) of block `2`.\\n\\n- Then `transaction` is set based on use:   - if the scenario is being used for transaction estimation, all transaction properties are taken from the transaction being estimated.   - if the scenario is being used for script testing and validation, the default value for each `transaction` property is used.\\n\\nWhen a scenario is extended, each property of `data` and `transaction` is extended individually: if the extending scenario does not provide a new value for `data.bytecode.value` or `transaction.property`, the parent value is used. To avoid inheriting a parent value, each child value must be individually overridden.\",\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this scenario for use in user interfaces, e.g.: `Delayed Recovery`.',\n            type: 'string',\n        },\n        sourceOutputs: {\n            description: 'The list of source outputs (a.k.a. UTXOs) to use when generating the compilation context for this scenario.\\n\\nThe `sourceOutputs` property must have the same length as `transaction.inputs`, and each source output must be ordered to match the index of the input that spends it.\\n\\nTo be valid the `sourceOutputs` property must have exactly one source output with `lockingBytecode` set to `[\"slot\"]` – the output at the same index as the `[\"slot\"]` input in `transaction.inputs`.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": [\"slot\"] }]`.',\n            items: { $ref: '#/definitions/WalletTemplateScenarioSourceOutput' },\n            type: 'array',\n        },\n        transaction: {\n            additionalProperties: false,\n            description: 'The transaction within which this scenario should be evaluated. This is used for script testing and validation.\\n\\nIf undefined, inherits the default value for each property: ```json {   \"inputs\": [{ \"unlockingBytecode\": [\\'slot\\'] }],   \"locktime\": 0,   \"outputs\": [{ \"lockingBytecode\": {} }],   \"version\": 2 } ```\\n\\nAny `transaction` property that is not set will be inherited from the scenario specified by `extends`. when specifying the `inputs` and `outputs` properties, each input and output extends the default values for inputs and outputs, respectively.\\n\\nFor example, an input of `{}` is interpreted as: ```json {   \"outpointIndex\": 0,   \"outpointTransactionHash\":     \"0000000000000000000000000000000000000000000000000000000000000000\",   \"sequenceNumber\": 0,   \"unlockingBytecode\": [\\'slot\\'] } ``` And an output of `{}` is interpreted as: ```json {   \"lockingBytecode\": {     \"script\": [\\'copy\\'],     \"overrides\": { \"hdKeys\": { \"addressIndex\": 1 } }   },   \"valueSatoshis\": 0 } ```',\n            properties: {\n                inputs: {\n                    description: 'The list of inputs to use when generating the transaction for this scenario.\\n\\nTo be valid the `inputs` property must have exactly one input with `unlockingBytecode` set to `[\"slot\"]`. This is the input in which the unlocking script under test will be placed.\\n\\nIf undefined, inherits the default scenario `inputs` value: `[{ \"unlockingBytecode\": [\"slot\"] }]`.',\n                    items: { $ref: '#/definitions/WalletTemplateScenarioInput' },\n                    type: 'array',\n                },\n                locktime: {\n                    description: 'The locktime to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, defaults to `0`.\\n\\nLocktime can be provided as either a timestamp or a block height. Values less than `500000000` are understood to be a block height (the current block number in the chain, beginning from block `0`). Values greater than or equal to `500000000` are understood to be a UNIX timestamp.\\n\\nFor validating timestamp values, the median timestamp of the last 11 blocks (Median Time-Past) is used. The precise behavior is defined in BIP113.\\n\\nIf the `sequenceNumber` of every transaction input is set to `0xffffffff` (`4294967295`), locktime is disabled, and the transaction may be added to a block even if the specified locktime has not yet been reached. When locktime is disabled, if an `OP_CHECKLOCKTIMEVERIFY` operation is encountered during the verification of any input, an error is produced, and the transaction is invalid.',\n                    type: 'number',\n                },\n                outputs: {\n                    description: 'The list of outputs to use when generating the transaction for this scenario.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": {} }]`.',\n                    items: {\n                        $ref: '#/definitions/WalletTemplateScenarioTransactionOutput',\n                    },\n                    type: 'array',\n                },\n                version: {\n                    description: 'The version to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, inherits the default scenario `version` value: `2`.',\n                    type: 'number',\n                },\n            },\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema31 = {\n    additionalProperties: false,\n    description: 'An object defining the data to use while compiling a scenario.',\n    properties: {\n        bytecode: {\n            additionalProperties: { type: 'string' },\n            description: \"A map of full identifiers to CashAssembly scripts that compile to each identifier's value for this scenario. Allowing `bytecode` to be specified as scripts (rather than e.g. hex) offers greater power and flexibility.\\n\\nBytecode scripts have access to each other and all other template scripts and defined variables, however, cyclical references will produce an error at compile time. Also, because the results of these compilations will be used to generate the compilation context for this scenario, these scripts may not use compiler operations that themselves require access to compilation context (e.g. signatures).\\n\\nThe provided `fullIdentifier` should match the complete identifier for each item, e.g. `some_wallet_data`, `variable_id.public_key`, or `variable_id.schnorr_signature.all_outputs`.\\n\\nAll `AddressData` and `WalletData` variables must be provided via `bytecode` (though the default scenario automatically includes reasonable values), and pre-computed results for operations of other variable types (e.g. `key.public_key`) may also be provided via this property.\\n\\nBecause each bytecode identifier may precisely match the identifier of the variable it defines for this scenario, references between these scripts must refer to the target script with a `_scenario.` prefix. E.g. to reference a sibling script `my_foo` from `my_bar`, the `my_bar` script must use the identifier `_scenario.my_foo`.\",\n            type: 'object',\n        },\n        currentBlockHeight: {\n            description: 'The current block height at the \"address creation time\" implied in this scenario.',\n            type: 'number',\n        },\n        currentBlockTime: {\n            description: 'The current MTP block time as a UNIX timestamp at the \"address creation time\" implied in this scenario.\\n\\nNote, this is never a current timestamp, but rather the median timestamp of the last 11 blocks. It is therefore approximately one hour in the past.\\n\\nEvery block has a precise MTP block time, much like a block height. See BIP113 for details.',\n            type: 'number',\n        },\n        hdKeys: {\n            additionalProperties: false,\n            description: 'An object describing the settings used for `HdKey` variables in this scenario.',\n            properties: {\n                addressIndex: {\n                    description: 'The current address index to be used for this scenario. The `addressIndex` gets added to each `HdKey`s `addressOffset` to calculate the dynamic index (`i`) used in each `privateDerivationPath` or `publicDerivationPath`.\\n\\nThis is required for any compiler operation that requires derivation. Typically, the value is incremented by one for each address in a wallet.\\n\\nDefaults to `0`.',\n                    type: 'number',\n                },\n                hdPrivateKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of entity IDs to master HD private keys. These master HD private keys are used to derive each `HdKey` variable assigned to that entity according to its `privateDerivationPath`.\\n\\nHD private keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                    type: 'object',\n                },\n                hdPublicKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of entity IDs to HD public keys. These HD public keys are used to derive public keys for each `HdKey` variable assigned to that entity according to its `publicDerivationPath`.\\n\\nHD public keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        keys: {\n            additionalProperties: false,\n            description: 'An object describing the settings used for `Key` variables in this scenario.',\n            properties: {\n                privateKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of `Key` variable IDs to their 32-byte, hexadecimal-encoded private key values.',\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema32 = {\n    additionalProperties: false,\n    description: 'An example output used to define a scenario for a wallet template.',\n    properties: {\n        lockingBytecode: {\n            anyOf: [\n                { $ref: '#/definitions/WalletTemplateScenarioBytecode' },\n                {\n                    items: { const: 'slot', type: 'string' },\n                    maxItems: 1,\n                    minItems: 1,\n                    type: 'array',\n                },\n            ],\n            description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n        },\n        token: {\n            additionalProperties: false,\n            description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n            properties: {\n                amount: {\n                    description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n                category: {\n                    description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                    type: 'string',\n                },\n                nft: {\n                    additionalProperties: false,\n                    description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                    properties: {\n                        capability: {\n                            description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                            enum: ['minting', 'mutable', 'none'],\n                            type: 'string',\n                        },\n                        commitment: {\n                            description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                            type: 'string',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        valueSatoshis: {\n            description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n            type: ['number', 'string'],\n        },\n    },\n    type: 'object',\n};\nconst schema33 = {\n    anyOf: [\n        { type: 'string' },\n        {\n            additionalProperties: false,\n            properties: {\n                overrides: {\n                    $ref: '#/definitions/WalletTemplateScenarioData',\n                    description: 'Scenario data that extends the scenario\\'s top-level `data` during script compilation.\\n\\nEach property is extended individually – to modify a property set by the top-level scenario `data`, the new value must be listed here.\\n\\nDefaults to `{}` for `sourceOutputs` and `transaction.inputs`; defaults to `{ \"hdKeys\": { \"addressIndex\": 1 } }` for `transaction.outputs`.',\n                },\n                script: {\n                    anyOf: [\n                        { type: 'string' },\n                        {\n                            items: { const: 'copy', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The identifier of the script to compile when generating this bytecode. May also be set to `[\"copy\"]`, which is automatically replaced with the identifier of the locking or unlocking script under test, respectively.\\n\\nIf undefined, defaults to `[\"copy\"]`.',\n                },\n            },\n            type: 'object',\n        },\n    ],\n    description: 'A type that describes the configuration for a particular locking or unlocking bytecode within a wallet template scenario.\\n\\nBytecode may be specified as either a hexadecimal-encoded string or an object describing the required compilation.\\n\\nFor `sourceOutputs` and `transaction.inputs`, defaults to `{ script: [\"copy\"], overrides: {} }`. For `transaction.outputs`, defaults to `{ script: [\"copy\"], overrides: { \"hdKeys\": { \"addressIndex\": 1 } } }`.',\n};\nfunction validate28(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    const _errs1 = errors;\n    if (typeof data !== 'string') {\n        const err0 = {\n            instancePath,\n            schemaPath: '#/anyOf/0/type',\n            keyword: 'type',\n            params: { type: 'string' },\n            message: 'must be string',\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    valid0 = valid0 || _valid0;\n    if (!valid0) {\n        const _errs3 = errors;\n        if (errors === _errs3) {\n            if (data && typeof data == 'object' && !Array.isArray(data)) {\n                const _errs5 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'overrides' || key0 === 'script')) {\n                        const err1 = {\n                            instancePath,\n                            schemaPath: '#/anyOf/1/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err1];\n                        }\n                        else {\n                            vErrors.push(err1);\n                        }\n                        errors++;\n                        break;\n                    }\n                }\n                if (_errs5 === errors) {\n                    if (data.overrides !== undefined) {\n                        let data0 = data.overrides;\n                        const _errs6 = errors;\n                        const _errs7 = errors;\n                        if (errors === _errs7) {\n                            if (data0 && typeof data0 == 'object' && !Array.isArray(data0)) {\n                                const _errs9 = errors;\n                                for (const key1 in data0) {\n                                    if (!(key1 === 'bytecode' ||\n                                        key1 === 'currentBlockHeight' ||\n                                        key1 === 'currentBlockTime' ||\n                                        key1 === 'hdKeys' ||\n                                        key1 === 'keys')) {\n                                        const err2 = {\n                                            instancePath: instancePath + '/overrides',\n                                            schemaPath: '#/definitions/WalletTemplateScenarioData/additionalProperties',\n                                            keyword: 'additionalProperties',\n                                            params: { additionalProperty: key1 },\n                                            message: 'must NOT have additional properties',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err2];\n                                        }\n                                        else {\n                                            vErrors.push(err2);\n                                        }\n                                        errors++;\n                                        break;\n                                    }\n                                }\n                                if (_errs9 === errors) {\n                                    if (data0.bytecode !== undefined) {\n                                        let data1 = data0.bytecode;\n                                        const _errs10 = errors;\n                                        if (errors === _errs10) {\n                                            if (data1 &&\n                                                typeof data1 == 'object' &&\n                                                !Array.isArray(data1)) {\n                                                for (const key2 in data1) {\n                                                    const _errs13 = errors;\n                                                    if (typeof data1[key2] !== 'string') {\n                                                        const err3 = {\n                                                            instancePath: instancePath +\n                                                                '/overrides/bytecode/' +\n                                                                key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/bytecode/additionalProperties/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err3];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err3);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid4 = _errs13 === errors;\n                                                    if (!valid4) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                const err4 = {\n                                                    instancePath: instancePath + '/overrides/bytecode',\n                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/bytecode/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err4];\n                                                }\n                                                else {\n                                                    vErrors.push(err4);\n                                                }\n                                                errors++;\n                                            }\n                                        }\n                                        var valid3 = _errs10 === errors;\n                                    }\n                                    else {\n                                        var valid3 = true;\n                                    }\n                                    if (valid3) {\n                                        if (data0.currentBlockHeight !== undefined) {\n                                            let data3 = data0.currentBlockHeight;\n                                            const _errs15 = errors;\n                                            if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                                const err5 = {\n                                                    instancePath: instancePath + '/overrides/currentBlockHeight',\n                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/currentBlockHeight/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'number' },\n                                                    message: 'must be number',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err5];\n                                                }\n                                                else {\n                                                    vErrors.push(err5);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid3 = _errs15 === errors;\n                                        }\n                                        else {\n                                            var valid3 = true;\n                                        }\n                                        if (valid3) {\n                                            if (data0.currentBlockTime !== undefined) {\n                                                let data4 = data0.currentBlockTime;\n                                                const _errs17 = errors;\n                                                if (!(typeof data4 == 'number' && isFinite(data4))) {\n                                                    const err6 = {\n                                                        instancePath: instancePath + '/overrides/currentBlockTime',\n                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/currentBlockTime/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'number' },\n                                                        message: 'must be number',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err6];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err6);\n                                                    }\n                                                    errors++;\n                                                }\n                                                var valid3 = _errs17 === errors;\n                                            }\n                                            else {\n                                                var valid3 = true;\n                                            }\n                                            if (valid3) {\n                                                if (data0.hdKeys !== undefined) {\n                                                    let data5 = data0.hdKeys;\n                                                    const _errs19 = errors;\n                                                    if (errors === _errs19) {\n                                                        if (data5 &&\n                                                            typeof data5 == 'object' &&\n                                                            !Array.isArray(data5)) {\n                                                            const _errs21 = errors;\n                                                            for (const key3 in data5) {\n                                                                if (!(key3 === 'addressIndex' ||\n                                                                    key3 === 'hdPrivateKeys' ||\n                                                                    key3 === 'hdPublicKeys')) {\n                                                                    const err7 = {\n                                                                        instancePath: instancePath + '/overrides/hdKeys',\n                                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key3 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err7];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err7);\n                                                                    }\n                                                                    errors++;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs21 === errors) {\n                                                                if (data5.addressIndex !== undefined) {\n                                                                    let data6 = data5.addressIndex;\n                                                                    const _errs22 = errors;\n                                                                    if (!(typeof data6 == 'number' &&\n                                                                        isFinite(data6))) {\n                                                                        const err8 = {\n                                                                            instancePath: instancePath +\n                                                                                '/overrides/hdKeys/addressIndex',\n                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/addressIndex/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'number' },\n                                                                            message: 'must be number',\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err8];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err8);\n                                                                        }\n                                                                        errors++;\n                                                                    }\n                                                                    var valid5 = _errs22 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid5 = true;\n                                                                }\n                                                                if (valid5) {\n                                                                    if (data5.hdPrivateKeys !== undefined) {\n                                                                        let data7 = data5.hdPrivateKeys;\n                                                                        const _errs24 = errors;\n                                                                        if (errors === _errs24) {\n                                                                            if (data7 &&\n                                                                                typeof data7 == 'object' &&\n                                                                                !Array.isArray(data7)) {\n                                                                                for (const key4 in data7) {\n                                                                                    const _errs27 = errors;\n                                                                                    if (typeof data7[key4] !== 'string') {\n                                                                                        const err9 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/overrides/hdKeys/hdPrivateKeys/' +\n                                                                                                key4\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err9];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err9);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid6 = _errs27 === errors;\n                                                                                    if (!valid6) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                const err10 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/overrides/hdKeys/hdPrivateKeys',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err10];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err10);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                        }\n                                                                        var valid5 = _errs24 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid5 = true;\n                                                                    }\n                                                                    if (valid5) {\n                                                                        if (data5.hdPublicKeys !== undefined) {\n                                                                            let data9 = data5.hdPublicKeys;\n                                                                            const _errs29 = errors;\n                                                                            if (errors === _errs29) {\n                                                                                if (data9 &&\n                                                                                    typeof data9 == 'object' &&\n                                                                                    !Array.isArray(data9)) {\n                                                                                    for (const key5 in data9) {\n                                                                                        const _errs32 = errors;\n                                                                                        if (typeof data9[key5] !== 'string') {\n                                                                                            const err11 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/overrides/hdKeys/hdPublicKeys/' +\n                                                                                                    key5\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1'),\n                                                                                                schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/additionalProperties/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err11];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err11);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid7 = _errs32 === errors;\n                                                                                        if (!valid7) {\n                                                                                            break;\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                                else {\n                                                                                    const err12 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/overrides/hdKeys/hdPublicKeys',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'object' },\n                                                                                        message: 'must be object',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err12];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err12);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                            }\n                                                                            var valid5 = _errs29 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid5 = true;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                        else {\n                                                            const err13 = {\n                                                                instancePath: instancePath + '/overrides/hdKeys',\n                                                                schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err13];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err13);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                    }\n                                                    var valid3 = _errs19 === errors;\n                                                }\n                                                else {\n                                                    var valid3 = true;\n                                                }\n                                                if (valid3) {\n                                                    if (data0.keys !== undefined) {\n                                                        let data11 = data0.keys;\n                                                        const _errs34 = errors;\n                                                        if (errors === _errs34) {\n                                                            if (data11 &&\n                                                                typeof data11 == 'object' &&\n                                                                !Array.isArray(data11)) {\n                                                                const _errs36 = errors;\n                                                                for (const key6 in data11) {\n                                                                    if (!(key6 === 'privateKeys')) {\n                                                                        const err14 = {\n                                                                            instancePath: instancePath + '/overrides/keys',\n                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key6 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err14];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err14);\n                                                                        }\n                                                                        errors++;\n                                                                        break;\n                                                                    }\n                                                                }\n                                                                if (_errs36 === errors) {\n                                                                    if (data11.privateKeys !== undefined) {\n                                                                        let data12 = data11.privateKeys;\n                                                                        const _errs37 = errors;\n                                                                        if (errors === _errs37) {\n                                                                            if (data12 &&\n                                                                                typeof data12 == 'object' &&\n                                                                                !Array.isArray(data12)) {\n                                                                                for (const key7 in data12) {\n                                                                                    const _errs40 = errors;\n                                                                                    if (typeof data12[key7] !== 'string') {\n                                                                                        const err15 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/overrides/keys/privateKeys/' +\n                                                                                                key7\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/properties/privateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err15];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err15);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid9 = _errs40 === errors;\n                                                                                    if (!valid9) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                const err16 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/overrides/keys/privateKeys',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/properties/privateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err16];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err16);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                const err17 = {\n                                                                    instancePath: instancePath + '/overrides/keys',\n                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                };\n                                                                if (vErrors === null) {\n                                                                    vErrors = [err17];\n                                                                }\n                                                                else {\n                                                                    vErrors.push(err17);\n                                                                }\n                                                                errors++;\n                                                            }\n                                                        }\n                                                        var valid3 = _errs34 === errors;\n                                                    }\n                                                    else {\n                                                        var valid3 = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                const err18 = {\n                                    instancePath: instancePath + '/overrides',\n                                    schemaPath: '#/definitions/WalletTemplateScenarioData/type',\n                                    keyword: 'type',\n                                    params: { type: 'object' },\n                                    message: 'must be object',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err18];\n                                }\n                                else {\n                                    vErrors.push(err18);\n                                }\n                                errors++;\n                            }\n                        }\n                        var valid1 = _errs6 === errors;\n                    }\n                    else {\n                        var valid1 = true;\n                    }\n                    if (valid1) {\n                        if (data.script !== undefined) {\n                            let data14 = data.script;\n                            const _errs42 = errors;\n                            const _errs43 = errors;\n                            let valid10 = false;\n                            const _errs44 = errors;\n                            if (typeof data14 !== 'string') {\n                                const err19 = {\n                                    instancePath: instancePath + '/script',\n                                    schemaPath: '#/anyOf/1/properties/script/anyOf/0/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err19];\n                                }\n                                else {\n                                    vErrors.push(err19);\n                                }\n                                errors++;\n                            }\n                            var _valid1 = _errs44 === errors;\n                            valid10 = valid10 || _valid1;\n                            if (!valid10) {\n                                const _errs46 = errors;\n                                if (errors === _errs46) {\n                                    if (Array.isArray(data14)) {\n                                        if (data14.length > 1) {\n                                            const err20 = {\n                                                instancePath: instancePath + '/script',\n                                                schemaPath: '#/anyOf/1/properties/script/anyOf/1/maxItems',\n                                                keyword: 'maxItems',\n                                                params: { limit: 1 },\n                                                message: 'must NOT have more than 1 items',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err20];\n                                            }\n                                            else {\n                                                vErrors.push(err20);\n                                            }\n                                            errors++;\n                                        }\n                                        else {\n                                            if (data14.length < 1) {\n                                                const err21 = {\n                                                    instancePath: instancePath + '/script',\n                                                    schemaPath: '#/anyOf/1/properties/script/anyOf/1/minItems',\n                                                    keyword: 'minItems',\n                                                    params: { limit: 1 },\n                                                    message: 'must NOT have fewer than 1 items',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err21];\n                                                }\n                                                else {\n                                                    vErrors.push(err21);\n                                                }\n                                                errors++;\n                                            }\n                                            else {\n                                                var valid11 = true;\n                                                const len0 = data14.length;\n                                                for (let i0 = 0; i0 < len0; i0++) {\n                                                    let data15 = data14[i0];\n                                                    const _errs48 = errors;\n                                                    if (typeof data15 !== 'string') {\n                                                        const err22 = {\n                                                            instancePath: instancePath + '/script/' + i0,\n                                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/items/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err22];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err22);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    if ('copy' !== data15) {\n                                                        const err23 = {\n                                                            instancePath: instancePath + '/script/' + i0,\n                                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/items/const',\n                                                            keyword: 'const',\n                                                            params: { allowedValue: 'copy' },\n                                                            message: 'must be equal to constant',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err23];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err23);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid11 = _errs48 === errors;\n                                                    if (!valid11) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        const err24 = {\n                                            instancePath: instancePath + '/script',\n                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/type',\n                                            keyword: 'type',\n                                            params: { type: 'array' },\n                                            message: 'must be array',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err24];\n                                        }\n                                        else {\n                                            vErrors.push(err24);\n                                        }\n                                        errors++;\n                                    }\n                                }\n                                var _valid1 = _errs46 === errors;\n                                valid10 = valid10 || _valid1;\n                            }\n                            if (!valid10) {\n                                const err25 = {\n                                    instancePath: instancePath + '/script',\n                                    schemaPath: '#/anyOf/1/properties/script/anyOf',\n                                    keyword: 'anyOf',\n                                    params: {},\n                                    message: 'must match a schema in anyOf',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err25];\n                                }\n                                else {\n                                    vErrors.push(err25);\n                                }\n                                errors++;\n                            }\n                            else {\n                                errors = _errs43;\n                                if (vErrors !== null) {\n                                    if (_errs43) {\n                                        vErrors.length = _errs43;\n                                    }\n                                    else {\n                                        vErrors = null;\n                                    }\n                                }\n                            }\n                            var valid1 = _errs42 === errors;\n                        }\n                        else {\n                            var valid1 = true;\n                        }\n                    }\n                }\n            }\n            else {\n                const err26 = {\n                    instancePath,\n                    schemaPath: '#/anyOf/1/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                };\n                if (vErrors === null) {\n                    vErrors = [err26];\n                }\n                else {\n                    vErrors.push(err26);\n                }\n                errors++;\n            }\n        }\n        var _valid0 = _errs3 === errors;\n        valid0 = valid0 || _valid0;\n    }\n    if (!valid0) {\n        const err27 = {\n            instancePath,\n            schemaPath: '#/anyOf',\n            keyword: 'anyOf',\n            params: {},\n            message: 'must match a schema in anyOf',\n        };\n        if (vErrors === null) {\n            vErrors = [err27];\n        }\n        else {\n            vErrors.push(err27);\n        }\n        errors++;\n        validate28.errors = vErrors;\n        return false;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate28.errors = vErrors;\n    return errors === 0;\n}\nfunction validate27(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'lockingBytecode' ||\n                    key0 === 'token' ||\n                    key0 === 'valueSatoshis')) {\n                    validate27.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.lockingBytecode !== undefined) {\n                    let data0 = data.lockingBytecode;\n                    const _errs2 = errors;\n                    const _errs3 = errors;\n                    let valid1 = false;\n                    const _errs4 = errors;\n                    if (!validate28(data0, {\n                        instancePath: instancePath + '/lockingBytecode',\n                        parentData: data,\n                        parentDataProperty: 'lockingBytecode',\n                        rootData,\n                    })) {\n                        vErrors =\n                            vErrors === null\n                                ? validate28.errors\n                                : vErrors.concat(validate28.errors);\n                        errors = vErrors.length;\n                    }\n                    var _valid0 = _errs4 === errors;\n                    valid1 = valid1 || _valid0;\n                    if (!valid1) {\n                        const _errs5 = errors;\n                        if (errors === _errs5) {\n                            if (Array.isArray(data0)) {\n                                if (data0.length > 1) {\n                                    const err0 = {\n                                        instancePath: instancePath + '/lockingBytecode',\n                                        schemaPath: '#/properties/lockingBytecode/anyOf/1/maxItems',\n                                        keyword: 'maxItems',\n                                        params: { limit: 1 },\n                                        message: 'must NOT have more than 1 items',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err0];\n                                    }\n                                    else {\n                                        vErrors.push(err0);\n                                    }\n                                    errors++;\n                                }\n                                else {\n                                    if (data0.length < 1) {\n                                        const err1 = {\n                                            instancePath: instancePath + '/lockingBytecode',\n                                            schemaPath: '#/properties/lockingBytecode/anyOf/1/minItems',\n                                            keyword: 'minItems',\n                                            params: { limit: 1 },\n                                            message: 'must NOT have fewer than 1 items',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err1];\n                                        }\n                                        else {\n                                            vErrors.push(err1);\n                                        }\n                                        errors++;\n                                    }\n                                    else {\n                                        var valid2 = true;\n                                        const len0 = data0.length;\n                                        for (let i0 = 0; i0 < len0; i0++) {\n                                            let data1 = data0[i0];\n                                            const _errs7 = errors;\n                                            if (typeof data1 !== 'string') {\n                                                const err2 = {\n                                                    instancePath: instancePath + '/lockingBytecode/' + i0,\n                                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/items/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err2];\n                                                }\n                                                else {\n                                                    vErrors.push(err2);\n                                                }\n                                                errors++;\n                                            }\n                                            if ('slot' !== data1) {\n                                                const err3 = {\n                                                    instancePath: instancePath + '/lockingBytecode/' + i0,\n                                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/items/const',\n                                                    keyword: 'const',\n                                                    params: { allowedValue: 'slot' },\n                                                    message: 'must be equal to constant',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err3];\n                                                }\n                                                else {\n                                                    vErrors.push(err3);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid2 = _errs7 === errors;\n                                            if (!valid2) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                const err4 = {\n                                    instancePath: instancePath + '/lockingBytecode',\n                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/type',\n                                    keyword: 'type',\n                                    params: { type: 'array' },\n                                    message: 'must be array',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err4];\n                                }\n                                else {\n                                    vErrors.push(err4);\n                                }\n                                errors++;\n                            }\n                        }\n                        var _valid0 = _errs5 === errors;\n                        valid1 = valid1 || _valid0;\n                    }\n                    if (!valid1) {\n                        const err5 = {\n                            instancePath: instancePath + '/lockingBytecode',\n                            schemaPath: '#/properties/lockingBytecode/anyOf',\n                            keyword: 'anyOf',\n                            params: {},\n                            message: 'must match a schema in anyOf',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err5];\n                        }\n                        else {\n                            vErrors.push(err5);\n                        }\n                        errors++;\n                        validate27.errors = vErrors;\n                        return false;\n                    }\n                    else {\n                        errors = _errs3;\n                        if (vErrors !== null) {\n                            if (_errs3) {\n                                vErrors.length = _errs3;\n                            }\n                            else {\n                                vErrors = null;\n                            }\n                        }\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.token !== undefined) {\n                        let data2 = data.token;\n                        const _errs9 = errors;\n                        if (errors === _errs9) {\n                            if (data2 && typeof data2 == 'object' && !Array.isArray(data2)) {\n                                const _errs11 = errors;\n                                for (const key1 in data2) {\n                                    if (!(key1 === 'amount' ||\n                                        key1 === 'category' ||\n                                        key1 === 'nft')) {\n                                        validate27.errors = [\n                                            {\n                                                instancePath: instancePath + '/token',\n                                                schemaPath: '#/properties/token/additionalProperties',\n                                                keyword: 'additionalProperties',\n                                                params: { additionalProperty: key1 },\n                                                message: 'must NOT have additional properties',\n                                            },\n                                        ];\n                                        return false;\n                                        break;\n                                    }\n                                }\n                                if (_errs11 === errors) {\n                                    if (data2.amount !== undefined) {\n                                        let data3 = data2.amount;\n                                        const _errs12 = errors;\n                                        if (!(typeof data3 == 'number' && isFinite(data3)) &&\n                                            typeof data3 !== 'string') {\n                                            validate27.errors = [\n                                                {\n                                                    instancePath: instancePath + '/token/amount',\n                                                    schemaPath: '#/properties/token/properties/amount/type',\n                                                    keyword: 'type',\n                                                    params: {\n                                                        type: schema32.properties.token.properties.amount\n                                                            .type,\n                                                    },\n                                                    message: 'must be number,string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid3 = _errs12 === errors;\n                                    }\n                                    else {\n                                        var valid3 = true;\n                                    }\n                                    if (valid3) {\n                                        if (data2.category !== undefined) {\n                                            const _errs14 = errors;\n                                            if (typeof data2.category !== 'string') {\n                                                validate27.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/token/category',\n                                                        schemaPath: '#/properties/token/properties/category/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid3 = _errs14 === errors;\n                                        }\n                                        else {\n                                            var valid3 = true;\n                                        }\n                                        if (valid3) {\n                                            if (data2.nft !== undefined) {\n                                                let data5 = data2.nft;\n                                                const _errs16 = errors;\n                                                if (errors === _errs16) {\n                                                    if (data5 &&\n                                                        typeof data5 == 'object' &&\n                                                        !Array.isArray(data5)) {\n                                                        const _errs18 = errors;\n                                                        for (const key2 in data5) {\n                                                            if (!(key2 === 'capability' || key2 === 'commitment')) {\n                                                                validate27.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/token/nft',\n                                                                        schemaPath: '#/properties/token/properties/nft/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key2 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs18 === errors) {\n                                                            if (data5.capability !== undefined) {\n                                                                let data6 = data5.capability;\n                                                                const _errs19 = errors;\n                                                                if (typeof data6 !== 'string') {\n                                                                    validate27.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'string' },\n                                                                            message: 'must be string',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                if (!(data6 === 'minting' ||\n                                                                    data6 === 'mutable' ||\n                                                                    data6 === 'none')) {\n                                                                    validate27.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/enum',\n                                                                            keyword: 'enum',\n                                                                            params: {\n                                                                                allowedValues: schema32.properties.token.properties\n                                                                                    .nft.properties.capability.enum,\n                                                                            },\n                                                                            message: 'must be equal to one of the allowed values',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid4 = _errs19 === errors;\n                                                            }\n                                                            else {\n                                                                var valid4 = true;\n                                                            }\n                                                            if (valid4) {\n                                                                if (data5.commitment !== undefined) {\n                                                                    const _errs21 = errors;\n                                                                    if (typeof data5.commitment !== 'string') {\n                                                                        validate27.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/token/nft/commitment',\n                                                                                schemaPath: '#/properties/token/properties/nft/properties/commitment/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid4 = _errs21 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid4 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate27.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/token/nft',\n                                                                schemaPath: '#/properties/token/properties/nft/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid3 = _errs16 === errors;\n                                            }\n                                            else {\n                                                var valid3 = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                validate27.errors = [\n                                    {\n                                        instancePath: instancePath + '/token',\n                                        schemaPath: '#/properties/token/type',\n                                        keyword: 'type',\n                                        params: { type: 'object' },\n                                        message: 'must be object',\n                                    },\n                                ];\n                                return false;\n                            }\n                        }\n                        var valid0 = _errs9 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.valueSatoshis !== undefined) {\n                            let data8 = data.valueSatoshis;\n                            const _errs23 = errors;\n                            if (!(typeof data8 == 'number' && isFinite(data8)) &&\n                                typeof data8 !== 'string') {\n                                validate27.errors = [\n                                    {\n                                        instancePath: instancePath + '/valueSatoshis',\n                                        schemaPath: '#/properties/valueSatoshis/type',\n                                        keyword: 'type',\n                                        params: { type: schema32.properties.valueSatoshis.type },\n                                        message: 'must be number,string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs23 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate27.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate27.errors = vErrors;\n    return errors === 0;\n}\nconst schema35 = {\n    additionalProperties: false,\n    description: 'An example input used to define a scenario for a wallet template.',\n    properties: {\n        outpointIndex: {\n            description: 'The index of the output in the transaction from which this input is spent.\\n\\nIf undefined, this defaults to the same index as the input itself (so that by default, every outpoint in the produced transaction is different, even if an empty `outpointTransactionHash` is used for each transaction).',\n            type: 'number',\n        },\n        outpointTransactionHash: {\n            description: 'A 32-byte, hexadecimal-encoded hash of the transaction from which this input is spent in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000001`\\n\\nA.K.A. Outpoint `Transaction ID`',\n            type: 'string',\n        },\n        sequenceNumber: {\n            description: 'The positive, 32-bit unsigned integer used as the \"sequence number\" for this input.\\n\\nIf undefined, this defaults to `0`.',\n            type: 'number',\n        },\n        unlockingBytecode: {\n            anyOf: [\n                { $ref: '#/definitions/WalletTemplateScenarioBytecode' },\n                {\n                    items: { const: 'slot', type: 'string' },\n                    maxItems: 1,\n                    minItems: 1,\n                    type: 'array',\n                },\n            ],\n            description: 'The `unlockingBytecode` value of this input for this scenario. This must be either `[\"slot\"]`, indicating that this input contains the `unlockingBytecode` under test by the scenario, or an `WalletTemplateScenarioBytecode`.\\n\\nFor a scenario to be valid, `unlockingBytecode` must be `[\"slot\"]` for exactly one input in the scenario.\\n\\nDefaults to `[\"slot\"]`.',\n        },\n    },\n    type: 'object',\n};\nfunction validate31(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'outpointIndex' ||\n                    key0 === 'outpointTransactionHash' ||\n                    key0 === 'sequenceNumber' ||\n                    key0 === 'unlockingBytecode')) {\n                    validate31.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.outpointIndex !== undefined) {\n                    let data0 = data.outpointIndex;\n                    const _errs2 = errors;\n                    if (!(typeof data0 == 'number' && isFinite(data0))) {\n                        validate31.errors = [\n                            {\n                                instancePath: instancePath + '/outpointIndex',\n                                schemaPath: '#/properties/outpointIndex/type',\n                                keyword: 'type',\n                                params: { type: 'number' },\n                                message: 'must be number',\n                            },\n                        ];\n                        return false;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.outpointTransactionHash !== undefined) {\n                        const _errs4 = errors;\n                        if (typeof data.outpointTransactionHash !== 'string') {\n                            validate31.errors = [\n                                {\n                                    instancePath: instancePath + '/outpointTransactionHash',\n                                    schemaPath: '#/properties/outpointTransactionHash/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs4 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.sequenceNumber !== undefined) {\n                            let data2 = data.sequenceNumber;\n                            const _errs6 = errors;\n                            if (!(typeof data2 == 'number' && isFinite(data2))) {\n                                validate31.errors = [\n                                    {\n                                        instancePath: instancePath + '/sequenceNumber',\n                                        schemaPath: '#/properties/sequenceNumber/type',\n                                        keyword: 'type',\n                                        params: { type: 'number' },\n                                        message: 'must be number',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs6 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.unlockingBytecode !== undefined) {\n                                let data3 = data.unlockingBytecode;\n                                const _errs8 = errors;\n                                const _errs9 = errors;\n                                let valid1 = false;\n                                const _errs10 = errors;\n                                if (!validate28(data3, {\n                                    instancePath: instancePath + '/unlockingBytecode',\n                                    parentData: data,\n                                    parentDataProperty: 'unlockingBytecode',\n                                    rootData,\n                                })) {\n                                    vErrors =\n                                        vErrors === null\n                                            ? validate28.errors\n                                            : vErrors.concat(validate28.errors);\n                                    errors = vErrors.length;\n                                }\n                                var _valid0 = _errs10 === errors;\n                                valid1 = valid1 || _valid0;\n                                if (!valid1) {\n                                    const _errs11 = errors;\n                                    if (errors === _errs11) {\n                                        if (Array.isArray(data3)) {\n                                            if (data3.length > 1) {\n                                                const err0 = {\n                                                    instancePath: instancePath + '/unlockingBytecode',\n                                                    schemaPath: '#/properties/unlockingBytecode/anyOf/1/maxItems',\n                                                    keyword: 'maxItems',\n                                                    params: { limit: 1 },\n                                                    message: 'must NOT have more than 1 items',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err0];\n                                                }\n                                                else {\n                                                    vErrors.push(err0);\n                                                }\n                                                errors++;\n                                            }\n                                            else {\n                                                if (data3.length < 1) {\n                                                    const err1 = {\n                                                        instancePath: instancePath + '/unlockingBytecode',\n                                                        schemaPath: '#/properties/unlockingBytecode/anyOf/1/minItems',\n                                                        keyword: 'minItems',\n                                                        params: { limit: 1 },\n                                                        message: 'must NOT have fewer than 1 items',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err1];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err1);\n                                                    }\n                                                    errors++;\n                                                }\n                                                else {\n                                                    var valid2 = true;\n                                                    const len0 = data3.length;\n                                                    for (let i0 = 0; i0 < len0; i0++) {\n                                                        let data4 = data3[i0];\n                                                        const _errs13 = errors;\n                                                        if (typeof data4 !== 'string') {\n                                                            const err2 = {\n                                                                instancePath: instancePath + '/unlockingBytecode/' + i0,\n                                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/items/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'string' },\n                                                                message: 'must be string',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err2];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err2);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        if ('slot' !== data4) {\n                                                            const err3 = {\n                                                                instancePath: instancePath + '/unlockingBytecode/' + i0,\n                                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/items/const',\n                                                                keyword: 'const',\n                                                                params: { allowedValue: 'slot' },\n                                                                message: 'must be equal to constant',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err3];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err3);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        var valid2 = _errs13 === errors;\n                                                        if (!valid2) {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            const err4 = {\n                                                instancePath: instancePath + '/unlockingBytecode',\n                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/type',\n                                                keyword: 'type',\n                                                params: { type: 'array' },\n                                                message: 'must be array',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err4];\n                                            }\n                                            else {\n                                                vErrors.push(err4);\n                                            }\n                                            errors++;\n                                        }\n                                    }\n                                    var _valid0 = _errs11 === errors;\n                                    valid1 = valid1 || _valid0;\n                                }\n                                if (!valid1) {\n                                    const err5 = {\n                                        instancePath: instancePath + '/unlockingBytecode',\n                                        schemaPath: '#/properties/unlockingBytecode/anyOf',\n                                        keyword: 'anyOf',\n                                        params: {},\n                                        message: 'must match a schema in anyOf',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err5];\n                                    }\n                                    else {\n                                        vErrors.push(err5);\n                                    }\n                                    errors++;\n                                    validate31.errors = vErrors;\n                                    return false;\n                                }\n                                else {\n                                    errors = _errs9;\n                                    if (vErrors !== null) {\n                                        if (_errs9) {\n                                            vErrors.length = _errs9;\n                                        }\n                                        else {\n                                            vErrors = null;\n                                        }\n                                    }\n                                }\n                                var valid0 = _errs8 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate31.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate31.errors = vErrors;\n    return errors === 0;\n}\nconst schema36 = {\n    additionalProperties: false,\n    description: 'An example output used to define a scenario for a wallet template.',\n    properties: {\n        lockingBytecode: {\n            $ref: '#/definitions/WalletTemplateScenarioBytecode',\n            description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n        },\n        token: {\n            additionalProperties: false,\n            description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n            properties: {\n                amount: {\n                    description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n                category: {\n                    description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                    type: 'string',\n                },\n                nft: {\n                    additionalProperties: false,\n                    description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                    properties: {\n                        capability: {\n                            description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                            enum: ['minting', 'mutable', 'none'],\n                            type: 'string',\n                        },\n                        commitment: {\n                            description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                            type: 'string',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        valueSatoshis: {\n            description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n            type: ['number', 'string'],\n        },\n    },\n    type: 'object',\n};\nfunction validate34(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'lockingBytecode' ||\n                    key0 === 'token' ||\n                    key0 === 'valueSatoshis')) {\n                    validate34.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.lockingBytecode !== undefined) {\n                    const _errs2 = errors;\n                    if (!validate28(data.lockingBytecode, {\n                        instancePath: instancePath + '/lockingBytecode',\n                        parentData: data,\n                        parentDataProperty: 'lockingBytecode',\n                        rootData,\n                    })) {\n                        vErrors =\n                            vErrors === null\n                                ? validate28.errors\n                                : vErrors.concat(validate28.errors);\n                        errors = vErrors.length;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.token !== undefined) {\n                        let data1 = data.token;\n                        const _errs3 = errors;\n                        if (errors === _errs3) {\n                            if (data1 && typeof data1 == 'object' && !Array.isArray(data1)) {\n                                const _errs5 = errors;\n                                for (const key1 in data1) {\n                                    if (!(key1 === 'amount' ||\n                                        key1 === 'category' ||\n                                        key1 === 'nft')) {\n                                        validate34.errors = [\n                                            {\n                                                instancePath: instancePath + '/token',\n                                                schemaPath: '#/properties/token/additionalProperties',\n                                                keyword: 'additionalProperties',\n                                                params: { additionalProperty: key1 },\n                                                message: 'must NOT have additional properties',\n                                            },\n                                        ];\n                                        return false;\n                                        break;\n                                    }\n                                }\n                                if (_errs5 === errors) {\n                                    if (data1.amount !== undefined) {\n                                        let data2 = data1.amount;\n                                        const _errs6 = errors;\n                                        if (!(typeof data2 == 'number' && isFinite(data2)) &&\n                                            typeof data2 !== 'string') {\n                                            validate34.errors = [\n                                                {\n                                                    instancePath: instancePath + '/token/amount',\n                                                    schemaPath: '#/properties/token/properties/amount/type',\n                                                    keyword: 'type',\n                                                    params: {\n                                                        type: schema36.properties.token.properties.amount\n                                                            .type,\n                                                    },\n                                                    message: 'must be number,string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid1 = _errs6 === errors;\n                                    }\n                                    else {\n                                        var valid1 = true;\n                                    }\n                                    if (valid1) {\n                                        if (data1.category !== undefined) {\n                                            const _errs8 = errors;\n                                            if (typeof data1.category !== 'string') {\n                                                validate34.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/token/category',\n                                                        schemaPath: '#/properties/token/properties/category/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid1 = _errs8 === errors;\n                                        }\n                                        else {\n                                            var valid1 = true;\n                                        }\n                                        if (valid1) {\n                                            if (data1.nft !== undefined) {\n                                                let data4 = data1.nft;\n                                                const _errs10 = errors;\n                                                if (errors === _errs10) {\n                                                    if (data4 &&\n                                                        typeof data4 == 'object' &&\n                                                        !Array.isArray(data4)) {\n                                                        const _errs12 = errors;\n                                                        for (const key2 in data4) {\n                                                            if (!(key2 === 'capability' || key2 === 'commitment')) {\n                                                                validate34.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/token/nft',\n                                                                        schemaPath: '#/properties/token/properties/nft/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key2 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs12 === errors) {\n                                                            if (data4.capability !== undefined) {\n                                                                let data5 = data4.capability;\n                                                                const _errs13 = errors;\n                                                                if (typeof data5 !== 'string') {\n                                                                    validate34.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'string' },\n                                                                            message: 'must be string',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                if (!(data5 === 'minting' ||\n                                                                    data5 === 'mutable' ||\n                                                                    data5 === 'none')) {\n                                                                    validate34.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/enum',\n                                                                            keyword: 'enum',\n                                                                            params: {\n                                                                                allowedValues: schema36.properties.token.properties\n                                                                                    .nft.properties.capability.enum,\n                                                                            },\n                                                                            message: 'must be equal to one of the allowed values',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid2 = _errs13 === errors;\n                                                            }\n                                                            else {\n                                                                var valid2 = true;\n                                                            }\n                                                            if (valid2) {\n                                                                if (data4.commitment !== undefined) {\n                                                                    const _errs15 = errors;\n                                                                    if (typeof data4.commitment !== 'string') {\n                                                                        validate34.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/token/nft/commitment',\n                                                                                schemaPath: '#/properties/token/properties/nft/properties/commitment/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid2 = _errs15 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid2 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate34.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/token/nft',\n                                                                schemaPath: '#/properties/token/properties/nft/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid1 = _errs10 === errors;\n                                            }\n                                            else {\n                                                var valid1 = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                validate34.errors = [\n                                    {\n                                        instancePath: instancePath + '/token',\n                                        schemaPath: '#/properties/token/type',\n                                        keyword: 'type',\n                                        params: { type: 'object' },\n                                        message: 'must be object',\n                                    },\n                                ];\n                                return false;\n                            }\n                        }\n                        var valid0 = _errs3 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.valueSatoshis !== undefined) {\n                            let data7 = data.valueSatoshis;\n                            const _errs17 = errors;\n                            if (!(typeof data7 == 'number' && isFinite(data7)) &&\n                                typeof data7 !== 'string') {\n                                validate34.errors = [\n                                    {\n                                        instancePath: instancePath + '/valueSatoshis',\n                                        schemaPath: '#/properties/valueSatoshis/type',\n                                        keyword: 'type',\n                                        params: { type: schema36.properties.valueSatoshis.type },\n                                        message: 'must be number,string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs17 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate34.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate34.errors = vErrors;\n    return errors === 0;\n}\nfunction validate26(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'data' ||\n                    key0 === 'description' ||\n                    key0 === 'extends' ||\n                    key0 === 'name' ||\n                    key0 === 'sourceOutputs' ||\n                    key0 === 'transaction')) {\n                    validate26.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.data !== undefined) {\n                    let data0 = data.data;\n                    const _errs2 = errors;\n                    const _errs3 = errors;\n                    if (errors === _errs3) {\n                        if (data0 && typeof data0 == 'object' && !Array.isArray(data0)) {\n                            const _errs5 = errors;\n                            for (const key1 in data0) {\n                                if (!(key1 === 'bytecode' ||\n                                    key1 === 'currentBlockHeight' ||\n                                    key1 === 'currentBlockTime' ||\n                                    key1 === 'hdKeys' ||\n                                    key1 === 'keys')) {\n                                    validate26.errors = [\n                                        {\n                                            instancePath: instancePath + '/data',\n                                            schemaPath: '#/definitions/WalletTemplateScenarioData/additionalProperties',\n                                            keyword: 'additionalProperties',\n                                            params: { additionalProperty: key1 },\n                                            message: 'must NOT have additional properties',\n                                        },\n                                    ];\n                                    return false;\n                                    break;\n                                }\n                            }\n                            if (_errs5 === errors) {\n                                if (data0.bytecode !== undefined) {\n                                    let data1 = data0.bytecode;\n                                    const _errs6 = errors;\n                                    if (errors === _errs6) {\n                                        if (data1 &&\n                                            typeof data1 == 'object' &&\n                                            !Array.isArray(data1)) {\n                                            for (const key2 in data1) {\n                                                const _errs9 = errors;\n                                                if (typeof data1[key2] !== 'string') {\n                                                    validate26.errors = [\n                                                        {\n                                                            instancePath: instancePath +\n                                                                '/data/bytecode/' +\n                                                                key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/bytecode/additionalProperties/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        },\n                                                    ];\n                                                    return false;\n                                                }\n                                                var valid3 = _errs9 === errors;\n                                                if (!valid3) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/data/bytecode',\n                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/bytecode/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid2 = _errs6 === errors;\n                                }\n                                else {\n                                    var valid2 = true;\n                                }\n                                if (valid2) {\n                                    if (data0.currentBlockHeight !== undefined) {\n                                        let data3 = data0.currentBlockHeight;\n                                        const _errs11 = errors;\n                                        if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/data/currentBlockHeight',\n                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/currentBlockHeight/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'number' },\n                                                    message: 'must be number',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid2 = _errs11 === errors;\n                                    }\n                                    else {\n                                        var valid2 = true;\n                                    }\n                                    if (valid2) {\n                                        if (data0.currentBlockTime !== undefined) {\n                                            let data4 = data0.currentBlockTime;\n                                            const _errs13 = errors;\n                                            if (!(typeof data4 == 'number' && isFinite(data4))) {\n                                                validate26.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/data/currentBlockTime',\n                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/currentBlockTime/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'number' },\n                                                        message: 'must be number',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid2 = _errs13 === errors;\n                                        }\n                                        else {\n                                            var valid2 = true;\n                                        }\n                                        if (valid2) {\n                                            if (data0.hdKeys !== undefined) {\n                                                let data5 = data0.hdKeys;\n                                                const _errs15 = errors;\n                                                if (errors === _errs15) {\n                                                    if (data5 &&\n                                                        typeof data5 == 'object' &&\n                                                        !Array.isArray(data5)) {\n                                                        const _errs17 = errors;\n                                                        for (const key3 in data5) {\n                                                            if (!(key3 === 'addressIndex' ||\n                                                                key3 === 'hdPrivateKeys' ||\n                                                                key3 === 'hdPublicKeys')) {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/data/hdKeys',\n                                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key3 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs17 === errors) {\n                                                            if (data5.addressIndex !== undefined) {\n                                                                let data6 = data5.addressIndex;\n                                                                const _errs18 = errors;\n                                                                if (!(typeof data6 == 'number' && isFinite(data6))) {\n                                                                    validate26.errors = [\n                                                                        {\n                                                                            instancePath: instancePath +\n                                                                                '/data/hdKeys/addressIndex',\n                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/addressIndex/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'number' },\n                                                                            message: 'must be number',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid4 = _errs18 === errors;\n                                                            }\n                                                            else {\n                                                                var valid4 = true;\n                                                            }\n                                                            if (valid4) {\n                                                                if (data5.hdPrivateKeys !== undefined) {\n                                                                    let data7 = data5.hdPrivateKeys;\n                                                                    const _errs20 = errors;\n                                                                    if (errors === _errs20) {\n                                                                        if (data7 &&\n                                                                            typeof data7 == 'object' &&\n                                                                            !Array.isArray(data7)) {\n                                                                            for (const key4 in data7) {\n                                                                                const _errs23 = errors;\n                                                                                if (typeof data7[key4] !== 'string') {\n                                                                                    validate26.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/data/hdKeys/hdPrivateKeys/' +\n                                                                                                key4\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid5 = _errs23 === errors;\n                                                                                if (!valid5) {\n                                                                                    break;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            validate26.errors = [\n                                                                                {\n                                                                                    instancePath: instancePath +\n                                                                                        '/data/hdKeys/hdPrivateKeys',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                },\n                                                                            ];\n                                                                            return false;\n                                                                        }\n                                                                    }\n                                                                    var valid4 = _errs20 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid4 = true;\n                                                                }\n                                                                if (valid4) {\n                                                                    if (data5.hdPublicKeys !== undefined) {\n                                                                        let data9 = data5.hdPublicKeys;\n                                                                        const _errs25 = errors;\n                                                                        if (errors === _errs25) {\n                                                                            if (data9 &&\n                                                                                typeof data9 == 'object' &&\n                                                                                !Array.isArray(data9)) {\n                                                                                for (const key5 in data9) {\n                                                                                    const _errs28 = errors;\n                                                                                    if (typeof data9[key5] !== 'string') {\n                                                                                        validate26.errors = [\n                                                                                            {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/data/hdKeys/hdPublicKeys/' +\n                                                                                                    key5\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1'),\n                                                                                                schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/additionalProperties/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            },\n                                                                                        ];\n                                                                                        return false;\n                                                                                    }\n                                                                                    var valid6 = _errs28 === errors;\n                                                                                    if (!valid6) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                validate26.errors = [\n                                                                                    {\n                                                                                        instancePath: instancePath +\n                                                                                            '/data/hdKeys/hdPublicKeys',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'object' },\n                                                                                        message: 'must be object',\n                                                                                    },\n                                                                                ];\n                                                                                return false;\n                                                                            }\n                                                                        }\n                                                                        var valid4 = _errs25 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid4 = true;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate26.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/data/hdKeys',\n                                                                schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid2 = _errs15 === errors;\n                                            }\n                                            else {\n                                                var valid2 = true;\n                                            }\n                                            if (valid2) {\n                                                if (data0.keys !== undefined) {\n                                                    let data11 = data0.keys;\n                                                    const _errs30 = errors;\n                                                    if (errors === _errs30) {\n                                                        if (data11 &&\n                                                            typeof data11 == 'object' &&\n                                                            !Array.isArray(data11)) {\n                                                            const _errs32 = errors;\n                                                            for (const key6 in data11) {\n                                                                if (!(key6 === 'privateKeys')) {\n                                                                    validate26.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/data/keys',\n                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key6 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs32 === errors) {\n                                                                if (data11.privateKeys !== undefined) {\n                                                                    let data12 = data11.privateKeys;\n                                                                    const _errs33 = errors;\n                                                                    if (errors === _errs33) {\n                                                                        if (data12 &&\n                                                                            typeof data12 == 'object' &&\n                                                                            !Array.isArray(data12)) {\n                                                                            for (const key7 in data12) {\n                                                                                const _errs36 = errors;\n                                                                                if (typeof data12[key7] !== 'string') {\n                                                                                    validate26.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/data/keys/privateKeys/' +\n                                                                                                key7\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/properties/privateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid8 = _errs36 === errors;\n                                                                                if (!valid8) {\n                                                                                    break;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            validate26.errors = [\n                                                                                {\n                                                                                    instancePath: instancePath +\n                                                                                        '/data/keys/privateKeys',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/properties/privateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                },\n                                                                            ];\n                                                                            return false;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                        else {\n                                                            validate26.errors = [\n                                                                {\n                                                                    instancePath: instancePath + '/data/keys',\n                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                },\n                                                            ];\n                                                            return false;\n                                                        }\n                                                    }\n                                                    var valid2 = _errs30 === errors;\n                                                }\n                                                else {\n                                                    var valid2 = true;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            validate26.errors = [\n                                {\n                                    instancePath: instancePath + '/data',\n                                    schemaPath: '#/definitions/WalletTemplateScenarioData/type',\n                                    keyword: 'type',\n                                    params: { type: 'object' },\n                                    message: 'must be object',\n                                },\n                            ];\n                            return false;\n                        }\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.description !== undefined) {\n                        const _errs38 = errors;\n                        if (typeof data.description !== 'string') {\n                            validate26.errors = [\n                                {\n                                    instancePath: instancePath + '/description',\n                                    schemaPath: '#/properties/description/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs38 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.extends !== undefined) {\n                            const _errs40 = errors;\n                            if (typeof data.extends !== 'string') {\n                                validate26.errors = [\n                                    {\n                                        instancePath: instancePath + '/extends',\n                                        schemaPath: '#/properties/extends/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs40 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.name !== undefined) {\n                                const _errs42 = errors;\n                                if (typeof data.name !== 'string') {\n                                    validate26.errors = [\n                                        {\n                                            instancePath: instancePath + '/name',\n                                            schemaPath: '#/properties/name/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                                var valid0 = _errs42 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.sourceOutputs !== undefined) {\n                                    let data17 = data.sourceOutputs;\n                                    const _errs44 = errors;\n                                    if (errors === _errs44) {\n                                        if (Array.isArray(data17)) {\n                                            var valid9 = true;\n                                            const len0 = data17.length;\n                                            for (let i0 = 0; i0 < len0; i0++) {\n                                                const _errs46 = errors;\n                                                if (!validate27(data17[i0], {\n                                                    instancePath: instancePath + '/sourceOutputs/' + i0,\n                                                    parentData: data17,\n                                                    parentDataProperty: i0,\n                                                    rootData,\n                                                })) {\n                                                    vErrors =\n                                                        vErrors === null\n                                                            ? validate27.errors\n                                                            : vErrors.concat(validate27.errors);\n                                                    errors = vErrors.length;\n                                                }\n                                                var valid9 = _errs46 === errors;\n                                                if (!valid9) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/sourceOutputs',\n                                                    schemaPath: '#/properties/sourceOutputs/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'array' },\n                                                    message: 'must be array',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid0 = _errs44 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                                if (valid0) {\n                                    if (data.transaction !== undefined) {\n                                        let data19 = data.transaction;\n                                        const _errs47 = errors;\n                                        if (errors === _errs47) {\n                                            if (data19 &&\n                                                typeof data19 == 'object' &&\n                                                !Array.isArray(data19)) {\n                                                const _errs49 = errors;\n                                                for (const key8 in data19) {\n                                                    if (!(key8 === 'inputs' ||\n                                                        key8 === 'locktime' ||\n                                                        key8 === 'outputs' ||\n                                                        key8 === 'version')) {\n                                                        validate26.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/transaction',\n                                                                schemaPath: '#/properties/transaction/additionalProperties',\n                                                                keyword: 'additionalProperties',\n                                                                params: { additionalProperty: key8 },\n                                                                message: 'must NOT have additional properties',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                        break;\n                                                    }\n                                                }\n                                                if (_errs49 === errors) {\n                                                    if (data19.inputs !== undefined) {\n                                                        let data20 = data19.inputs;\n                                                        const _errs50 = errors;\n                                                        if (errors === _errs50) {\n                                                            if (Array.isArray(data20)) {\n                                                                var valid11 = true;\n                                                                const len1 = data20.length;\n                                                                for (let i1 = 0; i1 < len1; i1++) {\n                                                                    const _errs52 = errors;\n                                                                    if (!validate31(data20[i1], {\n                                                                        instancePath: instancePath +\n                                                                            '/transaction/inputs/' +\n                                                                            i1,\n                                                                        parentData: data20,\n                                                                        parentDataProperty: i1,\n                                                                        rootData,\n                                                                    })) {\n                                                                        vErrors =\n                                                                            vErrors === null\n                                                                                ? validate31.errors\n                                                                                : vErrors.concat(validate31.errors);\n                                                                        errors = vErrors.length;\n                                                                    }\n                                                                    var valid11 = _errs52 === errors;\n                                                                    if (!valid11) {\n                                                                        break;\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/transaction/inputs',\n                                                                        schemaPath: '#/properties/transaction/properties/inputs/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'array' },\n                                                                        message: 'must be array',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                        }\n                                                        var valid10 = _errs50 === errors;\n                                                    }\n                                                    else {\n                                                        var valid10 = true;\n                                                    }\n                                                    if (valid10) {\n                                                        if (data19.locktime !== undefined) {\n                                                            let data22 = data19.locktime;\n                                                            const _errs53 = errors;\n                                                            if (!(typeof data22 == 'number' && isFinite(data22))) {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/transaction/locktime',\n                                                                        schemaPath: '#/properties/transaction/properties/locktime/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'number' },\n                                                                        message: 'must be number',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            var valid10 = _errs53 === errors;\n                                                        }\n                                                        else {\n                                                            var valid10 = true;\n                                                        }\n                                                        if (valid10) {\n                                                            if (data19.outputs !== undefined) {\n                                                                let data23 = data19.outputs;\n                                                                const _errs55 = errors;\n                                                                if (errors === _errs55) {\n                                                                    if (Array.isArray(data23)) {\n                                                                        var valid12 = true;\n                                                                        const len2 = data23.length;\n                                                                        for (let i2 = 0; i2 < len2; i2++) {\n                                                                            const _errs57 = errors;\n                                                                            if (!validate34(data23[i2], {\n                                                                                instancePath: instancePath +\n                                                                                    '/transaction/outputs/' +\n                                                                                    i2,\n                                                                                parentData: data23,\n                                                                                parentDataProperty: i2,\n                                                                                rootData,\n                                                                            })) {\n                                                                                vErrors =\n                                                                                    vErrors === null\n                                                                                        ? validate34.errors\n                                                                                        : vErrors.concat(validate34.errors);\n                                                                                errors = vErrors.length;\n                                                                            }\n                                                                            var valid12 = _errs57 === errors;\n                                                                            if (!valid12) {\n                                                                                break;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    else {\n                                                                        validate26.errors = [\n                                                                            {\n                                                                                instancePath: instancePath + '/transaction/outputs',\n                                                                                schemaPath: '#/properties/transaction/properties/outputs/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'array' },\n                                                                                message: 'must be array',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                }\n                                                                var valid10 = _errs55 === errors;\n                                                            }\n                                                            else {\n                                                                var valid10 = true;\n                                                            }\n                                                            if (valid10) {\n                                                                if (data19.version !== undefined) {\n                                                                    let data25 = data19.version;\n                                                                    const _errs58 = errors;\n                                                                    if (!(typeof data25 == 'number' &&\n                                                                        isFinite(data25))) {\n                                                                        validate26.errors = [\n                                                                            {\n                                                                                instancePath: instancePath + '/transaction/version',\n                                                                                schemaPath: '#/properties/transaction/properties/version/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'number' },\n                                                                                message: 'must be number',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid10 = _errs58 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid10 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                validate26.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/transaction',\n                                                        schemaPath: '#/properties/transaction/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'object' },\n                                                        message: 'must be object',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                        }\n                                        var valid0 = _errs47 === errors;\n                                    }\n                                    else {\n                                        var valid0 = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate26.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate26.errors = vErrors;\n    return errors === 0;\n}\nconst schema39 = {\n    additionalProperties: false,\n    properties: {\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        pushed: {\n            description: 'If set to `true`, indicates that this script should be wrapped in a push statement for testing.\\n\\nThis is useful for scripts that serve as \"bytecode templates\" – e.g. formatted messages or signature preimages. These scripts are typically not evaluated as bytecode but appear within push statements elsewhere in the template.\\n\\nDefaults to `false`.',\n            type: 'boolean',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n        tests: {\n            additionalProperties: { $ref: '#/definitions/WalletTemplateScriptTest' },\n            description: 'One or more tests that can be used during development and during template validation to confirm the correctness of this tested script.',\n            type: 'object',\n        },\n    },\n    required: ['script', 'tests'],\n    type: 'object',\n};\nconst schema40 = {\n    additionalProperties: false,\n    properties: {\n        check: {\n            description: 'The script to evaluate after the script being tested. This can be used to check that the tested script leaves the expected results on the stack. For example, if the tested script is expected to leave 3 items of a specific size on the stack, the `check` script could pop each resulting item from the stack and examine it for correctness.\\n\\nIn scenario testing, this script is appended to the script under test, and together they are treated as the locking script. Program evaluation is considered successful if the resulting program state can be verified by the virtual machine (e.g. the resulting stack contains a single `1`, no errors are produced, etc.).',\n            type: 'string',\n        },\n        fails: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that fails program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        invalid: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in a compilation error. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this test (for use in user interfaces).',\n            type: 'string',\n        },\n        passes: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that passes program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        setup: {\n            description: 'A script to evaluate before the script being tested. This can be used to push values to the stack that are operated on by the tested script.\\n\\nIn scenario testing, this script is treated as the unlocking script.',\n            type: 'string',\n        },\n    },\n    required: ['check'],\n    type: 'object',\n};\nfunction validate38(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if ((data.script === undefined && (missing0 = 'script')) ||\n                (data.tests === undefined && (missing0 = 'tests'))) {\n                validate38.errors = [\n                    {\n                        instancePath,\n                        schemaPath: '#/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing0 },\n                        message: \"must have required property '\" + missing0 + \"'\",\n                    },\n                ];\n                return false;\n            }\n            else {\n                const _errs1 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'name' ||\n                        key0 === 'pushed' ||\n                        key0 === 'script' ||\n                        key0 === 'tests')) {\n                        validate38.errors = [\n                            {\n                                instancePath,\n                                schemaPath: '#/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key0 },\n                                message: 'must NOT have additional properties',\n                            },\n                        ];\n                        return false;\n                        break;\n                    }\n                }\n                if (_errs1 === errors) {\n                    if (data.name !== undefined) {\n                        const _errs2 = errors;\n                        if (typeof data.name !== 'string') {\n                            validate38.errors = [\n                                {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs2 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.pushed !== undefined) {\n                            const _errs4 = errors;\n                            if (typeof data.pushed !== 'boolean') {\n                                validate38.errors = [\n                                    {\n                                        instancePath: instancePath + '/pushed',\n                                        schemaPath: '#/properties/pushed/type',\n                                        keyword: 'type',\n                                        params: { type: 'boolean' },\n                                        message: 'must be boolean',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs4 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.script !== undefined) {\n                                const _errs6 = errors;\n                                if (typeof data.script !== 'string') {\n                                    validate38.errors = [\n                                        {\n                                            instancePath: instancePath + '/script',\n                                            schemaPath: '#/properties/script/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                                var valid0 = _errs6 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.tests !== undefined) {\n                                    let data3 = data.tests;\n                                    const _errs8 = errors;\n                                    if (errors === _errs8) {\n                                        if (data3 &&\n                                            typeof data3 == 'object' &&\n                                            !Array.isArray(data3)) {\n                                            for (const key1 in data3) {\n                                                let data4 = data3[key1];\n                                                const _errs11 = errors;\n                                                const _errs12 = errors;\n                                                if (errors === _errs12) {\n                                                    if (data4 &&\n                                                        typeof data4 == 'object' &&\n                                                        !Array.isArray(data4)) {\n                                                        let missing1;\n                                                        if (data4.check === undefined &&\n                                                            (missing1 = 'check')) {\n                                                            validate38.errors = [\n                                                                {\n                                                                    instancePath: instancePath +\n                                                                        '/tests/' +\n                                                                        key1\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    schemaPath: '#/definitions/WalletTemplateScriptTest/required',\n                                                                    keyword: 'required',\n                                                                    params: { missingProperty: missing1 },\n                                                                    message: \"must have required property '\" +\n                                                                        missing1 +\n                                                                        \"'\",\n                                                                },\n                                                            ];\n                                                            return false;\n                                                        }\n                                                        else {\n                                                            const _errs14 = errors;\n                                                            for (const key2 in data4) {\n                                                                if (!(key2 === 'check' ||\n                                                                    key2 === 'fails' ||\n                                                                    key2 === 'invalid' ||\n                                                                    key2 === 'name' ||\n                                                                    key2 === 'passes' ||\n                                                                    key2 === 'setup')) {\n                                                                    validate38.errors = [\n                                                                        {\n                                                                            instancePath: instancePath +\n                                                                                '/tests/' +\n                                                                                key1\n                                                                                    .replace(/~/g, '~0')\n                                                                                    .replace(/\\//g, '~1'),\n                                                                            schemaPath: '#/definitions/WalletTemplateScriptTest/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key2 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs14 === errors) {\n                                                                if (data4.check !== undefined) {\n                                                                    const _errs15 = errors;\n                                                                    if (typeof data4.check !== 'string') {\n                                                                        validate38.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/tests/' +\n                                                                                    key1\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1') +\n                                                                                    '/check',\n                                                                                schemaPath: '#/definitions/WalletTemplateScriptTest/properties/check/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid3 = _errs15 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid3 = true;\n                                                                }\n                                                                if (valid3) {\n                                                                    if (data4.fails !== undefined) {\n                                                                        let data6 = data4.fails;\n                                                                        const _errs17 = errors;\n                                                                        if (errors === _errs17) {\n                                                                            if (Array.isArray(data6)) {\n                                                                                var valid4 = true;\n                                                                                const len0 = data6.length;\n                                                                                for (let i0 = 0; i0 < len0; i0++) {\n                                                                                    const _errs19 = errors;\n                                                                                    if (typeof data6[i0] !== 'string') {\n                                                                                        validate38.errors = [\n                                                                                            {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/tests/' +\n                                                                                                    key1\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/fails/' +\n                                                                                                    i0,\n                                                                                                schemaPath: '#/definitions/WalletTemplateScriptTest/properties/fails/items/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            },\n                                                                                        ];\n                                                                                        return false;\n                                                                                    }\n                                                                                    var valid4 = _errs19 === errors;\n                                                                                    if (!valid4) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                validate38.errors = [\n                                                                                    {\n                                                                                        instancePath: instancePath +\n                                                                                            '/tests/' +\n                                                                                            key1\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/fails',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScriptTest/properties/fails/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'array' },\n                                                                                        message: 'must be array',\n                                                                                    },\n                                                                                ];\n                                                                                return false;\n                                                                            }\n                                                                        }\n                                                                        var valid3 = _errs17 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid3 = true;\n                                                                    }\n                                                                    if (valid3) {\n                                                                        if (data4.invalid !== undefined) {\n                                                                            let data8 = data4.invalid;\n                                                                            const _errs21 = errors;\n                                                                            if (errors === _errs21) {\n                                                                                if (Array.isArray(data8)) {\n                                                                                    var valid5 = true;\n                                                                                    const len1 = data8.length;\n                                                                                    for (let i1 = 0; i1 < len1; i1++) {\n                                                                                        const _errs23 = errors;\n                                                                                        if (typeof data8[i1] !== 'string') {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/invalid/' +\n                                                                                                        i1,\n                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptTest/properties/invalid/items/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                        var valid5 = _errs23 === errors;\n                                                                                        if (!valid5) {\n                                                                                            break;\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                                else {\n                                                                                    validate38.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/tests/' +\n                                                                                                key1\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/invalid',\n                                                                                            schemaPath: '#/definitions/WalletTemplateScriptTest/properties/invalid/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'array' },\n                                                                                            message: 'must be array',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                            }\n                                                                            var valid3 = _errs21 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid3 = true;\n                                                                        }\n                                                                        if (valid3) {\n                                                                            if (data4.name !== undefined) {\n                                                                                const _errs25 = errors;\n                                                                                if (typeof data4.name !== 'string') {\n                                                                                    validate38.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/tests/' +\n                                                                                                key1\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/name',\n                                                                                            schemaPath: '#/definitions/WalletTemplateScriptTest/properties/name/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid3 = _errs25 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid3 = true;\n                                                                            }\n                                                                            if (valid3) {\n                                                                                if (data4.passes !== undefined) {\n                                                                                    let data11 = data4.passes;\n                                                                                    const _errs27 = errors;\n                                                                                    if (errors === _errs27) {\n                                                                                        if (Array.isArray(data11)) {\n                                                                                            var valid6 = true;\n                                                                                            const len2 = data11.length;\n                                                                                            for (let i2 = 0; i2 < len2; i2++) {\n                                                                                                const _errs29 = errors;\n                                                                                                if (typeof data11[i2] !== 'string') {\n                                                                                                    validate38.errors = [\n                                                                                                        {\n                                                                                                            instancePath: instancePath +\n                                                                                                                '/tests/' +\n                                                                                                                key1\n                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                '/passes/' +\n                                                                                                                i2,\n                                                                                                            schemaPath: '#/definitions/WalletTemplateScriptTest/properties/passes/items/type',\n                                                                                                            keyword: 'type',\n                                                                                                            params: {\n                                                                                                                type: 'string',\n                                                                                                            },\n                                                                                                            message: 'must be string',\n                                                                                                        },\n                                                                                                    ];\n                                                                                                    return false;\n                                                                                                }\n                                                                                                var valid6 = _errs29 === errors;\n                                                                                                if (!valid6) {\n                                                                                                    break;\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                        else {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/passes',\n                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptTest/properties/passes/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'array' },\n                                                                                                    message: 'must be array',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                    }\n                                                                                    var valid3 = _errs27 === errors;\n                                                                                }\n                                                                                else {\n                                                                                    var valid3 = true;\n                                                                                }\n                                                                                if (valid3) {\n                                                                                    if (data4.setup !== undefined) {\n                                                                                        const _errs31 = errors;\n                                                                                        if (typeof data4.setup !== 'string') {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/setup',\n                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptTest/properties/setup/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                        var valid3 = _errs31 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid3 = true;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate38.errors = [\n                                                            {\n                                                                instancePath: instancePath +\n                                                                    '/tests/' +\n                                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                                schemaPath: '#/definitions/WalletTemplateScriptTest/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid1 = _errs11 === errors;\n                                                if (!valid1) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate38.errors = [\n                                                {\n                                                    instancePath: instancePath + '/tests',\n                                                    schemaPath: '#/properties/tests/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid0 = _errs8 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate38.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate38.errors = vErrors;\n    return errors === 0;\n}\nconst func4 = Object.prototype.hasOwnProperty;\nfunction validate21(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if ((data.entities === undefined && (missing0 = 'entities')) ||\n                (data.scripts === undefined && (missing0 = 'scripts')) ||\n                (data.supported === undefined && (missing0 = 'supported'))) {\n                validate21.errors = [\n                    {\n                        instancePath,\n                        schemaPath: '#/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing0 },\n                        message: \"must have required property '\" + missing0 + \"'\",\n                    },\n                ];\n                return false;\n            }\n            else {\n                const _errs1 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === '$schema' ||\n                        key0 === 'description' ||\n                        key0 === 'entities' ||\n                        key0 === 'name' ||\n                        key0 === 'scenarios' ||\n                        key0 === 'scripts' ||\n                        key0 === 'supported' ||\n                        key0 === 'version')) {\n                        validate21.errors = [\n                            {\n                                instancePath,\n                                schemaPath: '#/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key0 },\n                                message: 'must NOT have additional properties',\n                            },\n                        ];\n                        return false;\n                        break;\n                    }\n                }\n                if (_errs1 === errors) {\n                    if (data.$schema !== undefined) {\n                        const _errs2 = errors;\n                        if (typeof data.$schema !== 'string') {\n                            validate21.errors = [\n                                {\n                                    instancePath: instancePath + '/$schema',\n                                    schemaPath: '#/properties/%24schema/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs2 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.description !== undefined) {\n                            const _errs4 = errors;\n                            if (typeof data.description !== 'string') {\n                                validate21.errors = [\n                                    {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs4 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.entities !== undefined) {\n                                let data2 = data.entities;\n                                const _errs6 = errors;\n                                if (errors === _errs6) {\n                                    if (data2 &&\n                                        typeof data2 == 'object' &&\n                                        !Array.isArray(data2)) {\n                                        for (const key1 in data2) {\n                                            const _errs9 = errors;\n                                            if (!validate22(data2[key1], {\n                                                instancePath: instancePath +\n                                                    '/entities/' +\n                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                parentData: data2,\n                                                parentDataProperty: key1,\n                                                rootData,\n                                            })) {\n                                                vErrors =\n                                                    vErrors === null\n                                                        ? validate22.errors\n                                                        : vErrors.concat(validate22.errors);\n                                                errors = vErrors.length;\n                                            }\n                                            var valid1 = _errs9 === errors;\n                                            if (!valid1) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        validate21.errors = [\n                                            {\n                                                instancePath: instancePath + '/entities',\n                                                schemaPath: '#/properties/entities/type',\n                                                keyword: 'type',\n                                                params: { type: 'object' },\n                                                message: 'must be object',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                }\n                                var valid0 = _errs6 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.name !== undefined) {\n                                    const _errs10 = errors;\n                                    if (typeof data.name !== 'string') {\n                                        validate21.errors = [\n                                            {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                    var valid0 = _errs10 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                                if (valid0) {\n                                    if (data.scenarios !== undefined) {\n                                        let data5 = data.scenarios;\n                                        const _errs12 = errors;\n                                        if (errors === _errs12) {\n                                            if (data5 &&\n                                                typeof data5 == 'object' &&\n                                                !Array.isArray(data5)) {\n                                                for (const key2 in data5) {\n                                                    const _errs15 = errors;\n                                                    if (!validate26(data5[key2], {\n                                                        instancePath: instancePath +\n                                                            '/scenarios/' +\n                                                            key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                        parentData: data5,\n                                                        parentDataProperty: key2,\n                                                        rootData,\n                                                    })) {\n                                                        vErrors =\n                                                            vErrors === null\n                                                                ? validate26.errors\n                                                                : vErrors.concat(validate26.errors);\n                                                        errors = vErrors.length;\n                                                    }\n                                                    var valid2 = _errs15 === errors;\n                                                    if (!valid2) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                validate21.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/scenarios',\n                                                        schemaPath: '#/properties/scenarios/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'object' },\n                                                        message: 'must be object',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                        }\n                                        var valid0 = _errs12 === errors;\n                                    }\n                                    else {\n                                        var valid0 = true;\n                                    }\n                                    if (valid0) {\n                                        if (data.scripts !== undefined) {\n                                            let data7 = data.scripts;\n                                            const _errs16 = errors;\n                                            if (errors === _errs16) {\n                                                if (data7 &&\n                                                    typeof data7 == 'object' &&\n                                                    !Array.isArray(data7)) {\n                                                    for (const key3 in data7) {\n                                                        let data8 = data7[key3];\n                                                        const _errs19 = errors;\n                                                        const _errs20 = errors;\n                                                        let valid4 = false;\n                                                        const _errs21 = errors;\n                                                        const _errs22 = errors;\n                                                        if (errors === _errs22) {\n                                                            if (data8 &&\n                                                                typeof data8 == 'object' &&\n                                                                !Array.isArray(data8)) {\n                                                                let missing1;\n                                                                if (data8.script === undefined &&\n                                                                    (missing1 = 'script')) {\n                                                                    const err0 = {\n                                                                        instancePath: instancePath +\n                                                                            '/scripts/' +\n                                                                            key3\n                                                                                .replace(/~/g, '~0')\n                                                                                .replace(/\\//g, '~1'),\n                                                                        schemaPath: '#/definitions/WalletTemplateScript/required',\n                                                                        keyword: 'required',\n                                                                        params: { missingProperty: missing1 },\n                                                                        message: \"must have required property '\" +\n                                                                            missing1 +\n                                                                            \"'\",\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err0];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err0);\n                                                                    }\n                                                                    errors++;\n                                                                }\n                                                                else {\n                                                                    const _errs24 = errors;\n                                                                    for (const key4 in data8) {\n                                                                        if (!(key4 === 'name' || key4 === 'script')) {\n                                                                            const err1 = {\n                                                                                instancePath: instancePath +\n                                                                                    '/scripts/' +\n                                                                                    key3\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1'),\n                                                                                schemaPath: '#/definitions/WalletTemplateScript/additionalProperties',\n                                                                                keyword: 'additionalProperties',\n                                                                                params: { additionalProperty: key4 },\n                                                                                message: 'must NOT have additional properties',\n                                                                            };\n                                                                            if (vErrors === null) {\n                                                                                vErrors = [err1];\n                                                                            }\n                                                                            else {\n                                                                                vErrors.push(err1);\n                                                                            }\n                                                                            errors++;\n                                                                            break;\n                                                                        }\n                                                                    }\n                                                                    if (_errs24 === errors) {\n                                                                        if (data8.name !== undefined) {\n                                                                            const _errs25 = errors;\n                                                                            if (typeof data8.name !== 'string') {\n                                                                                const err2 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1') +\n                                                                                        '/name',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScript/properties/name/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'string' },\n                                                                                    message: 'must be string',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err2];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err2);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                            var valid6 = _errs25 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid6 = true;\n                                                                        }\n                                                                        if (valid6) {\n                                                                            if (data8.script !== undefined) {\n                                                                                const _errs27 = errors;\n                                                                                if (typeof data8.script !== 'string') {\n                                                                                    const err3 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/script',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScript/properties/script/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'string' },\n                                                                                        message: 'must be string',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err3];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err3);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                var valid6 = _errs27 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid6 = true;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                const err4 = {\n                                                                    instancePath: instancePath +\n                                                                        '/scripts/' +\n                                                                        key3\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    schemaPath: '#/definitions/WalletTemplateScript/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                };\n                                                                if (vErrors === null) {\n                                                                    vErrors = [err4];\n                                                                }\n                                                                else {\n                                                                    vErrors.push(err4);\n                                                                }\n                                                                errors++;\n                                                            }\n                                                        }\n                                                        var _valid0 = _errs21 === errors;\n                                                        valid4 = valid4 || _valid0;\n                                                        if (!valid4) {\n                                                            const _errs29 = errors;\n                                                            const _errs30 = errors;\n                                                            if (errors === _errs30) {\n                                                                if (data8 &&\n                                                                    typeof data8 == 'object' &&\n                                                                    !Array.isArray(data8)) {\n                                                                    let missing2;\n                                                                    if ((data8.lockingType === undefined &&\n                                                                        (missing2 = 'lockingType')) ||\n                                                                        (data8.script === undefined &&\n                                                                            (missing2 = 'script'))) {\n                                                                        const err5 = {\n                                                                            instancePath: instancePath +\n                                                                                '/scripts/' +\n                                                                                key3\n                                                                                    .replace(/~/g, '~0')\n                                                                                    .replace(/\\//g, '~1'),\n                                                                            schemaPath: '#/definitions/WalletTemplateScriptLocking/required',\n                                                                            keyword: 'required',\n                                                                            params: { missingProperty: missing2 },\n                                                                            message: \"must have required property '\" +\n                                                                                missing2 +\n                                                                                \"'\",\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err5];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err5);\n                                                                        }\n                                                                        errors++;\n                                                                    }\n                                                                    else {\n                                                                        const _errs32 = errors;\n                                                                        for (const key5 in data8) {\n                                                                            if (!(key5 === 'lockingType' ||\n                                                                                key5 === 'name' ||\n                                                                                key5 === 'script')) {\n                                                                                const err6 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1'),\n                                                                                    schemaPath: '#/definitions/WalletTemplateScriptLocking/additionalProperties',\n                                                                                    keyword: 'additionalProperties',\n                                                                                    params: { additionalProperty: key5 },\n                                                                                    message: 'must NOT have additional properties',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err6];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err6);\n                                                                                }\n                                                                                errors++;\n                                                                                break;\n                                                                            }\n                                                                        }\n                                                                        if (_errs32 === errors) {\n                                                                            if (data8.lockingType !== undefined) {\n                                                                                let data11 = data8.lockingType;\n                                                                                const _errs33 = errors;\n                                                                                if (typeof data11 !== 'string') {\n                                                                                    const err7 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/lockingType',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScriptLocking/properties/lockingType/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'string' },\n                                                                                        message: 'must be string',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err7];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err7);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                if (!(data11 === 'p2sh20' ||\n                                                                                    data11 === 'p2sh32' ||\n                                                                                    data11 === 'standard')) {\n                                                                                    const err8 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/lockingType',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScriptLocking/properties/lockingType/enum',\n                                                                                        keyword: 'enum',\n                                                                                        params: {\n                                                                                            allowedValues: schema38.properties.lockingType\n                                                                                                .enum,\n                                                                                        },\n                                                                                        message: 'must be equal to one of the allowed values',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err8];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err8);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                var valid8 = _errs33 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid8 = true;\n                                                                            }\n                                                                            if (valid8) {\n                                                                                if (data8.name !== undefined) {\n                                                                                    const _errs35 = errors;\n                                                                                    if (typeof data8.name !== 'string') {\n                                                                                        const err9 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/scripts/' +\n                                                                                                key3\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/name',\n                                                                                            schemaPath: '#/definitions/WalletTemplateScriptLocking/properties/name/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err9];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err9);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid8 = _errs35 === errors;\n                                                                                }\n                                                                                else {\n                                                                                    var valid8 = true;\n                                                                                }\n                                                                                if (valid8) {\n                                                                                    if (data8.script !== undefined) {\n                                                                                        const _errs37 = errors;\n                                                                                        if (typeof data8.script !== 'string') {\n                                                                                            const err10 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/scripts/' +\n                                                                                                    key3\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/script',\n                                                                                                schemaPath: '#/definitions/WalletTemplateScriptLocking/properties/script/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err10];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err10);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid8 = _errs37 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid8 = true;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                                else {\n                                                                    const err11 = {\n                                                                        instancePath: instancePath +\n                                                                            '/scripts/' +\n                                                                            key3\n                                                                                .replace(/~/g, '~0')\n                                                                                .replace(/\\//g, '~1'),\n                                                                        schemaPath: '#/definitions/WalletTemplateScriptLocking/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'object' },\n                                                                        message: 'must be object',\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err11];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err11);\n                                                                    }\n                                                                    errors++;\n                                                                }\n                                                            }\n                                                            var _valid0 = _errs29 === errors;\n                                                            valid4 = valid4 || _valid0;\n                                                            if (!valid4) {\n                                                                const _errs39 = errors;\n                                                                if (!validate38(data8, {\n                                                                    instancePath: instancePath +\n                                                                        '/scripts/' +\n                                                                        key3\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    parentData: data7,\n                                                                    parentDataProperty: key3,\n                                                                    rootData,\n                                                                })) {\n                                                                    vErrors =\n                                                                        vErrors === null\n                                                                            ? validate38.errors\n                                                                            : vErrors.concat(validate38.errors);\n                                                                    errors = vErrors.length;\n                                                                }\n                                                                var _valid0 = _errs39 === errors;\n                                                                valid4 = valid4 || _valid0;\n                                                                if (!valid4) {\n                                                                    const _errs40 = errors;\n                                                                    const _errs41 = errors;\n                                                                    if (errors === _errs41) {\n                                                                        if (data8 &&\n                                                                            typeof data8 == 'object' &&\n                                                                            !Array.isArray(data8)) {\n                                                                            let missing3;\n                                                                            if ((data8.script === undefined &&\n                                                                                (missing3 = 'script')) ||\n                                                                                (data8.unlocks === undefined &&\n                                                                                    (missing3 = 'unlocks'))) {\n                                                                                const err12 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1'),\n                                                                                    schemaPath: '#/definitions/WalletTemplateScriptUnlocking/required',\n                                                                                    keyword: 'required',\n                                                                                    params: { missingProperty: missing3 },\n                                                                                    message: \"must have required property '\" +\n                                                                                        missing3 +\n                                                                                        \"'\",\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err12];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err12);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                            else {\n                                                                                const _errs43 = errors;\n                                                                                for (const key6 in data8) {\n                                                                                    if (!func4.call(schema41.properties, key6)) {\n                                                                                        const err13 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/scripts/' +\n                                                                                                key3\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScriptUnlocking/additionalProperties',\n                                                                                            keyword: 'additionalProperties',\n                                                                                            params: {\n                                                                                                additionalProperty: key6,\n                                                                                            },\n                                                                                            message: 'must NOT have additional properties',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err13];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err13);\n                                                                                        }\n                                                                                        errors++;\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                                if (_errs43 === errors) {\n                                                                                    if (data8.ageLock !== undefined) {\n                                                                                        const _errs44 = errors;\n                                                                                        if (typeof data8.ageLock !== 'string') {\n                                                                                            const err14 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/scripts/' +\n                                                                                                    key3\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/ageLock',\n                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/ageLock/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err14];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err14);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid10 = _errs44 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid10 = true;\n                                                                                    }\n                                                                                    if (valid10) {\n                                                                                        if (data8.estimate !== undefined) {\n                                                                                            const _errs46 = errors;\n                                                                                            if (typeof data8.estimate !==\n                                                                                                'string') {\n                                                                                                const err15 = {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/scripts/' +\n                                                                                                        key3\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/estimate',\n                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/estimate/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                };\n                                                                                                if (vErrors === null) {\n                                                                                                    vErrors = [err15];\n                                                                                                }\n                                                                                                else {\n                                                                                                    vErrors.push(err15);\n                                                                                                }\n                                                                                                errors++;\n                                                                                            }\n                                                                                            var valid10 = _errs46 === errors;\n                                                                                        }\n                                                                                        else {\n                                                                                            var valid10 = true;\n                                                                                        }\n                                                                                        if (valid10) {\n                                                                                            if (data8.fails !== undefined) {\n                                                                                                let data16 = data8.fails;\n                                                                                                const _errs48 = errors;\n                                                                                                if (errors === _errs48) {\n                                                                                                    if (Array.isArray(data16)) {\n                                                                                                        var valid11 = true;\n                                                                                                        const len0 = data16.length;\n                                                                                                        for (let i0 = 0; i0 < len0; i0++) {\n                                                                                                            const _errs50 = errors;\n                                                                                                            if (typeof data16[i0] !==\n                                                                                                                'string') {\n                                                                                                                const err16 = {\n                                                                                                                    instancePath: instancePath +\n                                                                                                                        '/scripts/' +\n                                                                                                                        key3\n                                                                                                                            .replace(/~/g, '~0')\n                                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                                        '/fails/' +\n                                                                                                                        i0,\n                                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/fails/items/type',\n                                                                                                                    keyword: 'type',\n                                                                                                                    params: {\n                                                                                                                        type: 'string',\n                                                                                                                    },\n                                                                                                                    message: 'must be string',\n                                                                                                                };\n                                                                                                                if (vErrors === null) {\n                                                                                                                    vErrors = [err16];\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    vErrors.push(err16);\n                                                                                                                }\n                                                                                                                errors++;\n                                                                                                            }\n                                                                                                            var valid11 = _errs50 === errors;\n                                                                                                            if (!valid11) {\n                                                                                                                break;\n                                                                                                            }\n                                                                                                        }\n                                                                                                    }\n                                                                                                    else {\n                                                                                                        const err17 = {\n                                                                                                            instancePath: instancePath +\n                                                                                                                '/scripts/' +\n                                                                                                                key3\n                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                '/fails',\n                                                                                                            schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/fails/type',\n                                                                                                            keyword: 'type',\n                                                                                                            params: { type: 'array' },\n                                                                                                            message: 'must be array',\n                                                                                                        };\n                                                                                                        if (vErrors === null) {\n                                                                                                            vErrors = [err17];\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            vErrors.push(err17);\n                                                                                                        }\n                                                                                                        errors++;\n                                                                                                    }\n                                                                                                }\n                                                                                                var valid10 = _errs48 === errors;\n                                                                                            }\n                                                                                            else {\n                                                                                                var valid10 = true;\n                                                                                            }\n                                                                                            if (valid10) {\n                                                                                                if (data8.invalid !== undefined) {\n                                                                                                    let data18 = data8.invalid;\n                                                                                                    const _errs52 = errors;\n                                                                                                    if (errors === _errs52) {\n                                                                                                        if (Array.isArray(data18)) {\n                                                                                                            var valid12 = true;\n                                                                                                            const len1 = data18.length;\n                                                                                                            for (let i1 = 0; i1 < len1; i1++) {\n                                                                                                                const _errs54 = errors;\n                                                                                                                if (typeof data18[i1] !==\n                                                                                                                    'string') {\n                                                                                                                    const err18 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/invalid/' +\n                                                                                                                            i1,\n                                                                                                                        schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/invalid/items/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'string',\n                                                                                                                        },\n                                                                                                                        message: 'must be string',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err18];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err18);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                                var valid12 = _errs54 === errors;\n                                                                                                                if (!valid12) {\n                                                                                                                    break;\n                                                                                                                }\n                                                                                                            }\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            const err19 = {\n                                                                                                                instancePath: instancePath +\n                                                                                                                    '/scripts/' +\n                                                                                                                    key3\n                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                    '/invalid',\n                                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/invalid/type',\n                                                                                                                keyword: 'type',\n                                                                                                                params: {\n                                                                                                                    type: 'array',\n                                                                                                                },\n                                                                                                                message: 'must be array',\n                                                                                                            };\n                                                                                                            if (vErrors === null) {\n                                                                                                                vErrors = [err19];\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                vErrors.push(err19);\n                                                                                                            }\n                                                                                                            errors++;\n                                                                                                        }\n                                                                                                    }\n                                                                                                    var valid10 = _errs52 === errors;\n                                                                                                }\n                                                                                                else {\n                                                                                                    var valid10 = true;\n                                                                                                }\n                                                                                                if (valid10) {\n                                                                                                    if (data8.name !== undefined) {\n                                                                                                        const _errs56 = errors;\n                                                                                                        if (typeof data8.name !==\n                                                                                                            'string') {\n                                                                                                            const err20 = {\n                                                                                                                instancePath: instancePath +\n                                                                                                                    '/scripts/' +\n                                                                                                                    key3\n                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                    '/name',\n                                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/name/type',\n                                                                                                                keyword: 'type',\n                                                                                                                params: {\n                                                                                                                    type: 'string',\n                                                                                                                },\n                                                                                                                message: 'must be string',\n                                                                                                            };\n                                                                                                            if (vErrors === null) {\n                                                                                                                vErrors = [err20];\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                vErrors.push(err20);\n                                                                                                            }\n                                                                                                            errors++;\n                                                                                                        }\n                                                                                                        var valid10 = _errs56 === errors;\n                                                                                                    }\n                                                                                                    else {\n                                                                                                        var valid10 = true;\n                                                                                                    }\n                                                                                                    if (valid10) {\n                                                                                                        if (data8.passes !== undefined) {\n                                                                                                            let data21 = data8.passes;\n                                                                                                            const _errs58 = errors;\n                                                                                                            if (errors === _errs58) {\n                                                                                                                if (Array.isArray(data21)) {\n                                                                                                                    var valid13 = true;\n                                                                                                                    const len2 = data21.length;\n                                                                                                                    for (let i2 = 0; i2 < len2; i2++) {\n                                                                                                                        const _errs60 = errors;\n                                                                                                                        if (typeof data21[i2] !== 'string') {\n                                                                                                                            const err21 = {\n                                                                                                                                instancePath: instancePath +\n                                                                                                                                    '/scripts/' +\n                                                                                                                                    key3\n                                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                                    '/passes/' +\n                                                                                                                                    i2,\n                                                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/passes/items/type',\n                                                                                                                                keyword: 'type',\n                                                                                                                                params: {\n                                                                                                                                    type: 'string',\n                                                                                                                                },\n                                                                                                                                message: 'must be string',\n                                                                                                                            };\n                                                                                                                            if (vErrors === null) {\n                                                                                                                                vErrors = [\n                                                                                                                                    err21,\n                                                                                                                                ];\n                                                                                                                            }\n                                                                                                                            else {\n                                                                                                                                vErrors.push(err21);\n                                                                                                                            }\n                                                                                                                            errors++;\n                                                                                                                        }\n                                                                                                                        var valid13 = _errs60 ===\n                                                                                                                            errors;\n                                                                                                                        if (!valid13) {\n                                                                                                                            break;\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    const err22 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/passes',\n                                                                                                                        schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/passes/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'array',\n                                                                                                                        },\n                                                                                                                        message: 'must be array',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err22];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err22);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                            }\n                                                                                                            var valid10 = _errs58 === errors;\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            var valid10 = true;\n                                                                                                        }\n                                                                                                        if (valid10) {\n                                                                                                            if (data8.script !==\n                                                                                                                undefined) {\n                                                                                                                const _errs62 = errors;\n                                                                                                                if (typeof data8.script !==\n                                                                                                                    'string') {\n                                                                                                                    const err23 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/script',\n                                                                                                                        schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/script/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'string',\n                                                                                                                        },\n                                                                                                                        message: 'must be string',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err23];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err23);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                                var valid10 = _errs62 === errors;\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                var valid10 = true;\n                                                                                                            }\n                                                                                                            if (valid10) {\n                                                                                                                if (data8.timeLockType !==\n                                                                                                                    undefined) {\n                                                                                                                    let data24 = data8.timeLockType;\n                                                                                                                    const _errs64 = errors;\n                                                                                                                    if (typeof data24 !==\n                                                                                                                        'string') {\n                                                                                                                        const err24 = {\n                                                                                                                            instancePath: instancePath +\n                                                                                                                                '/scripts/' +\n                                                                                                                                key3\n                                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                                '/timeLockType',\n                                                                                                                            schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/timeLockType/type',\n                                                                                                                            keyword: 'type',\n                                                                                                                            params: {\n                                                                                                                                type: 'string',\n                                                                                                                            },\n                                                                                                                            message: 'must be string',\n                                                                                                                        };\n                                                                                                                        if (vErrors === null) {\n                                                                                                                            vErrors = [err24];\n                                                                                                                        }\n                                                                                                                        else {\n                                                                                                                            vErrors.push(err24);\n                                                                                                                        }\n                                                                                                                        errors++;\n                                                                                                                    }\n                                                                                                                    if (!(data24 ===\n                                                                                                                        'height' ||\n                                                                                                                        data24 ===\n                                                                                                                            'timestamp')) {\n                                                                                                                        const err25 = {\n                                                                                                                            instancePath: instancePath +\n                                                                                                                                '/scripts/' +\n                                                                                                                                key3\n                                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                                '/timeLockType',\n                                                                                                                            schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/timeLockType/enum',\n                                                                                                                            keyword: 'enum',\n                                                                                                                            params: {\n                                                                                                                                allowedValues: schema41\n                                                                                                                                    .properties\n                                                                                                                                    .timeLockType\n                                                                                                                                    .enum,\n                                                                                                                            },\n                                                                                                                            message: 'must be equal to one of the allowed values',\n                                                                                                                        };\n                                                                                                                        if (vErrors === null) {\n                                                                                                                            vErrors = [err25];\n                                                                                                                        }\n                                                                                                                        else {\n                                                                                                                            vErrors.push(err25);\n                                                                                                                        }\n                                                                                                                        errors++;\n                                                                                                                    }\n                                                                                                                    var valid10 = _errs64 === errors;\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    var valid10 = true;\n                                                                                                                }\n                                                                                                                if (valid10) {\n                                                                                                                    if (data8.unlocks !==\n                                                                                                                        undefined) {\n                                                                                                                        const _errs66 = errors;\n                                                                                                                        if (typeof data8.unlocks !==\n                                                                                                                            'string') {\n                                                                                                                            const err26 = {\n                                                                                                                                instancePath: instancePath +\n                                                                                                                                    '/scripts/' +\n                                                                                                                                    key3\n                                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                                    '/unlocks',\n                                                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/unlocks/type',\n                                                                                                                                keyword: 'type',\n                                                                                                                                params: {\n                                                                                                                                    type: 'string',\n                                                                                                                                },\n                                                                                                                                message: 'must be string',\n                                                                                                                            };\n                                                                                                                            if (vErrors === null) {\n                                                                                                                                vErrors = [\n                                                                                                                                    err26,\n                                                                                                                                ];\n                                                                                                                            }\n                                                                                                                            else {\n                                                                                                                                vErrors.push(err26);\n                                                                                                                            }\n                                                                                                                            errors++;\n                                                                                                                        }\n                                                                                                                        var valid10 = _errs66 ===\n                                                                                                                            errors;\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        var valid10 = true;\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            }\n                                                                                                        }\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            const err27 = {\n                                                                                instancePath: instancePath +\n                                                                                    '/scripts/' +\n                                                                                    key3\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1'),\n                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'object' },\n                                                                                message: 'must be object',\n                                                                            };\n                                                                            if (vErrors === null) {\n                                                                                vErrors = [err27];\n                                                                            }\n                                                                            else {\n                                                                                vErrors.push(err27);\n                                                                            }\n                                                                            errors++;\n                                                                        }\n                                                                    }\n                                                                    var _valid0 = _errs40 === errors;\n                                                                    valid4 = valid4 || _valid0;\n                                                                }\n                                                            }\n                                                        }\n                                                        if (!valid4) {\n                                                            const err28 = {\n                                                                instancePath: instancePath +\n                                                                    '/scripts/' +\n                                                                    key3.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                                schemaPath: '#/properties/scripts/additionalProperties/anyOf',\n                                                                keyword: 'anyOf',\n                                                                params: {},\n                                                                message: 'must match a schema in anyOf',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err28];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err28);\n                                                            }\n                                                            errors++;\n                                                            validate21.errors = vErrors;\n                                                            return false;\n                                                        }\n                                                        else {\n                                                            errors = _errs20;\n                                                            if (vErrors !== null) {\n                                                                if (_errs20) {\n                                                                    vErrors.length = _errs20;\n                                                                }\n                                                                else {\n                                                                    vErrors = null;\n                                                                }\n                                                            }\n                                                        }\n                                                        var valid3 = _errs19 === errors;\n                                                        if (!valid3) {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                                else {\n                                                    validate21.errors = [\n                                                        {\n                                                            instancePath: instancePath + '/scripts',\n                                                            schemaPath: '#/properties/scripts/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'object' },\n                                                            message: 'must be object',\n                                                        },\n                                                    ];\n                                                    return false;\n                                                }\n                                            }\n                                            var valid0 = _errs16 === errors;\n                                        }\n                                        else {\n                                            var valid0 = true;\n                                        }\n                                        if (valid0) {\n                                            if (data.supported !== undefined) {\n                                                let data26 = data.supported;\n                                                const _errs68 = errors;\n                                                if (errors === _errs68) {\n                                                    if (Array.isArray(data26)) {\n                                                        var valid14 = true;\n                                                        const len3 = data26.length;\n                                                        for (let i3 = 0; i3 < len3; i3++) {\n                                                            let data27 = data26[i3];\n                                                            const _errs70 = errors;\n                                                            if (typeof data27 !== 'string') {\n                                                                validate21.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/supported/' + i3,\n                                                                        schemaPath: '#/definitions/AuthenticationVirtualMachineIdentifier/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'string' },\n                                                                        message: 'must be string',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            if (!(data27 === 'BCH_2020_05' ||\n                                                                data27 === 'BCH_2021_05' ||\n                                                                data27 === 'BCH_2022_05' ||\n                                                                data27 === 'BCH_2023_05' ||\n                                                                data27 === 'BCH_SPEC' ||\n                                                                data27 === 'BSV_2020_02' ||\n                                                                data27 === 'BSV_SPEC' ||\n                                                                data27 === 'BTC_2017_08' ||\n                                                                data27 === 'BTC_SPEC' ||\n                                                                data27 === 'XEC_2020_05' ||\n                                                                data27 === 'XEC_SPEC')) {\n                                                                validate21.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/supported/' + i3,\n                                                                        schemaPath: '#/definitions/AuthenticationVirtualMachineIdentifier/enum',\n                                                                        keyword: 'enum',\n                                                                        params: { allowedValues: schema42.enum },\n                                                                        message: 'must be equal to one of the allowed values',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            var valid14 = _errs70 === errors;\n                                                            if (!valid14) {\n                                                                break;\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/supported',\n                                                                schemaPath: '#/properties/supported/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'array' },\n                                                                message: 'must be array',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid0 = _errs68 === errors;\n                                            }\n                                            else {\n                                                var valid0 = true;\n                                            }\n                                            if (valid0) {\n                                                if (data.version !== undefined) {\n                                                    let data28 = data.version;\n                                                    const _errs73 = errors;\n                                                    if (!(typeof data28 == 'number' && isFinite(data28))) {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/version',\n                                                                schemaPath: '#/properties/version/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'number' },\n                                                                message: 'must be number',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                    if (0 !== data28) {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/version',\n                                                                schemaPath: '#/properties/version/const',\n                                                                keyword: 'const',\n                                                                params: { allowedValue: 0 },\n                                                                message: 'must be equal to constant',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                    var valid0 = _errs73 === errors;\n                                                }\n                                                else {\n                                                    var valid0 = true;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate21.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate21.errors = vErrors;\n    return errors === 0;\n}\nfunction validate20(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (!validate21(data, {\n        instancePath,\n        parentData,\n        parentDataProperty,\n        rootData,\n    })) {\n        vErrors =\n            vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);\n        errors = vErrors.length;\n    }\n    validate20.errors = vErrors;\n    return errors === 0;\n}\n//# sourceMappingURL=validate-wallet-template.js.map","import { lossyNormalize } from '../../format/format.js';\nimport walletTemplateValidator from './validate-wallet-template.js';\nconst avjErrorsToDescription = (errors) => \n// TODO: translate instancePath\nerrors.map((error) => `${error.instancePath}: ${error.message}`).join(',');\n/**\n * Given an untrusted JSON string or object and an AJV validator, verify that\n * the untrusted value is of the expected shape. Note, this method first\n * normalizes all characters in the input using `Normalization Form KC`\n * (Compatibility Decomposition, followed by Canonical Composition).\n */\nexport const ajvStandaloneJsonParse = (untrustedJsonOrObject, validator) => {\n    // eslint-disable-next-line functional/no-try-statements\n    try {\n        const stringified = typeof untrustedJsonOrObject === 'string'\n            ? untrustedJsonOrObject\n            : JSON.stringify(untrustedJsonOrObject);\n        const normalized = lossyNormalize(stringified);\n        const parsed = JSON.parse(normalized);\n        if (validator(parsed)) {\n            return parsed;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return avjErrorsToDescription(walletTemplateValidator.errors);\n    }\n    catch (e) {\n        return `Invalid JSON. ${String(e)}`;\n    }\n};\n//# sourceMappingURL=ajv-utils.js.map","import { ajvStandaloneJsonParse } from './ajv/ajv-utils.js';\n// eslint-disable-next-line import/no-internal-modules\nimport walletTemplateValidator from './ajv/validate-wallet-template.js';\n/**\n * Safely parse and validate a wallet template, returning either an\n * error message as a string or a valid {@link WalletTemplate}. The\n * template may be provided either as an untrusted JSON string or as a\n * pre-parsed object.\n *\n * This method validates both the structure and the contents of a template:\n * - All properties and sub-properties are verified to be of the expected type.\n * - The template contains no unknown properties.\n * - The ID of each entity, script, and scenario is confirmed to be unique.\n * - Script IDs referenced by entities and other scripts (via `unlocks`) are\n * confirmed to exist.\n * - The derivation paths of each HdKey are validated against each other.\n *\n * This method does not validate the CashAssembly contents of scripts (by\n * attempting compilation, evaluating {@link WalletTemplateScriptTest}s,\n * or testing scenario generation).\n *\n * @param untrustedJsonOrObject - the JSON string or object to validate as a\n * wallet template\n */\nexport const importWalletTemplate = (untrustedJsonOrObject) => {\n    const errorPrefix = `Wallet template import failed:`;\n    const template = ajvStandaloneJsonParse(untrustedJsonOrObject, walletTemplateValidator);\n    if (typeof template === 'string') {\n        return `${errorPrefix}${template}`;\n    }\n    // TODO: add back other validation\n    return template;\n};\n//# sourceMappingURL=wallet-template.js.map","import { allErrorsAreRecoverable, extractResolvedVariableBytecodeMap, } from '../language/language.js';\nconst returnFailedCompilationDirective = ({ index, result, type, }) => ({\n    errors: result.errors.map((error) => ({\n        ...error,\n        error: `Failed compilation of ${type} directive at index \"${index}\": ${error.error}`,\n    })),\n    index,\n    ...(result.errorType === 'parse' ? {} : { resolved: result.resolve }),\n    type,\n});\n// eslint-disable-next-line complexity\nexport const compileOutputTemplate = ({ outputTemplate, index, }) => {\n    if ('script' in outputTemplate.lockingBytecode) {\n        const directive = outputTemplate.lockingBytecode;\n        const data = directive.data ?? {};\n        const result = directive.compiler.generateBytecode({\n            data,\n            debug: true,\n            scriptId: directive.script,\n        });\n        return result.success\n            ? {\n                lockingBytecode: result.bytecode,\n                ...(outputTemplate.token === undefined\n                    ? {}\n                    : { token: outputTemplate.token }),\n                valueSatoshis: outputTemplate.valueSatoshis,\n            }\n            : returnFailedCompilationDirective({ index, result, type: 'locking' });\n    }\n    return {\n        lockingBytecode: outputTemplate.lockingBytecode.slice(),\n        ...(outputTemplate.token === undefined\n            ? {}\n            : { token: outputTemplate.token }),\n        valueSatoshis: outputTemplate.valueSatoshis,\n    };\n};\nexport const compileInputTemplate = ({ inputTemplate, index, template, outputs, }) => {\n    if ('script' in inputTemplate.unlockingBytecode) {\n        const directive = inputTemplate.unlockingBytecode;\n        // TODO: workaround, replace by migrating to PST format\n        const sourceOutputs = [];\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        sourceOutputs[index] = {\n            lockingBytecode: Uint8Array.of(),\n            ...(inputTemplate.unlockingBytecode.token === undefined\n                ? {}\n                : { token: inputTemplate.unlockingBytecode.token }),\n            valueSatoshis: inputTemplate.unlockingBytecode.valueSatoshis,\n        };\n        const result = directive.compiler.generateBytecode({\n            data: {\n                ...directive.data,\n                compilationContext: {\n                    inputIndex: index,\n                    sourceOutputs,\n                    transaction: {\n                        inputs: template.inputs,\n                        locktime: template.locktime,\n                        outputs,\n                        version: template.version,\n                    },\n                },\n            },\n            debug: true,\n            scriptId: directive.script,\n        });\n        return result.success\n            ? {\n                outpointIndex: inputTemplate.outpointIndex,\n                outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),\n                sequenceNumber: inputTemplate.sequenceNumber,\n                unlockingBytecode: result.bytecode,\n            }\n            : returnFailedCompilationDirective({ index, result, type: 'unlocking' });\n    }\n    return {\n        outpointIndex: inputTemplate.outpointIndex,\n        outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),\n        sequenceNumber: inputTemplate.sequenceNumber,\n        unlockingBytecode: inputTemplate.unlockingBytecode.slice(),\n    };\n};\n/**\n * Generate a `Transaction` given a `TransactionTemplate` and any applicable\n * compilers and compilation data.\n *\n * Returns either a `Transaction` or an array of compilation errors.\n *\n * For each `CompilationDirective`, the `compilationContext` property will be\n * automatically provided to the compiler. All other necessary `CompilationData`\n * properties must be specified in the `TransactionTemplate`.\n *\n * @param template - the `TransactionTemplate` from which to create the\n * `Transaction`\n */\nexport const generateTransaction = (template) => {\n    const outputResults = template.outputs.map((outputTemplate, index) => compileOutputTemplate({\n        index,\n        outputTemplate,\n    }));\n    const outputCompilationErrors = outputResults.filter((result) => 'errors' in result);\n    if (outputCompilationErrors.length > 0) {\n        const outputCompletions = outputResults\n            .map((result, index) => 'lockingBytecode' in result\n            ? { index, output: result, type: 'output' }\n            : result)\n            .filter((result) => 'output' in result);\n        return {\n            completions: outputCompletions,\n            errors: outputCompilationErrors,\n            stage: 'outputs',\n            success: false,\n        };\n    }\n    const outputs = outputResults;\n    const inputResults = template.inputs.map((inputTemplate, index) => compileInputTemplate({\n        index,\n        inputTemplate,\n        outputs,\n        template,\n    }));\n    const inputCompilationErrors = inputResults.filter((result) => 'errors' in result);\n    if (inputCompilationErrors.length > 0) {\n        const inputCompletions = inputResults\n            .map((result, index) => 'unlockingBytecode' in result\n            ? { index, input: result, type: 'input' }\n            : result)\n            .filter((result) => 'input' in result);\n        return {\n            completions: inputCompletions,\n            errors: inputCompilationErrors,\n            stage: 'inputs',\n            success: false,\n        };\n    }\n    const inputs = inputResults;\n    return {\n        success: true,\n        transaction: {\n            inputs,\n            locktime: template.locktime,\n            outputs,\n            version: template.version,\n        },\n    };\n};\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Extract a map of successfully resolved variables to their resolved bytecode.\n *\n * @param transactionGenerationError - a transaction generation attempt where\n * `success` is `false`\n */\nexport const extractResolvedVariables = (transactionGenerationError) => transactionGenerationError.errors.reduce((all, error) => error.resolved === undefined\n    ? all\n    : { ...all, ...extractResolvedVariableBytecodeMap(error.resolved) }, {});\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Given an unsuccessful transaction generation result, extract a map of the\n * identifiers missing from the compilation mapped to the entity that owns each\n * variable.\n *\n * Returns `false` if any errors are fatal (the error either cannot be resolved\n * by providing a variable, or the entity ownership of the required variable was\n * not provided in the compilation data).\n *\n * @param transactionGenerationError - a transaction generation result where\n * `success` is `false`\n */\nexport const extractMissingVariables = (transactionGenerationError) => {\n    const allErrors = transactionGenerationError.errors.reduce((all, error) => [...all, ...error.errors], []);\n    if (!allErrorsAreRecoverable(allErrors)) {\n        return false;\n    }\n    return allErrors.reduce((all, error) => ({\n        ...all,\n        [error.missingIdentifier]: error.owningEntity,\n    }), {});\n};\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Safely extend a compilation data with resolutions provided by other entities\n * (via `extractResolvedVariables`).\n *\n * It is security-critical that compilation data only be extended with expected\n * identifiers from the proper owning entity of each variable. See\n * `CompilationData.bytecode` for details.\n *\n * Returns `false` if any errors are fatal (the error either cannot be resolved\n * by providing a variable, or the entity ownership of the required variable was\n * not provided in the compilation data).\n *\n * @remarks\n * To determine which identifiers are required by a given compilation, the\n * compilation is first attempted with only trusted variables: variables owned\n * or previously verified (like `WalletData`) by the compiling entity. If this\n * compilation produces a `TransactionGenerationError`, the error can be\n * provided to `safelyExtendCompilationData`, along with the trusted compilation\n * data and a mapping of untrusted resolutions (where the result of\n * `extractResolvedVariables` is assigned to the entity ID of the entity from\n * which they were received).\n *\n * The first compilation must use only trusted compilation data\n */\nexport const safelyExtendCompilationData = (transactionGenerationError, trustedCompilationData, untrustedResolutions) => {\n    const missing = extractMissingVariables(transactionGenerationError);\n    if (missing === false)\n        return false;\n    const selectedResolutions = Object.entries(missing).reduce((all, [identifier, entityId]) => {\n        const entityResolution = untrustedResolutions[entityId];\n        if (entityResolution === undefined) {\n            return all;\n        }\n        const resolution = entityResolution[identifier];\n        if (resolution === undefined) {\n            return all;\n        }\n        return { ...all, [identifier]: resolution };\n    }, {});\n    return {\n        ...trustedCompilationData,\n        bytecode: {\n            ...selectedResolutions,\n            ...trustedCompilationData.bytecode,\n        },\n    };\n};\n//# sourceMappingURL=generate-transaction.js.map","const RANDOM_SCALE = 1 / (1 << 31 >>> 0);\nfunction nextRandom(rseed) {\n  const t = rseed[0] ^ rseed[0] << 11;\n  rseed[0] = rseed[1];\n  rseed[1] = rseed[2];\n  rseed[2] = rseed[3];\n  rseed[3] = (rseed[3] ^ rseed[3] >> 19 ^ t ^ t >> 8) >>> 0;\n  return rseed[3] * RANDOM_SCALE;\n}\nfunction randSeed(seed) {\n  const rseed = new Uint32Array([0, 0, 0, 0]);\n  for (let i = 0; i < seed.length; i++) {\n    rseed[i % 4] = (rseed[i % 4] << 5) - rseed[i % 4] + seed.charCodeAt(i);\n  }\n  return rseed;\n}\nexport {\n  nextRandom,\n  randSeed\n};\n//# sourceMappingURL=random.js.map\n","import { randSeed, nextRandom } from \"./random.js\";\nfunction image(address) {\n  const rseed = randSeed(address.toLowerCase());\n  const c = randomColor(rseed);\n  const b = randomColor(rseed);\n  const s = randomColor(rseed);\n  const data = new Uint8Array(32);\n  for (let i = 0; i < 32; i++) {\n    data[i] = Math.floor(\n      // background: 43% chances\n      // color:      43% chances\n      // spot:       13% chances\n      nextRandom(rseed) * 2.3\n    );\n  }\n  return [data, [b, c, s]];\n}\nfunction randomColor(rseed) {\n  return new Uint16Array([\n    // hue = 0 to 360 (whole color spectrum)\n    nextRandom(rseed) * 360,\n    // saturation = 40 to 100 (avoid greyish colors)\n    40 + nextRandom(rseed) * 60,\n    // lightness = 0 to 100 but probabilities are a bell curve around 50%\n    (nextRandom(rseed) + nextRandom(rseed) + nextRandom(rseed) + nextRandom(rseed)) * 25\n  ]);\n}\nexport {\n  image,\n  randomColor\n};\n//# sourceMappingURL=image.js.map\n","import { image } from \"./image.js\";\nconst SVG_START = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 8\" shape-rendering=\"optimizeSpeed\" ';\nconst SVG_END = \"</svg>\";\nconst PATH_1 = '<path fill=\"hsl(';\nconst PATH_2 = \"% \";\nconst PATH_3 = '%)\" d=\"';\nconst PATH_4 = '\"/>';\nconst BACKGROUND_D = \"M0,0H8V8H0z\";\nfunction svg(address, size) {\n  const [data, [b, c, s]] = image(address);\n  const paths = [\n    \"\",\n    // color\n    \"\"\n    // spot\n  ];\n  for (let i = 0, x, y; i < 32; i++) {\n    if (data[i] === 0) {\n      continue;\n    }\n    x = i & 3;\n    y = i >> 2;\n    const square = \",\" + y + \"h1v1h-1z\";\n    paths[data[i] - 1] += \"M\" + x + square + \"M\" + (7 - x) + square;\n  }\n  return SVG_START + 'width=\"' + size + '\" height=\"' + size + '\">' + PATH_1 + b[0] + \" \" + b[1] + PATH_2 + b[2] + PATH_3 + BACKGROUND_D + PATH_4 + PATH_1 + c[0] + \" \" + c[1] + PATH_2 + c[2] + PATH_3 + paths[0] + PATH_4 + PATH_1 + s[0] + \" \" + s[1] + PATH_2 + s[2] + PATH_3 + paths[1] + PATH_4 + SVG_END;\n}\nexport {\n  svg\n};\n//# sourceMappingURL=svg.js.map\n","import { image } from \"./image.js\";\nimport { svg } from \"./svg.js\";\nfunction blo(address, size = 64) {\n  return \"data:image/svg+xml;base64,\" + btoa(bloSvg(address, size));\n}\nfunction bloSvg(address, size = 64) {\n  return svg(address, size);\n}\nfunction bloImage(address) {\n  return image(address);\n}\nexport {\n  blo,\n  bloImage,\n  bloSvg\n};\n//# sourceMappingURL=index.js.map\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import $dvphU$debug from \"debug\";\n\n// Import 3rd party debug library.\n\n// Create the debugging log channels.\nconst $9de8c596df24b669$var$debug = {\n    client: (0, $dvphU$debug)(\"electrum-cash:client \"),\n    errors: (0, $dvphU$debug)(\"electrum-cash:error  \"),\n    warning: (0, $dvphU$debug)(\"electrum-cash:warning\"),\n    network: (0, $dvphU$debug)(\"electrum-cash:network\"),\n    ping: (0, $dvphU$debug)(\"electrum-cash:pulses \")\n};\n// Set log channel colors.\n$9de8c596df24b669$var$debug.client.color = \"2\";\n$9de8c596df24b669$var$debug.errors.color = \"9\";\n$9de8c596df24b669$var$debug.warning.color = \"13\";\n$9de8c596df24b669$var$debug.network.color = \"4\";\n$9de8c596df24b669$var$debug.ping.color = \"8\";\nvar // Export the logs channels.\n$9de8c596df24b669$export$2e2bcd8739ae039 = $9de8c596df24b669$var$debug;\n\n\nexport {$9de8c596df24b669$export$2e2bcd8739ae039 as default};\n//# sourceMappingURL=index.mjs.map\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport { ws as WebSocket }\n","import {WebSocket as $dvphU$WebSocket} from \"@monsterbitar/isomorphic-ws\";\nimport {EventEmitter as $dvphU$EventEmitter} from \"eventemitter3\";\nimport $dvphU$electrumcashdebuglogs from \"@electrum-cash/debug-logs\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $05743633fea447d4$exports = {};\n\n$parcel$export($05743633fea447d4$exports, \"ElectrumWebSocket\", () => $05743633fea447d4$export$25b4633f61498e1);\n\n\n\n// Export a default timeout value of 30 seconds.\nconst $d801b1f9b7fc3074$export$1bddf2b96e25d075 = 30000;\n\n\nclass $05743633fea447d4$export$25b4633f61498e1 extends (0, $dvphU$EventEmitter) {\n    host;\n    port;\n    encrypted;\n    timeout;\n    // Declare an empty WebSocket.\n    webSocket;\n    // Used to disconnect after some time if initial connection is too slow.\n    disconnectTimer;\n    // Initialize boolean that indicates whether the onConnect function has run (initialize to false).\n    onConnectHasRun;\n    // Initialize event forwarding functions.\n    eventForwarders;\n    /**\n\t * Creates a socket configured with connection information for a given Electrum server.\n\t *\n\t * @param host        Fully qualified domain name or IP address of the host\n\t * @param port        Network port for the host to connect to, defaults to the standard TLS port\n\t * @param encrypted   If false, uses an unencrypted connection instead of the default on TLS\n\t * @param timeout     If no connection is established after `timeout` ms, the connection is terminated\n\t */ constructor(host, port = 50004, encrypted = true, timeout = (0, $d801b1f9b7fc3074$export$1bddf2b96e25d075)){\n        // Initialize the event emitter.\n        super();\n        this.host = host;\n        this.port = port;\n        this.encrypted = encrypted;\n        this.timeout = timeout;\n        this.onConnectHasRun = false;\n        this.eventForwarders = {\n            disconnect: ()=>this.emit(\"disconnected\"),\n            wsData: (event)=>this.emit(\"data\", `${event.data}\\n`),\n            wsError: (event)=>this.emit(\"error\", new Error(event.error))\n        };\n    }\n    /**\n\t * Returns a string for the host identifier for usage in debug messages.\n\t */ get hostIdentifier() {\n        return `${this.host}:${this.port}`;\n    }\n    /**\n\t * Connect to host:port using the specified transport\n\t */ connect() {\n        // Check that no existing socket exists before initiating a new connection.\n        if (this.webSocket) throw new Error(\"Cannot initiate a new socket connection when an existing connection exists\");\n        // Set a timer to force disconnect after `timeout` seconds\n        this.disconnectTimer = setTimeout(()=>this.disconnectOnTimeout(), this.timeout);\n        // Remove the timer if a connection is successfully established\n        this.once(\"connected\", this.clearDisconnectTimerOnTimeout);\n        // Set a named connection type for logging purposes.\n        const connectionType = this.encrypted ? \"an encrypted WebSocket\" : \"a WebSocket\";\n        // Log that we are trying to establish a connection.\n        (0, $dvphU$electrumcashdebuglogs).network(`Initiating ${connectionType} connection to '${this.host}:${this.port}'.`);\n        if (this.encrypted) // Initialize this.webSocket (rejecting self-signed certificates).\n        // We reject self-signed certificates to match functionality of browsers.\n        this.webSocket = new (0, $dvphU$WebSocket)(`wss://${this.host}:${this.port}`);\n        else // Initialize this.webSocket.\n        this.webSocket = new (0, $dvphU$WebSocket)(`ws://${this.host}:${this.port}`);\n        // Trigger successful connection events.\n        this.webSocket.addEventListener(\"open\", this.onConnect.bind(this));\n        // Forward the encountered errors.\n        this.webSocket.addEventListener(\"error\", this.eventForwarders.wsError);\n    }\n    /**\n\t * Sets up forwarding of events related to the connection.\n\t */ onConnect() {\n        // If the onConnect function has already run, do not execute it again.\n        if (this.onConnectHasRun) return;\n        // Set a named connection type for logging purposes.\n        const connectionType = this.encrypted ? \"an encrypted WebSocket\" : \"a WebSocket\";\n        // Log that the connection has been established.\n        (0, $dvphU$electrumcashdebuglogs).network(`Established ${connectionType} connection with '${this.host}:${this.port}'.`);\n        // Forward the socket events\n        this.webSocket.addEventListener(\"close\", this.eventForwarders.disconnect);\n        this.webSocket.addEventListener(\"message\", this.eventForwarders.wsData);\n        // Indicate that the onConnect function has run.\n        this.onConnectHasRun = true;\n        // Emit the connect event.\n        this.emit(\"connected\");\n    }\n    /**\n\t * Clears the disconnect timer if it is still active.\n\t */ clearDisconnectTimerOnTimeout() {\n        // Clear the retry timer if it is still active.\n        if (this.disconnectTimer) clearTimeout(this.disconnectTimer);\n    }\n    /**\n\t * Forcibly terminate the connection.\n\t *\n\t * @throws {Error} if no connection was found\n\t */ disconnect() {\n        // Clear the disconnect timer so that the socket does not try to disconnect again later.\n        this.clearDisconnectTimerOnTimeout();\n        try {\n            // Remove all event forwarders.\n            this.webSocket.removeEventListener(\"close\", this.eventForwarders.disconnect);\n            this.webSocket.removeEventListener(\"message\", this.eventForwarders.wsData);\n            this.webSocket.removeEventListener(\"error\", this.eventForwarders.wsError);\n            // Gracefully terminate the connection.\n            this.webSocket.close();\n        } catch (ignored) {\n        // close() will throw an error if the connection has not been established yet.\n        // We ignore this error, since no similar error gets thrown in the TLS Socket.\n        } finally{\n            // Remove the stored socket regardless of any thrown errors.\n            this.webSocket = undefined;\n        }\n        // Indicate that the onConnect function has not run and it has to be run again.\n        this.onConnectHasRun = false;\n        // Emit a disconnect event\n        this.emit(\"disconnected\");\n    }\n    /**\n\t * Write data to the socket\n\t *\n\t * @param data       Data to be written to the socket\n\t * @param callback   Callback function to be called when the write has completed\n\t *\n\t * @throws {Error} if no connection was found\n\t * @returns true if the message was fully flushed to the socket, false if part of the message\n\t * is queued in the user memory\n\t */ write(data, callback) {\n        // Throw an error if no active connection is found\n        if (!this.webSocket) throw new Error(\"Cannot write to socket when there is no active connection\");\n        // Write data to the WebSocket\n        this.webSocket.send(data, callback);\n        // WebSockets always fit everything in a single request, so we return true\n        return true;\n    }\n    /**\n\t * Force a disconnection if no connection is established after `timeout` milliseconds.\n\t */ disconnectOnTimeout() {\n        // Remove the connect listener.\n        this.removeListener(\"connected\", this.clearDisconnectTimerOnTimeout);\n        // Emit an error event so that connect is rejected upstream.\n        this.emit(\"error\", new Error(`Connection to '${this.host}:${this.port}' timed out after ${this.timeout} milliseconds`));\n        // Forcibly disconnect to clean up the connection on timeout\n        this.disconnect();\n    }\n    // Add magic glue that makes typedoc happy so that we can have the events listed on the class.\n    connected;\n    disconnected;\n    data;\n    error;\n}\n\n\n\n\nexport {$05743633fea447d4$export$25b4633f61498e1 as ElectrumWebSocket};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value) {\n  return INTEGER_REGEX.test(value);\n}\nconst INTEGER_REGEX = /^-?[0-9]+$/;\n\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */\nexport function isNumber(value) {\n  return NUMBER_REGEX.test(value);\n}\nconst NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n\n/**\n * Test whether a string can be safely represented with a number\n * without information loss.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */\nexport function isSafeNumber(value, config) {\n  const num = Number.parseFloat(value);\n  const str = String(num);\n  if (value === str) {\n    return true;\n  }\n  const valueDigits = countSignificantDigits(value);\n  const strDigits = countSignificantDigits(str);\n  if (valueDigits === strDigits) {\n    return true;\n  }\n  if (config?.approx === true) {\n    // A value is approximately equal when:\n    // 1. it is a floating point number, not an integer\n    // 2. it has at least 14 digits\n    // 3. the first 14 digits are equal\n    const requiredDigits = 14;\n    if (strDigits >= requiredDigits && !isInteger(value)) {\n      return true;\n    }\n  }\n  return false;\n}\nexport let UnsafeNumberReason = /*#__PURE__*/function (UnsafeNumberReason) {\n  UnsafeNumberReason[\"underflow\"] = \"underflow\";\n  UnsafeNumberReason[\"overflow\"] = \"overflow\";\n  UnsafeNumberReason[\"truncate_integer\"] = \"truncate_integer\";\n  UnsafeNumberReason[\"truncate_float\"] = \"truncate_float\";\n  return UnsafeNumberReason;\n}({});\n\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */\nexport function getUnsafeNumberReason(value) {\n  if (isSafeNumber(value, {\n    approx: false\n  })) {\n    return undefined;\n  }\n  if (isInteger(value)) {\n    return UnsafeNumberReason.truncate_integer;\n  }\n  const num = Number.parseFloat(value);\n  if (!Number.isFinite(num)) {\n    return UnsafeNumberReason.overflow;\n  }\n  if (num === 0) {\n    return UnsafeNumberReason.underflow;\n  }\n  return UnsafeNumberReason.truncate_float;\n}\n\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */\nexport function toSafeNumberOrThrow(value, config) {\n  const number = Number.parseFloat(value);\n  const unsafeReason = getUnsafeNumberReason(value);\n  if (config?.approx === true ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float : unsafeReason) {\n    const unsafeReasonText = unsafeReason?.replace(/_\\w+$/, '');\n    throw new Error(`Cannot safely convert to number: the value '${value}' would ${unsafeReasonText} and become ${number}`);\n  }\n  return number;\n}\n\n/**\n * Split a number into sign, digits, and exponent.\n * The value can be constructed again from a split number by inserting a dot\n * at the second character of the digits if there is more than one digit,\n * prepending it with the sign, and appending the exponent like `e${exponent}`\n */\nexport function splitNumber(value) {\n  const match = value.match(/^(-?)(\\d+\\.?\\d*)([eE]([+-]?\\d+))?$/);\n  if (!match) {\n    throw new SyntaxError(`Invalid number: ${value}`);\n  }\n  const sign = match[1];\n  const digitsStr = match[2];\n  let exponent = match[4] !== undefined ? Number.parseInt(match[4]) : 0;\n  const dot = digitsStr.indexOf('.');\n  exponent += dot !== -1 ? dot - 1 : digitsStr.length - 1;\n  const digits = digitsStr.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n  .replace(/^0*/, zeros => {\n    // remove leading zeros, add their count to the exponent\n    exponent -= zeros.length;\n    return '';\n  }).replace(/0*$/, ''); // remove trailing zeros\n\n  return digits.length > 0 ? {\n    sign,\n    digits,\n    exponent\n  } : {\n    sign,\n    digits: '0',\n    exponent: exponent + 1\n  };\n}\n\n/**\n * Compare two strings containing a numeric value\n * Returns 1 when a is larger than b, 0 when they are equal,\n * and -1 when a is smaller than b.\n */\nexport function compareNumber(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const aa = splitNumber(a);\n  const bb = splitNumber(b);\n  const sign = aa.sign === '-' ? -1 : 1;\n  if (aa.sign !== bb.sign) {\n    if (aa.digits === '0' && bb.digits === '0') {\n      return 0;\n    }\n    return sign;\n  }\n  if (aa.exponent !== bb.exponent) {\n    return aa.exponent > bb.exponent ? sign : aa.exponent < bb.exponent ? -sign : 0;\n  }\n  return aa.digits > bb.digits ? sign : aa.digits < bb.digits ? -sign : 0;\n}\n\n/**\n * Count the significant digits of a number.\n *\n * For example:\n *   '2.34' returns 3\n *   '-77' returns 2\n *   '0.003400' returns 2\n *   '120.5e+30' returns 4\n **/\nexport function countSignificantDigits(value) {\n  let start = 0;\n  if (value[0] === '-') {\n    start++;\n  }\n  while (value[start] === '0' || value[start] === '.') {\n    start++;\n  }\n  let end = value.lastIndexOf('e');\n  if (end === -1) {\n    end = value.lastIndexOf('E');\n  }\n  if (end === -1) {\n    end = value.length;\n  }\n  while (value[end - 1] === '0' || value[end - 1] === '.') {\n    end--;\n  }\n  let digits = end >= start ? end - start : 0;\n  const dot = value.indexOf('.', start);\n  if (dot !== -1 && dot < end) {\n    digits--;\n  }\n  return digits;\n}\n//# sourceMappingURL=utils.js.map","import { UnsafeNumberReason, compareNumber, countSignificantDigits, getUnsafeNumberReason, isInteger, isNumber } from './utils.js';\n\n/**\n * A lossless number. Stores its numeric value as string\n */\nexport class LosslessNumber {\n  // numeric value as string\n\n  // type information\n  isLosslessNumber = true;\n  constructor(value) {\n    if (!isNumber(value)) {\n      throw new Error(`Invalid number (value: \"${value}\")`);\n    }\n    this.value = value;\n  }\n\n  /**\n   * Get the value of the LosslessNumber as number or bigint.\n   *\n   * - a number is returned for safe numbers and decimal values that only lose some insignificant digits\n   * - a bigint is returned for big integer numbers\n   * - an Error is thrown for values that will overflow or underflow\n   *\n   * Note that you can implement your own strategy for conversion by just getting the value as string\n   * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,\n   * and toSafeNumberOrThrow to convert it to a numeric value.\n   */\n  valueOf() {\n    const unsafeReason = getUnsafeNumberReason(this.value);\n\n    // safe or truncate_float\n    if (unsafeReason === undefined || unsafeReason === UnsafeNumberReason.truncate_float) {\n      return Number.parseFloat(this.value);\n    }\n\n    // truncate_integer\n    if (isInteger(this.value)) {\n      return BigInt(this.value);\n    }\n\n    // overflow or underflow\n    throw new Error(`Cannot safely convert to number: the value '${this.value}' would ${unsafeReason} and become ${Number.parseFloat(this.value)}`);\n  }\n\n  /**\n   * Get the value of the LosslessNumber as string.\n   */\n  toString() {\n    return this.value;\n  }\n\n  // Note: we do NOT implement a .toJSON() method, and you should not implement\n  // or use that, it cannot safely turn the numeric value in the string into\n  // stringified JSON since it has to be parsed into a number first.\n}\n\n/**\n * Test whether a value is a LosslessNumber\n */\nexport function isLosslessNumber(value) {\n  // @ts-ignore\n  return value && typeof value === 'object' && value.isLosslessNumber || false;\n}\n\n/**\n * Convert a number into a LosslessNumber if this is possible in a safe way\n * If the value has too many digits, or is NaN or Infinity, an error will be thrown\n */\nexport function toLosslessNumber(value) {\n  const maxDigits = 15;\n  if (countSignificantDigits(String(value)) > maxDigits) {\n    throw new Error(`Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself (value: ${value})`);\n  }\n  if (Number.isNaN(value)) {\n    throw new Error('Invalid number: NaN');\n  }\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number: ${value}`);\n  }\n  return new LosslessNumber(String(value));\n}\n\n/**\n * Compare two lossless numbers.\n * Returns 1 when a is larger than b, 0 when they are equal,\n * and -1 when a is smaller than b.\n */\nexport function compareLosslessNumber(a, b) {\n  return compareNumber(a.value, b.value);\n}\n//# sourceMappingURL=LosslessNumber.js.map","import { LosslessNumber } from './LosslessNumber.js';\nimport { isInteger } from './utils.js';\nexport function parseLosslessNumber(value) {\n  return new LosslessNumber(value);\n}\nexport function parseNumberAndBigInt(value) {\n  return isInteger(value) ? BigInt(value) : Number.parseFloat(value);\n}\n//# sourceMappingURL=numberParsers.js.map","import { isLosslessNumber } from './LosslessNumber.js';\n/**\n * Revive a json object.\n * Applies the reviver function recursively on all values in the JSON object.\n * @param json   A JSON Object, Array, or value\n * @param reviver\n *              A reviver function invoked with arguments `key` and `value`,\n *              which must return a replacement value. The function context\n *              (`this`) is the Object or Array that contains the currently\n *              handled value.\n */\nexport function revive(json, reviver) {\n  return reviveValue({\n    '': json\n  }, '', json, reviver);\n}\n\n/**\n * Revive a value\n */\nfunction reviveValue(context, key, value, reviver) {\n  if (Array.isArray(value)) {\n    return reviver.call(context, key, reviveArray(value, reviver));\n  }\n  if (value && typeof value === 'object' && !isLosslessNumber(value)) {\n    // note the special case for LosslessNumber,\n    // we don't want to iterate over the internals of a LosslessNumber\n    return reviver.call(context, key, reviveObject(value, reviver));\n  }\n  return reviver.call(context, key, value);\n}\n\n/**\n * Revive the properties of an object\n */\nfunction reviveObject(object, reviver) {\n  for (const key of Object.keys(object)) {\n    const value = reviveValue(object, key, object[key], reviver);\n    if (value !== undefined) {\n      object[key] = value;\n    } else {\n      delete object[key];\n    }\n  }\n  return object;\n}\n\n/**\n * Revive the properties of an Array\n */\nfunction reviveArray(array, reviver) {\n  for (let i = 0; i < array.length; i++) {\n    array[i] = reviveValue(array, String(i), array[i], reviver);\n  }\n  return array;\n}\n//# sourceMappingURL=revive.js.map","import { parseLosslessNumber } from './numberParsers.js';\nimport { revive } from './revive.js';\n/**\n * The LosslessJSON.parse() method parses a string as JSON, optionally transforming\n * the value produced by parsing.\n *\n * The parser is based on the parser of Tan Li Hou shared in\n * https://lihautan.com/json-parser-with-javascript/\n *\n * @param text\n * The string to parse as JSON. See the JSON object for a description of JSON syntax.\n *\n * @param [reviver]\n * If a function, prescribes how the value originally produced by parsing is\n * transformed, before being returned.\n *\n * @param [parseNumber=parseLosslessNumber]\n * Pass a custom number parser. Input is a string, and the output can be unknown\n * numeric value: number, bigint, LosslessNumber, or a custom BigNumber library.\n *\n * @returns Returns the Object corresponding to the given JSON text.\n *\n * @throws Throws a SyntaxError exception if the string to parse is not valid JSON.\n */\nexport function parse(text, reviver) {\n  let parseNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : parseLosslessNumber;\n  let i = 0;\n  const value = parseValue();\n  expectValue(value);\n  expectEndOfInput();\n  return reviver ? revive(value, reviver) : value;\n  function parseObject() {\n    if (text.charCodeAt(i) === codeOpeningBrace) {\n      i++;\n      skipWhitespace();\n      const object = {};\n      let initial = true;\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBrace) {\n        if (!initial) {\n          eatComma();\n          skipWhitespace();\n        } else {\n          initial = false;\n        }\n        const start = i;\n        const key = parseString();\n        if (key === undefined) {\n          throwObjectKeyExpected();\n          return; // To make TS happy\n        }\n        skipWhitespace();\n        eatColon();\n        const value = parseValue();\n        if (value === undefined) {\n          throwObjectValueExpected();\n          return; // To make TS happy\n        }\n\n        // TODO: test deep equal instead of strict equal\n        if (Object.prototype.hasOwnProperty.call(object, key) && !isDeepEqual(value, object[key])) {\n          // Note that we could also test `if(key in object) {...}`\n          // or `if (object[key] !== 'undefined') {...}`, but that is slower.\n          throwDuplicateKey(key, start + 1);\n        }\n        object[key] = value;\n      }\n      if (text.charCodeAt(i) !== codeClosingBrace) {\n        throwObjectKeyOrEndExpected();\n      }\n      i++;\n      return object;\n    }\n  }\n  function parseArray() {\n    if (text.charCodeAt(i) === codeOpeningBracket) {\n      i++;\n      skipWhitespace();\n      const array = [];\n      let initial = true;\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBracket) {\n        if (!initial) {\n          eatComma();\n        } else {\n          initial = false;\n        }\n        const value = parseValue();\n        expectArrayItem(value);\n        array.push(value);\n      }\n      if (text.charCodeAt(i) !== codeClosingBracket) {\n        throwArrayItemOrEndExpected();\n      }\n      i++;\n      return array;\n    }\n  }\n  function parseValue() {\n    skipWhitespace();\n    const value = parseString() ?? parseNumeric() ?? parseObject() ?? parseArray() ?? parseKeyword('true', true) ?? parseKeyword('false', false) ?? parseKeyword('null', null);\n    skipWhitespace();\n    return value;\n  }\n  function parseKeyword(name, value) {\n    if (text.slice(i, i + name.length) === name) {\n      i += name.length;\n      return value;\n    }\n  }\n  function skipWhitespace() {\n    while (isWhitespace(text.charCodeAt(i))) {\n      i++;\n    }\n  }\n  function parseString() {\n    if (text.charCodeAt(i) === codeDoubleQuote) {\n      i++;\n      let result = '';\n      while (i < text.length && text.charCodeAt(i) !== codeDoubleQuote) {\n        if (text.charCodeAt(i) === codeBackslash) {\n          const char = text[i + 1];\n          const escapeChar = escapeCharacters[char];\n          if (escapeChar !== undefined) {\n            result += escapeChar;\n            i++;\n          } else if (char === 'u') {\n            if (isHex(text.charCodeAt(i + 2)) && isHex(text.charCodeAt(i + 3)) && isHex(text.charCodeAt(i + 4)) && isHex(text.charCodeAt(i + 5))) {\n              result += String.fromCharCode(Number.parseInt(text.slice(i + 2, i + 6), 16));\n              i += 5;\n            } else {\n              throwInvalidUnicodeCharacter(i);\n            }\n          } else {\n            throwInvalidEscapeCharacter(i);\n          }\n        } else {\n          if (isValidStringCharacter(text.charCodeAt(i))) {\n            result += text[i];\n          } else {\n            throwInvalidCharacter(text[i]);\n          }\n        }\n        i++;\n      }\n      expectEndOfString();\n      i++;\n      return result;\n    }\n  }\n  function parseNumeric() {\n    const start = i;\n    if (text.charCodeAt(i) === codeMinus) {\n      i++;\n      expectDigit(start);\n    }\n    if (text.charCodeAt(i) === codeZero) {\n      i++;\n    } else if (isNonZeroDigit(text.charCodeAt(i))) {\n      i++;\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text.charCodeAt(i) === codeDot) {\n      i++;\n      expectDigit(start);\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text.charCodeAt(i) === codeLowercaseE || text.charCodeAt(i) === codeUppercaseE) {\n      i++;\n      if (text.charCodeAt(i) === codeMinus || text.charCodeAt(i) === codePlus) {\n        i++;\n      }\n      expectDigit(start);\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (i > start) {\n      return parseNumber(text.slice(start, i));\n    }\n  }\n  function eatComma() {\n    if (text.charCodeAt(i) !== codeComma) {\n      throw new SyntaxError(`Comma ',' expected after value ${gotAt()}`);\n    }\n    i++;\n  }\n  function eatColon() {\n    if (text.charCodeAt(i) !== codeColon) {\n      throw new SyntaxError(`Colon ':' expected after property name ${gotAt()}`);\n    }\n    i++;\n  }\n  function expectValue(value) {\n    if (value === undefined) {\n      throw new SyntaxError(`JSON value expected ${gotAt()}`);\n    }\n  }\n  function expectArrayItem(value) {\n    if (value === undefined) {\n      throw new SyntaxError(`Array item expected ${gotAt()}`);\n    }\n  }\n  function expectEndOfInput() {\n    if (i < text.length) {\n      throw new SyntaxError(`Expected end of input ${gotAt()}`);\n    }\n  }\n  function expectDigit(start) {\n    if (!isDigit(text.charCodeAt(i))) {\n      const numSoFar = text.slice(start, i);\n      throw new SyntaxError(`Invalid number '${numSoFar}', expecting a digit ${gotAt()}`);\n    }\n  }\n  function expectEndOfString() {\n    if (text.charCodeAt(i) !== codeDoubleQuote) {\n      throw new SyntaxError(`End of string '\"' expected ${gotAt()}`);\n    }\n  }\n  function throwObjectKeyExpected() {\n    throw new SyntaxError(`Quoted object key expected ${gotAt()}`);\n  }\n  function throwDuplicateKey(key, pos) {\n    throw new SyntaxError(`Duplicate key '${key}' encountered at position ${pos}`);\n  }\n  function throwObjectKeyOrEndExpected() {\n    throw new SyntaxError(`Quoted object key or end of object '}' expected ${gotAt()}`);\n  }\n  function throwArrayItemOrEndExpected() {\n    throw new SyntaxError(`Array item or end of array ']' expected ${gotAt()}`);\n  }\n  function throwInvalidCharacter(char) {\n    throw new SyntaxError(`Invalid character '${char}' ${pos()}`);\n  }\n  function throwInvalidEscapeCharacter(start) {\n    const chars = text.slice(start, start + 2);\n    throw new SyntaxError(`Invalid escape character '${chars}' ${pos()}`);\n  }\n  function throwObjectValueExpected() {\n    throw new SyntaxError(`Object value expected after ':' ${pos()}`);\n  }\n  function throwInvalidUnicodeCharacter(start) {\n    const chars = text.slice(start, start + 6);\n    throw new SyntaxError(`Invalid unicode character '${chars}' ${pos()}`);\n  }\n\n  // zero based character position\n  function pos() {\n    return `at position ${i}`;\n  }\n  function got() {\n    return i < text.length ? `but got '${text[i]}'` : 'but reached end of input';\n  }\n  function gotAt() {\n    return `${got()} ${pos()}`;\n  }\n}\nfunction isWhitespace(code) {\n  return code === codeSpace || code === codeNewline || code === codeTab || code === codeReturn;\n}\nfunction isHex(code) {\n  return code >= codeZero && code <= codeNine || code >= codeUppercaseA && code <= codeUppercaseF || code >= codeLowercaseA && code <= codeLowercaseF;\n}\nfunction isDigit(code) {\n  return code >= codeZero && code <= codeNine;\n}\nfunction isNonZeroDigit(code) {\n  return code >= codeOne && code <= codeNine;\n}\nexport function isValidStringCharacter(code) {\n  return code >= 0x20 && code <= 0x10ffff;\n}\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every((item, index) => isDeepEqual(item, b[index]));\n  }\n  if (isObject(a) && isObject(b)) {\n    const keys = [...new Set([...Object.keys(a), ...Object.keys(b)])];\n    return keys.every(key => isDeepEqual(a[key], b[key]));\n  }\n  return false;\n}\nfunction isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\n\n// map with all escape characters\nconst escapeCharacters = {\n  '\"': '\"',\n  '\\\\': '\\\\',\n  '/': '/',\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t'\n  // note that \\u is handled separately in parseString()\n};\nconst codeBackslash = 0x5c; // \"\\\"\nconst codeOpeningBrace = 0x7b; // \"{\"\nconst codeClosingBrace = 0x7d; // \"}\"\nconst codeOpeningBracket = 0x5b; // \"[\"\nconst codeClosingBracket = 0x5d; // \"]\"\nconst codeSpace = 0x20; // \" \"\nconst codeNewline = 0xa; // \"\\n\"\nconst codeTab = 0x9; // \"\\t\"\nconst codeReturn = 0xd; // \"\\r\"\nconst codeDoubleQuote = 0x0022; // \"\nconst codePlus = 0x2b; // \"+\"\nconst codeMinus = 0x2d; // \"-\"\nconst codeZero = 0x30;\nconst codeOne = 0x31;\nconst codeNine = 0x39;\nconst codeComma = 0x2c; // \",\"\nconst codeDot = 0x2e; // \".\" (dot, period)\nconst codeColon = 0x3a; // \":\"\nexport const codeUppercaseA = 0x41; // \"A\"\nexport const codeLowercaseA = 0x61; // \"a\"\nexport const codeUppercaseE = 0x45; // \"E\"\nexport const codeLowercaseE = 0x65; // \"e\"\nexport const codeUppercaseF = 0x46; // \"F\"\nexport const codeLowercaseF = 0x66; // \"f\"\n//# sourceMappingURL=parse.js.map","import $dvphU$electrumcashdebuglogs from \"@electrum-cash/debug-logs\";\nimport {EventEmitter as $dvphU$EventEmitter} from \"eventemitter3\";\nimport {Mutex as $dvphU$Mutex} from \"async-mutex\";\nimport {ElectrumWebSocket as $dvphU$ElectrumWebSocket} from \"@electrum-cash/web-socket\";\nimport {parse as $dvphU$parse, parseNumberAndBigInt as $dvphU$parseNumberAndBigInt} from \"lossless-json\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n\n\nclass $24139611f53a54b8$export$5d955335434540c6 {\n    /**\n\t * Helper function that builds an Electrum request object.\n\t *\n\t * @param method     - method to call.\n\t * @param parameters - method parameters for the call.\n\t * @param requestId  - unique string or number referencing this request.\n\t *\n\t * @returns a properly formatted Electrum request string.\n\t */ static buildRequestObject(method, parameters, requestId) {\n        // Return the formatted request object.\n        // NOTE: Electrum either uses JsonRPC strictly or loosely.\n        //       If we specify protocol identifier without being 100% compliant, we risk being disconnected/blacklisted.\n        //       For this reason, we omit the protocol identifier to avoid issues.\n        return JSON.stringify({\n            method: method,\n            params: parameters,\n            id: requestId\n        });\n    }\n    /**\n\t * Constant used to verify if a provided string is a valid version number.\n\t *\n\t * @returns a regular expression that matches valid version numbers.\n\t */ static get versionRegexp() {\n        return /^\\d+(\\.\\d+)+$/;\n    }\n    /**\n\t * Constant used to separate statements/messages in a stream of data.\n\t *\n\t * @returns the delimiter used by Electrum to separate statements.\n\t */ static get statementDelimiter() {\n        return \"\\n\";\n    }\n}\n\n\nvar $e83d2e7688025acd$exports = {};\n\n$parcel$export($e83d2e7688025acd$exports, \"isVersionRejected\", () => $e83d2e7688025acd$export$e1f38ab2b4ebdde6);\n$parcel$export($e83d2e7688025acd$exports, \"isVersionNegotiated\", () => $e83d2e7688025acd$export$9598f0c76aa41d73);\nconst $e83d2e7688025acd$export$e1f38ab2b4ebdde6 = function(object) {\n    return \"error\" in object;\n};\nconst $e83d2e7688025acd$export$9598f0c76aa41d73 = function(object) {\n    return \"software\" in object && \"protocol\" in object;\n};\n\n\n// Acceptable parameter types for RPC messages\nconst $abcb763a48577a1e$export$d73a2e87a509880 = function(message) {\n    return \"id\" in message && \"error\" in message;\n};\nconst $abcb763a48577a1e$export$81276773828ff315 = function(message) {\n    return \"id\" in message && \"result\" in message;\n};\nconst $abcb763a48577a1e$export$280de919a0cf6928 = function(message) {\n    return !(\"id\" in message) && \"method\" in message;\n};\nconst $abcb763a48577a1e$export$94e3360fcddccc76 = function(message) {\n    return \"id\" in message && \"method\" in message;\n};\n\n\n\nvar $db7c797e63383364$exports = {};\n\n$parcel$export($db7c797e63383364$exports, \"ConnectionStatus\", () => $db7c797e63383364$export$7516420eb880ab68);\n// Disable indent rule for this file because it is broken (https://github.com/typescript-eslint/typescript-eslint/issues/1824)\n/* eslint-disable @typescript-eslint/indent */ /**\n * Enum that denotes the connection status of an ElectrumConnection.\n * @enum {number}\n * @property {0} DISCONNECTED    The connection is disconnected.\n * @property {1} AVAILABLE       The connection is connected.\n * @property {2} DISCONNECTING   The connection is disconnecting.\n * @property {3} CONNECTING      The connection is connecting.\n * @property {4} RECONNECTING    The connection is restarting.\n */ var $db7c797e63383364$export$7516420eb880ab68;\n(function(ConnectionStatus) {\n    ConnectionStatus[ConnectionStatus[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n    ConnectionStatus[ConnectionStatus[\"CONNECTED\"] = 1] = \"CONNECTED\";\n    ConnectionStatus[ConnectionStatus[\"DISCONNECTING\"] = 2] = \"DISCONNECTING\";\n    ConnectionStatus[ConnectionStatus[\"CONNECTING\"] = 3] = \"CONNECTING\";\n    ConnectionStatus[ConnectionStatus[\"RECONNECTING\"] = 4] = \"RECONNECTING\";\n})($db7c797e63383364$export$7516420eb880ab68 || ($db7c797e63383364$export$7516420eb880ab68 = {}));\n\n\n\nclass $ff134c9a9e1f7361$export$de0f57fc22079b5e extends (0, $dvphU$EventEmitter) {\n    /**\n\t * Sets up network configuration for an Electrum client connection.\n\t *\n\t * @param application       - your application name, used to identify to the electrum host.\n\t * @param version           - protocol version to use with the host.\n\t * @param socketOrHostname  - pre-configured electrum socket or fully qualified domain name or IP number of the host\n\t * @param options           - ...\n\t *\n\t * @throws {Error} if `version` is not a valid version string.\n\t */ constructor(application, version, socketOrHostname, options){\n        // Initialize the event emitter.\n        super();\n        this.application = application;\n        this.version = version;\n        this.socketOrHostname = socketOrHostname;\n        this.options = options;\n        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED;\n        this.verifications = [];\n        this.messageBuffer = \"\";\n        // Check if the provided version is a valid version number.\n        if (!(0, $24139611f53a54b8$export$5d955335434540c6).versionRegexp.test(version)) // Throw an error since the version number was not valid.\n        throw new Error(`Provided version string (${version}) is not a valid protocol version number.`);\n        // If a hostname was provided..\n        if (typeof socketOrHostname === \"string\") // Use a web socket with default parameters.\n        this.socket = new (0, $dvphU$ElectrumWebSocket)(socketOrHostname);\n        else // Use the provided socket.\n        this.socket = socketOrHostname;\n        // Set up handlers for connection and disconnection.\n        this.socket.on(\"connected\", this.onSocketConnect.bind(this));\n        this.socket.on(\"disconnected\", this.onSocketDisconnect.bind(this));\n        // Set up handler for incoming data.\n        this.socket.on(\"data\", this.parseMessageChunk.bind(this));\n        // Handle visibility changes when run in a browser environment.\n        if (typeof document !== \"undefined\") document.addEventListener(\"visibilitychange\", this.handleVisibilityChange.bind(this));\n        // Handle network connection changes when run in a browser environment.\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"online\", this.handleNetworkChange.bind(this));\n            window.addEventListener(\"offline\", this.handleNetworkChange.bind(this));\n        }\n    }\n    // Expose hostIdentifier from the socket.\n    get hostIdentifier() {\n        return this.socket.hostIdentifier;\n    }\n    // Expose port from the socket.\n    get encrypted() {\n        return this.socket.encrypted;\n    }\n    /**\n\t * Assembles incoming data into statements and hands them off to the message parser.\n\t *\n\t * @param data - data to append to the current message buffer, as a string.\n\t *\n\t * @throws {SyntaxError} if the passed statement parts are not valid JSON.\n\t */ parseMessageChunk(data) {\n        // Update the timestamp for when we last received data.\n        this.lastReceivedTimestamp = Date.now();\n        // Emit a notification indicating that the connection has received data.\n        this.emit(\"received\");\n        // Clear and remove all verification timers.\n        this.verifications.forEach((timer)=>clearTimeout(timer));\n        this.verifications.length = 0;\n        // Add the message to the current message buffer.\n        this.messageBuffer += data;\n        // Check if the new message buffer contains the statement delimiter.\n        while(this.messageBuffer.includes((0, $24139611f53a54b8$export$5d955335434540c6).statementDelimiter)){\n            // Split message buffer into statements.\n            const statementParts = this.messageBuffer.split((0, $24139611f53a54b8$export$5d955335434540c6).statementDelimiter);\n            // For as long as we still have statements to parse..\n            while(statementParts.length > 1){\n                // Move the first statement to its own variable.\n                const currentStatementList = String(statementParts.shift());\n                // Parse the statement into an object or list of objects.\n                let statementList = (0, $dvphU$parse)(currentStatementList, null, this.options.useBigInt ? (0, $dvphU$parseNumberAndBigInt) : parseFloat);\n                // Wrap the statement in an array if it is not already a batched statement list.\n                if (!Array.isArray(statementList)) statementList = [\n                    statementList\n                ];\n                // For as long as there is statements in the result set..\n                while(statementList.length > 0){\n                    // Move the first statement from the batch to its own variable.\n                    const currentStatement = statementList.shift();\n                    // If the current statement is a subscription notification..\n                    if ((0, $abcb763a48577a1e$export$280de919a0cf6928)(currentStatement)) {\n                        // Emit the notification for handling higher up in the stack.\n                        this.emit(\"response\", currentStatement);\n                        continue;\n                    }\n                    // If the current statement is a version negotiation response..\n                    if (currentStatement.id === \"versionNegotiation\") {\n                        if ((0, $abcb763a48577a1e$export$d73a2e87a509880)(currentStatement)) // Then emit a failed version negotiation response signal.\n                        this.emit(\"version\", {\n                            error: currentStatement.error\n                        });\n                        else {\n                            // Extract the software and protocol version reported.\n                            const [software, protocol] = currentStatement.result;\n                            // Emit a successful version negotiation response signal.\n                            this.emit(\"version\", {\n                                software: software,\n                                protocol: protocol\n                            });\n                        }\n                        continue;\n                    }\n                    // If the current statement is a keep-alive response..\n                    if (currentStatement.id === \"keepAlive\") continue;\n                    // Emit the statements for handling higher up in the stack.\n                    this.emit(\"response\", currentStatement);\n                }\n            }\n            // Store the remaining statement as the current message buffer.\n            this.messageBuffer = statementParts.shift() || \"\";\n        }\n    }\n    /**\n\t * Sends a keep-alive message to the host.\n\t *\n\t * @returns true if the ping message was fully flushed to the socket, false if\n\t * part of the message is queued in the user memory\n\t */ ping() {\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).ping(`Sending keep-alive ping to '${this.hostIdentifier}'`);\n        // Craft a keep-alive message.\n        const message = (0, $24139611f53a54b8$export$5d955335434540c6).buildRequestObject(\"server.ping\", [], \"keepAlive\");\n        // Send the keep-alive message.\n        const status = this.send(message);\n        // Return the ping status.\n        return status;\n    }\n    /**\n\t * Initiates the network connection negotiates a protocol version. Also emits the 'connect' signal if successful.\n\t *\n\t * @throws {Error} if the socket connection fails.\n\t * @returns a promise resolving when the connection is established\n\t */ async connect() {\n        // If we are already connected return true.\n        if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) return;\n        // Indicate that the connection is connecting\n        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTING;\n        // Emit a connect event now that the connection is being set up.\n        this.emit(\"connecting\");\n        // Define a function to wrap connection as a promise.\n        const connectionResolver = (resolve, reject)=>{\n            const rejector = (error)=>{\n                // Set the status back to disconnected\n                this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED;\n                // Emit a connect event indicating that we failed to connect.\n                this.emit(\"disconnected\");\n                // Reject with the error as reason\n                reject(error);\n            };\n            // Replace previous error handlers to reject the promise on failure.\n            this.socket.removeAllListeners(\"error\");\n            this.socket.once(\"error\", rejector);\n            // Define a function to wrap version negotiation as a callback.\n            const versionNegotiator = ()=>{\n                // Write a log message to show that we have started version negotiation.\n                (0, $dvphU$electrumcashdebuglogs).network(`Requesting protocol version ${this.version} with '${this.hostIdentifier}'.`);\n                // remove the one-time error handler since no error was detected.\n                this.socket.removeListener(\"error\", rejector);\n                // Build a version negotiation message.\n                const versionMessage = (0, $24139611f53a54b8$export$5d955335434540c6).buildRequestObject(\"server.version\", [\n                    this.application,\n                    this.version\n                ], \"versionNegotiation\");\n                // Define a function to wrap version validation as a function.\n                const versionValidator = (version)=>{\n                    // Check if version negotiation failed.\n                    if ((0, $e83d2e7688025acd$export$e1f38ab2b4ebdde6)(version)) {\n                        // Disconnect from the host.\n                        this.disconnect(true);\n                        // Declare an error message.\n                        const errorMessage = \"unsupported protocol version.\";\n                        // Log the error.\n                        (0, $dvphU$electrumcashdebuglogs).errors(`Failed to connect with ${this.hostIdentifier} due to ${errorMessage}`);\n                        // Reject the connection with false since version negotiation failed.\n                        reject(errorMessage);\n                    } else if (version.protocol !== this.version && `${version.protocol}.0` !== this.version && `${version.protocol}.0.0` !== this.version) {\n                        // Disconnect from the host.\n                        this.disconnect(true);\n                        // Declare an error message.\n                        const errorMessage = `incompatible protocol version negotiated (${version.protocol} !== ${this.version}).`;\n                        // Log the error.\n                        (0, $dvphU$electrumcashdebuglogs).errors(`Failed to connect with ${this.hostIdentifier} due to ${errorMessage}`);\n                        // Reject the connection with false since version negotiation failed.\n                        reject(errorMessage);\n                    } else {\n                        // Write a log message.\n                        (0, $dvphU$electrumcashdebuglogs).network(`Negotiated protocol version ${version.protocol} with '${this.hostIdentifier}', powered by ${version.software}.`);\n                        // Set connection status to connected\n                        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED;\n                        // Emit a connect event now that the connection is usable.\n                        this.emit(\"connected\");\n                        // Resolve the connection promise since we successfully connected and negotiated protocol version.\n                        resolve();\n                    }\n                };\n                // Listen for version negotiation once.\n                this.once(\"version\", versionValidator);\n                // Send the version negotiation message.\n                this.send(versionMessage);\n            };\n            // Prepare the version negotiation.\n            this.socket.once(\"connected\", versionNegotiator);\n            // Set up handler for network errors.\n            this.socket.on(\"error\", this.onSocketError.bind(this));\n            // Connect to the server.\n            this.socket.connect();\n        };\n        // Wait until connection is established and version negotiation succeeds.\n        await new Promise(connectionResolver);\n    }\n    /**\n\t * Restores the network connection.\n\t */ async reconnect() {\n        // If a reconnect timer is set, remove it\n        await this.clearReconnectTimer();\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).network(`Trying to reconnect to '${this.hostIdentifier}'..`);\n        // Set the status to reconnecting for more accurate log messages.\n        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).RECONNECTING;\n        // Emit a connect event now that the connection is usable.\n        this.emit(\"reconnecting\");\n        // Disconnect the underlying socket.\n        this.socket.disconnect();\n        try {\n            // Try to connect again.\n            await this.connect();\n        } catch (error) {\n        // Do nothing as the error should be handled via the disconnect and error signals.\n        }\n    }\n    /**\n\t * Removes the current reconnect timer.\n\t */ clearReconnectTimer() {\n        // If a reconnect timer is set, remove it\n        if (this.reconnectTimer) clearTimeout(this.reconnectTimer);\n        // Reset the timer reference.\n        this.reconnectTimer = undefined;\n    }\n    /**\n\t * Removes the current keep-alive timer.\n\t */ clearKeepAliveTimer() {\n        // If a keep-alive timer is set, remove it\n        if (this.keepAliveTimer) clearTimeout(this.keepAliveTimer);\n        // Reset the timer reference.\n        this.keepAliveTimer = undefined;\n    }\n    /**\n\t * Initializes the keep alive timer loop.\n\t */ setupKeepAliveTimer() {\n        // If the keep-alive timer loop is not currently set up..\n        if (!this.keepAliveTimer) // Set a new keep-alive timer.\n        this.keepAliveTimer = setTimeout(this.ping.bind(this), this.options.sendKeepAliveIntervalInMilliSeconds);\n    }\n    /**\n\t * Tears down the current connection and removes all event listeners on disconnect.\n\t *\n\t * @param force       - disconnect even if the connection has not been fully established yet.\n\t * @param intentional - update connection state if disconnect is intentional.\n\t *\n\t * @returns true if successfully disconnected, or false if there was no connection.\n\t */ async disconnect(force = false, intentional = true) {\n        // Return early when there is nothing to disconnect from\n        if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED && !force) // Return false to indicate that there was nothing to disconnect from.\n        return false;\n        // Update connection state if the disconnection is intentional.\n        // NOTE: The state is meant to represent what the client is requesting, but\n        //       is used internally to handle visibility changes in browsers to ensure functional reconnection.\n        if (intentional) // Set connection status to null to indicate tear-down is currently happening.\n        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTING;\n        // Emit a connect event to indicate that we are disconnecting.\n        this.emit(\"disconnecting\");\n        // If a keep-alive timer is set, remove it.\n        await this.clearKeepAliveTimer();\n        // If a reconnect timer is set, remove it\n        await this.clearReconnectTimer();\n        const disconnectResolver = (resolve)=>{\n            // Resolve to true after the connection emits a disconnect\n            this.once(\"disconnected\", ()=>resolve(true));\n            // Close the connection on the socket level.\n            this.socket.disconnect();\n        };\n        // Return true to indicate that we disconnected.\n        return new Promise(disconnectResolver);\n    }\n    /**\n\t * Updates the connection state based on browser reported connectivity.\n\t *\n\t * Most modern browsers are able to provide information on the connection state\n\t * which allows for significantly faster response times to network changes compared\n\t * to waiting for network requests to fail.\n\t *\n\t * When available, we make use of this to fail early to provide a better user experience.\n\t */ async handleNetworkChange() {\n        // Do nothing if we do not have the navigator available.\n        if (typeof window.navigator === \"undefined\") return;\n        // Attempt to reconnect to the network now that we may be online again.\n        if (window.navigator.onLine === true) this.reconnect();\n        // Disconnected from the network so that cleanup can happen while we're offline.\n        if (window.navigator.onLine !== true) {\n            const forceDisconnect = true;\n            const isUnintended = false;\n            this.disconnect(forceDisconnect, isUnintended);\n        }\n    }\n    /**\n\t * Updates connection state based on application visibility.\n\t *\n\t * Some browsers will disconnect network connections when the browser is out of focus,\n\t * which would normally cause our reconnect-on-timeout routines to trigger, but that\n\t * results in a poor user experience since the events are not handled consistently\n\t * and sometimes it can take some time after restoring focus to the browser.\n\t *\n\t * By manually disconnecting when this happens we prevent the default reconnection routines\n\t * and make the behavior consistent across browsers.\n\t */ async handleVisibilityChange() {\n        // Disconnect when application is removed from focus.\n        if (document.visibilityState === \"hidden\") {\n            const forceDisconnect = true;\n            const isUnintended = false;\n            this.disconnect(forceDisconnect, isUnintended);\n        }\n        // Reconnect when application is returned to focus.\n        if (document.visibilityState === \"visible\") this.reconnect();\n    }\n    /**\n\t * Sends an arbitrary message to the server.\n\t *\n\t * @param message - json encoded request object to send to the server, as a string.\n\t *\n\t * @returns true if the message was fully flushed to the socket, false if part of the message\n\t * is queued in the user memory\n\t */ send(message) {\n        // Remove the current keep-alive timer if it exists.\n        this.clearKeepAliveTimer();\n        // Get the current timestamp in milliseconds.\n        const currentTime = Date.now();\n        // Follow up and verify that the message got sent..\n        const verificationTimer = setTimeout(this.verifySend.bind(this, currentTime), this.socket.timeout);\n        // Store the verification timer locally so that it can be cleared when data has been received.\n        this.verifications.push(verificationTimer);\n        // Set a new keep-alive timer.\n        this.setupKeepAliveTimer();\n        // Write the message to the network socket.\n        return this.socket.write(message + (0, $24139611f53a54b8$export$5d955335434540c6).statementDelimiter);\n    }\n    // --- Event managers. --- //\n    /**\n\t * Marks the connection as timed out and schedules reconnection if we have not\n\t * received data within the expected time frame.\n\t */ verifySend(sentTimestamp) {\n        // If we haven't received any data since we last sent data out..\n        if (Number(this.lastReceivedTimestamp) < sentTimestamp) {\n            // If this connection is already disconnected, we do not change anything\n            if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED || this.status === (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTING) // debug.warning(`Tried to verify already disconnected connection to '${this.hostIdentifier}'`);\n            return;\n            // Remove the current keep-alive timer if it exists.\n            this.clearKeepAliveTimer();\n            // Write a notification to the logs.\n            (0, $dvphU$electrumcashdebuglogs).network(`Connection to '${this.hostIdentifier}' timed out.`);\n            // Close the connection to avoid re-use.\n            // NOTE: This initiates reconnection routines if the connection has not\n            //       been marked as intentionally disconnected.\n            this.socket.disconnect();\n        }\n    }\n    /**\n\t * Updates the connection status when a connection is confirmed.\n\t */ onSocketConnect() {\n        // If a reconnect timer is set, remove it.\n        this.clearReconnectTimer();\n        // Set up the initial timestamp for when we last received data from the server.\n        this.lastReceivedTimestamp = Date.now();\n        // Set up the initial keep-alive timer.\n        this.setupKeepAliveTimer();\n        // Clear all temporary error listeners.\n        this.socket.removeAllListeners(\"error\");\n        // Set up handler for network errors.\n        this.socket.on(\"error\", this.onSocketError.bind(this));\n    }\n    /**\n\t * Updates the connection status when a connection is ended.\n\t */ onSocketDisconnect() {\n        // Remove the current keep-alive timer if it exists.\n        this.clearKeepAliveTimer();\n        // If this is a connection we're trying to tear down..\n        if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTING) {\n            // Mark the connection as disconnected.\n            this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED;\n            // Send a disconnect signal higher up the stack.\n            this.emit(\"disconnected\");\n            // If a reconnect timer is set, remove it.\n            this.clearReconnectTimer();\n            // Remove all event listeners\n            this.removeAllListeners();\n            // Write a log message.\n            (0, $dvphU$electrumcashdebuglogs).network(`Disconnected from '${this.hostIdentifier}'.`);\n        } else {\n            // If this is for an established connection..\n            if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) // Write a notification to the logs.\n            (0, $dvphU$electrumcashdebuglogs).errors(`Connection with '${this.hostIdentifier}' was closed, trying to reconnect in ${this.options.reconnectAfterMilliSeconds / 1000} seconds.`);\n            // Mark the connection as disconnected for now..\n            this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED;\n            // Send a disconnect signal higher up the stack.\n            this.emit(\"disconnected\");\n            // If we don't have a pending reconnection timer..\n            if (!this.reconnectTimer) // Attempt to reconnect after one keep-alive duration.\n            this.reconnectTimer = setTimeout(this.reconnect.bind(this), this.options.reconnectAfterMilliSeconds);\n        }\n    }\n    /**\n\t * Notify administrator of any unexpected errors.\n\t */ onSocketError(error) {\n        // Report a generic error if no error information is present.\n        // NOTE: When using WSS, the error event explicitly\n        //       only allows to send a \"simple\" event without data.\n        //       https://stackoverflow.com/a/18804298\n        if (typeof error === \"undefined\") // Do nothing, and instead rely on the socket disconnect event for further information.\n        return;\n        // Log the error, as there is nothing we can do to actually handle it.\n        (0, $dvphU$electrumcashdebuglogs).errors(`Network error ('${this.hostIdentifier}'): `, error);\n    }\n}\n\n\n\n// Define number of milliseconds per second for legibility.\nconst $d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND = 1000;\nconst $d801b1f9b7fc3074$export$5ba3a4134d0d751d = {\n    // By default, all numbers including integers are parsed as regular JavaScript numbers.\n    useBigInt: false,\n    // Send a ping message every seconds, to detect network problem as early as possible.\n    sendKeepAliveIntervalInMilliSeconds: 1 * $d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND,\n    // Try to reconnect 5 seconds after unintentional disconnects.\n    reconnectAfterMilliSeconds: 5 * $d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND,\n    // Try to detect stale connections 5 seconds after every send.\n    verifyConnectionTimeoutInMilliSeconds: 5 * $d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND\n};\n\n\n\n\n\n\n/**\n * High-level Electrum client that lets applications send requests and subscribe to notification events from a server.\n */ class $558b46d3f899ced5$var$ElectrumClient extends (0, $dvphU$EventEmitter) {\n    /**\n\t * Number corresponding to the underlying connection status.\n\t */ get status() {\n        return this.connection.status;\n    }\n    /**\n\t * Initializes an Electrum client.\n\t *\n\t * @param application       - your application name, used to identify to the electrum host.\n\t * @param version           - protocol version to use with the host.\n\t * @param socketOrHostname  - pre-configured electrum socket or fully qualified domain name or IP number of the host\n\t * @param options           - ...\n\t *\n\t * @throws {Error} if `version` is not a valid version string.\n\t */ constructor(application, version, socketOrHostname, options = {}){\n        // Initialize the event emitter.\n        super();\n        this.application = application;\n        this.version = version;\n        this.socketOrHostname = socketOrHostname;\n        this.options = options;\n        this.subscriptionMethods = {};\n        this.requestId = 0;\n        this.requestResolvers = {};\n        this.connectionLock = new (0, $dvphU$Mutex)();\n        // Update default options with the provided values.\n        const networkOptions = {\n            ...(0, $d801b1f9b7fc3074$export$5ba3a4134d0d751d),\n            ...options\n        };\n        // Set up a connection to an electrum server.\n        this.connection = new (0, $ff134c9a9e1f7361$export$de0f57fc22079b5e)(application, version, socketOrHostname, networkOptions);\n    }\n    // Expose hostIdentifier from the connection.\n    get hostIdentifier() {\n        return this.connection.hostIdentifier;\n    }\n    // Expose port from the connection.\n    get encrypted() {\n        return this.connection.encrypted;\n    }\n    /**\n\t * Connects to the remote server.\n\t *\n\t * @throws {Error} if the socket connection fails.\n\t * @returns a promise resolving when the connection is established.\n\t */ async connect() {\n        // Create a lock so that multiple connects/disconnects cannot race each other.\n        const unlock = await this.connectionLock.acquire();\n        try {\n            // If we are already connected, do not attempt to connect again.\n            if (this.connection.status === (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) return;\n            // Listen for parsed statements.\n            this.connection.on(\"response\", this.response.bind(this));\n            // Hook up handles for the connected and disconnected events.\n            this.connection.on(\"connected\", this.resubscribeOnConnect.bind(this));\n            this.connection.on(\"disconnected\", this.onConnectionDisconnect.bind(this));\n            // Relay connecting and reconnecting events.\n            this.connection.on(\"connecting\", this.handleConnectionStatusChanges.bind(this, \"connecting\"));\n            this.connection.on(\"disconnecting\", this.handleConnectionStatusChanges.bind(this, \"disconnecting\"));\n            this.connection.on(\"reconnecting\", this.handleConnectionStatusChanges.bind(this, \"reconnecting\"));\n            // Hook up client metadata gathering functions.\n            this.connection.on(\"version\", this.storeSoftwareVersion.bind(this));\n            this.connection.on(\"received\", this.updateLastReceivedTimestamp.bind(this));\n            // Relay error events.\n            this.connection.on(\"error\", this.emit.bind(this, \"error\"));\n            // Connect with the server.\n            await this.connection.connect();\n        } finally{\n            unlock();\n        }\n    }\n    /**\n\t * Disconnects from the remote server and removes all event listeners/subscriptions and open requests.\n\t *\n\t * @param force               - disconnect even if the connection has not been fully established yet.\n\t * @param retainSubscriptions - retain subscription data so they will be restored on reconnection.\n\t *\n\t * @returns true if successfully disconnected, or false if there was no connection.\n\t */ async disconnect(force = false, retainSubscriptions = false) {\n        if (!retainSubscriptions) {\n            // Cancel all event listeners.\n            this.removeAllListeners();\n            // Remove all subscription data\n            this.subscriptionMethods = {};\n        }\n        // Disconnect from the remote server.\n        return this.connection.disconnect(force);\n    }\n    /**\n\t * Calls a method on the remote server with the supplied parameters.\n\t *\n\t * @param method     - name of the method to call.\n\t * @param parameters - one or more parameters for the method.\n\t *\n\t * @throws {Error} if the client is disconnected.\n\t * @returns a promise that resolves with the result of the method or an Error.\n\t */ async request(method, ...parameters) {\n        // If we are not connected to a server..\n        if (this.connection.status !== (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) // Reject the request with a disconnected error message.\n        throw new Error(`Unable to send request to a disconnected server '${this.hostIdentifier}'.`);\n        // Increase the request ID by one.\n        this.requestId += 1;\n        // Store a copy of the request id.\n        const id = this.requestId;\n        // Format the arguments as an electrum request object.\n        const message = (0, $24139611f53a54b8$export$5d955335434540c6).buildRequestObject(method, parameters, id);\n        // Define a function to wrap the request in a promise.\n        const requestResolver = (resolve)=>{\n            // Add a request resolver for this promise to the list of requests.\n            this.requestResolvers[id] = (error, data)=>{\n                // If the resolution failed..\n                if (error) // Resolve the promise with the error for the application to handle.\n                resolve(error);\n                else // Resolve the promise with the request results.\n                resolve(data);\n            };\n            // Send the request message to the remote server.\n            this.connection.send(message);\n        };\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).network(`Sending request '${method}' to '${this.hostIdentifier}'`);\n        // return a promise to deliver results later.\n        return new Promise(requestResolver);\n    }\n    /**\n\t * Subscribes to the method and payload at the server.\n\t *\n\t * @remarks the response for the subscription request is issued as a notification event.\n\t *\n\t * @param method     - one of the subscribable methods the server supports.\n\t * @param parameters - one or more parameters for the method.\n\t *\n\t * @throws {Error} if the client is disconnected.\n\t * @returns a promise resolving when the subscription is established.\n\t */ async subscribe(method, ...parameters) {\n        // Initialize an empty list of subscription payloads, if needed.\n        if (!this.subscriptionMethods[method]) this.subscriptionMethods[method] = new Set();\n        // Store the subscription parameters to track what data we have subscribed to.\n        this.subscriptionMethods[method].add(JSON.stringify(parameters));\n        // Send initial subscription request.\n        const requestData = await this.request(method, ...parameters);\n        // If the request failed, throw it as an error.\n        if (requestData instanceof Error) throw requestData;\n        // If the request returned more than one data point..\n        if (Array.isArray(requestData)) // .. throw an error, as this breaks our expectation for subscriptions.\n        throw new Error(\"Subscription request returned an more than one data point.\");\n        // Construct a notification structure to package the initial result as a notification.\n        const notification = {\n            jsonrpc: \"2.0\",\n            method: method,\n            params: [\n                ...parameters,\n                requestData\n            ]\n        };\n        // Manually emit an event for the initial response.\n        this.emit(\"notification\", notification);\n        // Try to update the chain height.\n        this.updateChainHeightFromHeadersNotifications(notification);\n    }\n    /**\n\t * Unsubscribes to the method at the server and removes any callback functions\n\t * when there are no more subscriptions for the method.\n\t *\n\t * @param method     - a previously subscribed to method.\n\t * @param parameters - one or more parameters for the method.\n\t *\n\t * @throws {Error} if no subscriptions exist for the combination of the provided `method` and `parameters.\n\t * @throws {Error} if the client is disconnected.\n\t * @returns a promise resolving when the subscription is removed.\n\t */ async unsubscribe(method, ...parameters) {\n        // Throw an error if the client is disconnected.\n        if (this.connection.status !== (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) throw new Error(`Unable to send unsubscribe request to a disconnected server '${this.hostIdentifier}'.`);\n        // If this method has no subscriptions..\n        if (!this.subscriptionMethods[method]) // Reject this promise with an explanation.\n        throw new Error(`Cannot unsubscribe from '${method}' since the method has no subscriptions.`);\n        // Pack up the parameters as a long string.\n        const subscriptionParameters = JSON.stringify(parameters);\n        // If the method payload could not be located..\n        if (!this.subscriptionMethods[method].has(subscriptionParameters)) // Reject this promise with an explanation.\n        throw new Error(`Cannot unsubscribe from '${method}' since it has no subscription with the given parameters.`);\n        // Remove this specific subscription payload from internal tracking.\n        this.subscriptionMethods[method].delete(subscriptionParameters);\n        // Send unsubscription request to the server\n        // NOTE: As a convenience we allow users to define the method as the subscribe or unsubscribe version.\n        await this.request(method.replace(\".subscribe\", \".unsubscribe\"), ...parameters);\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).client(`Unsubscribed from '${String(method)}' for the '${subscriptionParameters}' parameters.`);\n    }\n    /**\n\t * Restores existing subscriptions without updating status or triggering manual callbacks.\n\t *\n\t * @throws {Error} if subscription data cannot be found for all stored event names.\n\t * @throws {Error} if the client is disconnected.\n\t * @returns a promise resolving to true when the subscriptions are restored.\n\t *\n\t * @ignore\n\t */ async resubscribeOnConnect() {\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).client(`Connected to '${this.hostIdentifier}'.`);\n        // Synchronize with the underlying connection status.\n        this.handleConnectionStatusChanges(\"connected\");\n        // Initialize an empty list of resubscription promises.\n        const resubscriptionPromises = [];\n        // For each method we have a subscription for..\n        for(const method in this.subscriptionMethods){\n            // .. and for each parameter we have previously been subscribed to..\n            for (const parameterJSON of this.subscriptionMethods[method].values()){\n                // restore the parameters from JSON.\n                const parameters = JSON.parse(parameterJSON);\n                // Send a subscription request.\n                resubscriptionPromises.push(this.subscribe(method, ...parameters));\n            }\n            // Wait for all re-subscriptions to complete.\n            await Promise.all(resubscriptionPromises);\n        }\n        // Write a log message if there was any subscriptions to restore.\n        if (resubscriptionPromises.length > 0) (0, $dvphU$electrumcashdebuglogs).client(`Restored ${resubscriptionPromises.length} previous subscriptions for '${this.hostIdentifier}'`);\n    }\n    /**\n\t * Parser messages from the remote server to resolve request promises and emit subscription events.\n\t *\n\t * @param message - the response message\n\t *\n\t * @throws {Error} if the message ID does not match an existing request.\n\t * @ignore\n\t */ response(message) {\n        // If the received message is a notification, we forward it to all event listeners\n        if ((0, $abcb763a48577a1e$export$280de919a0cf6928)(message)) {\n            // Write a log message.\n            (0, $dvphU$electrumcashdebuglogs).client(`Received notification for '${message.method}' from '${this.hostIdentifier}'`);\n            // Forward the message content to all event listeners.\n            this.emit(\"notification\", message);\n            // Try to update the chain height.\n            this.updateChainHeightFromHeadersNotifications(message);\n            // Return since it does not have an associated request resolver\n            return;\n        }\n        // If the response ID is null we cannot use it to index our request resolvers\n        if (message.id === null) // Throw an internal error, this should not happen.\n        throw new Error(\"Internal error: Received an RPC response with ID null.\");\n        // Look up which request promise we should resolve this.\n        const requestResolver = this.requestResolvers[message.id];\n        // If we do not have a request resolver for this response message..\n        if (!requestResolver) {\n            // Log that a message was ignored since the request has already been rejected.\n            (0, $dvphU$electrumcashdebuglogs).warning(`Ignoring response #${message.id} as the request has already been rejected.`);\n            // Return as this has now been fully handled.\n            return;\n        }\n        // Remove the promise from the request list.\n        delete this.requestResolvers[message.id];\n        // If the message contains an error..\n        if ((0, $abcb763a48577a1e$export$d73a2e87a509880)(message)) // Forward the message error to the request resolver and omit the `result` parameter.\n        requestResolver(new Error(message.error.message));\n        else {\n            // Forward the message content to the request resolver and omit the `error` parameter\n            // (by setting it to undefined).\n            requestResolver(undefined, message.result);\n            // Attempt to extract genesis hash from feature requests.\n            this.storeGenesisHashFromFeaturesResponse(message);\n        }\n    }\n    /**\n\t * Callback function that is called when connection to the Electrum server is lost.\n\t * Aborts all active requests with an error message indicating that connection was lost.\n\t *\n\t * @ignore\n\t */ async onConnectionDisconnect() {\n        // Loop over active requests\n        for(const resolverId in this.requestResolvers){\n            // Extract request resolver for readability\n            const requestResolver = this.requestResolvers[resolverId];\n            // Resolve the active request with an error indicating that the connection was lost.\n            requestResolver(new Error(\"Connection lost\"));\n            // Remove the promise from the request list.\n            delete this.requestResolvers[resolverId];\n        }\n        // Synchronize with the underlying connection status.\n        this.handleConnectionStatusChanges(\"disconnected\");\n    }\n    /**\n\t * Stores the server provider software version field on successful version negotiation.\n\t *\n\t * @ignore\n\t */ async storeSoftwareVersion(versionStatement) {\n        // TODO: handle failed version negotiation better.\n        if (versionStatement.error) // Do nothing.\n        return;\n        // Store the software version.\n        this.software = versionStatement.software;\n    }\n    /**\n\t * Updates the last received timestamp.\n\t *\n\t * @ignore\n\t */ async updateLastReceivedTimestamp() {\n        // Update the timestamp for when we last received data.\n        this.lastReceivedTimestamp = Date.now();\n    }\n    /**\n\t * Checks if the provided message is a response to a headers subscription,\n\t * and if so updates the locally stored chain height value for this client.\n\t *\n\t * @ignore\n\t */ async updateChainHeightFromHeadersNotifications(message) {\n        // If the message is a notification for a new chain height..\n        if (message.method === \"blockchain.headers.subscribe\") // ..also store the updated chain height locally.\n        this.chainHeight = message.params[0].height;\n    }\n    /**\n\t * Checks if the provided message is a response to a server.features request,\n\t * and if so stores the genesis hash for this client locally.\n\t *\n\t * @ignore\n\t */ async storeGenesisHashFromFeaturesResponse(message) {\n        try {\n            // If the message is a response to a features request..\n            if (typeof message.result.genesis_hash !== \"undefined\") // ..store the genesis hash locally.\n            this.genesisHash = message.result.genesis_hash;\n        } catch (error) {\n        // Do nothing.\n        }\n    }\n    /**\n\t * Helper function to synchronize state and events with the underlying connection.\n\t */ async handleConnectionStatusChanges(eventName) {\n        // Re-emit the event.\n        this.emit(eventName);\n    }\n}\nvar // Export the client.\n$558b46d3f899ced5$export$2e2bcd8739ae039 = $558b46d3f899ced5$var$ElectrumClient;\n\n\n\n\n\n\nexport {$558b46d3f899ced5$export$2e2bcd8739ae039 as ElectrumClient, $e83d2e7688025acd$export$e1f38ab2b4ebdde6 as isVersionRejected, $e83d2e7688025acd$export$9598f0c76aa41d73 as isVersionNegotiated, $db7c797e63383364$export$7516420eb880ab68 as ConnectionStatus};\n//# sourceMappingURL=index.mjs.map\n","export var SignatureAlgorithm;\n(function (SignatureAlgorithm) {\n    SignatureAlgorithm[SignatureAlgorithm[\"ECDSA\"] = 0] = \"ECDSA\";\n    SignatureAlgorithm[SignatureAlgorithm[\"SCHNORR\"] = 1] = \"SCHNORR\";\n})(SignatureAlgorithm || (SignatureAlgorithm = {}));\nexport var HashType;\n(function (HashType) {\n    HashType[HashType[\"SIGHASH_ALL\"] = 1] = \"SIGHASH_ALL\";\n    HashType[HashType[\"SIGHASH_NONE\"] = 2] = \"SIGHASH_NONE\";\n    HashType[HashType[\"SIGHASH_SINGLE\"] = 3] = \"SIGHASH_SINGLE\";\n    HashType[HashType[\"SIGHASH_UTXOS\"] = 32] = \"SIGHASH_UTXOS\";\n    HashType[HashType[\"SIGHASH_ANYONECANPAY\"] = 128] = \"SIGHASH_ANYONECANPAY\";\n})(HashType || (HashType = {}));\n//# sourceMappingURL=types.js.map","import { createCompilerBCH, compilerOperationsBCH, importWalletTemplate, walletTemplateToCompilerConfiguration, } from '@bitauth/libauth';\nexport function getLibauthCompiler(template_json) {\n    const template = importWalletTemplate(template_json);\n    if (typeof template == 'string') {\n        /* c8 ignore next */\n        throw new Error(`Failed import libauth template, error: ${template}`);\n    }\n    ;\n    return createCompilerBCH({\n        ...walletTemplateToCompilerConfiguration(template),\n        operations: {\n            ...compilerOperationsBCH,\n        }\n    });\n}\n//# sourceMappingURL=compiler.js.map","import templateV3 from './drip-mine.v3.template.json' with { type: \"json\" };\nimport { binToHex, hexToBin, generateTransaction, lockingBytecodeToCashAddress, sha256, swapEndianness, } from '@bitauth/libauth';\nimport { getLibauthCompiler } from '@unspent/tau';\nconst DUST_LIMIT = 576;\nconst MIN_PAYOUT = 164;\nconst DECAY_NUMERATOR = 4392;\nconst DECAY_DENOMINATOR = 1333036486;\nexport default class Drip {\n    static template = templateV3;\n    static compiler = getLibauthCompiler(this.template);\n    static getLockingBytecode() {\n        const lockingBytecodeResult = this.compiler.generateBytecode({\n            data: {},\n            scriptId: 'drip_mine_covenant'\n        });\n        if (!lockingBytecodeResult.success) {\n            /* c8 ignore next */\n            throw new Error('Failed to generate bytecode, script: , ' + JSON.stringify(lockingBytecodeResult, null, '  '));\n        }\n        return lockingBytecodeResult.bytecode;\n    }\n    static getScriptHash(reversed = true) {\n        let hashHex = binToHex(sha256.hash(this.getLockingBytecode()));\n        if (reversed)\n            return swapEndianness(hashHex);\n        return hashHex;\n    }\n    static getAddress(prefix = \"bitcoincash\") {\n        const bytecode = this.getLockingBytecode();\n        const result = lockingBytecodeToCashAddress({ prefix: prefix, bytecode: bytecode, tokenSupport: false });\n        if (typeof result === 'string')\n            throw (result);\n        return result.address;\n    }\n    static getOutput(utxo) {\n        let fee = (utxo.value * DECAY_NUMERATOR) / DECAY_DENOMINATOR;\n        fee = fee < MIN_PAYOUT ? MIN_PAYOUT : fee;\n        let outputValue = utxo.value - fee;\n        if (utxo.value > BigInt(DUST_LIMIT + MIN_PAYOUT)) {\n            return {\n                lockingBytecode: {\n                    compiler: this.compiler,\n                    script: 'drip_mine_covenant'\n                },\n                valueSatoshis: BigInt(outputValue),\n            };\n        }\n        else {\n            return {\n                lockingBytecode: hexToBin(\"6a\"),\n                valueSatoshis: BigInt(0),\n            };\n        }\n    }\n    static getInput(utxo) {\n        let unlockingScript = utxo.value > BigInt(DUST_LIMIT + MIN_PAYOUT) ? 'unlock_return' : 'unlock_burn';\n        return {\n            outpointIndex: utxo.tx_pos,\n            outpointTransactionHash: hexToBin(utxo.tx_hash),\n            sequenceNumber: 1,\n            unlockingBytecode: {\n                compiler: this.compiler,\n                script: unlockingScript,\n                valueSatoshis: BigInt(utxo.value),\n            },\n        };\n    }\n    static processOutpoint(utxo) {\n        const inputs = [];\n        const outputs = [];\n        outputs.push(this.getOutput(utxo));\n        inputs.push(this.getInput(utxo));\n        const result = generateTransaction({\n            locktime: 0,\n            version: 2,\n            inputs, outputs,\n        });\n        if (!result.success) {\n            /* c8 ignore next */\n            throw new Error('generate transaction failed!, errors: ' + JSON.stringify(result.errors, null, '  '));\n        }\n        return result.transaction;\n    }\n}\n//# sourceMappingURL=index.js.map","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20height='24px'%20viewBox='0%20-960%20960%20960'%20width='24px'%20fill='%23e3e3e3'%3e%3cpath%20d='M260-160q-91%200-155.5-63T40-377q0-78%2047-139t123-78q25-92%20100-149t170-57q117%200%20198.5%2081.5T760-520q69%208%20114.5%2059.5T920-340q0%2075-52.5%20127.5T740-160H260Zm0-80h480q42%200%2071-29t29-71q0-42-29-71t-71-29h-60v-80q0-83-58.5-141.5T480-720q-83%200-141.5%2058.5T280-520h-20q-58%200-99%2041t-41%2099q0%2058%2041%2099t99%2041Zm220-240Z'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20height='24px'%20viewBox='0%20-960%20960%20960'%20width='24px'%20fill='%23e3e3e3'%3e%3cpath%20d='M792-56%20686-160H260q-92%200-156-64T40-380q0-77%2047.5-137T210-594q3-8%206-15.5t6-16.5L56-792l56-56%20736%20736-56%2056ZM260-240h346L284-562q-2%2011-3%2021t-1%2021h-20q-58%200-99%2041t-41%2099q0%2058%2041%2099t99%2041Zm185-161Zm419%20191-58-56q17-14%2025.5-32.5T840-340q0-42-29-71t-71-29h-60v-80q0-83-58.5-141.5T480-720q-27%200-52%206.5T380-693l-58-58q35-24%2074.5-36.5T480-800q117%200%20198.5%2081.5T760-520q69%208%20114.5%2059.5T920-340q0%2039-15%2072.5T864-210ZM593-479Z'/%3e%3c/svg%3e\"","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","export default \"data:image/svg+xml,%3csvg%20width='24'%20height='24'%20version='1.1'%20viewBox='0%200%2024%2024'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='m3.67%200c-2.02%200-3.67%201.65-3.67%203.67v16.6c0%202.02%201.65%203.67%203.67%203.67h16.6c2.02%200%203.67-1.65%203.67-3.67v-16.6c0-2.02-1.65-3.67-3.67-3.67h-16.6zm6.34%205.02v4.9c0.674-0.888%201.53-1.35%202.54-1.35%201.13%200%201.96%200.398%202.51%201.22%200.551%200.796%200.797%201.93%200.797%203.4%200.0306%201.35-0.276%202.45-0.889%203.31s-1.47%201.26-2.6%201.26c-1.01%200-1.84-0.369-2.42-1.1l-0.0918%200.92h-1.26v-12.4l1.41-0.154zm-3.7%204.16%200.766%201.04-3.46%202.11%203.55%202.2-0.766%201.01-4.01-2.51v-1.47l3.92-2.39zm11.4%200%203.89%202.42v1.44l-4.01%202.51-0.736-1.01%203.55-2.2-3.46-2.11%200.766-1.04zm-5.45%200.49c-0.459%200-0.857%200.123-1.22%200.398-0.367%200.276-0.703%200.612-0.978%201.01v4.38c0.245%200.367%200.519%200.642%200.887%200.826%200.337%200.214%200.735%200.307%201.13%200.307%200.735%200%201.32-0.307%201.72-0.889%200.398-0.582%200.582-1.44%200.582-2.6%200-1.13-0.185-2.02-0.522-2.6-0.367-0.52-0.888-0.826-1.59-0.826z'%20fill='%2324282A'/%3e%3c/svg%3e\"","<script lang=\"ts\">\n\timport { deflate } from 'pako';\n\timport { utf8ToBin, binToBase64 } from '@bitauth/libauth';\n\timport bitauthIcon from '$lib/images/bitauth.svg';\n\n\texport let template;\n\n\tconst ideURI = 'https://ide.bitauth.com';\n\n\tconst base64toBase64Url = (base64: string) => base64.replace(/\\+/g, '-').replace(/\\//g, '_');\n\tconst stringToUriPayload = (content: string) =>\n\t\tbase64toBase64Url(binToBase64(deflate(utf8ToBin(content))));\n\tconsole.log(template);\n\tconst payload = stringToUriPayload(JSON.stringify(template));\n</script>\n\n<a href=\"{ideURI}/import-template/{payload}\" target=\"_blank\">\n\t<img src={bitauthIcon} alt=\"Bitauth Icon\" />\n</a>\n\n<style>\n\ta img {\n\t\tfilter: brightness(10);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { encodeTransactionBCH, binToHex } from '@bitauth/libauth';\n\timport Readme from './README.md'\n\n\timport { blo } from 'blo';\n\t// Import library features.\n\timport { ElectrumClient, ConnectionStatus } from '@electrum-cash/network';\n\timport { Drip } from '@unspent/drip';\n\timport { onMount, onDestroy } from 'svelte';\n\n\timport CONNECTED from '$lib/images/connected.svg';\n\timport DISCONNECTED from '$lib/images/disconnected.svg';\n\timport BitauthLink from '$lib/BitauthLink.svelte';\n\n\tlet unspent: any[] = [];\n\tlet electrumClient: any;\n\tlet scripthash = Drip.getScriptHash();\n\tlet contractState = '';\n\tlet connectionStatus = '';\n\n\t\n\tconst handleNotifications = function (data: any) {\n\t\tif (data.method === 'blockchain.scripthash.subscribe') {\n\t\t\tif (data.params[1] !== contractState) {\n\t\t\t\tcontractState = data.params[1];\n\t\t\t\tconnectionStatus = ConnectionStatus[electrumClient.status];\n\t\t\t\tupdateUnspent();\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(data);\n\t\t}\n\t};\n\n\tconst broadcast = async function (raw_tx: string) {\n\t\tlet response = await electrumClient.request('blockchain.transaction.broadcast', raw_tx);\n\t\tif (response instanceof Error) {\n\t\t\tconnectionStatus = ConnectionStatus[electrumClient.status];\n\t\t\tthrow response;\n\t\t}\n\t\tresponse as any[];\n\t};\n\n\tconst processOutput = async function (utxo: any, index: number) {\n\t\tunspent.splice(index, 1);\n\t\tlet txn = Drip.processOutpoint(utxo);\n\t\tlet raw_tx = binToHex(encodeTransactionBCH(txn));\n\t\tconsole.log(raw_tx);\n\t\tawait broadcast(raw_tx);\n\t};\n\n\tconst updateUnspent = async function () {\n\t\tlet response = await electrumClient.request('blockchain.scripthash.listunspent', scripthash);\n\t\tif (response instanceof Error) throw response;\n\t\tunspent = response as any[];\n\t};\n\n\tonMount(async () => {\n\t\t// Initialize an electrum client.\n\t\telectrumClient = new ElectrumClient('unspent/drip', '1.4.1', 'bch.imaginary.cash');\n\t\t// Wait for the client to connect.\n\t\tawait electrumClient.connect();\n\t\t// Set up a callback function to handle new blocks.\n\n\t\t// Listen for notifications.\n\t\telectrumClient.on('notification', handleNotifications);\n\n\t\tconsole.log(scripthash);\n\t\t// Set up a subscription for new block headers.\n\t\t//await electrumClient.subscribe('blockchain.scripthash.transactions.subscribe',[scripthash]);\n\t\tawait electrumClient.subscribe('blockchain.scripthash.subscribe', scripthash);\n\t\tupdateUnspent();\n\t});\n\n\tonDestroy(async () => {\n\t\tconst electrumClient = new ElectrumClient('unspent/drip', '1.4.1', 'bch.imaginary.cash');\n\t\tawait electrumClient.disconnect();\n\t});\n</script>\n\n<svelte:head>\n\t<title>Drip Mine</title>\n\t<meta\n\t\tname=\"description\"\n\t\tcontent=\"Release miner extractable value (MEV) on Bitcoin Cash (BCH) from your browser!\"\n\t/>\n</svelte:head>\n\n<section>\n\t<div class=\"status\">\n\t\t{#if connectionStatus == 'CONNECTED'}\n\t\t\t<img src={CONNECTED} alt={connectionStatus} />\n\t\t{:else}\n\t\t\t<img src={DISCONNECTED} alt=\"Disconnected\" />\n\t\t{/if}\n\t\t<BitauthLink template={Drip.template} />\n\t</div>\n\t<h3>Unlock Miner Extractable Value (MEV)</h3>\n\t<div class=\"grid\">\n\t\t{#if unspent.length>0}\n\t\t\t{#each unspent as item, index}\n\t\t\t\t{#if item.height !== 0}\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<button onclick={() => processOutput(item, index)}>\n\t\t\t\t\t\t\t<img src={blo('0x' + item.tx_hash)} alt={item.tx_hash} />\n\t\t\t\t\t\t\t<p>{Number(item.value).toLocaleString()}</p>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<button disabled>\n\t\t\t\t\t\t\t<img src={blo('0x' + item.tx_hash)} alt={item.tx_hash} />\n\t\t\t\t\t\t\t<p>{Number(item.value).toLocaleString()}</p>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t{:else}\n\t\t\t<p>No connection?</p>\n\t\t{/if}\n\t</div>\n\t<Readme />\n</section>\n\n<style>\n\tsection {\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex: 0.6;\n\t}\n\n\t.status {\n\t\ttext-align: end;\n\t}\n\n\t.grid {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t\talign-items: flex-start;\n\t}\n\n\t.grid .row {\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttext-align: center;\n\t\tgrid-gap: 0.2rem;\n\t\tmargin: 0 0 0.2rem 0;\n\t}\n\n\tbutton p {\n\t\tfont-size: x-small;\n\t\tfont-weight: 600;\n\t\tmargin: 0px;\n\t}\n\tbutton:disabled {\n\t\tfilter: grayscale(100%);\n\t}\n</style>\n"],"names":["prerender","formatError","errorType","errorDetails","throwError","message","assertSuccess","result","expectation","BaseConverterCreationError","BaseConversionError","createBaseConverter","alphabet","alphabetMap","index","characterCode","base","paddingCharacter","factor","inverseFactor","input","firstNonZeroIndex","character","requiredLength","decoded","nextByte","remainingBytes","carry","digit","steps","firstNonZeroResultDigit","value","bin","byte","encoded","padding","all","bitcoinBase58Alphabet","base58","base58ToBin","binToBase58","chars","base64ToBin","validBase64","lookup","i","bufferLengthEstimate","stringLength","bufferLength","buffer","bytes","p","encoded1","encoded2","encoded3","encoded4","binToBase64","range","length","begin","_","splitEvery","chunkLength","hexByteWidth","hexadecimal","hexToBin","validHex","binToHex","str","swapEndianness","flattenBinArray","array","totalLength","total","flattened","binsAreEqual","a","b","binaryByteWidth","binary","binStringToBin","binaryDigits","byteString","binToFixedLength","fixedBytes","numberToBinUint16LE","numberToBinUint32LE","numberToBinUint32BE","bigIntToBinUintLE","remaining","bigIntToBinUint64LEClamped","bigIntToBinUint64LE","valueAsUint64","bigIntToBinUint256BEClamped","binToBigIntUintLE","accumulated","binToBigIntUint64LE","truncatedBin","binToValueSatoshis","valueSatoshisToBin","CompactUintError","bigIntToCompactUint","int32UnsignedToSigned","int32","utf8Encoder","utf8ToBin","utf8","lossyNormalize","instantiateRustWasm","webassemblyBytes","expectedImportModuleName","hashExportName","initExportName","updateExportName","finalExportName","wasm","ptr","len","getUint8Memory","num","cachedUint8Memory","cachedUint32Memory","cachedGlobalArgumentPtr","globalArgumentPtr","getUint32Memory","passArray8ToWasm","getArrayU8FromWasm","rawState","ptr0","len0","retPtr","mem","realRet","ptr1","len1","ripemd160Base64Bytes","SECP256K1_FLAGS_TYPE_CONTEXT","SECP256K1_FLAGS_TYPE_COMPRESSION","SECP256K1_FLAGS_BIT_CONTEXT_VERIFY","SECP256K1_FLAGS_BIT_CONTEXT_SIGN","SECP256K1_FLAGS_BIT_COMPRESSION","SECP256K1_CONTEXT_VERIFY","SECP256K1_CONTEXT_SIGN","SECP256K1_CONTEXT_NONE","SECP256K1_EC_COMPRESSED","SECP256K1_EC_UNCOMPRESSED","ContextFlag","CompressionFlag","secp256k1Base64Bytes","wrapSecp256k1Wasm","instance","heapU8","heapU32","context","contextPtr","seedPtr","pointer","pointerView32","secretKeyPtr","tweakNum256Ptr","publicKeyPtr","publicKeyOutPtr","publicKeyInPtr","publicKeyInLength","outputPtr","outputLengthPtr","compression","outputPubkeyPointer","rSigPtr","msg32Ptr","outputRSigPtr","inputSigPtr","rid","sigOutPtr","recIDOutPtr","outputSigPtr","sigPtr","compactSigInPtr","sigDERInPtr","sigDERInLength","outputCompactSigPtr","outputDERSigPtr","outputDERSigLengthPtr","pubkeyPtr","isLittleEndian","heap16","heap32","alignMemory","size","instantiateSecp256k1WasmBytes","wasmMemory","STATIC_BASE","STATICTOP_INITIAL","DYNAMICTOP_PTR","STATICTOP","STACKTOP","STACK_MAX","DYNAMIC_BASE","TABLE_SIZE","MAX_TABLE_SIZE","getErrNoLocation","info","err","dest","src","getEmbeddedSecp256k1Binary","instantiateSecp256k1Wasm","sha1Base64Bytes","sha256Base64Bytes","sha512Base64Bytes","instantiateRipemd160Bytes","getEmbeddedRipemd160Binary","instantiateRipemd160","Secp256k1Error","secp256k1Wasm","randomSeed","sigScratch","publicKeyScratch","messageHashScratch","internalPublicKeyPtr","internalSigPtr","schnorrSigPtr","privateKeyPtr","internalRSigPtr","recoveryNumPtr","recoveryNumPtrView32","getRecoveryNumPtr","lengthPtr","lengthPtrView32","cloneAndPad","expectedLength","zeroPaddedValue","parsePublicKey","publicKey","paddedPublicKey","setLengthPtr","getLengthPtr","serializePublicKey","flag","getSerializedPublicKey","compressed","convertPublicKey","parseSignature","signature","isDer","paddedSignature","getCompactSig","getDERSig","convertSignature","wasDER","fillPrivateKeyPtr","privateKey","paddedPrivateKey","zeroOutPtr","zeroOutPrivateKeyPtr","withPrivateKey","instructions","ret","derivePublicKey","fillMessageHashScratch","messageHash","paddedMessageHash","normalizeSignature","modifySignature","normalize","parseAndNormalizeSignature","signMessageHash","signMessageHashSchnorr","verifyMessage","verifySignature","verifyMessageSchnorr","verifySignatureSchnorr","signMessageHashRecoverable","recoverPublicKey","recoveryId","addTweakPrivateKey","tweakValue","mulTweakPrivateKey","addTweakPublicKey","mulTweakPublicKey","instantiateSecp256k1","instantiateSha1Bytes","getEmbeddedSha1Binary","instantiateSha1","instantiateSha256Bytes","getEmbeddedSha256Binary","instantiateSha256","instantiateSha512Bytes","getEmbeddedSha512Binary","instantiateSha512","sha1","sha256","sha512","ripemd160","secp256k1","hash256","payload","internalSha256","instantiateHmacFunction","hashFunction","blockByteLength","secret","key","innerPrefix","pad","innerContent","innerResult","outerPrefix","sha512BlockByteLength","hmacSha512","internalSha512","bech32CharacterSet","BitRegroupingError","regroupBits","sourceWordLength","resultWordLength","allowPadding","accumulator","bits","maxResultInt","encodeBech32","base32IntegerArray","Bech32DecodingError","CashAddressNetworkPrefix","CashAddressVersionByte","CashAddressType","CashAddressTypeBits","cashAddressTypeToTypeBits","cashAddressLengthToLengthBits","encodeCashAddressVersionByte","typeBits","CashAddressVersionByteDecodingError","maskCashAddressPrefix","prefix","bech32GeneratorMostSignificantByte","bech32GeneratorRemainingBytes","cashAddressPolynomialModulo","v","mostSignificantByte","lowerBytes","c","j","cashAddressChecksumToUint5Array","checksum","CashAddressFormatEncodingError","CashAddressEncodingError","encodeCashAddressFormat","throwErrors","version","checksum40BitPlaceholder","payloadContents","checksumContents","isValidCashAddressPayloadLength","encodeCashAddressNonStandard","encodeCashAddress","type","CashAddressDecodingError","CashAddressFormatCorrectionError","LockingBytecodeType","isPayToPublicKeyUncompressed","lockingBytecode","isPayToPublicKeyCompressed","isPayToPublicKey","isPayToPublicKeyHash","isPayToScriptHash20","isPayToScriptHash32","lockingBytecodeToAddressContents","bytecode","lockingBytecodeToCashAddress","tokenSupport","NonFungibleTokenCapability","encodeTransactionInput","TransactionDecodingError","encodeTransactionInputs","inputs","nftCapabilityLabelToNumber","CashTokenDecodingError","encodeTokenPrefix","token","hasNft","capabilityInt","hasCommitmentLength","hasAmount","tokenBitfield","encodeTransactionOutput","output","lockingBytecodeField","encodeTransactionOutputs","outputs","encodeTransactionCommon","tx","encodeTransactionBCH","cloneTransactionInputsCommon","cloneTransactionOutputsCommon","cloneTransactionCommon","transaction","encodeTransactionOutpoints","encodeTransactionOutputsForSigning","encodeTransactionInputSequenceNumbersForSigning","SigningSerializationFlag","SigningSerializationType","SigningSerializationTypeBCH","match","equals","shouldSerializeSingleInput","shouldSerializeCorrespondingOutput","shouldSerializeNoOutputs","shouldSerializeUtxos","emptyHash","hashPrevouts","signingSerializationType","transactionOutpoints","hashUtxos","transactionUtxos","hashSequence","transactionSequenceNumbers","hashOutputs","correspondingOutput","transactionOutputs","encodeSigningSerializationBCH","coveredBytecode","forkId","locktime","outpointIndex","outpointTransactionHash","outputTokenPrefix","outputValue","sequenceNumber","generateSigningSerializationComponentsBCH","generateSigningSerializationBCH","ConsensusCommon","SigningSerializationTypesCommon","SigningSerializationTypesBCH","AuthenticationErrorCommon","applyError","state","OpcodesBCH2023","authenticationInstructionIsMalformed","instruction","authenticationInstructionsAreMalformed","authenticationInstructionsArePushInstructions","uint8Bytes","uint16Bytes","uint32Bytes","readLittleEndianNumber","position","view","readAsLittleEndian","opcodeToPushLength","opcode","readAuthenticationInstruction","lengthBytes","sliceStart","sliceEnd","dataBytes","dataStart","dataEnd","cloneAuthenticationInstruction","decodeAuthenticationInstructions","isPushData","pushOpcode","generateBytecodeMap","opcodes","entry","identifiers","pair","getInstructionLengthBytes","encodeAuthenticationInstruction","encodeAuthenticationInstructions","VmNumberError","isVmNumberError","typicalMaximumVmNumberByteLength","vmNumberToBigInt","maximumVmNumberByteLength","requireMinimalEncoding","secondMostSignificantByte","bitsPerByte","signFlippingByte","bigIntToVmNumber","integer","isNegative","byteStates","stackItemIsTruthy","item","booleanToVmNumber","isPushOperation","isPushOnly","isArbitraryDataOutput","getMinimumFee","feeRateSatsPerKb","truncated","getDustThresholdForLength","outputLength","dustRelayFeeSatPerKb","expectedTotalLength","getDustThreshold","encodedOutputLength","isDustOutput","isValidUncompressedPublicKeyEncoding","isValidCompressedPublicKeyEncoding","isValidPublicKeyEncoding","pushNumberOpcodeToNumber","isSimpleMultisig","lastIndex","m","publicKeyInstructions","publicKeys","isStandardMultisig","multisigProperties","n","isStandardOutputBytecode2023","isWitnessProgram","correctLength","validVersionPush","correctLengthByte","incrementOperationCount","operation","nextState","conditionallyEvaluate","mapOverOperations","combinators","operationMap","op","combinator","useOneStackItem","useTwoStackItems","valueTwo","lastState","valueTop","useThreeStackItems","valueThree","useFourStackItems","valueFour","useSixStackItems","valueFive","valueSix","useOneVmNumber","useTwoVmNumbers","secondValue","firstValue","useThreeVmNumbers","thirdValue","pushToStack","data","pushToStackChecked","maximumLength","pushToStackVmNumber","vmNumber","pushToStackVmNumberChecked","minVmNumber","maxVmNumber","combineOperations","firstOperation","secondOperation","opVerify","reservedOperation","opReturn","opIf","opNotIf","opEndIf","opElse","top","op1Add","op1Sub","opNegate","opAbs","opNot","op0NotEqual","opAdd","opSub","opBoolAnd","opBoolOr","opNumEqual","opNumEqualVerify","opNumNotEqual","opLessThan","opLessThanOrEqual","opGreaterThan","opGreaterThanOrEqual","opMin","opMax","opWithin","opMul","opDiv","opMod","opEqual","element1","element2","opEqualVerify","bitwiseOperation","combine","opAnd","opOr","opXor","undefinedOperation","cloneStack","stack","createAuthenticationProgramStateCommon","program","cloneAuthenticationProgramCommon","cloneAuthenticationProgramStateCommon","cloneAuthenticationProgramStateBCH","hasUnnecessaryPadding","firstByte","secondByte","isValidInteger","tagIndex","valueIndex","isValidSignatureEncodingDER","correctLengthRange","correctSequenceTagType","correctSequenceLength","rLength","consistentRLength","rIsValid","sTagIndex","sLengthIndex","sLength","sValueIndex","consistentSLength","sIsValid","isValidSignatureEncodingBCHTransaction","transactionSignature","validSigningSerializationTypes","decodeBitcoinSignature","encodedSignature","opRipemd160","internalRipemd160","opSha1","internalSha1","opSha256","opHash160","opHash256","opCodeSeparator","isValidSignatureEncodingBCHRaw","opCheckDataSig","digest","success","opCheckDataSigVerify","internalSecp256k1","opReverseBytes","opCat","opSplit","finalState","padMinimallyEncodedVmNumber","signBit","opNum2Bin","targetLength","target","minimallyEncoded","opBin2Num","opInputIndex","opActiveBytecode","opTxVersion","opTxInputCount","opTxOutputCount","opTxLocktime","useTransactionUtxo","utxo","opUtxoValue","opUtxoBytecode","useTransactionInput","opOutpointTxHash","opOutpointIndex","opInputBytecode","opInputSequenceNumber","useTransactionOutput","opOutputValue","opOutputBytecode","opNop","opNopDisallowed","disabledOperation","encodeDataPush","isMinimalDataPush","executionIsActive","pushOperation","maximumPushSize","pushNumberOperation","number","opToAltStack","opFromAltStack","op2Drop","op2Dup","op3Dup","op2Over","d","op2Rot","e","f","op2Swap","opIfDup","opDepth","opDrop","opDup","opNip","opOver","opPick","depth","opRoll","opRot","opSwap","opTuck","opSize","useLocktime","decodedLocktime","locktimeTypesAreCompatible","requiredLocktime","opCheckLockTimeVerify","includesFlag","opCheckSequenceVerify","requiredSequence","ConsensusBCH2023","SigningSerializationTypesBCH2023","opCheckSigBCH2023","s","bitcoinEncodedSignature","serialization","opCheckMultiSigBCH2023","publicKeysValue","potentialPublicKeys","approvingKeys","requiredApprovingPublicKeys","signatures","protocolBugValue","approvingPublicKeys","remainingSignatures","remainingPublicKeys","opCheckSigVerifyBCH2023","opCheckMultiSigVerifyBCH2023","extractGenesisCategories","agg","extractSourceOutputTokenData","sourceOutputs","sourceOutput","categoryHex","extractTransactionOutputTokenData","verifyTransactionTokens","excessiveCommitment","genesisCategories","availableSumsByCategory","availableMutableTokensByCategory","inputMintingCategories","availableImmutableTokens","outputSumsByCategory","outputMutableTokensByCategory","outputMintingCategories","outputImmutableTokens","availableMintingCategories","missingMintingCategory","category","sum","availableSum","remainingMutableTokens","unmatchedImmutableTokens","commitmentHex","firstMatch","available","requiredMutableTokens","required","pushTokenExtendedCategory","capabilityByte","extendedCategory","pushTokenCommitment","pushTokenAmount","opUtxoTokenCategory","opUtxoTokenCommitment","opUtxoTokenAmount","opOutputTokenCategory","opOutputTokenCommitment","opOutputTokenAmount","createInstructionSetBCH2023","standard","conditionallyPush","stateEvaluate","unlockingBytecode","unlockingInstructions","lockingInstructions","initialState","unlockingResult","lockingResult","p2sh20","p2sh32","p2shStack","p2shScript","p2shInstructions","evaluate","stateSuccess","transactionSize","inputValue","outpointList","firstDuplicate","outpoint","totalArbitraryDataBytes","tokenValidationResult","createVirtualMachine","instructionSet","operators","codepoint","getCodepoint","after","getOperation","noOp","stateEvery","stateStepMutate","operator","stateContinue","untilComplete","stepFunction","stateClone","stateDebugStep","stateDebug","trace","currentState","stateStep","results","proxyDebug","debugResult","finalResult","resolvedTransaction","createVirtualMachineBCH2023","createVirtualMachineBCH","OpcodesBCHCHIPs","validateSecp256k1PrivateKey","maximumSecp256k1PrivateKey","firstDifference","HdNodeDerivationError","HdKeyDecodingError","HdKeyEncodingError","emptyParentFingerprint","bip32HmacSha512Key","deriveHdPrivateNodeFromSeed","seed","assumeValidity","crypto","hmacSha512Key","mac","chainCode","childIndex","parentFingerprint","valid","deriveHdPrivateNodeIdentifier","hdPrivateNode","deriveHdPublicNodeIdentifier","node","HdKeyVersion","hdKeyVersionIsPublicKey","hdKeyVersionIsPrivateKey","decodeHdKeyUnchecked","hdKey","checksumBits","depthIndex","fingerprintIndex","childIndexIndex","chainCodeIndex","keyDataIndex","keyData","isPrivateKey","decodeHdKey","isPublicKey","decodeHdPrivateKey","hdPrivateKey","network","decodeHdPublicKey","hdPublicKey","encodeHdKeyPayloadMetadata","keyParameters","encodeHdPrivateKeyPayload","metadata","encodeHdKeyPayloadWithChecksum","encodeHdPrivateKey","deriveHdPrivateNodeChild","returnInvalidNodes","parentIdentifier","useHardenedAlgorithm","keyMaterial","derivation","tweakValueLength","nextChainCode","nextPrivateKey","error","deriveHdPublicNodeChild","nextPublicKey","deriveHdPathRelative","path","parsed","isPrivateDerivation","hardenedIndexOffset","indexes","nextIndex","deriveHdPath","relativePath","HdNodeCrackingError","IdentifierResolutionType","IdentifierResolutionErrorType","pluckStartPosition","pluckEndPosition","mergeRanges","ranges","parentRange","unsortedMerged","merged","getResolutionErrors","resolvedScript","errors","segment","stringifyErrors","separator","Parsimmon","action","makeSuccess","makeFailure","expected","mergeReplies","last","union","makeLineColumnIndex","lines","lineWeAreUpTo","xs","ys","obj","keys","k","flags","re","anchoredRegexp","seq","params","parsers","numParsers","accum","seqMap","args","mapper","createLanguage","language","rule","func","lazy","alt","sepBy","parser","sepBy1","succeed","pairs","r","rs","eof","alternative","next","self","fn","name","start","end","reply","string","head","regexp","group","anchored","fullMatch","groupMatch","__","optWhitespace","whitespace","P","cashAssemblyParser","expressions","comment","push","evaluation","literal","parseScript","script","emptyReductionTraceNode","verifyCashAssemblyEvaluationState","reduceScript","vm","createEvaluationProgram","reductionTrace","reduction","pluckRange","removeNumericSeparators","numericLiteral","resolveScriptSegment","resolveIdentifiers","resolved","child","identifier","BuiltInVariables","attemptCompilerOperation","configuration","matchingOperations","operationExample","operationId","variableId","variableType","resolveVariableIdentifier","expectedVariable","describeExpectedInput","expectedArray","EOF","newArray","withoutLastElement","lastElement","createEmptyRange","validateCompilationData","entityId","compileScriptRaw","scriptId","sourceScriptIds","dataErrors","compileScriptContents","resolveScriptIdentifier","createIdentifierResolver","opcodeResult","variableResult","scriptResult","parseResult","resolver","resolutionErrors","compileScript","rawResult","unlocks","unlockingScriptType","isP2shUnlock","lockingScriptType","transformedResult","lockingBytecodeResult","CompilerDefaults","attemptCompilerOperations","operations","finalOperation","compilerOperationRequires","canBeSkipped","dataProperties","configurationProperties","property","compilerOperationAttemptBytecodeResolution","compilerOperationHelperDeriveHdPrivateNode","addressIndex","entityHdPrivateKey","addressOffset","privateDerivationPath","masterContents","instancePath","instanceNode","compilerOperationHelperUnknownEntity","compilerOperationHelperAddressIndex","compilerOperationHelperDeriveHdKeyPrivate","hdKeys","hdPrivateKeys","compilerOperationHelperCompileScript","targetScriptId","signingTarget","compiledTarget","compilerOperationHelperGenerateCoveredBytecode","unlockingScripts","currentScriptId","targetLockingScriptId","compilerOperationAddressData","compilerOperationWalletData","compilerOperationCurrentBlockTime","compilerOperationCurrentBlockHeight","compilerOperationSigningSerializationCorrespondingOutput","compilerOperationSigningSerializationCorrespondingOutputHash","compilerOperationHelperSigningSerializationCoveredBytecode","returnLength","compilerOperationSigningSerializationCoveredBytecode","compilerOperationSigningSerializationCoveredBytecodeLength","compilerOperationSigningSerializationLocktime","compilerOperationSigningSerializationOutpointIndex","compilerOperationSigningSerializationOutpointTransactionHash","compilerOperationSigningSerializationOutputValue","compilerOperationSigningSerializationSequenceNumber","compilerOperationSigningSerializationTransactionOutpoints","compilerOperationSigningSerializationTransactionOutpointsHash","compilerOperationSigningSerializationTransactionOutputs","compilerOperationSigningSerializationTransactionOutputsHash","compilerOperationSigningSerializationTransactionSequenceNumbers","compilerOperationSigningSerializationTransactionSequenceNumbersHash","compilerOperationSigningSerializationVersion","compilerOperationKeyPublicKeyCommon","privateKeys","compilerOperationHdKeyPublicKeyCommon","hdPublicKeys","privateResult","entityHdPublicKey","hdPublicKeyDerivationPath","publicDerivationPath","expectedDepth","compilerOperationsCommon","generateDefaultScenarioDefinition","variables","entityOwnership","keyVariableIds","id","entityIds","valueMap","idA","idB","variable","defaultScenario","masterNode","extendScenarioDefinitionData","parentData","childData","extendScenarioDefinition","parentScenario","childScenario","generateExtendedScenario","scenarioId","sourceScenarioIds","scenario","extendedScenarioDefinitionToCompilationData","definition","hex","extendCompilationDataWithScenarioBytecode","compilationData","scenarioDataBytecodeScripts","prefixBytecodeScriptId","bytecodeScripts","bytecodeScriptExtendedConfiguration","bytecodeCompilations","failedResults","compiledBytecode","compileWalletTemplateScenarioValueSatoshis","valueSatoshisDefinition","compileWalletTemplateScenarioBytecode","bytecodeDefinition","compilationContext","defaultOverride","extendedScenario","generateBytecode","lockingOrUnlockingScriptIdUnderTest","overrides","overriddenDataDefinition","compileScenarioOutputTokenData","generateScenarioBCH","unlockingScriptId","providedLockingScriptId","debug","scenarioDefinition","scenarioName","partialCompilationData","fullCompilationData","testedInputIndex","lockingScriptId","sourceOutputCompilations","slot","lockingCompilation","compilation","transactionOutputCompilations","transactionOutput","outputCompilationErrors","errorObject","sourceOutputCompilationsSuccess","transactionOutputCompilationsSuccess","extractOutput","valueSatoshis","inputsContext","inputIndex","transactionInputCompilations","unlockingCompilation","inputCompilationErrors","createCompilerGenerateBytecodeFunction","compilerConfiguration","compilerConfigurationToCompilerBCH","nullHashLength","createAuthenticationProgramEvaluationCommon","evaluationBytecode","walletTemplateToCompilerConfiguration","template","virtualizedScripts","tests","testId","test","pushTestedScript","checkScriptId","virtualizedLockingScriptId","virtualizedUnlockingScriptId","allScripts","scripts","def","entity","entityVariables","unlockingScriptTimeLockTypes","lockingScriptTypes","scenarios","SigningSerializationAlgorithmIdentifier","getSigningSerializationType","algorithmIdentifier","compilerOperationHelperComputeSignatureBCH","operationName","sign","algorithm","unknown","compilerOperationHelperHdKeySignatureBCH","secp256k1Method","derivationResult","compilerOperationHdKeyEcdsaSignatureBCH","compilerOperationHdKeySchnorrSignatureBCH","compilerOperationHelperKeySignatureBCH","compilerOperationKeyEcdsaSignatureBCH","compilerOperationKeySchnorrSignatureBCH","compilerOperationHelperComputeDataSignatureBCH","compilerOperationHelperKeyDataSignatureBCH","compilerOperationKeyEcdsaDataSignatureBCH","compilerOperationKeySchnorrDataSignatureBCH","compilerOperationHelperHdKeyDataSignatureBCH","compilerOperationHdKeyEcdsaDataSignatureBCH","compilerOperationHdKeySchnorrDataSignatureBCH","compilerOperationSigningSerializationTokenPrefix","compilerOperationSignatureRenamed","compilerOperationDataSignatureRenamed","compilerOperationSigningSerializationFullBCH","algorithmOrComponent","unknownPart","compilerOperationsBCH","createCompilerBCH","schema38","schema41","schema42","validate23","parentDataProperty","rootData","vErrors","_errs0","valid0","_errs1","missing0","err0","_errs4","key0","err1","_errs5","err2","valid2","_errs7","err3","data2","_errs9","err4","err5","err6","_valid0","_errs11","missing1","err7","_errs14","key1","err8","data3","_errs15","err9","valid4","_errs17","err10","_errs19","err11","_errs21","err12","_errs23","err13","_errs25","err14","_errs27","err15","data10","_errs29","err16","err17","err18","_errs31","missing2","err19","_errs34","key2","err20","_errs35","err21","valid6","_errs37","err22","_errs39","err23","data14","_errs41","err24","err25","err26","_errs43","missing3","err27","_errs46","key3","err28","_errs47","err29","valid8","_errs49","err30","data17","_errs51","err31","err32","err33","err34","validate22","_errs2","_errs6","valid1","i0","_errs8","data4","_errs10","_errs13","schema32","validate28","_errs3","data0","data1","valid3","data5","data6","_errs22","valid5","data7","_errs24","key4","data9","key5","_errs32","valid7","data11","_errs36","key6","data12","key7","_errs40","valid9","_errs42","valid10","_errs44","_valid1","valid11","data15","_errs48","validate27","_errs12","_errs16","_errs18","data8","validate31","schema36","validate34","validate26","_errs20","_errs28","_errs30","_errs38","data19","key8","data20","_errs50","i1","_errs52","data22","_errs53","data23","_errs55","valid12","len2","i2","_errs57","data25","_errs58","validate38","func4","validate21","_errs33","data16","data18","_errs54","_errs56","data21","valid13","_errs60","_errs62","data24","_errs64","_errs66","data26","_errs68","valid14","len3","i3","data27","_errs70","data28","_errs73","validate20","avjErrorsToDescription","ajvStandaloneJsonParse","untrustedJsonOrObject","validator","stringified","normalized","walletTemplateValidator","importWalletTemplate","errorPrefix","returnFailedCompilationDirective","compileOutputTemplate","outputTemplate","directive","compileInputTemplate","inputTemplate","generateTransaction","outputResults","inputResults","RANDOM_SCALE","nextRandom","rseed","t","randSeed","image","address","randomColor","SVG_START","SVG_END","PATH_1","PATH_2","PATH_3","PATH_4","BACKGROUND_D","svg","paths","x","y","square","blo","bloSvg","h","w","ms","val","options","parse","fmtLong","fmtShort","msAbs","plural","isPlural","setup","env","createDebug","coerce","disable","enable","enabled","require$$0","destroy","selectColor","namespace","hash","prevTime","enableOverride","namespacesCache","enabledCache","curr","format","formatter","extend","delimiter","newDebug","namespaces","split","ns","matchesTemplate","search","searchIndex","templateIndex","starIndex","matchIndex","skip","common","exports","formatArgs","save","load","useColors","localstorage","warned","module","lastC","define_process_env_default","formatters","$9de8c596df24b669$var$debug","$dvphU$debug","$9de8c596df24b669$export$2e2bcd8739ae039","has","Events","EE","once","addListener","emitter","event","listener","evt","clearEvent","EventEmitter","names","events","handlers","l","ee","listeners","a1","a2","a3","a4","a5","E_CANCELED","__awaiter$2","thisArg","_arguments","generator","adopt","resolve","reject","fulfilled","step","rejected","Semaphore","_value","_cancelError","weight","priority","task","findIndexFromEnd","other","callback_1","callback","release","insertSorted","previousValue","called","waiters","waiter","queuedPriority","predicate","__awaiter$1","Mutex","cancelError","releaser","ws","$parcel$export","$05743633fea447d4$exports","$05743633fea447d4$export$25b4633f61498e1","$d801b1f9b7fc3074$export$1bddf2b96e25d075","$dvphU$EventEmitter","host","port","encrypted","timeout","connectionType","$dvphU$electrumcashdebuglogs","$dvphU$WebSocket","isInteger","INTEGER_REGEX","isNumber","NUMBER_REGEX","isSafeNumber","config","valueDigits","countSignificantDigits","strDigits","UnsafeNumberReason","getUnsafeNumberReason","digits","dot","LosslessNumber","unsafeReason","isLosslessNumber","parseLosslessNumber","parseNumberAndBigInt","revive","json","reviver","reviveValue","reviveArray","reviveObject","object","text","parseNumber","parseValue","expectValue","expectEndOfInput","parseObject","codeOpeningBrace","skipWhitespace","initial","codeClosingBrace","eatComma","parseString","throwObjectKeyExpected","eatColon","throwObjectValueExpected","isDeepEqual","throwDuplicateKey","throwObjectKeyOrEndExpected","parseArray","codeOpeningBracket","codeClosingBracket","expectArrayItem","throwArrayItemOrEndExpected","parseNumeric","parseKeyword","isWhitespace","codeDoubleQuote","codeBackslash","char","escapeChar","escapeCharacters","isHex","throwInvalidUnicodeCharacter","throwInvalidEscapeCharacter","isValidStringCharacter","throwInvalidCharacter","expectEndOfString","codeMinus","expectDigit","codeZero","isNonZeroDigit","isDigit","codeDot","codeLowercaseE","codeUppercaseE","codePlus","codeComma","gotAt","codeColon","numSoFar","pos","got","code","codeSpace","codeNewline","codeTab","codeReturn","codeNine","codeUppercaseA","codeUppercaseF","codeLowercaseA","codeLowercaseF","codeOne","isObject","$24139611f53a54b8$export$5d955335434540c6","method","parameters","requestId","$e83d2e7688025acd$exports","$e83d2e7688025acd$export$e1f38ab2b4ebdde6","$e83d2e7688025acd$export$9598f0c76aa41d73","$abcb763a48577a1e$export$d73a2e87a509880","$abcb763a48577a1e$export$280de919a0cf6928","$db7c797e63383364$exports","$db7c797e63383364$export$7516420eb880ab68","ConnectionStatus","$ff134c9a9e1f7361$export$de0f57fc22079b5e","application","socketOrHostname","$dvphU$ElectrumWebSocket","timer","statementParts","currentStatementList","statementList","$dvphU$parse","$dvphU$parseNumberAndBigInt","currentStatement","software","protocol","connectionResolver","rejector","versionNegotiator","versionMessage","versionValidator","errorMessage","force","intentional","disconnectResolver","currentTime","verificationTimer","sentTimestamp","$d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND","$d801b1f9b7fc3074$export$5ba3a4134d0d751d","$558b46d3f899ced5$var$ElectrumClient","$dvphU$Mutex","networkOptions","unlock","retainSubscriptions","requestResolver","requestData","notification","subscriptionParameters","resubscriptionPromises","parameterJSON","resolverId","versionStatement","eventName","$558b46d3f899ced5$export$2e2bcd8739ae039","SignatureAlgorithm","HashType","getLibauthCompiler","template_json","DUST_LIMIT","MIN_PAYOUT","DECAY_NUMERATOR","DECAY_DENOMINATOR","Drip","templateV3","reversed","hashHex","fee","unlockingScript","CONNECTED","DISCONNECTED","Z_FIXED$1","Z_BINARY","Z_TEXT","Z_UNKNOWN$1","zero$1","buf","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH$1","MAX_MATCH$1","LENGTH_CODES$1","LITERALS$1","L_CODES$1","D_CODES$1","BL_CODES$1","HEAP_SIZE$1","MAX_BITS$1","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","DIST_CODE_LEN","static_ltree","static_dtree","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","d_code","dist","put_short","send_bits","send_code","tree","bi_reverse","res","bi_flush","gen_bitlen","desc","max_code","stree","has_stree","extra","xbits","overflow","gen_codes","bl_count","next_code","tr_static_init","init_block","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","sx","build_tree","scan_tree","prevlen","curlen","nextlen","count","max_count","min_count","send_tree","build_bl_tree","max_blindex","send_all_trees","lcodes","dcodes","blcodes","rank","detect_data_type","block_mask","static_init_done","_tr_init$1","_tr_stored_block$1","stored_len","_tr_align$1","_tr_flush_block$1","opt_lenb","static_lenb","_tr_tally$1","_tr_init_1","_tr_stored_block_1","_tr_flush_block_1","_tr_tally_1","_tr_align_1","trees","adler32","adler","s1","s2","adler32_1","makeTable","table","crcTable","crc32","crc","crc32_1","messages","constants$2","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","_tr_align","Z_NO_FLUSH$2","Z_PARTIAL_FLUSH","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY$1","Z_UNKNOWN","Z_DEFLATED$2","MAX_MEM_LEVEL","MAX_WBITS$1","DEF_MEM_LEVEL","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","GZIP_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","strm","errorCode","zero","slide_hash","wsize","HASH_ZLIB","prev","HASH","flush_pending","flush_block_only","put_byte","putShortMSB","read_buf","longest_match","cur_match","chain_length","scan","best_len","nice_match","limit","_win","wmask","strend","scan_end1","scan_end","fill_window","_w_size","more","deflate_stored","flush","min_block","left","have","used","deflate_fast","hash_head","bflush","deflate_slow","max_insert","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","lm_init","DeflateState","deflateStateCheck","deflateResetKeep","deflateReset","deflateSetHeader","deflateInit2","level","windowBits","memLevel","strategy","wrap","deflateInit","deflate$2","old_flush","header","level_flags","beg","copy","gzhead_extra","bstate","deflateEnd","status","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInit_1","deflateInit2_1","deflateReset_1","deflateResetKeep_1","deflateSetHeader_1","deflate_2$1","deflateEnd_1","deflateSetDictionary_1","deflateInfo","deflate_1$2","_has","assign","sources","source","flattenChunks","chunks","chunk","STR_APPLY_UIA_OK","_utf8len","q","string2buf","c2","m_pos","str_len","buf_len","buf2binstring","buf2string","max","out","utf16buf","c_len","utf8border","strings","ZStream","zstream","toString$1","Z_NO_FLUSH$1","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED$1","Deflate$1","opt","dict","flush_mode","chunkSize","_flush_mode","deflate$1","deflator","deflate_2","deflate_1$1","deflate","deflate_1","bitauthIcon","$.prop","$$props","base64toBase64Url","base64","stringToUriPayload","content","unspent","$.mutable_source","electrumClient","scripthash","contractState","connectionStatus","handleNotifications","$.set","updateUnspent","broadcast","raw_tx","response","processOutput","$.get","txn","onMount","ElectrumClient","onDestroy","$$render","consequent","alternate","$.each","node_3","$.set_attribute","img_2","img_3","consequent_1","alternate_1","consequent_2","alternate_2"],"mappings":"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AAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gB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ClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,eAAe,EAAGgV,EAClC,CAAChV,EAAe,aAAa,EAAGgV,EAChC,CAAChV,EAAe,aAAa,EAAGgV,EAChC,CAAChV,EAAe,aAAa,EAAGgV,EAChC,CAAChV,EAAe,UAAU,EAAGkF,EA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AAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,gBAAqB,EAAE,EAAI,kBAC3DA,EAAgBA,EAAgB,cAAmB,EAAE,EAAI,gBACzDA,EAAgBA,EAAgB,cAAmB,EAAE,EAAI,gBACzDA,EAAgBA,EAAgB,cAAmB,EAAE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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95]}