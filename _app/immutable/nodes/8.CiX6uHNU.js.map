{"version":3,"file":"8.CiX6uHNU.js","sources":["../../../../../../src/routes/wallet/+page.ts","../../../../../../src/routes/wallet/+page.svelte"],"sourcesContent":["// since there's no dynamic data here, we can prerender\n// it so that it gets served as a static asset in production\nexport const prerender = true;\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { page } from '$app/state';\n\timport walletIcon from '$lib/images/hot.svg';\n\timport hot from '$lib/images/hot.svg';\n\timport bch from '$lib/images/BCH.svg';\n\n\timport { stringify, swapEndianness } from '@bitauth/libauth';\n\timport { blo } from 'blo';\n\n\timport { ElectrumClient, ConnectionStatus } from '@electrum-cash/network';\n\n\timport { IndexedDBProvider } from '@mainnet-cash/indexeddb-storage';\n\timport { BaseWallet, Wallet, TestNetWallet, TokenSendRequest } from 'mainnet-js';\n\n\timport CONNECTED from '$lib/images/connected.svg';\n\timport DISCONNECTED from '$lib/images/disconnected.svg';\n\n\tlet data;\n\tlet wallet: any;\n\tlet walletState = '';\n\tlet walletError = false;\n\tlet balance: number;\n\tlet history: any[];\n\tlet unspent: any[];\n\n\tasync function consolidateFungibleTokens() {\n\t\tconst cashaddr = wallet.getTokenDepositAddress();\n\t\tlet utxos = (await wallet.getUtxos())\n\t\t\t.filter((u: any) => u.token)\n\t\t\t.filter((u: any) => !u.token.capability);\n\t\tconsole.log(utxos);\n\t\t// Get a list of\n\t\tconst categories = [\n\t\t\t...new Set(\n\t\t\t\tutxos.map((u: any) => {\n\t\t\t\t\treturn u.token.tokenId;\n\t\t\t\t})\n\t\t\t)\n\t\t];\n\n\t\tlet sendRequests = categories.map((tokenId: any) => {\n\t\t\tconst sumTokens = utxos\n\t\t\t\t.filter((u: any) => u.token.tokenId == tokenId && u.token.amount > 0n)\n\t\t\t\t.map((u: any) => u.token.amount || 0n)\n\t\t\t\t.reduce((a: any, b: any) => a + b, 0n);\n\t\t\treturn new TokenSendRequest({\n\t\t\t\tcashaddr: cashaddr,\n\t\t\t\tvalue: 800,\n\t\t\t\tamount: sumTokens,\n\t\t\t\ttokenId: tokenId\n\t\t\t});\n\t\t});\n\n\t\treturn await wallet.send(sendRequests);\n\t}\n\n\tasync function consolidateSats() {\n\t\treturn await wallet.sendMax(wallet.getDepositAddress());\n\t}\n\n\tonMount(async () => {\n\t\ttry {\n\t\t\tconst isTestnet = page.url.hostname !== 'vox.cash';\n\t\t\tBaseWallet.StorageProvider = IndexedDBProvider;\n\t\t\twallet = isTestnet ? await TestNetWallet.named(`vox`) : await Wallet.named(`vox`);\n\t\t\tconsole.log(wallet.toDbString());\n\t\t\tbalance = await wallet.getBalance('sat');\n\n\t\t\tunspent = await wallet.getUtxos();\n\t\t} catch (e) {\n\t\t\twalletError = true;\n\t\t\tthrow e;\n\t\t}\n\t});\n</script>\n\n<section>\n\t<div class=\"status\">\n\t\t<div class=\"scanable\">\n\t\t\t{#if wallet}\n\t\t\t\t<qr-code\n\t\t\t\t\tid=\"qr1\"\n\t\t\t\t\tcontents={wallet.getDepositAddress()}\n\t\t\t\t\tmodule-color=\"#000\"\n\t\t\t\t\tposition-ring-color=\"#8dc351\"\n\t\t\t\t\tposition-center-color=\"#ff00ec\"\n\t\t\t\t\tmask-x-to-y-ratio=\"1.2\"\n\t\t\t\t\tstyle=\"width: 150px;\n                height: 150px;\n                margin: 0.5em auto;\n                background-color: #fff;\"\n\t\t\t\t>\n\t\t\t\t\t<img src={hot} width=\"30px\" slot=\"icon\" />\n\t\t\t\t</qr-code>\n\t\t\t\t<pre id=\"deposit\">{wallet.getDepositAddress()}</pre>\n\t\t\t{/if}\n\t\t\t{#if balance >= 0}\n\t\t\t\t<div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<b>\n\t\t\t\t\t\t{balance.toLocaleString()} satoshis\n\t\t\t\t\t</b>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t{#if unspent}\n\t\t\t{#if unspent.length > 0}\n\t\t\t\t<div class=\"walletHead\">\n\t\t\t\t\t<!-- <div>\n\t\t\t\t\t\t<img width=\"32\" src={walletIcon} alt=\"hotWallet\" />\n\t\t\t\t\t</div> -->\n\t\t\t\t\t<button onclick={() => consolidateFungibleTokens()}> Consolidate Tokens</button>\n\t\t\t\t\t<button onclick={() => consolidateSats()}> Consolidate Sats</button>\n\n\t\t\t\t\t<!-- <button on:click={() => shapeWallet()}> Shape</button>\n\t\t\t\t\t<button on:click={() => sendMaxTokens()}> Sweep FBCH</button>\n\t\t\t\t\t<button on:click={() => sendMax()}> Sweep BCH</button> -->\n\t\t\t\t</div>\n\t\t\t\t<h3>Unspent Outputs (coins)</h3>\n\t\t\t\t<table class=\"wallet\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr class=\"header\">\n\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t<td>Token</td>\n\t\t\t\t\t\t\t<td>Fungible</td>\n\t\t\t\t\t\t\t<td>NFT</td>\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t>Sats\n\t\t\t\t\t\t\t\t<img width=\"15\" src={bch} alt=\"bchLogo\" />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{#each unspent as c, i (c.txid + ':' + c.vout)}\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"r\">\n\t\t\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\t\t\t{#if c.token}\n\t\t\t\t\t\t\t\t\t\t\t<img height=\"64px\" src={blo(c.token?.tokenId, 16)} alt={c.token?.tokenId} />\n\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t<img width=\"64px\" src={bch} alt=\"bchLogo\" />\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"r\">\n\t\t\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\t\t\t{#if c.token}\n\t\t\t\t\t\t\t\t\t\t\t{c.token?.tokenId}\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"r\">\n\t\t\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\t\t\t{#if c.token}\n\t\t\t\t\t\t\t\t\t\t\t{c.token.amount}\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"r\">\n\t\t\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\t\t\t{#if c.token}\n\t\t\t\t\t\t\t\t\t\t\t{c.token.commitment}\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td class=\"r\">\n\t\t\t\t\t\t\t\t\t{Number(c.satoshis).toLocaleString(undefined, {})}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t{:else}\n\t\t\t\t<p>no wallet utxos available</p>\n\t\t\t{/if}\n\t\t{:else}\n\t\t\t<p>loading wallet...</p>\n\t\t{/if}\n\n\t\t{#if wallet}\n\t\t\t{#await wallet.getHistory('sat', 0, 10, true)}\n\t\t\t\t<p>...getting history</p>\n\t\t\t{:then history}\n\t\t\t\t<h3>History</h3>\n\t\t\t\t{#if history.length > 0}\n\t\t\t\t\t{#each history as c, i (c.hash)}\n\t\t\t\t\t\t{#if c.timestamp > 0}\n\t\t\t\t\t\t\t<pre>{new Date(c.timestamp * 1000).toISOString()}</pre>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<pre>{new Date().toISOString()}</pre>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t<pre># {c.blockHeight}â–  {c.hash} </pre>\n\t\t\t\t\t\t<pre>  assets:cash    {c.valueChange.toLocaleString().padStart(14)} sat</pre>\n\t\t\t\t\t\t<pre>  expenses:fees  {c.fee.toLocaleString().padStart(14)} sat # {c.size} bytes</pre>\n\t\t\t\t\t\t{#each c.tokenAmountChanges as tokenChange}\n\t\t\t\t\t\t\t{#if tokenChange.amount != 0n}\n\t\t\t\t\t\t\t\t<pre>  assets:cash:tokens  {tokenChange.amount.toLocaleString()} {tokenChange.tokenId} </pre>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t<pre>   &nbsp;</pre>\n\t\t\t\t\t{/each}\n\t\t\t\t{:else}\n\t\t\t\t\t<p>no history</p>\n\t\t\t\t{/if}\n\t\t\t{:catch error}\n\t\t\t\t<p style=\"color: red\">{error.message}</p>\n\t\t\t{/await}\n\t\t{/if\t}\n\t</div>\n</section>\n\n<style>\n\tpre {\n\t\tmargin-block: 0px;\n\t\tpadding: 0px;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t}\n\n\ttable {\n\t\twidth: 100%;\n\t\tborder-collapse: separate;\n\t}\n\tthead tr {\n\t\ttext-align: center;\n\t\tfont-weight: 900;\n\t}\n\n\ttbody tr:nth-child(odd) {\n\t\tbackground-color: #fd70da2a;\n\t}\n\ttbody tr:nth-child(even) {\n\t\tbackground-color: #e495e42c;\n\t}\n\ttbody tr {\n\t\tborder-radius: 10px;\n\t}\n\ttbody tr td {\n\t\tpadding: 4px;\n\t}\n\n\t.scanable {\n\t\tpadding: 60px;\n\t\tbackground-color: white;\n\t}\n\t.scanable div {\n\t\ttext-align: center;\n\t}\n\n\t.walletHead button {\n\t\tbackground-color: #a45eb6; /* Green */\n\t\tborder: none;\n\t\tcolor: white;\n\t\tpadding: 15px 32px;\n\t\tborder-radius: 20px;\n\t\ttext-align: center;\n\t\ttext-decoration: none;\n\t\tdisplay: inline-block;\n\t\tfont-size: 16px;\n\t}\n\n\t.walletHead {\n\t\tpadding: 15px 32px;\n\t\tdisplay: flex;\n\t}\n\n\t.r {\n\t\ttext-align: right;\n\t\tvertical-align: middle;\n\n\t\tmax-width: 90px;\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t}\n</style>\n"],"names":["prerender","consolidateFungibleTokens","consolidateSats","wallet","$.mutable_source","balance","unspent","cashaddr","$.get","utxos","u","sendRequests","tokenId","sumTokens","a","b","TokenSendRequest","onMount","isTestnet","page","$$_import_BaseWallet","IndexedDBProvider","TestNetWallet","Wallet","$.set","e","$.template_effect","$.set_custom_element_data","qr_code","hot","$$render","consequent","$0","$.set_text","text_1","$.derived_safe_equal","consequent_1","$.each","tbody","c","blo","bch","consequent_2","alternate","consequent_3","consequent_4","consequent_5","consequent_6","alternate_1","consequent_7","alternate_2","history","node_11","text_7","consequent_8","alternate_3","$.index","$$anchor","tokenChange","text_11","consequent_9","text_8","text_10","$1","consequent_10","alternate_4","error","text_12","consequent_11"],"mappings":"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"}