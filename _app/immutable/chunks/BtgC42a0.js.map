{"version":3,"file":"BtgC42a0.js","sources":["../../../../../../../../node_modules/.pnpm/svelte@5.33.18/node_modules/svelte/src/internal/shared/attributes.js","../../../../../../../../node_modules/.pnpm/blo@2.0.0/node_modules/blo/dist/esm/random.js","../../../../../../../../node_modules/.pnpm/blo@2.0.0/node_modules/blo/dist/esm/image.js","../../../../../../../../node_modules/.pnpm/blo@2.0.0/node_modules/blo/dist/esm/svg.js","../../../../../../../../node_modules/.pnpm/blo@2.0.0/node_modules/blo/dist/esm/index.js"],"sourcesContent":["import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","const RANDOM_SCALE = 1 / (1 << 31 >>> 0);\nfunction nextRandom(rseed) {\n  const t = rseed[0] ^ rseed[0] << 11;\n  rseed[0] = rseed[1];\n  rseed[1] = rseed[2];\n  rseed[2] = rseed[3];\n  rseed[3] = (rseed[3] ^ rseed[3] >> 19 ^ t ^ t >> 8) >>> 0;\n  return rseed[3] * RANDOM_SCALE;\n}\nfunction randSeed(seed) {\n  const rseed = new Uint32Array([0, 0, 0, 0]);\n  for (let i = 0; i < seed.length; i++) {\n    rseed[i % 4] = (rseed[i % 4] << 5) - rseed[i % 4] + seed.charCodeAt(i);\n  }\n  return rseed;\n}\nexport {\n  nextRandom,\n  randSeed\n};\n//# sourceMappingURL=random.js.map\n","import { randSeed, nextRandom } from \"./random.js\";\nfunction image(address) {\n  const rseed = randSeed(address.toLowerCase());\n  const c = randomColor(rseed);\n  const b = randomColor(rseed);\n  const s = randomColor(rseed);\n  const data = new Uint8Array(32);\n  for (let i = 0; i < 32; i++) {\n    data[i] = Math.floor(\n      // background: 43% chances\n      // color:      43% chances\n      // spot:       13% chances\n      nextRandom(rseed) * 2.3\n    );\n  }\n  return [data, [b, c, s]];\n}\nfunction randomColor(rseed) {\n  return new Uint16Array([\n    // hue = 0 to 360 (whole color spectrum)\n    nextRandom(rseed) * 360,\n    // saturation = 40 to 100 (avoid greyish colors)\n    40 + nextRandom(rseed) * 60,\n    // lightness = 0 to 100 but probabilities are a bell curve around 50%\n    (nextRandom(rseed) + nextRandom(rseed) + nextRandom(rseed) + nextRandom(rseed)) * 25\n  ]);\n}\nexport {\n  image,\n  randomColor\n};\n//# sourceMappingURL=image.js.map\n","import { image } from \"./image.js\";\nconst SVG_START = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 8\" shape-rendering=\"optimizeSpeed\" ';\nconst SVG_END = \"</svg>\";\nconst PATH_1 = '<path fill=\"hsl(';\nconst PATH_2 = \"% \";\nconst PATH_3 = '%)\" d=\"';\nconst PATH_4 = '\"/>';\nconst BACKGROUND_D = \"M0,0H8V8H0z\";\nfunction svg(address, size) {\n  const [data, [b, c, s]] = image(address);\n  const paths = [\n    \"\",\n    // color\n    \"\"\n    // spot\n  ];\n  for (let i = 0, x, y; i < 32; i++) {\n    if (data[i] === 0) {\n      continue;\n    }\n    x = i & 3;\n    y = i >> 2;\n    const square = \",\" + y + \"h1v1h-1z\";\n    paths[data[i] - 1] += \"M\" + x + square + \"M\" + (7 - x) + square;\n  }\n  return SVG_START + 'width=\"' + size + '\" height=\"' + size + '\">' + PATH_1 + b[0] + \" \" + b[1] + PATH_2 + b[2] + PATH_3 + BACKGROUND_D + PATH_4 + PATH_1 + c[0] + \" \" + c[1] + PATH_2 + c[2] + PATH_3 + paths[0] + PATH_4 + PATH_1 + s[0] + \" \" + s[1] + PATH_2 + s[2] + PATH_3 + paths[1] + PATH_4 + SVG_END;\n}\nexport {\n  svg\n};\n//# sourceMappingURL=svg.js.map\n","import { image } from \"./image.js\";\nimport { svg } from \"./svg.js\";\nfunction blo(address, size = 64) {\n  return \"data:image/svg+xml;base64,\" + btoa(bloSvg(address, size));\n}\nfunction bloSvg(address, size = 64) {\n  return svg(address, size);\n}\nfunction bloImage(address) {\n  return image(address);\n}\nexport {\n  blo,\n  bloImage,\n  bloSvg\n};\n//# sourceMappingURL=index.js.map\n"],"names":["to_class","value","hash","directives","classname","to_style","styles","RANDOM_SCALE","nextRandom","rseed","t","randSeed","seed","i","image","address","c","randomColor","b","s","data","SVG_START","SVG_END","PATH_1","PATH_2","PATH_3","PATH_4","BACKGROUND_D","svg","size","paths","x","y","square","blo","bloSvg"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}