{"version":3,"file":"DeOyqwJy.js","sources":["../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/compiler/standard/p2pkh.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.0.0/node_modules/@bitauth/libauth/build/lib/compiler/p2pkh-utils.js","../../../../../../../../node_modules/.pnpm/@mainnet-cash+indexeddb-storage@2.7.8/node_modules/@mainnet-cash/indexeddb-storage/dist/module/IndexedDBProvider.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/getRuntimePlatform.js","../../../../../../__vite-browser-external","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/format/error.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/format/base-convert.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/format/base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/format/hex.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/format/bin-string.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/format/number.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/format/read.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/format/utf8.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/bin/hashes.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/bin/ripemd160/ripemd160.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm-types.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/bin/secp256k1/secp256k1-wasm.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/bin/sha1/sha1.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/bin/sha256/sha256.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/bin/sha512/sha512.base64.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/crypto/ripemd160.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/crypto/secp256k1.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/crypto/sha1.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/crypto/sha256.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/crypto/sha512.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/crypto/default-crypto-instances.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/crypto/combinations.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/crypto/hmac.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/address/base58-address.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/address/bech32.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/address/cash-address.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/address/locking-bytecode.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/message/read-components.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/message/transaction-types.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/message/transaction-encoding.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/signing-serialization.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/consensus.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/errors.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-opcodes.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2026/bch-2026-opcodes.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/spec/bch-spec-opcodes.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/instruction-sets-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/combinators.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/flow-control.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/arithmetic.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/bitwise.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/common-types.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/encoding.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/crypto.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/format.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/inspection.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/nop.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/push.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/stack.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/common/time.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-consensus.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-errors.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-tokens.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2023/bch-2023-instruction-set.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/virtual-machine.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2025/bch-2025-errors.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2026/bch-2026-errors.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/spec/bch-spec-errors.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2025/bch-2025-consensus.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2025/bch-2025-instruction-set.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2026/bch-2026-loops.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2026/bch-2026-consensus.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2026/bch-2026-bitwise.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2026/bch-2026-functions.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/2026/bch-2026-instruction-set.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/spec/bch-spec-consensus.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/spec/bch-spec-eval.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/spec/bch-spec-pow.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/spec/bch-spec-instruction-set.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/bch/spec/bch-spec-vm.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/vm/instruction-sets/instruction-sets.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/key/hd-key.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/key/key-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/key/wallet-import-format.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/language/language-types.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/language/language-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/language/parsimmon.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/language/parse.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/language/reduce.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/language/resolve.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/language/compile.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/compiler/compiler-defaults.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/compiler/compiler-operation-helpers.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/compiler/compiler-operations.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/compiler/scenarios.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/compiler/compiler-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/compiler/compiler-bch/compiler-bch.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/compiler/standard/p2pkh.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/compiler/p2pkh-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/schema/ajv/validate-wallet-template.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/schema/ajv/ajv-utils.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/schema/wallet-template.js","../../../../../../../../node_modules/.pnpm/@bitauth+libauth@3.1.0-next.7/node_modules/@bitauth/libauth/build/lib/transaction/generate-transaction.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/interface.js","../../../../../../../../node_modules/.pnpm/@electrum-cash+network@4.1.1-development.10647307155_patch_hash=f7b2ff0ce9059e21d0dfaca_02f6721151f3fd27c4df33a006d5d2c1/node_modules/@electrum-cash/network/dist/index.mjs","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/delay.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/transaction.js","../../../../../../../../node_modules/.pnpm/@scure+bip39@1.6.0/node_modules/@scure/bip39/esm/wordlists/english.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/constant.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/config.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/header.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/cache/IndexedDbCache.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/cache/WebStorageCache.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/cache/MemoryCache.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/network/ElectrumNetworkProvider.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/chain.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/enum.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/db/ExchangeRateProvider.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/rate/ExchangeRate.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/sanitizeUnit.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/amountInSatoshi.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/hash160.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/deriveCashaddr.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/wallet/model.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/asSendRequestObject.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/satoshiToAmount.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/convert.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/derivePublicKeyHash.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/getXPubKey.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/sumUtxoValue.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/floor.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/balanceObjectFromSatoshi.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/network/constant.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/network/configuration.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/network/util.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/network/default.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/network/Connection.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/wallet/Bcmr.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/message/signed.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/history/electrumTransformer.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/network/getRelayFeeCache.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/wallet/enum.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/transaction/allocateFee.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/sumSendRequestAmounts.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/transaction/Wif.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/checkUtxos.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/wallet/Util.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/wallet/Base.js","../../../../../../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/crypto.js","../../../../../../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/utils.js","../../../../../../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/hmac.js","../../../../../../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/pbkdf2.js","../../../../../../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_md.js","../../../../../../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/_u64.js","../../../../../../../../node_modules/.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/esm/sha2.js","../../../../../../../../node_modules/.pnpm/@scure+base@1.2.6/node_modules/@scure/base/lib/esm/index.js","../../../../../../../../node_modules/.pnpm/@scure+bip39@1.6.0/node_modules/@scure/bip39/esm/index.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/checkForEmptySeed.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/checkWifNetwork.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/util/randomBytes.js","../../../../../../../../node_modules/.pnpm/mainnet-js@2.7.8_patch_hash=16d52577e1f6a8b0b78f7b8cc903dcb6be39d81dfe4014645d78a98aad873523/node_modules/mainnet-js/dist/module/wallet/Wif.js"],"sourcesContent":["/**\n * A standard single-factor wallet template that uses\n * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use\n * on the network.\n *\n * This P2PKH template uses BCH Schnorr signatures, reducing the size of\n * transactions.\n *\n * Note, this wallet template uses only a single `Key`. For HD key\n * support, see {@link walletTemplateP2pkhHd}.\n */\nexport const walletTemplateP2pkhNonHd = {\n    $schema: 'https://libauth.org/schemas/wallet-template-v0.schema.json',\n    description: 'A standard single-factor wallet template that uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\\n\\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions.',\n    entities: {\n        owner: {\n            description: 'The individual who can spend from this wallet.',\n            name: 'Owner',\n            scripts: ['lock', 'unlock'],\n            variables: {\n                key: {\n                    description: 'The private key that controls this wallet.',\n                    name: 'Key',\n                    type: 'Key',\n                },\n            },\n        },\n    },\n    name: 'Single Signature (P2PKH)',\n    scripts: {\n        lock: {\n            lockingType: 'standard',\n            name: 'P2PKH Lock',\n            script: 'OP_DUP\\nOP_HASH160 <$(<key.public_key> OP_HASH160\\n)> OP_EQUALVERIFY\\nOP_CHECKSIG',\n        },\n        unlock: {\n            name: 'Unlock',\n            script: '<key.schnorr_signature.all_outputs>\\n<key.public_key>',\n            unlocks: 'lock',\n        },\n    },\n    supported: ['BCH_2020_05', 'BCH_2021_05', 'BCH_2022_05'],\n    version: 0,\n};\n/**\n * A standard single-factor wallet template that uses\n * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use\n * on the network.\n *\n * This P2PKH template uses BCH Schnorr signatures, reducing the size of\n * transactions.\n *\n * Because the template uses a Hierarchical Deterministic (HD) key, it also\n * supports watch-only clients.\n */\nexport const walletTemplateP2pkh = {\n    $schema: 'https://libauth.org/schemas/wallet-template-v0.schema.json',\n    description: 'A standard single-factor wallet template that uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\\n\\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions. Because the template uses a Hierarchical Deterministic (HD) key, it also supports watch-only clients.',\n    entities: {\n        owner: {\n            description: 'The individual who can spend from this wallet.',\n            name: 'Owner',\n            scripts: ['lock', 'unlock'],\n            variables: {\n                key: {\n                    description: 'The private key that controls this wallet.',\n                    name: 'Key',\n                    type: 'HdKey',\n                },\n            },\n        },\n    },\n    name: 'Single Signature (P2PKH)',\n    scripts: {\n        lock: {\n            lockingType: 'standard',\n            name: 'P2PKH Lock',\n            script: 'OP_DUP\\nOP_HASH160 <$(<key.public_key> OP_HASH160\\n)> OP_EQUALVERIFY\\nOP_CHECKSIG',\n        },\n        unlock: {\n            name: 'Unlock',\n            script: '<key.schnorr_signature.all_outputs>\\n<key.public_key>',\n            unlocks: 'lock',\n        },\n    },\n    supported: ['BCH_2020_05', 'BCH_2021_05', 'BCH_2022_05'],\n    version: 0,\n};\n//# sourceMappingURL=p2pkh.js.map","import { lockingBytecodeToCashAddress } from '../address/address.js';\nimport { formatError } from '../format/format.js';\nimport { stringifyErrors } from '../language/language.js';\nimport { walletTemplateToCompilerBCH } from './compiler-bch/compiler-bch.js';\nimport { walletTemplateP2pkh, walletTemplateP2pkhNonHd, } from './standard/standard.js';\nexport var P2pkhUtilityError;\n(function (P2pkhUtilityError) {\n    P2pkhUtilityError[\"hdPrivateKeyToP2pkhLockingBytecodeCompilation\"] = \"P2PKH utility error: could not derive P2PKH locking bytecode from the provided HD private key.\";\n    P2pkhUtilityError[\"hdPublicKeyToP2pkhLockingBytecodeCompilation\"] = \"P2PKH utility error: could not derive P2PKH locking bytecode from the provided HD public key.\";\n    P2pkhUtilityError[\"privateKeyToP2pkhLockingBytecodeCompilation\"] = \"P2PKH utility error: could not derive P2PKH locking bytecode from the provided private key.\";\n    P2pkhUtilityError[\"publicKeyToP2pkhLockingBytecodeCompilation\"] = \"P2PKH utility error: could not derive P2PKH locking bytecode from the provided public key.\";\n})(P2pkhUtilityError || (P2pkhUtilityError = {}));\n/**\n * Derive the P2PKH locking bytecode of the provided private key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid private key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive the resulting CashAddress, use\n * {@link privateKeyToP2pkhCashAddress}. For HD private keys, use\n * {@link hdPrivateKeyToP2pkhLockingBytecode}. For the public key equivalent,\n * see {@link publicKeyToP2pkhLockingBytecode}.\n */\nexport const privateKeyToP2pkhLockingBytecode = ({ privateKey, throwErrors = true, }) => {\n    const compiler = walletTemplateToCompilerBCH(walletTemplateP2pkhNonHd);\n    const lockingBytecode = compiler.generateBytecode({\n        data: { keys: { privateKeys: { key: privateKey } } },\n        scriptId: 'lock',\n    });\n    if (!lockingBytecode.success) {\n        return formatError(P2pkhUtilityError.privateKeyToP2pkhLockingBytecodeCompilation, stringifyErrors(lockingBytecode.errors), throwErrors);\n    }\n    return lockingBytecode.bytecode;\n};\n/**\n * Derive the P2PKH locking bytecode of the provided public key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid public key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive the resulting CashAddress, use {@link publicKeyToP2pkhCashAddress}.\n * For HD public keys, use {@link hdPublicKeyToP2pkhLockingBytecode}. For the\n * private key equivalent, see {@link privateKeyToP2pkhLockingBytecode}.\n */\nexport const publicKeyToP2pkhLockingBytecode = ({ publicKey, throwErrors = true, }) => {\n    const compiler = walletTemplateToCompilerBCH(walletTemplateP2pkhNonHd);\n    const lockingBytecode = compiler.generateBytecode({\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        data: { bytecode: { 'key.public_key': publicKey } },\n        scriptId: 'lock',\n    });\n    if (!lockingBytecode.success) {\n        return formatError(P2pkhUtilityError.publicKeyToP2pkhLockingBytecodeCompilation, stringifyErrors(lockingBytecode.errors), throwErrors);\n    }\n    return lockingBytecode.bytecode;\n};\n/**\n * Derive the P2PKH locking bytecode at the provided path and address index of\n * the provided HD private key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid HD private key or derivation path. To handle errors in a type-safe\n * way, set `throwErrors` to `false`.\n *\n * To derive the resulting CashAddress, use\n * {@link hdPrivateKeyToP2pkhCashAddress}. For non-HD private keys, use\n * {@link privateKeyToP2pkhLockingBytecode}. For the HD public key equivalent,\n * see {@link hdPublicKeyToP2pkhLockingBytecode}.\n */\nexport const hdPrivateKeyToP2pkhLockingBytecode = ({ addressIndex, hdPrivateKey, privateDerivationPath = 'i', throwErrors = true, }) => {\n    const template = structuredClone(walletTemplateP2pkh);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    template.entities.owner.variables.key.privateDerivationPath =\n        privateDerivationPath;\n    const compiler = walletTemplateToCompilerBCH(template);\n    const lockingBytecode = compiler.generateBytecode({\n        data: { hdKeys: { addressIndex, hdPrivateKeys: { owner: hdPrivateKey } } },\n        scriptId: 'lock',\n    });\n    if (!lockingBytecode.success) {\n        return formatError(P2pkhUtilityError.hdPrivateKeyToP2pkhLockingBytecodeCompilation, stringifyErrors(lockingBytecode.errors), throwErrors);\n    }\n    return lockingBytecode.bytecode;\n};\n/**\n * Derive the P2PKH locking bytecode at the provided index of the provided HD\n * public key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid HD public key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive the resulting CashAddress, use\n * {@link hdPublicKeyToP2pkhCashAddress}. For non-HD public keys, use\n * {@link publicKeyToP2pkhLockingBytecode}. For the HD private key equivalent,\n * see {@link hdPrivateKeyToP2pkhLockingBytecode}.\n */\nexport const hdPublicKeyToP2pkhLockingBytecode = ({ addressIndex, hdPublicKey, hdPublicKeyDerivationPath = '', throwErrors = true, publicDerivationPath = 'i', }) => {\n    const template = structuredClone(walletTemplateP2pkh);\n    /* eslint-disable functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n    template.entities.owner.variables.key.publicDerivationPath =\n        publicDerivationPath;\n    template.entities.owner.variables.key.hdPublicKeyDerivationPath =\n        hdPublicKeyDerivationPath;\n    template.entities.owner.variables.key.privateDerivationPath =\n        hdPublicKeyDerivationPath === ''\n            ? publicDerivationPath\n            : `${hdPublicKeyDerivationPath}/${publicDerivationPath}`;\n    /* eslint-enable functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n    const compiler = walletTemplateToCompilerBCH(template);\n    const lockingBytecode = compiler.generateBytecode({\n        data: { hdKeys: { addressIndex, hdPublicKeys: { owner: hdPublicKey } } },\n        scriptId: 'lock',\n    });\n    if (!lockingBytecode.success) {\n        return formatError(P2pkhUtilityError.hdPublicKeyToP2pkhLockingBytecodeCompilation, stringifyErrors(lockingBytecode.errors), throwErrors);\n    }\n    return lockingBytecode.bytecode;\n};\n/**\n * Derive the P2PKH address of the provided private key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid private key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive only the locking bytecode, use\n * {@link privateKeyToP2pkhLockingBytecode}. For HD private keys, use\n * {@link hdPrivateKeyToP2pkhCashAddress}. For the public key equivalent,\n * see {@link publicKeyToP2pkhCashAddress}.\n */\nexport const privateKeyToP2pkhCashAddress = ({ privateKey, prefix = 'bitcoincash', throwErrors = true, tokenSupport = false, }) => {\n    const bytecode = privateKeyToP2pkhLockingBytecode({\n        privateKey,\n        throwErrors,\n    });\n    if (typeof bytecode === 'string') {\n        return formatError(bytecode, undefined, throwErrors);\n    }\n    return lockingBytecodeToCashAddress({\n        bytecode,\n        prefix,\n        tokenSupport,\n    });\n};\n/**\n * Derive the P2PKH address of the provided public key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid public key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive only the locking bytecode, use\n * {@link publicKeyToP2pkhLockingBytecode}. For HD public keys, use\n * {@link hdPublicKeyToP2pkhCashAddress}. For the private key equivalent,\n * see {@link privateKeyToP2pkhCashAddress}.\n */\nexport const publicKeyToP2pkhCashAddress = ({ publicKey, prefix = 'bitcoincash', throwErrors = true, tokenSupport = false, }) => {\n    const bytecode = publicKeyToP2pkhLockingBytecode({\n        publicKey,\n        throwErrors,\n    });\n    if (typeof bytecode === 'string') {\n        return formatError(bytecode, undefined, throwErrors);\n    }\n    return lockingBytecodeToCashAddress({\n        bytecode,\n        prefix,\n        tokenSupport,\n    });\n};\n/**\n * Derive the P2PKH address at the provided index of the provided HD\n * private key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid HD private key or derivation path. To handle errors in a type-safe\n * way, set `throwErrors` to `false`.\n *\n * To derive only the locking bytecode, use\n * {@link hdPrivateKeyToP2pkhLockingBytecode}. For non-HD private keys, use\n * {@link privateKeyToP2pkhCashAddress}. For the HD public key equivalent,\n * see {@link hdPublicKeyToP2pkhCashAddress}.\n */\nexport const hdPrivateKeyToP2pkhCashAddress = ({ addressIndex, hdPrivateKey, prefix = 'bitcoincash', privateDerivationPath = 'i', throwErrors = true, tokenSupport = false, }) => {\n    const bytecode = hdPrivateKeyToP2pkhLockingBytecode({\n        addressIndex,\n        hdPrivateKey,\n        privateDerivationPath,\n        throwErrors,\n    });\n    if (typeof bytecode === 'string') {\n        return formatError(bytecode, undefined, throwErrors);\n    }\n    return lockingBytecodeToCashAddress({\n        bytecode,\n        prefix,\n        tokenSupport,\n    });\n};\n/**\n * Derive the P2PKH address at the provided index of the provided HD\n * public key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid HD public key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive only the locking bytecode, use\n * {@link hdPublicKeyToP2pkhLockingBytecode}. For non-HD public keys, use\n * {@link publicKeyToP2pkhCashAddress}. For the HD private key equivalent,\n * see {@link hdPrivateKeyToP2pkhCashAddress}.\n */\nexport const hdPublicKeyToP2pkhCashAddress = ({ addressIndex, hdPublicKey, hdPublicKeyDerivationPath = '', prefix = 'bitcoincash', publicDerivationPath = 'i', throwErrors = true, tokenSupport = false, }) => {\n    const bytecode = hdPublicKeyToP2pkhLockingBytecode({\n        addressIndex,\n        hdPublicKey,\n        hdPublicKeyDerivationPath,\n        publicDerivationPath,\n        throwErrors,\n    });\n    if (typeof bytecode === 'string') {\n        return formatError(bytecode, undefined, throwErrors);\n    }\n    return lockingBytecodeToCashAddress({\n        bytecode,\n        prefix,\n        tokenSupport,\n    });\n};\n//# sourceMappingURL=p2pkh-utils.js.map","export default class IndexedDBProvider {\n    constructor(dbName = \"wallet\", storeName = \"wallet\") {\n        this.db = null;\n        this.dbName = dbName;\n        this.storeName = storeName;\n    }\n    async openDB() {\n        if (this.db)\n            return this.db;\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.dbName, 31);\n            request.onupgradeneeded = (event) => {\n                const db = request.result;\n                if (!db.objectStoreNames.contains(this.storeName)) {\n                    db.createObjectStore(this.storeName, { keyPath: \"name\" });\n                }\n            };\n            request.onsuccess = () => {\n                this.db = request.result;\n                resolve(this.db);\n            };\n            request.onerror = () => reject(request.error);\n        });\n    }\n    async init() {\n        await this.openDB();\n        return this;\n    }\n    async close() {\n        if (this.db) {\n            this.db.close();\n            this.db = null;\n        }\n        return this;\n    }\n    getInfo() {\n        return \"indexedDB\";\n    }\n    async addWallet(name, walletId) {\n        const db = await this.openDB();\n        return new Promise((resolve, reject) => {\n            const tx = db.transaction(this.storeName, \"readwrite\");\n            const store = tx.objectStore(this.storeName);\n            const getReq = store.get(name);\n            getReq.onsuccess = () => {\n                if (getReq.result) {\n                    resolve(false);\n                }\n                else {\n                    const addReq = store.add({ name, wallet: walletId });\n                    addReq.onsuccess = () => resolve(true);\n                    addReq.onerror = () => reject(addReq.error);\n                }\n            };\n            getReq.onerror = () => reject(getReq.error);\n        });\n    }\n    async getWallet(name) {\n        const db = await this.openDB();\n        return new Promise((resolve, reject) => {\n            const tx = db.transaction(this.storeName, \"readonly\");\n            const store = tx.objectStore(this.storeName);\n            const req = store.get(name);\n            req.onsuccess = () => resolve(req.result);\n            req.onerror = () => reject(req.error);\n        });\n    }\n    async getWallets() {\n        const db = await this.openDB();\n        return new Promise((resolve, reject) => {\n            const tx = db.transaction(this.storeName, \"readonly\");\n            const store = tx.objectStore(this.storeName);\n            const req = store.getAll();\n            req.onsuccess = () => resolve(req.result || []);\n            req.onerror = () => reject(req.error);\n        });\n    }\n    async updateWallet(name, walletId) {\n        const db = await this.openDB();\n        return new Promise((resolve, reject) => {\n            const tx = db.transaction(this.storeName, \"readwrite\");\n            const store = tx.objectStore(this.storeName);\n            const getReq = store.get(name);\n            getReq.onsuccess = () => {\n                if (!getReq.result) {\n                    resolve();\n                }\n                else {\n                    const putReq = store.put({ name, wallet: walletId });\n                    putReq.onsuccess = () => resolve();\n                    putReq.onerror = () => reject(putReq.error);\n                }\n            };\n            getReq.onerror = () => reject(getReq.error);\n        });\n    }\n    async walletExists(name) {\n        return (await this.getWallet(name)) !== undefined;\n    }\n}\n//# sourceMappingURL=IndexedDBProvider.js.map","export var RuntimePlatform;\n(function (RuntimePlatform) {\n    RuntimePlatform[\"node\"] = \"node\";\n    RuntimePlatform[\"browser\"] = \"browser\";\n    RuntimePlatform[\"webworker\"] = \"webworker\";\n})(RuntimePlatform || (RuntimePlatform = {}));\nexport function getRuntimePlatform() {\n    // https://github.com/foo123/asynchronous.js/blob/master/asynchronous.js\n    if (\"undefined\" !== typeof global &&\n        (\"[object global]\" === toString.call(global) ||\n            \"[object Object]\" === toString.call(global))) {\n        return RuntimePlatform.node;\n    }\n    else {\n        if (\"undefined\" !== typeof WorkerGlobalScope &&\n            \"function\" === typeof importScripts &&\n            navigator instanceof WorkerNavigator) {\n            return RuntimePlatform.webworker;\n        }\n        else if (\"undefined\" !== typeof navigator &&\n            \"undefined\" !== typeof document) {\n            return RuntimePlatform.browser;\n        }\n        else {\n            throw Error(\"Could not determine runtime platform\");\n        }\n    }\n}\n//# sourceMappingURL=getRuntimePlatform.js.map","export default {}","/**\n * A simple method used throughout Libauth to format error messages. By\n * formatting errors this way, downstream consumers can detect specific error\n * types by matching the `errorType`. For example, the error:\n *\n * ```ts\n * formatError(SomeTypeOfError.exceedsMaximum, `Provided value: ${value}`);\n * ```\n *\n * Can be detected with `String.includes()`, even if the\n * `SomeTypeOfError.exceedsMaximum` error message changes:\n * ```ts\n * error.includes(SomeTypeOfError.exceedsMaximum);\n * // => true\n * ```\n *\n * Using this method ensures consistency across the library.\n *\n * @remarks\n * In Libauth, expected errors use the type `string` rather than `Error` (or\n * other objects that inherit from `Error`) to simplify the resulting types and\n * typechecking requirements. This ensures consistency of returned errors in all\n * environments, avoids exposing internal details like stack traces and line\n * numbers, and allows error messages to be recorded or used as text without an\n * intermediate `toString()` method.\n *\n * @param errorType - the error enum member representing this error type\n * @param errorDetails - optional, additional details to include in the error\n * message\n * @param throwError - if `true`, the function will throw an `Error` rather than\n * returning the string (defaults to `false`).\n */\nexport const formatError = (errorType, errorDetails, throwError = false) => {\n    const message = `${errorType}${errorDetails === undefined ? '' : ` ${errorDetails}`}`;\n    if (throwError) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new Error(message);\n    }\n    return message;\n};\n/**\n *\n * @param value - the unexpected value\n * @param message - an optional error message\n */\nexport const unknownValue = (value, message = `Received an unknown value; this should have been caught by TypeScript - are your types correct?`) => formatError(message, String(value), true);\n/**\n * A utility to handle error results by throwing an `Error` object.\n *\n * If the provided value is of type `string`, the contents of the string are\n * thrown as a new `Error`, otherwise, the value is returned unmodified.\n *\n * This method is useful for eliminating `string` as a possible type from a\n * resulting value, particularly in places where an error is never expected to\n * occur in practice (i.e. no user or runtime input is involved), e.g.:\n *\n * ```ts\n * import { assertSuccess, decodeCashAddress, binToHex } from '@bitauth/libauth';\n * const address = 'bitcoincash:zq2azmyyv6dtgczexyalqar70q036yund5j2mspghf';\n *\n * // Might be either a string or a decoded address:\n * const decoded = decodeCashAddress(address);\n * // Now guaranteed to be a decoded address (error messages are thrown):\n * const tokenAddress = assertSuccess(decoded);\n * // The result can be used immediately:\n * console.log(binToHex(tokenAddress.payload));\n * ```\n *\n * @param result - A result which might be a string.\n * @param expectation - An optional, descriptive prefix for the error message\n * thrown in failure cases. By default,\n * `Expected a successful result, but encountered an error: `.\n */\nexport const assertSuccess = (result, expectation = 'Expected a successful result, but encountered an error: ') => {\n    // eslint-disable-next-line functional/no-throw-statements\n    if (typeof result === 'string')\n        throw new Error(`${expectation}${result}`);\n    return result;\n};\nexport const assertNonNull = (value, expectation = 'Expected a non-null value, but encountered: ') => {\n    if (value === null || value === undefined) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new Error(`${expectation}${String(value)}`);\n    }\n    return value;\n};\n//# sourceMappingURL=error.js.map","import { formatError } from './error.js';\nexport var BaseConverterCreationError;\n(function (BaseConverterCreationError) {\n    BaseConverterCreationError[\"tooLong\"] = \"Base converter creation error: an alphabet may be no longer than 254 characters.\";\n    BaseConverterCreationError[\"ambiguousCharacter\"] = \"Base converter creation error: a character code may only appear once in a single alphabet.\";\n})(BaseConverterCreationError || (BaseConverterCreationError = {}));\nexport var BaseConversionError;\n(function (BaseConversionError) {\n    BaseConversionError[\"unknownCharacter\"] = \"Base conversion error: encountered an unknown character for this alphabet.\";\n})(BaseConversionError || (BaseConversionError = {}));\n/**\n * Create a {@link BaseConverter}, exposing methods for encoding and decoding\n * `Uint8Array`s using bitcoin-style padding: each leading zero in the input is\n * replaced with the zero-index character of the `alphabet`, then the remainder\n * of the input is encoded as a large number in the specified alphabet.\n *\n * For example, using the alphabet `01`, the input `[0, 15]` is encoded `01111`\n * – a single `0` represents the leading padding, followed by the base2 encoded\n * `0x1111` (15). With the same alphabet, the input `[0, 0, 255]` is encoded\n * `0011111111` - only two `0` characters are required to represent both\n * leading zeros, followed by the base2 encoded `0x11111111` (255).\n *\n * **This is not compatible with `RFC 3548`'s `Base16`, `Base32`, or `Base64`.**\n *\n * If the alphabet is malformed, this method returns the error as a `string`.\n *\n * @param alphabet - an ordered string that maps each index to a character,\n * e.g. `0123456789`.\n */\n// Algorithm from the `base-x` implementation (derived from the original Satoshi implementation): https://github.com/cryptocoinjs/base-x\nexport const createBaseConverter = (alphabet) => {\n    const undefinedValue = 255;\n    const uint8ArrayBase = 256;\n    if (alphabet.length >= undefinedValue)\n        return formatError(BaseConverterCreationError.tooLong, `Alphabet length: ${alphabet.length}`);\n    const alphabetMap = new Uint8Array(uint8ArrayBase).fill(undefinedValue);\n    // eslint-disable-next-line functional/no-loop-statements, functional/no-let, no-plusplus\n    for (let index = 0; index < alphabet.length; index++) {\n        const characterCode = alphabet.charCodeAt(index);\n        if (alphabetMap[characterCode] !== undefinedValue) {\n            return formatError(BaseConverterCreationError.ambiguousCharacter, `Ambiguous character: ${alphabetMap[characterCode]}`);\n        }\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        alphabetMap[characterCode] = index;\n    }\n    const base = alphabet.length;\n    const paddingCharacter = alphabet.charAt(0);\n    const factor = Math.log(base) / Math.log(uint8ArrayBase);\n    const inverseFactor = Math.log(uint8ArrayBase) / Math.log(base);\n    return {\n        // eslint-disable-next-line complexity\n        decode: (input) => {\n            if (input.length === 0)\n                return Uint8Array.of();\n            const firstNonZeroIndex = input\n                .split('')\n                .findIndex((character) => character !== paddingCharacter);\n            if (firstNonZeroIndex === -1) {\n                return new Uint8Array(input.length);\n            }\n            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * factor + 1);\n            const decoded = new Uint8Array(requiredLength);\n            /* eslint-disable functional/no-let, functional/no-expression-statements */\n            let nextByte = firstNonZeroIndex;\n            let remainingBytes = 0;\n            // eslint-disable-next-line functional/no-loop-statements\n            while (input[nextByte] !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                let carry = alphabetMap[input.charCodeAt(nextByte)];\n                if (carry === undefinedValue)\n                    return formatError(BaseConversionError.unknownCharacter, `Unknown character: \"${input[nextByte]}\".`);\n                let digit = 0;\n                // eslint-disable-next-line functional/no-loop-statements\n                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; \n                // eslint-disable-next-line no-plusplus\n                steps--, digit++) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    carry += Math.floor(base * decoded[steps]);\n                    // eslint-disable-next-line functional/immutable-data\n                    decoded[steps] = Math.floor(carry % uint8ArrayBase);\n                    carry = Math.floor(carry / uint8ArrayBase);\n                }\n                remainingBytes = digit;\n                // eslint-disable-next-line no-plusplus\n                nextByte++;\n            }\n            /* eslint-enable functional/no-let, functional/no-expression-statements */\n            const firstNonZeroResultDigit = decoded.findIndex((value) => value !== 0);\n            const bin = new Uint8Array(firstNonZeroIndex + (requiredLength - firstNonZeroResultDigit));\n            // eslint-disable-next-line functional/no-expression-statements\n            bin.set(decoded.slice(firstNonZeroResultDigit), firstNonZeroIndex);\n            return bin;\n        },\n        // eslint-disable-next-line complexity\n        encode: (input) => {\n            if (input.length === 0)\n                return '';\n            const firstNonZeroIndex = input.findIndex((byte) => byte !== 0);\n            if (firstNonZeroIndex === -1) {\n                return paddingCharacter.repeat(input.length);\n            }\n            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * inverseFactor + 1);\n            const encoded = new Uint8Array(requiredLength);\n            /* eslint-disable functional/no-let, functional/no-expression-statements */\n            let nextByte = firstNonZeroIndex;\n            let remainingBytes = 0;\n            // eslint-disable-next-line functional/no-loop-statements\n            while (nextByte !== input.length) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                let carry = input[nextByte];\n                let digit = 0;\n                // eslint-disable-next-line functional/no-loop-statements\n                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; \n                // eslint-disable-next-line no-plusplus\n                steps--, digit++) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    carry += Math.floor(uint8ArrayBase * encoded[steps]);\n                    // eslint-disable-next-line functional/immutable-data\n                    encoded[steps] = Math.floor(carry % base);\n                    carry = Math.floor(carry / base);\n                }\n                remainingBytes = digit;\n                // eslint-disable-next-line no-plusplus\n                nextByte++;\n            }\n            /* eslint-enable functional/no-let, functional/no-expression-statements */\n            const firstNonZeroResultDigit = encoded.findIndex((value) => value !== 0);\n            const padding = paddingCharacter.repeat(firstNonZeroIndex);\n            return encoded\n                .slice(firstNonZeroResultDigit)\n                .reduce((all, digit) => all + alphabet.charAt(digit), padding);\n        },\n    };\n};\nexport const bitcoinBase58Alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst base58 = createBaseConverter(bitcoinBase58Alphabet);\n/**\n * Convert a bitcoin-style base58-encoded string to a Uint8Array.\n *\n * For the reverse, see {@link binToBase58}.\n *\n * See {@link createBaseConverter} for format details.\n * @param input - a valid base58-encoded string to decode\n */\nexport const base58ToBin = base58.decode;\n/**\n * Convert a Uint8Array to a bitcoin-style base58-encoded string.\n *\n * For the reverse, see {@link base58ToBin}.\n *\n * See {@link createBaseConverter} for format details.\n * @param input - the Uint8Array to base58 encode\n */\nexport const binToBase58 = base58.encode;\n//# sourceMappingURL=base-convert.js.map","// base64 encode/decode derived from: https://github.com/niklasvh/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64GroupLength = 4;\nconst nonBase64Chars = new RegExp(`[^${chars}=]`, 'u');\n/**\n * For use before {@link base64ToBin}. Returns true if the provided string is\n * valid base64 (length is divisible by 4, only uses base64 characters).\n * @param maybeBase64 - a string to test\n */\nexport const isBase64 = (maybeBase64) => maybeBase64.length % base64GroupLength === 0 &&\n    !nonBase64Chars.test(maybeBase64);\n/* eslint-disable functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus, @typescript-eslint/no-non-null-assertion */\n/**\n * Convert a base64-encoded string to a Uint8Array.\n *\n * Note, this method always completes. If `validBase64` is not valid base64, an\n * incorrect result will be returned. If `validBase64` is potentially malformed,\n * check it with {@link isBase64} before calling this method.\n *\n * For the reverse, see {@link binToBase64}.\n *\n * @param validBase64 - a valid base64-encoded string to decode\n */\nexport const base64ToBin = (validBase64) => {\n    const lookup = new Uint8Array(123);\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements\n    for (let i = 0; i < chars.length; i++) {\n        lookup[chars.charCodeAt(i)] = i;\n    }\n    const bufferLengthEstimate = validBase64.length * 0.75;\n    const stringLength = validBase64.length;\n    const bufferLength = validBase64[validBase64.length - 1] === '=' // eslint-disable-line @typescript-eslint/prefer-string-starts-ends-with\n        ? validBase64[validBase64.length - 2] === '='\n            ? bufferLengthEstimate - 2\n            : bufferLengthEstimate - 1\n        : bufferLengthEstimate;\n    const buffer = new ArrayBuffer(bufferLength);\n    const bytes = new Uint8Array(buffer);\n    // eslint-disable-next-line functional/no-let\n    let p = 0;\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements\n    for (let i = 0; i < stringLength; i += 4) {\n        const encoded1 = lookup[validBase64.charCodeAt(i)];\n        const encoded2 = lookup[validBase64.charCodeAt(i + 1)];\n        const encoded3 = lookup[validBase64.charCodeAt(i + 2)];\n        const encoded4 = lookup[validBase64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return bytes;\n};\n/**\n * Convert a Uint8Array to a base64-encoded string.\n *\n * For the reverse, see {@link base64ToBin}.\n *\n * @param bytes - the Uint8Array to base64 encode\n */\nexport const binToBase64 = (bytes) => {\n    // eslint-disable-next-line functional/no-let\n    let result = '';\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements\n    for (let i = 0; i < bytes.length; i += 3) {\n        result += chars[bytes[i] >> 2];\n        result += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        result += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        result += chars[bytes[i + 2] & 63];\n    }\n    const padded = bytes.length % 3 === 2\n        ? `${result.substring(0, result.length - 1)}=`\n        : bytes.length % 3 === 1\n            ? `${result.substring(0, result.length - 2)}==`\n            : result;\n    return padded;\n};\n/* eslint-enable functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus, @typescript-eslint/no-non-null-assertion */\n//# sourceMappingURL=base64.js.map","/**\n * Returns an array of incrementing values starting at `begin` and incrementing\n * by one for `length`.\n *\n * E.g.: `range(3)` → `[0, 1, 2]` and `range(3, 1)` → `[1, 2, 3]`\n *\n * @param length - the number of elements in the array\n * @param begin - the index at which the range starts (default: `0`)\n */\nexport const range = (length, begin = 0) => Array.from({ length }, (_, index) => begin + index);\n/**\n * Split a string into an array of `chunkLength` strings. The final string may\n * have a length between 1 and `chunkLength`.\n *\n * E.g.: `splitEvery('abcde', 2)` → `['ab', 'cd', 'e']`\n */\nexport const splitEvery = (input, chunkLength) => range(Math.ceil(input.length / chunkLength))\n    .map((index) => index * chunkLength)\n    .map((begin) => input.slice(begin, begin + chunkLength));\nconst hexByteWidth = 2;\nconst hexadecimal = 16;\n/**\n * Decode a hexadecimal-encoded string into a Uint8Array.\n *\n * E.g.: `hexToBin('2a64ff')` → `new Uint8Array([42, 100, 255])`\n *\n * Note, this method always completes. If `validHex` is not divisible by 2,\n * the final byte will be parsed as if it were prepended with a `0` (e.g. `aaa`\n * is interpreted as `aa0a`). If `validHex` is potentially malformed, check\n * it with {@link isHex} before calling this method.\n *\n * For the reverse, see {@link binToHex}.\n *\n * @param validHex - a string of valid, hexadecimal-encoded data\n */\nexport const hexToBin = (validHex) => Uint8Array.from(splitEvery(validHex, hexByteWidth).map((byte) => parseInt(byte, hexadecimal)));\n/**\n * For use before {@link hexToBin}. Returns true if the provided string is valid\n * hexadecimal (length is divisible by 2, only uses hexadecimal characters).\n * @param maybeHex - a string to test\n */\nexport const isHex = (maybeHex) => maybeHex.length % hexByteWidth === 0 && !/[^a-fA-F0-9]/u.test(maybeHex);\n/**\n * Encode a Uint8Array into a hexadecimal-encoded string.\n *\n * E.g.: `binToHex(new Uint8Array([42, 100, 255]))` → `'2a64ff'`\n *\n * For the reverse, see {@link hexToBin}.\n *\n * @param bytes - a Uint8Array to encode\n */\nexport const binToHex = (bytes) => bytes.reduce((str, byte) => str + byte.toString(hexadecimal).padStart(hexByteWidth, '0'), '');\n/**\n * Decode a hexadecimal-encoded string into bytes, reverse it, then re-encode.\n *\n * @param validHex - a string of valid, hexadecimal-encoded data. See\n * {@link hexToBin} for more information.\n */\nexport const swapEndianness = (validHex) => binToHex(hexToBin(validHex).reverse());\n/**\n * Reduce an array of `Uint8Array`s into a single `Uint8Array`.\n * @param array - the array of `Uint8Array`s to flatten\n */\nexport const flattenBinArray = (array) => {\n    const totalLength = array.reduce((total, bin) => total + bin.length, 0);\n    const flattened = new Uint8Array(totalLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    array.reduce((index, bin) => {\n        // eslint-disable-next-line functional/no-expression-statements\n        flattened.set(bin, index);\n        return index + bin.length;\n    }, 0);\n    return flattened;\n};\n/**\n * Compare to `Uint8Array`s, return true if their contents are exactly the same,\n * otherwise return false.\n * @param a - the first Uint8Array\n * @param b - the second Uint8Array\n */\nexport const binsAreEqual = (a, b) => {\n    if (a.length !== b.length) {\n        return false;\n    }\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n//# sourceMappingURL=hex.js.map","import { splitEvery } from './hex.js';\nconst binaryByteWidth = 8;\nconst binary = 2;\n/**\n * Decode a binary-encoded string into a Uint8Array.\n *\n * E.g.: `binStringToBin('0010101001100100')` → `new Uint8Array([42, 100])`\n *\n * Note, this method always completes. If `binaryDigits` is not divisible by 8,\n * the final byte will be parsed as if it were prepended with `0`s (e.g. `1`\n * is interpreted as `00000001`). If `binaryDigits` is potentially malformed,\n * check it with `isBinString` before calling this method.\n *\n * For the reverse, see {@link binToBinString}.\n *\n * @param binaryDigits - a string of `0`s and `1`s with a length divisible by 8\n */\nexport const binStringToBin = (binaryDigits) => Uint8Array.from(splitEvery(binaryDigits, binaryByteWidth).map((byteString) => parseInt(byteString, binary)));\n/**\n * Encode a Uint8Array into a binary-encoded string.\n *\n * E.g.: `binToBinString(Uint8Array.from([42, 100]))` → `'0010101001100100'`\n *\n * For the reverse, see {@link binStringToBin}.\n *\n * @param bytes - a Uint8Array to encode\n */\nexport const binToBinString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(binary).padStart(binaryByteWidth, '0'), '');\n/**\n * For use before {@link binStringToBin}. Returns true if the provided string is\n * a valid binary string (length is divisible by 8 and only uses the characters\n * `0` and `1`).\n * @param maybeBinString - a string to test\n */\nexport const isBinString = (maybeBinString) => maybeBinString.length % binaryByteWidth === 0 &&\n    !/[^01]/u.test(maybeBinString);\n//# sourceMappingURL=bin-string.js.map","import { formatError } from './error.js';\n/**\n * Encode a positive integer as a little-endian Uint8Array. For values exceeding\n * `Number.MAX_SAFE_INTEGER` (`9007199254740991`),\n * use {@link bigIntToBinUintLE}.\n *\n * Negative values will return the same result as `0`.\n *\n * For the reverse, see {@link binToNumberUintLE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUintLE = (value) => {\n    const baseUint8Array = 256;\n    const result = [];\n    // eslint-disable-next-line functional/no-let\n    let remaining = value;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (remaining >= baseUint8Array) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(remaining % baseUint8Array);\n        // eslint-disable-next-line functional/no-expression-statements\n        remaining = Math.floor(remaining / baseUint8Array);\n    }\n    // eslint-disable-next-line functional/no-conditional-statements, functional/no-expression-statements, functional/immutable-data\n    if (remaining > 0)\n        result.push(remaining);\n    return Uint8Array.from(result);\n};\n/**\n * Fill a new Uint8Array of a specific byte-length with the contents of a given\n * Uint8Array, truncating or padding the Uint8Array with zeros.\n *\n * @param bin - the Uint8Array to resize\n * @param bytes - the desired byte-length\n */\nexport const binToFixedLength = (bin, bytes) => {\n    const fixedBytes = new Uint8Array(bytes);\n    const maxValue = 255;\n    // eslint-disable-next-line functional/no-expression-statements, @typescript-eslint/no-unused-expressions\n    bin.length > bytes ? fixedBytes.fill(maxValue) : fixedBytes.set(bin);\n    return fixedBytes;\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array, clamping the\n * results – values exceeding `0xffff` (`65535`) return the same result as\n * `0xffff`, negative values will return the same result as `0`.\n *\n * For an alternative overflow behavior, see {@link numberToBinUint16LE}.\n *\n * For the reverse, see {@link binToNumberUint16LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint16LEClamped = (value) => {\n    const uint16 = 2;\n    return binToFixedLength(numberToBinUintLE(value), uint16);\n};\n/**\n * Encode a positive integer as a 4-byte Uint32LE Uint8Array, clamping the\n * results – values exceeding `0xffffffff` (`4294967295`) return the same result\n * as `0xffffffff`, negative values will return the same result as `0`.\n *\n * For an alternative overflow behavior, see {@link numberToBinUint32LE}.\n *\n * For the reverse, see {@link binToNumberUint32LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint32LEClamped = (value) => {\n    const uint32 = 4;\n    return binToFixedLength(numberToBinUintLE(value), uint32);\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff` (`65535`). If applicable, applications should handle such\n * cases prior to calling this method.\n *\n * For an alternative overflow behavior, see {@link numberToBinUint16LEClamped}.\n *\n * For the reverse, see {@link binToNumberUint16LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint16LE = (value) => {\n    const uint16Length = 2;\n    const bin = new Uint8Array(uint16Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setUint16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode an integer as a 2-byte Int16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0x0000` to `0xffff` (`65535`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * For the reverse, see {@link binToNumberInt16LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinInt16LE = (value) => {\n    const int16Length = 2;\n    const bin = new Uint8Array(int16Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setInt16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode an integer as a 4-byte Uint32LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0x00000000` to `0xffffffff` (`4294967295`). If applicable, applications\n * should handle such cases prior to calling this method.\n *\n * For the reverse, see {@link binToNumberInt32LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinInt32LE = (value) => {\n    const int32Length = 4;\n    const bin = new Uint8Array(int32Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setInt32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Decode a 2-byte Int16LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 2 bytes.\n *\n * For the reverse, see {@link numberToBinInt16LE}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToNumberInt16LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getInt16(0, readAsLittleEndian);\n};\n/**\n * Decode a 4-byte Int32LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 4 bytes.\n *\n * For the reverse, see {@link numberToBinInt32LE}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToNumberInt32LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getInt32(0, readAsLittleEndian);\n};\n/**\n * Encode a positive integer as a 2-byte Uint16LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff` (`65535`). If applicable, applications should handle such\n * cases prior to calling this method.\n *\n * For the reverse, reverse the result of {@link binToNumberUint16LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint16BE = (value) => {\n    const uint16Length = 2;\n    const bin = new Uint8Array(uint16Length);\n    const writeAsLittleEndian = false;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setUint16(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive number as a 4-byte Uint32LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffffffff` (`4294967295`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * For an alternative overflow behavior, see {@link numberToBinUint32LEClamped}.\n *\n * For the reverse, see {@link binToNumberUint32LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint32LE = (value) => {\n    const uint32Length = 4;\n    const bin = new Uint8Array(uint32Length);\n    const writeAsLittleEndian = true;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setUint32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive number as a 4-byte Uint32BE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffffffff` (`4294967295`). If applicable, applications should handle\n * such cases prior to calling this method.\n *\n * For the reverse, reverse the result of {@link binToNumberUint32LE}.\n *\n * @param value - the number to encode\n */\nexport const numberToBinUint32BE = (value) => {\n    const uint32Length = 4;\n    const bin = new Uint8Array(uint32Length);\n    const writeAsLittleEndian = false;\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    // eslint-disable-next-line functional/no-expression-statements\n    view.setUint32(0, value, writeAsLittleEndian);\n    return bin;\n};\n/**\n * Encode a positive BigInt as little-endian Uint8Array. Negative values will\n * return the same result as `0`.\n *\n * For the reverse, see {@link binToBigIntUintLE}.\n *\n * @param value - the number to encode\n */\nexport const bigIntToBinUintLE = (value) => {\n    const baseUint8Array = 256;\n    const base = BigInt(baseUint8Array);\n    const result = [];\n    // eslint-disable-next-line functional/no-let\n    let remaining = value;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (remaining >= base) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(Number(remaining % base));\n        // eslint-disable-next-line functional/no-expression-statements\n        remaining /= base;\n    }\n    // eslint-disable-next-line functional/no-conditional-statements, functional/no-expression-statements, functional/immutable-data\n    if (remaining > 0n)\n        result.push(Number(remaining));\n    return Uint8Array.from(result.length > 0 ? result : [0]);\n};\n/**\n * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array, clamping the\n * results – values exceeding `0xffff_ffff_ffff_ffff` (`18446744073709551615`)\n * return the same result as `0xffff_ffff_ffff_ffff`, negative values return the\n * same result as `0`.\n *\n * For an alternative overflow behavior, see {@link bigIntToBinUint64LE}.\n *\n * For the reverse, see {@link binToBigIntUint64LE}.\n *\n * @param value - the number to encode\n */\nexport const bigIntToBinUint64LEClamped = (value) => {\n    const uint64 = 8;\n    return binToFixedLength(bigIntToBinUintLE(value), uint64);\n};\n/**\n * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array.\n *\n * This method will return an incorrect result for values outside of the range\n * `0` to `0xffff_ffff_ffff_ffff` (`18446744073709551615`).\n *\n * For an alternative overflow behavior, see {@link bigIntToBinUint64LEClamped}.\n *\n * For the reverse, see {@link binToBigIntUint64LE}.\n *\n * @param value - the number to encode\n */\nexport const bigIntToBinUint64LE = (value) => {\n    const uint64LengthInBits = 64;\n    const valueAsUint64 = BigInt.asUintN(uint64LengthInBits, value);\n    const fixedLengthBin = bigIntToBinUint64LEClamped(valueAsUint64);\n    return fixedLengthBin;\n};\n/**\n * Encode an integer as a 4-byte, little-endian Uint8Array using the number's\n * two's compliment representation (the format used by JavaScript's bitwise\n * operators).\n *\n * @remarks\n * The C++ bitcoin implementations sometimes represent short vectors using\n * signed 32-bit integers (e.g. `sighashType`). This method can be used to test\n * compatibility with those implementations.\n *\n * @param value - the number to encode\n */\nexport const numberToBinInt32TwosCompliment = (value) => {\n    const bytes = 4;\n    const bitsInAByte = 8;\n    const bin = new Uint8Array(bytes);\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let index = 0; index < bytes; index++) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        bin[index] = value;\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, no-param-reassign\n        value >>>= bitsInAByte;\n    }\n    return bin;\n};\n/**\n * Decode a little-endian Uint8Array of any length into a number. For numbers\n * larger than `Number.MAX_SAFE_INTEGER` (`9007199254740991`), use\n * `binToBigIntUintLE`.\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * For the reverse, see {@link numberToBinUintLE}.\n *\n * @privateRemarks\n * We avoid a bitwise strategy here because JavaScript uses 32-bit signed\n * integers for bitwise math, so larger numbers are converted incorrectly. E.g.\n * `2147483648 << 8` is `0`, while `2147483648n << 8n` is `549755813888n`.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nexport const binToNumberUintLE = (bin, bytes = bin.length) => {\n    const base = 2;\n    const bitsInAByte = 8;\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce((accumulated, byte, i) => accumulated + byte * base ** (bitsInAByte * i), 0);\n};\n/**\n * Decode a 2-byte Uint16LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 2 bytes.\n *\n * For the reverse, see {@link numberToBinUint16LE}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToNumberUint16LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getUint16(0, readAsLittleEndian);\n};\n/**\n * Decode a 4-byte Uint32LE Uint8Array into a number.\n *\n * Throws if `bin` is shorter than 4 bytes.\n *\n * For the reverse, see {@link numberToBinUint32LE}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToNumberUint32LE = (bin) => {\n    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);\n    const readAsLittleEndian = true;\n    return view.getUint32(0, readAsLittleEndian);\n};\n/**\n * Decode a big-endian Uint8Array of any length into a BigInt. If starting from\n * a hex value, consider using the BigInt constructor instead:\n * ```\n * BigInt(`0x${hex}`)\n * ```\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * For the reverse, see {@link bigIntToBinUintBE}.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nexport const binToBigIntUintBE = (bin, bytes = bin.length) => {\n    const bitsInAByte = 8;\n    const shift = BigInt(bitsInAByte);\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce(\n    // eslint-disable-next-line no-bitwise\n    (accumulated, byte) => (accumulated << shift) | BigInt(byte), 0n);\n};\n/**\n * Encode a positive BigInt as big-endian Uint8Array. Negative values will\n * return the same result as `0`.\n *\n * For the reverse, see {@link binToBigIntUintBE}.\n *\n * @param value - the number to encode\n */\nexport const bigIntToBinUintBE = (value) => bigIntToBinUintLE(value).reverse();\n/**\n * Decode an unsigned, 32-byte big-endian Uint8Array into a BigInt. This can be\n * used to decode Uint8Array-encoded cryptographic primitives like private\n * keys, public keys, curve parameters, and signature points.\n *\n * If starting from a hex value, consider using the BigInt constructor instead:\n * ```\n * BigInt(`0x${hex}`)\n * ```\n *\n * For the reverse, see {@link bigIntToBinUint256BEClamped}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToBigIntUint256BE = (bin) => {\n    const uint256Bytes = 32;\n    return binToBigIntUintBE(bin, uint256Bytes);\n};\n/**\n * Encode a positive BigInt into an unsigned 32-byte big-endian Uint8Array. This\n * can be used to encoded numbers for cryptographic primitives like private\n * keys, public keys, curve parameters, and signature points.\n *\n * Negative values will return the same result as `0`, values higher than\n * 2^256-1 will return the maximum expressible unsigned 256-bit value\n * (`0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff`).\n *\n * For the reverse, see {@link binToBigIntUint256BE}.\n *\n * @param value - the BigInt to encode\n */\nexport const bigIntToBinUint256BEClamped = (value) => {\n    const uint256Bytes = 32;\n    return binToFixedLength(bigIntToBinUintLE(value), uint256Bytes).reverse();\n};\n/**\n * Decode a little-endian Uint8Array of any length into a BigInt.\n *\n * The `bytes` parameter can be set to constrain the expected length (default:\n * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.\n *\n * For the reverse, see {@link bigIntToBinUintLE}.\n *\n * @param bin - the Uint8Array to decode\n * @param bytes - the number of bytes to read (default: `bin.length`)\n */\nexport const binToBigIntUintLE = (bin, bytes = bin.length) => {\n    const bitsInAByte = 8;\n    if (bin.length !== bytes) {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new TypeError(`Bin length must be ${bytes}.`);\n    }\n    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduceRight(\n    // eslint-disable-next-line no-bitwise\n    (accumulated, byte) => (accumulated << BigInt(bitsInAByte)) | BigInt(byte), 0n);\n};\n/**\n * Decode an 8-byte Uint64LE Uint8Array into a BigInt.\n *\n * Throws if `bin` is shorter than 8 bytes.\n *\n * For the reverse, see {@link bigIntToBinUint64LE}\n * or {@link bigIntToBinUint64LEClamped}.\n *\n * @param bin - the Uint8Array to decode\n */\nexport const binToBigIntUint64LE = (bin) => {\n    const uint64LengthInBytes = 8;\n    const truncatedBin = bin.length > uint64LengthInBytes ? bin.slice(0, uint64LengthInBytes) : bin;\n    return binToBigIntUintLE(truncatedBin, uint64LengthInBytes);\n};\n/**\n * Decode an {@link Output.valueSatoshis} into a `BigInt`. This is an alias for\n * {@link binToBigIntUint64LE}.\n *\n * Throws if the provided value is shorter than 8 bytes.\n *\n * For the reverse, see {@link valueSatoshisToBin}.\n */\nexport const binToValueSatoshis = binToBigIntUint64LE;\n/**\n * Encode a `BigInt` into an {@link Output.valueSatoshis}. This is an alias for\n * {@link bigIntToBinUint64LE}.\n *\n * This method will return an incorrect result for values outside of the range 0\n * to 0xffff_ffff_ffff_ffff (`18446744073709551615`).\n *\n * For the reverse, see {@link binToValueSatoshis}.\n */\nexport const valueSatoshisToBin = bigIntToBinUint64LE;\n/**\n * Get the expected byte length of a CompactUint given a first byte.\n *\n * @param firstByte - the first byte of the CompactUint\n */\nexport const compactUintPrefixToLength = (firstByte) => {\n    switch (firstByte) {\n        case 253 /* CompactUint.uint16Prefix */:\n            return 2 /* CompactUint.uint16 */ + 1;\n        case 254 /* CompactUint.uint32Prefix */:\n            return 4 /* CompactUint.uint32 */ + 1;\n        case 255 /* CompactUint.uint64Prefix */:\n            return 8 /* CompactUint.uint64 */ + 1;\n        default:\n            return 1 /* CompactUint.uint8 */;\n    }\n};\nexport var CompactUintError;\n(function (CompactUintError) {\n    CompactUintError[\"noPrefix\"] = \"Error reading CompactUint: requires at least one byte.\";\n    CompactUintError[\"insufficientBytes\"] = \"Error reading CompactUint: insufficient bytes.\";\n    CompactUintError[\"nonMinimal\"] = \"Error reading CompactUint: CompactUint is not minimally encoded.\";\n    CompactUintError[\"excessiveBytes\"] = \"Error decoding CompactUint: unexpected bytes after CompactUint.\";\n})(CompactUintError || (CompactUintError = {}));\n/**\n * Read a non-minimally-encoded `CompactUint` (see {@link bigIntToCompactUint})\n * from the provided {@link ReadPosition}, returning either an error message (as\n * a string) or an object containing the value and the\n * next {@link ReadPosition}.\n *\n * Rather than this function, most applications should\n * use {@link readCompactUintMinimal}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * `CompactUint`\n */\nexport const readCompactUint = (position) => {\n    const { bin, index } = position;\n    const prefix = bin[index];\n    if (prefix === undefined) {\n        return formatError(CompactUintError.noPrefix);\n    }\n    const bytes = compactUintPrefixToLength(prefix);\n    if (bin.length - index < bytes) {\n        return formatError(CompactUintError.insufficientBytes, `CompactUint prefix ${prefix} requires at least ${bytes} bytes. Remaining bytes: ${bin.length - index}`);\n    }\n    const hasPrefix = bytes !== 1;\n    const contents = hasPrefix\n        ? bin.subarray(index + 1, index + bytes)\n        : bin.subarray(index, index + bytes);\n    return {\n        position: { bin, index: index + bytes },\n        result: binToBigIntUintLE(contents),\n    };\n};\n/**\n * Encode a positive BigInt as a `CompactUint` (Satoshi's variable-length,\n * positive integer format).\n *\n * Note: the maximum value of a CompactUint is `0xffff_ffff_ffff_ffff`\n * (`18446744073709551615`). This method will return an incorrect result for\n * values outside of the range `0` to `0xffff_ffff_ffff_ffff`. If applicable,\n * applications should handle such cases prior to calling this method.\n *\n * For the reverse, see {@link compactUintToBigInt}.\n *\n * @param value - the BigInt to encode (must be no larger than\n * `0xffff_ffff_ffff_ffff`)\n */\nexport const bigIntToCompactUint = (value) => value <= BigInt(252 /* CompactUint.uint8MaxValue */)\n    ? Uint8Array.of(Number(value))\n    : value <= BigInt(65535 /* CompactUint.uint16MaxValue */)\n        ? Uint8Array.from([\n            253 /* CompactUint.uint16Prefix */,\n            ...numberToBinUint16LE(Number(value)),\n        ])\n        : value <= BigInt(4294967295 /* CompactUint.uint32MaxValue */)\n            ? Uint8Array.from([\n                254 /* CompactUint.uint32Prefix */,\n                ...numberToBinUint32LE(Number(value)),\n            ])\n            : Uint8Array.from([\n                255 /* CompactUint.uint64Prefix */,\n                ...bigIntToBinUint64LE(value),\n            ]);\n/**\n * Read a minimally-encoded `CompactUint` from the provided\n * {@link ReadPosition}, returning either an error message (as a string) or an\n * object containing the value and the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * `CompactUint`\n */\nexport const readCompactUintMinimal = (position) => {\n    const read = readCompactUint(position);\n    if (typeof read === 'string') {\n        return read;\n    }\n    const readLength = read.position.index - position.index;\n    const canonicalEncoding = bigIntToCompactUint(read.result);\n    if (readLength !== canonicalEncoding.length) {\n        return formatError(CompactUintError.nonMinimal, `Value: ${read.result.toString()}, encoded length: ${readLength}, canonical length: ${canonicalEncoding.length}`);\n    }\n    return read;\n};\n/**\n * Decode a minimally-encoded `CompactUint` (Satoshi's variable-length, positive\n * integer format) from a Uint8Array, returning the value as a BigInt. This\n * function returns an error if the entire input is not consumed – to read a\n * `CompactUint` from a position within a larger `Uint8Array`,\n * use {@link readCompactUintMinimal} or {@link readCompactUint}.\n *\n * For the reverse, see {@link bigIntToCompactUint}.\n *\n * @param bin - the Uint8Array from which to read the CompactUint\n */\nexport const compactUintToBigInt = (bin) => {\n    const read = readCompactUintMinimal({ bin, index: 0 });\n    if (typeof read === 'string') {\n        return read;\n    }\n    if (read.position.index !== bin.length) {\n        return formatError(CompactUintError.excessiveBytes, `CompactUint ends at index ${read.position.index}, but input includes ${bin.length} bytes.`);\n    }\n    return read.result;\n};\n/**\n * Convert a signed integer into it's two's compliment unsigned equivalent, e.g.\n * `0b11111111111111111111111111111110` is `-2` as a signed integer or\n * `4294967294` as an unsigned integer.\n *\n * For the reverse, see {@link int32UnsignedToSigned}.\n *\n * @param int32 - the number to convert\n */\nexport const int32SignedToUnsigned = (int32) => \n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nUint32Array.from(Int32Array.of(int32))[0];\n/**\n * Convert an unsigned integer into it's two's compliment signed equivalent,\n * e.g. `0b11111111111111111111111111111110` is `4294967294` as an unsigned\n * integer or `-2` as a signed integer.\n *\n * For the reverse, see {@link int32SignedToUnsigned}.\n *\n * @param int32 - the number to convert\n */\nexport const int32UnsignedToSigned = (int32) => \n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nInt32Array.from(Uint32Array.of(int32))[0];\n//# sourceMappingURL=number.js.map","import { formatError } from './error.js';\nimport { readCompactUintMinimal } from './number.js';\n/**\n * Given an initial {@link ReadPosition} and a list of {@link ReadFunction}s,\n * apply each {@link ReadFunction} in order, aggregating each result and passing\n * the next {@link ReadPosition} into the next {@link ReadFunction}. If an error\n * occurs, immediately return the error message (`string`), otherwise, return\n * the array of results.\n *\n * @param position - the {@link ReadPosition} at which to start the first read\n * @param readFunctions - the ordered list of {@link ReadFunction}s to apply to\n * the {@link ReadPosition}\n */\nexport const readMultiple = (position, readFunctions) => {\n    // eslint-disable-next-line functional/no-let\n    let nextPosition = position;\n    const results = [];\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const readFunction of readFunctions) {\n        const out = readFunction(nextPosition);\n        if (typeof out === 'string') {\n            return out;\n        }\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        results.push(out.result);\n        // eslint-disable-next-line functional/no-expression-statements\n        nextPosition = out.position;\n    }\n    return {\n        position: nextPosition,\n        result: results,\n    };\n};\nexport var ReadItemCountError;\n(function (ReadItemCountError) {\n    ReadItemCountError[\"itemCount\"] = \"Error reading item count.\";\n    ReadItemCountError[\"item\"] = \"Error reading item.\";\n})(ReadItemCountError || (ReadItemCountError = {}));\n/**\n * Read a count of items indicated by the CompactUint at {@link ReadPosition}.\n * The CompactUint will be read to determine the number of items, and the read\n * function will be applied in series, aggregated each result and passing the\n * next {@link ReadPosition} into each iteration. If an error occurs,\n * immediately return the error message (`string`), otherwise, return the array\n * of results.\n */\nexport const readItemCount = (position, readFunction) => {\n    const countRead = readCompactUintMinimal(position);\n    if (typeof countRead === 'string') {\n        return formatError(ReadItemCountError.itemCount, countRead);\n    }\n    // eslint-disable-next-line functional/no-let\n    let nextPosition = countRead.position;\n    const result = [];\n    // eslint-disable-next-line functional/no-loop-statements, functional/no-let, no-plusplus\n    for (let remaining = Number(countRead.result); remaining > 0; remaining--) {\n        const read = readFunction(nextPosition);\n        if (typeof read === 'string') {\n            return formatError(ReadItemCountError.item, read);\n        }\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(read.result);\n        // eslint-disable-next-line functional/no-expression-statements\n        nextPosition = read.position;\n    }\n    return { position: nextPosition, result };\n};\n//# sourceMappingURL=read.js.map","const utf8Encoder = new TextEncoder();\n/**\n * Interpret a string as UTF-8 and encode it as a Uint8Array.\n *\n * For the reverse, see {@link binToUtf8}.\n *\n * @param utf8 - the string to encode\n */\nexport const utf8ToBin = (utf8) => utf8Encoder.encode(utf8);\nconst utf8Decoder = new TextDecoder();\n/**\n * Decode a Uint8Array as a UTF-8 string.\n *\n * For the reverse, see {@link utf8ToBin}.\n *\n * @param bytes - the Uint8Array to decode\n */\nexport const binToUtf8 = (bytes) => utf8Decoder.decode(bytes);\n/**\n * Normalize a string using Unicode Normalization Form KC (NFKC): compatibility\n * decomposition, followed by canonical composition. NFKC is the preferred form\n * for applications in which disambiguation between characters is critical. In\n * Libauth, all message formats designed for transmission between trust centers\n * are NFKC-normalized to hinder exploits in which lookalike characters are used\n * to deceive counterparties.\n *\n * E.g.:\n * ```\n * console.log(lossyNormalize('ﬁt🚀👫👨‍👩‍👧‍👦')); // 'fit🚀👫👨‍👩‍👧‍👦'\n * ```\n */\nexport const lossyNormalize = (utf8) => utf8.normalize('NFKC');\n/**\n * Return the user-perceived character segments of the given string, e.g.:\n *\n * ```js\n * const test = 'ﬁt🚀👫👨‍👩‍👧‍👦';\n * console.log([...test]); // '[\"ﬁ\",\"t\",\"🚀\",\"👫\",\"👨\",\"‍\",\"👩\",\"‍\",\"👧\",\"‍\",\"👦\"]'\n * console.log(segment(test)); // '[\"ﬁ\",\"t\",\"🚀\",\"👫\",\"👨‍👩‍👧‍👦\"]'\n * ```\n *\n * Note, this utility segments the string into grapheme clusters using\n * `Intl.Segmenter`, a TC39 proposal which reached stage 4 in 2022, and may not\n * be supported in older environments.\n *\n * @param utf8 - the string for which to segment characters.\n */\nexport const segment = (utf8) => [...new Intl.Segmenter('en', { granularity: 'grapheme' }).segment(utf8)].map((item) => item.segment);\n/**\n * Return the user-perceived character length of the given string, e.g.:\n *\n * ```js\n * const test = 'ﬁt🚀👫👨‍👩‍👧‍👦'\n * console.log(test.length); // 17\n * console.log(length(test)); // 5\n * ```\n *\n * Note, this utility segments the string into grapheme clusters using\n * `Intl.Segmenter`, a TC39 proposal which reached stage 4 in 2022, and may not\n * be supported in older environments.\n *\n * @param utf8 - the string for which to count the character length.\n */\nexport const length = (utf8) => segment(utf8).length;\n//# sourceMappingURL=utf8.js.map","/* eslint-disable functional/no-conditional-statements, functional/no-let, functional/no-expression-statements, no-underscore-dangle, functional/no-try-statements, @typescript-eslint/no-magic-numbers, @typescript-eslint/max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-non-null-assertion */\n/**\n * Note, most of this method is translated and boiled-down from the wasm-pack\n * workflow. Significant changes to wasm-bindgen or wasm-pack build will likely\n * require modifications to this method.\n */\nexport const instantiateRustWasm = async (webassemblyBytes, expectedImportModuleName, hashExportName, initExportName, updateExportName, finalExportName) => {\n    const wasm = (await WebAssembly.instantiate(webassemblyBytes, {\n        [expectedImportModuleName]: {\n            /**\n             * This would only be called in cases where a `__wbindgen_malloc` failed.\n             * Since `__wbindgen_malloc` isn't exposed to consumers, this error\n             * can only be encountered if the code below is broken.\n             */\n            /* c8 ignore next 10 */\n            // eslint-disable-next-line camelcase, @typescript-eslint/naming-convention\n            __wbindgen_throw: (ptr, len) => {\n                // eslint-disable-next-line functional/no-throw-statements\n                throw new Error(\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                Array.from(getUint8Memory().subarray(ptr, ptr + len))\n                    .map((num) => String.fromCharCode(num))\n                    .join(''));\n            },\n        },\n    })).instance.exports; // eslint-disable-line @typescript-eslint/no-explicit-any\n    let cachedUint8Memory; // eslint-disable-line @typescript-eslint/init-declarations\n    let cachedUint32Memory; // eslint-disable-line @typescript-eslint/init-declarations\n    let cachedGlobalArgumentPtr; // eslint-disable-line @typescript-eslint/init-declarations\n    const globalArgumentPtr = () => {\n        if (cachedGlobalArgumentPtr === undefined) {\n            cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n        }\n        return cachedGlobalArgumentPtr;\n    };\n    /**\n     * Must be hoisted for `__wbindgen_throw`.\n     */\n    // eslint-disable-next-line func-style\n    function getUint8Memory() {\n        if (cachedUint8Memory === undefined ||\n            cachedUint8Memory.buffer !== wasm.memory.buffer) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            cachedUint8Memory = new Uint8Array(wasm.memory.buffer);\n        }\n        return cachedUint8Memory;\n    }\n    const getUint32Memory = () => {\n        if (cachedUint32Memory === undefined ||\n            cachedUint32Memory.buffer !== wasm.memory.buffer) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            cachedUint32Memory = new Uint32Array(wasm.memory.buffer);\n        }\n        return cachedUint32Memory;\n    };\n    const passArray8ToWasm = (array) => {\n        const ptr = wasm.__wbindgen_malloc(array.length);\n        getUint8Memory().set(array, ptr);\n        return [ptr, array.length];\n    };\n    const getArrayU8FromWasm = (ptr, len) => getUint8Memory().subarray(ptr, ptr + len);\n    const hash = (input) => {\n        const [ptr0, len0] = passArray8ToWasm(input);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[hashExportName](retPtr, ptr0, len0);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            wasm.__wbindgen_free(ptr0, len0);\n        }\n    };\n    const init = () => {\n        const retPtr = globalArgumentPtr();\n        wasm[initExportName](retPtr);\n        const mem = getUint32Memory();\n        const ptr = mem[retPtr / 4];\n        const len = mem[retPtr / 4 + 1];\n        const realRet = getArrayU8FromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len);\n        return realRet;\n    };\n    const update = (rawState, input) => {\n        const [ptr0, len0] = passArray8ToWasm(rawState);\n        const [ptr1, len1] = passArray8ToWasm(input);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[updateExportName](retPtr, ptr0, len0, ptr1, len1);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_free(ptr0, len0);\n            wasm.__wbindgen_free(ptr1, len1);\n        }\n    };\n    const final = (rawState) => {\n        const [ptr0, len0] = passArray8ToWasm(rawState);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[finalExportName](retPtr, ptr0, len0);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_free(ptr0, len0);\n        }\n    };\n    return {\n        final,\n        hash,\n        init,\n        update,\n    };\n};\n/* eslint-enable functional/no-conditional-statements, functional/no-let, functional/no-expression-statements, no-underscore-dangle, functional/no-try-statements, @typescript-eslint/no-magic-numbers, @typescript-eslint/max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-non-null-assertion */\n//# sourceMappingURL=hashes.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const ripemd160Base64Bytes = '';\n//# sourceMappingURL=ripemd160.base64.js.map","// cSpell:ignore noncefp, ndata, outputlen\n/**\n * bitflags used in secp256k1's public API (translated from secp256k1.h)\n */\n/* eslint-disable no-bitwise, @typescript-eslint/no-magic-numbers, @typescript-eslint/prefer-literal-enum-member */\n/** All flags' lower 8 bits indicate what they're for. Do not use directly. */\n// const SECP256K1_FLAGS_TYPE_MASK = (1 << 8) - 1;\nconst SECP256K1_FLAGS_TYPE_CONTEXT = 1 << 0;\nconst SECP256K1_FLAGS_TYPE_COMPRESSION = 1 << 1;\n/** The higher bits contain the actual data. Do not use directly. */\nconst SECP256K1_FLAGS_BIT_CONTEXT_VERIFY = 1 << 8;\nconst SECP256K1_FLAGS_BIT_CONTEXT_SIGN = 1 << 9;\nconst SECP256K1_FLAGS_BIT_COMPRESSION = 1 << 8;\n/** Flags to pass to secp256k1_context_create. */\nconst SECP256K1_CONTEXT_VERIFY = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_VERIFY;\nconst SECP256K1_CONTEXT_SIGN = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_SIGN;\nconst SECP256K1_CONTEXT_NONE = SECP256K1_FLAGS_TYPE_CONTEXT;\n/** Flag to pass to secp256k1_ec_pubkey_serialize and secp256k1_ec_privkey_export. */\nconst SECP256K1_EC_COMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION;\nconst SECP256K1_EC_UNCOMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION;\n/**\n * Flag to pass to a Secp256k1.contextCreate method.\n *\n * The purpose of context structures is to cache large precomputed data tables\n * that are expensive to construct, and also to maintain the randomization data\n * for blinding.\n *\n * You can create a context with only VERIFY or only SIGN capabilities, or you\n * can use BOTH. (NONE can be used for conversion/serialization.)\n */\nexport var ContextFlag;\n(function (ContextFlag) {\n    ContextFlag[ContextFlag[\"NONE\"] = SECP256K1_CONTEXT_NONE] = \"NONE\";\n    ContextFlag[ContextFlag[\"VERIFY\"] = SECP256K1_CONTEXT_VERIFY] = \"VERIFY\";\n    ContextFlag[ContextFlag[\"SIGN\"] = SECP256K1_CONTEXT_SIGN] = \"SIGN\";\n    ContextFlag[ContextFlag[\"BOTH\"] = SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY] = \"BOTH\";\n})(ContextFlag || (ContextFlag = {}));\n/**\n * Flag to pass a Secp256k1 public key serialization method.\n *\n * You can indicate COMPRESSED (33 bytes, header byte 0x02 or 0x03) or\n * UNCOMPRESSED (65 bytes, header byte 0x04) format.\n */\nexport var CompressionFlag;\n(function (CompressionFlag) {\n    CompressionFlag[CompressionFlag[\"COMPRESSED\"] = SECP256K1_EC_COMPRESSED] = \"COMPRESSED\";\n    CompressionFlag[CompressionFlag[\"UNCOMPRESSED\"] = SECP256K1_EC_UNCOMPRESSED] = \"UNCOMPRESSED\";\n})(CompressionFlag || (CompressionFlag = {}));\n//# sourceMappingURL=secp256k1-wasm-types.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const secp256k1Base64Bytes = '';\n//# sourceMappingURL=secp256k1.base64.js.map","/* eslint-disable no-underscore-dangle, @typescript-eslint/max-params, @typescript-eslint/naming-convention */\n// cSpell:ignore memcpy, anyfunc\nimport { base64ToBin } from '../../format/format.js';\nimport { CompressionFlag, ContextFlag } from './secp256k1-wasm-types.js';\nimport { secp256k1Base64Bytes } from './secp256k1.base64.js';\nexport { ContextFlag, CompressionFlag };\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\nconst wrapSecp256k1Wasm = (instance, heapU8, heapU32) => ({\n    contextCreate: (context) => instance.exports._secp256k1_context_create(context),\n    contextRandomize: (contextPtr, seedPtr) => instance.exports._secp256k1_context_randomize(contextPtr, seedPtr),\n    free: (pointer) => instance.exports._free(pointer),\n    heapU32,\n    heapU8,\n    instance,\n    malloc: (bytes) => instance.exports._malloc(bytes),\n    mallocSizeT: (num) => {\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n        const pointer = instance.exports._malloc(4);\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n        const pointerView32 = pointer >> 2;\n        // eslint-disable-next-line functional/no-expression-statements\n        heapU32.set([num], pointerView32);\n        return pointer;\n    },\n    mallocUint8Array: (array) => {\n        const pointer = instance.exports._malloc(array.length);\n        // eslint-disable-next-line functional/no-expression-statements\n        heapU8.set(array, pointer);\n        return pointer;\n    },\n    privkeyTweakAdd: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_add(contextPtr, secretKeyPtr, tweakNum256Ptr),\n    privkeyTweakMul: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_mul(contextPtr, secretKeyPtr, tweakNum256Ptr),\n    pubkeyCreate: (contextPtr, publicKeyPtr, secretKeyPtr) => instance.exports._secp256k1_ec_pubkey_create(contextPtr, publicKeyPtr, secretKeyPtr),\n    pubkeyParse: (contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength) => instance.exports._secp256k1_ec_pubkey_parse(contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength),\n    pubkeySerialize: (contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression) => instance.exports._secp256k1_ec_pubkey_serialize(contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression),\n    pubkeyTweakAdd: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_add(contextPtr, publicKeyPtr, tweakNum256Ptr),\n    pubkeyTweakMul: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_mul(contextPtr, publicKeyPtr, tweakNum256Ptr),\n    readHeapU8: (pointer, bytes) => new Uint8Array(heapU8.buffer, pointer, bytes),\n    readSizeT: (pointer) => {\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n        const pointerView32 = pointer >> 2;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return heapU32[pointerView32];\n    },\n    recover: (contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr) => instance.exports._secp256k1_ecdsa_recover(contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr),\n    recoverableSignatureParse: (contextPtr, outputRSigPtr, inputSigPtr, rid) => instance.exports._secp256k1_ecdsa_recoverable_signature_parse_compact(contextPtr, outputRSigPtr, inputSigPtr, rid),\n    recoverableSignatureSerialize: (contextPtr, sigOutPtr, recIDOutPtr, rSigPtr) => instance.exports._secp256k1_ecdsa_recoverable_signature_serialize_compact(contextPtr, sigOutPtr, recIDOutPtr, rSigPtr),\n    schnorrSign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_schnorr_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),\n    schnorrVerify: (contextPtr, sigPtr, msg32Ptr, publicKeyPtr) => instance.exports._secp256k1_schnorr_verify(contextPtr, sigPtr, msg32Ptr, publicKeyPtr),\n    seckeyVerify: (contextPtr, secretKeyPtr) => instance.exports._secp256k1_ec_seckey_verify(contextPtr, secretKeyPtr),\n    sign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),\n    signRecoverable: (contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign_recoverable(contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr),\n    signatureMalleate: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_malleate(contextPtr, outputSigPtr, inputSigPtr),\n    signatureNormalize: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_normalize(contextPtr, outputSigPtr, inputSigPtr),\n    signatureParseCompact: (contextPtr, sigOutPtr, compactSigInPtr) => instance.exports._secp256k1_ecdsa_signature_parse_compact(contextPtr, sigOutPtr, compactSigInPtr),\n    signatureParseDER: (contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength) => instance.exports._secp256k1_ecdsa_signature_parse_der(contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength),\n    signatureSerializeCompact: (contextPtr, outputCompactSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_compact(contextPtr, outputCompactSigPtr, inputSigPtr),\n    signatureSerializeDER: (contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_der(contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr),\n    verify: (contextPtr, sigPtr, msg32Ptr, pubkeyPtr) => instance.exports._secp256k1_ecdsa_verify(contextPtr, sigPtr, msg32Ptr, pubkeyPtr),\n});\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable functional/immutable-data, functional/no-expression-statements, @typescript-eslint/no-magic-numbers, functional/no-conditional-statements, no-bitwise, functional/no-throw-statements */\n/**\n * Method extracted from Emscripten's preamble.js\n */\nconst isLittleEndian = (buffer) => {\n    const littleEndian = true;\n    const notLittleEndian = false;\n    const heap16 = new Int16Array(buffer);\n    const heap32 = new Int32Array(buffer);\n    const heapU8 = new Uint8Array(buffer);\n    heap32[0] = 1668509029;\n    heap16[1] = 25459;\n    return heapU8[2] !== 115 || heapU8[3] !== 99\n        ? /* c8 ignore next */\n            notLittleEndian\n        : littleEndian;\n};\n/**\n * Method derived from Emscripten's preamble.js\n */\nconst alignMemory = (factor, size) => Math.ceil(size / factor) * factor;\n/**\n * The most performant way to instantiate secp256k1 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSecp256k1}.\n *\n * Note, most of this method is translated and boiled-down from Emscripten's\n * preamble.js. Significant changes to the WASM build or breaking updates to\n * Emscripten will likely require modifications to this method.\n *\n * @param webassemblyBytes - A buffer containing the secp256k1 binary.\n */\nexport const instantiateSecp256k1WasmBytes = async (webassemblyBytes) => {\n    const STACK_ALIGN = 16;\n    const GLOBAL_BASE = 1024;\n    const WASM_PAGE_SIZE = 65536;\n    const TOTAL_STACK = 5242880;\n    const TOTAL_MEMORY = 16777216;\n    const wasmMemory = new WebAssembly.Memory({\n        initial: TOTAL_MEMORY / WASM_PAGE_SIZE,\n        maximum: TOTAL_MEMORY / WASM_PAGE_SIZE,\n    });\n    /* c8 ignore next 9 */\n    if (!isLittleEndian(wasmMemory.buffer)) {\n        /*\n         * note: this block is excluded from test coverage. It's A) hard to test\n         * (must be either tested on big-endian hardware or a big-endian buffer\n         * mock) and B) extracted from Emscripten's preamble.js, where it should\n         * be tested properly.\n         */\n        throw new Error('Runtime error: expected the system to be little-endian.');\n    }\n    const STATIC_BASE = GLOBAL_BASE;\n    const STATICTOP_INITIAL = STATIC_BASE + 67696 + 16;\n    const DYNAMICTOP_PTR = STATICTOP_INITIAL;\n    const DYNAMICTOP_PTR_SIZE = 4;\n    const STATICTOP = (STATICTOP_INITIAL + DYNAMICTOP_PTR_SIZE + 15) & -16;\n    const STACKTOP = alignMemory(STACK_ALIGN, STATICTOP);\n    const STACK_BASE = STACKTOP;\n    const STACK_MAX = STACK_BASE + TOTAL_STACK;\n    const DYNAMIC_BASE = alignMemory(STACK_ALIGN, STACK_MAX);\n    const heapU8 = new Uint8Array(wasmMemory.buffer);\n    const heap32 = new Int32Array(wasmMemory.buffer);\n    const heapU32 = new Uint32Array(wasmMemory.buffer);\n    heap32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n    const TABLE_SIZE = 6;\n    const MAX_TABLE_SIZE = 6;\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let getErrNoLocation;\n    /*\n     * note: A number of methods below are excluded from test coverage. They are\n     * a) not part of the regular usage of this library (should only be evaluated\n     * if the consumer mis-implements the library and exist only to make\n     * debugging easier) and B) already tested adequately in Emscripten, from\n     * which this section is extracted.\n     */\n    const env = {\n        DYNAMICTOP_PTR,\n        STACKTOP,\n        /* c8 ignore start */\n        ___setErrNo: (value) => {\n            if (getErrNoLocation !== undefined) {\n                heap32[getErrNoLocation() >> 2] = value;\n            }\n            return value;\n        },\n        _abort: (err = 'Secp256k1 Error') => {\n            throw new Error(err);\n        },\n        // eslint-disable-next-line camelcase\n        _emscripten_memcpy_big: (dest, src, num) => {\n            heapU8.set(heapU8.subarray(src, src + num), dest);\n            return dest;\n        },\n        abort: (err = 'Secp256k1 Error') => {\n            throw new Error(err);\n        },\n        abortOnCannotGrowMemory: () => {\n            throw new Error('Secp256k1 Error: abortOnCannotGrowMemory was called.');\n        },\n        enlargeMemory: () => {\n            throw new Error('Secp256k1 Error: enlargeMemory was called.');\n        },\n        getTotalMemory: () => TOTAL_MEMORY,\n        /* c8 ignore stop */\n    };\n    const info = {\n        env: {\n            ...env,\n            memory: wasmMemory,\n            memoryBase: STATIC_BASE,\n            table: new WebAssembly.Table({\n                element: 'anyfunc',\n                initial: TABLE_SIZE,\n                maximum: MAX_TABLE_SIZE,\n            }),\n            tableBase: 0,\n        },\n        global: { Infinity, NaN },\n    };\n    return WebAssembly.instantiate(webassemblyBytes, info).then((result) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment\n        getErrNoLocation = result.instance.exports['___errno_location'];\n        return wrapSecp256k1Wasm(result.instance, heapU8, heapU32);\n    });\n};\n/* eslint-enable functional/immutable-data, functional/no-expression-statements, @typescript-eslint/no-magic-numbers, functional/no-conditional-statements, no-bitwise, functional/no-throw-statements */\nexport const getEmbeddedSecp256k1Binary = () => base64ToBin(secp256k1Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of\n * {@link instantiateSecp256k1Bytes} that does not require the consumer to\n * provide the secp256k1 binary buffer.\n */\nexport const instantiateSecp256k1Wasm = async () => instantiateSecp256k1WasmBytes(getEmbeddedSecp256k1Binary());\n//# sourceMappingURL=secp256k1-wasm.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const sha1Base64Bytes = '';\n//# sourceMappingURL=sha1.base64.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const sha256Base64Bytes = '';\n//# sourceMappingURL=sha256.base64.js.map","/* eslint-disable tsdoc/syntax */\n/**\n * @hidden\n */\n// prettier-ignore\nexport const sha512Base64Bytes = '';\n//# sourceMappingURL=sha512.base64.js.map","import { base64ToBin, instantiateRustWasm, ripemd160Base64Bytes, } from './dependencies.js';\n/**\n * The most performant way to instantiate ripemd160 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateRipemd160}.\n *\n * @param webassemblyBytes - A buffer containing the ripemd160 binary.\n */\nexport const instantiateRipemd160Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './ripemd160', 'ripemd160', 'ripemd160_init', 'ripemd160_update', 'ripemd160_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nexport const getEmbeddedRipemd160Binary = () => base64ToBin(ripemd160Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of\n * {@link instantiateRipemd160Bytes} that does not require the consumer to\n * provide the ripemd160 binary buffer.\n */\nexport const instantiateRipemd160 = async () => instantiateRipemd160Bytes(getEmbeddedRipemd160Binary());\n//# sourceMappingURL=ripemd160.js.map","import { CompressionFlag, ContextFlag, instantiateSecp256k1Wasm, instantiateSecp256k1WasmBytes, } from './dependencies.js';\n/* eslint-enable @typescript-eslint/no-duplicate-enum-values */\nexport var Secp256k1Error;\n(function (Secp256k1Error) {\n    Secp256k1Error[\"unparsableSignature\"] = \"Failed to parse signature.\";\n    Secp256k1Error[\"unparsablePublicKey\"] = \"Failed to parse public key.\";\n    Secp256k1Error[\"derivePublicKeyFromInvalidPrivateKey\"] = \"Cannot derive public key from invalid private key.\";\n    Secp256k1Error[\"signWithInvalidPrivateKey\"] = \"Failed to sign message hash. The private key is not valid.\";\n    Secp256k1Error[\"recoverPublicKeyWithUnparsableSignature\"] = \"Failed to recover public key. Could not parse signature.\";\n    Secp256k1Error[\"recoverPublicKeyInvalidMaterial\"] = \"Failed to recover public key. The compact signature, recovery, or message hash is invalid.\";\n    Secp256k1Error[\"addTweakPrivateKey\"] = \"Private key is invalid or adding failed.\";\n    Secp256k1Error[\"mulTweakPrivateKey\"] = \"Private key is invalid or multiplying failed.\";\n    Secp256k1Error[\"addTweakPublicKey\"] = \"Failed to tweak public key (by addition).\";\n    Secp256k1Error[\"mulTweakPublicKey\"] = \"Failed to tweak public key (by multiplication).\";\n})(Secp256k1Error || (Secp256k1Error = {}));\n/**\n * @param secp256k1Wasm - a Secp256k1Wasm object\n * @param randomSeed - a 32-byte random seed used to randomize the context after\n * creation\n */\nconst wrapSecp256k1Wasm = (secp256k1Wasm, randomSeed) => {\n    /**\n     * Currently, this wrapper creates a context with both SIGN and VERIFY\n     * capabilities. For better initialization performance, consumers could\n     * re-implement a wrapper with only the capabilities they require.\n     */\n    const contextPtr = secp256k1Wasm.contextCreate(ContextFlag.BOTH);\n    /**\n     * Since all of these methods are single-threaded and synchronous, we can\n     * reuse allocated WebAssembly memory for each method without worrying about\n     * calls interfering with each other. Likewise, these spaces never need to be\n     * `free`d, since we will continue using them until this entire object (and\n     * with it, the entire WebAssembly instance) is garbage collected.\n     *\n     * If malicious javascript gained access to this object, it should be\n     * considered a critical vulnerability in the consumer. However, as a best\n     * practice, we zero out private keys below when we're finished with them.\n     */\n    const sigScratch = secp256k1Wasm.malloc(72 /* ByteLength.maxECDSASig */);\n    const publicKeyScratch = secp256k1Wasm.malloc(65 /* ByteLength.maxPublicKey */);\n    const messageHashScratch = secp256k1Wasm.malloc(32 /* ByteLength.messageHash */);\n    const internalPublicKeyPtr = secp256k1Wasm.malloc(64 /* ByteLength.internalPublicKey */);\n    const internalSigPtr = secp256k1Wasm.malloc(64 /* ByteLength.internalSig */);\n    const schnorrSigPtr = secp256k1Wasm.malloc(64 /* ByteLength.schnorrSig */);\n    const privateKeyPtr = secp256k1Wasm.malloc(32 /* ByteLength.privateKey */);\n    const internalRSigPtr = secp256k1Wasm.malloc(65 /* ByteLength.recoverableSig */);\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    const recoveryNumPtr = secp256k1Wasm.malloc(4);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const recoveryNumPtrView32 = recoveryNumPtr >> 2;\n    const getRecoveryNumPtr = () => secp256k1Wasm.heapU32[recoveryNumPtrView32];\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    const lengthPtr = secp256k1Wasm.malloc(4);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const lengthPtrView32 = lengthPtr >> 2;\n    const cloneAndPad = (value, expectedLength) => {\n        const zeroPaddedValue = new Uint8Array(expectedLength);\n        zeroPaddedValue.set(value);\n        return zeroPaddedValue;\n    };\n    const parsePublicKey = (publicKey) => {\n        const paddedPublicKey = cloneAndPad(publicKey, 65 /* ByteLength.maxPublicKey */);\n        secp256k1Wasm.heapU8.set(paddedPublicKey, publicKeyScratch);\n        return (secp256k1Wasm.pubkeyParse(contextPtr, internalPublicKeyPtr, publicKeyScratch, \n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n        publicKey.length) === 1);\n    };\n    const setLengthPtr = (value) => {\n        secp256k1Wasm.heapU32.set([value], lengthPtrView32);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getLengthPtr = () => secp256k1Wasm.heapU32[lengthPtrView32];\n    const serializePublicKey = (length, flag) => {\n        setLengthPtr(length);\n        secp256k1Wasm.pubkeySerialize(contextPtr, publicKeyScratch, lengthPtr, internalPublicKeyPtr, flag);\n        return secp256k1Wasm.readHeapU8(publicKeyScratch, getLengthPtr()).slice();\n    };\n    const getSerializedPublicKey = (compressed) => compressed\n        ? serializePublicKey(33 /* ByteLength.compressedPublicKey */, CompressionFlag.COMPRESSED)\n        : serializePublicKey(65 /* ByteLength.uncompressedPublicKey */, CompressionFlag.UNCOMPRESSED);\n    const convertPublicKey = (compressed) => (publicKey) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const parseSignature = (signature, isDer) => {\n        const paddedSignature = cloneAndPad(signature, 72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, sigScratch);\n        return isDer\n            ? secp256k1Wasm.signatureParseDER(contextPtr, internalSigPtr, sigScratch, signature.length) === 1\n            : secp256k1Wasm.signatureParseCompact(contextPtr, internalSigPtr, sigScratch) === 1;\n    };\n    const getCompactSig = () => {\n        secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);\n        return secp256k1Wasm.readHeapU8(sigScratch, 64 /* ByteLength.compactSig */).slice();\n    };\n    const getDERSig = () => {\n        setLengthPtr(72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);\n        return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();\n    };\n    const convertSignature = (wasDER) => (signature) => {\n        if (!parseSignature(signature, wasDER)) {\n            return Secp256k1Error.unparsableSignature;\n        }\n        return wasDER ? getCompactSig() : getDERSig();\n    };\n    const fillPrivateKeyPtr = (privateKey) => {\n        const paddedPrivateKey = cloneAndPad(privateKey, 32 /* ByteLength.privateKey */);\n        secp256k1Wasm.heapU8.set(paddedPrivateKey, privateKeyPtr);\n    };\n    const zeroOutPtr = (pointer, bytes) => {\n        secp256k1Wasm.heapU8.fill(0, pointer, pointer + bytes);\n    };\n    const zeroOutPrivateKeyPtr = () => {\n        zeroOutPtr(privateKeyPtr, 32 /* ByteLength.privateKey */);\n    };\n    const withPrivateKey = (privateKey, instructions) => {\n        fillPrivateKeyPtr(privateKey);\n        const ret = instructions();\n        zeroOutPrivateKeyPtr();\n        return ret;\n    };\n    const derivePublicKey = (compressed) => (privateKey) => {\n        const invalid = withPrivateKey(privateKey, () => secp256k1Wasm.pubkeyCreate(contextPtr, internalPublicKeyPtr, privateKeyPtr) !== 1);\n        if (invalid) {\n            return Secp256k1Error.derivePublicKeyFromInvalidPrivateKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const fillMessageHashScratch = (messageHash) => {\n        const paddedMessageHash = cloneAndPad(messageHash, 32 /* ByteLength.messageHash */);\n        secp256k1Wasm.heapU8.set(paddedMessageHash, messageHashScratch);\n    };\n    const normalizeSignature = () => {\n        secp256k1Wasm.signatureNormalize(contextPtr, internalSigPtr, internalSigPtr);\n    };\n    const modifySignature = (isDer, normalize) => (signature) => {\n        if (!parseSignature(signature, isDer)) {\n            return Secp256k1Error.unparsableSignature;\n        }\n        if (normalize) {\n            normalizeSignature();\n        }\n        else {\n            secp256k1Wasm.signatureMalleate(contextPtr, internalSigPtr, internalSigPtr);\n        }\n        return isDer ? getDERSig() : getCompactSig();\n    };\n    const parseAndNormalizeSignature = (signature, isDer, normalize) => {\n        const ret = parseSignature(signature, isDer);\n        if (normalize) {\n            normalizeSignature();\n        }\n        return ret;\n    };\n    const signMessageHash = (isDer) => (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            const failed = secp256k1Wasm.sign(contextPtr, internalSigPtr, messageHashScratch, privateKeyPtr) !== 1;\n            if (failed) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            if (isDer) {\n                setLengthPtr(72 /* ByteLength.maxECDSASig */);\n                secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);\n                return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();\n            }\n            secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);\n            return secp256k1Wasm\n                .readHeapU8(sigScratch, 64 /* ByteLength.compactSig */)\n                .slice();\n        });\n    };\n    const signMessageHashSchnorr = () => (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            const failed = secp256k1Wasm.schnorrSign(contextPtr, schnorrSigPtr, messageHashScratch, privateKeyPtr) !== 1;\n            if (failed) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(schnorrSigPtr, 64 /* ByteLength.schnorrSig */)\n                .slice();\n        });\n    };\n    const verifyMessage = (messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return (secp256k1Wasm.verify(contextPtr, internalSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);\n    };\n    const verifySignature = (isDer, normalize) => (signature, publicKey, messageHash) => parsePublicKey(publicKey) &&\n        parseAndNormalizeSignature(signature, isDer, normalize) &&\n        verifyMessage(messageHash);\n    const verifyMessageSchnorr = (messageHash, signature) => {\n        fillMessageHashScratch(messageHash);\n        const paddedSignature = cloneAndPad(signature, 64 /* ByteLength.schnorrSig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, schnorrSigPtr);\n        return (secp256k1Wasm.schnorrVerify(contextPtr, schnorrSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);\n    };\n    const verifySignatureSchnorr = () => (signature, publicKey, messageHash) => parsePublicKey(publicKey)\n        ? verifyMessageSchnorr(messageHash, signature)\n        : false;\n    const signMessageHashRecoverable = (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.signRecoverable(contextPtr, internalRSigPtr, messageHashScratch, privateKeyPtr) !== 1) {\n                return Secp256k1Error.signWithInvalidPrivateKey;\n            }\n            secp256k1Wasm.recoverableSignatureSerialize(contextPtr, sigScratch, recoveryNumPtr, internalRSigPtr);\n            return {\n                recoveryId: getRecoveryNumPtr(),\n                signature: secp256k1Wasm\n                    .readHeapU8(sigScratch, 64 /* ByteLength.compactSig */)\n                    .slice(),\n            };\n        });\n    };\n    const recoverPublicKey = (compressed) => (signature, recoveryId, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        const paddedSignature = cloneAndPad(signature, 72 /* ByteLength.maxECDSASig */);\n        secp256k1Wasm.heapU8.set(paddedSignature, sigScratch);\n        if (secp256k1Wasm.recoverableSignatureParse(contextPtr, internalRSigPtr, sigScratch, recoveryId) !== 1) {\n            return Secp256k1Error.recoverPublicKeyWithUnparsableSignature;\n        }\n        if (secp256k1Wasm.recover(contextPtr, internalPublicKeyPtr, internalRSigPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.recoverPublicKeyInvalidMaterial;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const addTweakPrivateKey = (privateKey, tweakValue) => {\n        fillMessageHashScratch(tweakValue);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.privkeyTweakAdd(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {\n                return Secp256k1Error.addTweakPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(privateKeyPtr, 32 /* ByteLength.privateKey */)\n                .slice();\n        });\n    };\n    const mulTweakPrivateKey = (privateKey, tweakValue) => {\n        fillMessageHashScratch(tweakValue);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.privkeyTweakMul(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {\n                return Secp256k1Error.mulTweakPrivateKey;\n            }\n            return secp256k1Wasm\n                .readHeapU8(privateKeyPtr, 32 /* ByteLength.privateKey */)\n                .slice();\n        });\n    };\n    const addTweakPublicKey = (compressed) => (publicKey, tweakValue) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        fillMessageHashScratch(tweakValue);\n        if (secp256k1Wasm.pubkeyTweakAdd(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.addTweakPublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const mulTweakPublicKey = (compressed) => (publicKey, tweakValue) => {\n        if (!parsePublicKey(publicKey)) {\n            return Secp256k1Error.unparsablePublicKey;\n        }\n        fillMessageHashScratch(tweakValue);\n        if (secp256k1Wasm.pubkeyTweakMul(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {\n            return Secp256k1Error.mulTweakPublicKey;\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    if (randomSeed !== undefined) {\n        const randomSeedPtr = messageHashScratch;\n        const paddedRandomSeed = cloneAndPad(randomSeed, 32 /* ByteLength.randomSeed */);\n        secp256k1Wasm.heapU8.set(paddedRandomSeed, randomSeedPtr);\n        secp256k1Wasm.contextRandomize(contextPtr, randomSeedPtr);\n        zeroOutPtr(randomSeedPtr, 32 /* ByteLength.randomSeed */);\n    }\n    return {\n        addTweakPrivateKey,\n        addTweakPublicKeyCompressed: addTweakPublicKey(true),\n        addTweakPublicKeyUncompressed: addTweakPublicKey(false),\n        compressPublicKey: convertPublicKey(true),\n        derivePublicKeyCompressed: derivePublicKey(true),\n        derivePublicKeyUncompressed: derivePublicKey(false),\n        malleateSignatureCompact: modifySignature(false, false),\n        malleateSignatureDER: modifySignature(true, false),\n        mulTweakPrivateKey,\n        mulTweakPublicKeyCompressed: mulTweakPublicKey(true),\n        mulTweakPublicKeyUncompressed: mulTweakPublicKey(false),\n        normalizeSignatureCompact: modifySignature(false, true),\n        normalizeSignatureDER: modifySignature(true, true),\n        recoverPublicKeyCompressed: recoverPublicKey(true),\n        recoverPublicKeyUncompressed: recoverPublicKey(false),\n        signMessageHashCompact: signMessageHash(false),\n        signMessageHashDER: signMessageHash(true),\n        signMessageHashRecoverableCompact: signMessageHashRecoverable,\n        signMessageHashSchnorr: signMessageHashSchnorr(),\n        signatureCompactToDER: convertSignature(false),\n        signatureDERToCompact: convertSignature(true),\n        uncompressPublicKey: convertPublicKey(false),\n        validatePrivateKey: (privateKey) => withPrivateKey(privateKey, () => secp256k1Wasm.seckeyVerify(contextPtr, privateKeyPtr) === 1),\n        validatePublicKey: parsePublicKey,\n        verifySignatureCompact: verifySignature(false, true),\n        verifySignatureCompactLowS: verifySignature(false, false),\n        verifySignatureDER: verifySignature(true, true),\n        verifySignatureDERLowS: verifySignature(true, false),\n        verifySignatureSchnorr: verifySignatureSchnorr(),\n    };\n};\n/**\n * This method is like {@link instantiateSecp256k1}, but requires the consumer\n * to `Window.fetch` or `fs.readFile` the `secp256k1.wasm` binary and provide it\n * to this method as `webassemblyBytes`. This skips a base64 decoding of an\n * embedded binary.\n *\n * ### Randomizing the Context with `randomSeed`\n * This method also accepts an optional, 32-byte `randomSeed`, which is passed\n * to the `contextRandomize` method in the underlying WebAssembly.\n *\n * In the secp256k1 C library, context randomization is an additional layer of\n * security from side-channel attacks that attempt to extract private key\n * information by analyzing things like a CPU's emitted radio frequencies or\n * power usage.\n *\n * As most applications also benefit from deterministic, reproducible behavior,\n * context is not randomized by default in Libauth. To randomize the context,\n * provide a 32-byte Uint8Array of cryptographically strong random values\n * (e.g. `crypto.getRandomValues(new Uint8Array(32))`).\n *\n * @param webassemblyBytes - an ArrayBuffer containing the bytes from Libauth's\n * `secp256k1.wasm` binary. Providing this buffer manually may be faster than\n * the internal base64 decode that happens in {@link instantiateSecp256k1}.\n * @param randomSeed - a 32-byte random seed used to randomize the secp256k1\n * context after creation. See above for details.\n */\nexport const instantiateSecp256k1Bytes = async (webassemblyBytes, randomSeed) => wrapSecp256k1Wasm(await instantiateSecp256k1WasmBytes(webassemblyBytes), randomSeed);\n/**\n * Create and wrap a Secp256k1 WebAssembly instance to expose a set of\n * purely-functional Secp256k1 methods. For slightly faster initialization, use\n * {@link instantiateSecp256k1Bytes}.\n *\n * @param randomSeed - a 32-byte random seed used to randomize the secp256k1\n * context after creation. See the description in\n * {@link instantiateSecp256k1Bytes} for details.\n */\nexport const instantiateSecp256k1 = async (randomSeed) => wrapSecp256k1Wasm(await instantiateSecp256k1Wasm(), randomSeed);\n//# sourceMappingURL=secp256k1.js.map","import { base64ToBin, instantiateRustWasm, sha1Base64Bytes, } from './dependencies.js';\n/**\n * The most performant way to instantiate sha1 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha1}.\n *\n * @param webassemblyBytes - A buffer containing the sha1 binary.\n */\nexport const instantiateSha1Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha1', 'sha1', 'sha1_init', 'sha1_update', 'sha1_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nexport const getEmbeddedSha1Binary = () => base64ToBin(sha1Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of {@link instantiateSha1Bytes}\n * that does not require the consumer to provide the sha1 binary buffer.\n */\nexport const instantiateSha1 = async () => instantiateSha1Bytes(getEmbeddedSha1Binary());\n//# sourceMappingURL=sha1.js.map","import { base64ToBin, instantiateRustWasm, sha256Base64Bytes, } from './dependencies.js';\n/**\n * The most performant way to instantiate sha256 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha256}.\n *\n * @param webassemblyBytes - A buffer containing the sha256 binary.\n */\nexport const instantiateSha256Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha256', 'sha256', 'sha256_init', 'sha256_update', 'sha256_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nexport const getEmbeddedSha256Binary = () => base64ToBin(sha256Base64Bytes).buffer;\n/**\n * An ultimately-portable (but possibly slower) version of\n * {@link instantiateSha256Bytes} which does not require the consumer to provide\n * the sha256 binary buffer.\n */\nexport const instantiateSha256 = async () => instantiateSha256Bytes(getEmbeddedSha256Binary());\n//# sourceMappingURL=sha256.js.map","import { base64ToBin, instantiateRustWasm, sha512Base64Bytes, } from './dependencies.js';\n/**\n * The most performant way to instantiate sha512 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use {@link instantiateSha512}.\n *\n * @param webassemblyBytes - A buffer containing the sha512 binary.\n */\nexport const instantiateSha512Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha512', 'sha512', 'sha512_init', 'sha512_update', 'sha512_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update,\n    };\n};\nexport const getEmbeddedSha512Binary = () => base64ToBin(sha512Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of {@link instantiateSha512Bytes}\n * that does not require the consumer to provide the sha512 binary buffer.\n */\nexport const instantiateSha512 = async () => instantiateSha512Bytes(getEmbeddedSha512Binary());\n//# sourceMappingURL=sha512.js.map","import { instantiateRipemd160 } from './ripemd160.js';\nimport { instantiateSecp256k1 } from './secp256k1.js';\nimport { instantiateSha1 } from './sha1.js';\nimport { instantiateSha256 } from './sha256.js';\nimport { instantiateSha512 } from './sha512.js';\nconst [sha1, sha256, sha512, ripemd160, secp256k1] = await Promise.all([\n    instantiateSha1(),\n    instantiateSha256(),\n    instantiateSha512(),\n    instantiateRipemd160(),\n    instantiateSecp256k1(),\n]);\nexport { ripemd160, secp256k1, sha1, sha256, sha512 };\n//# sourceMappingURL=default-crypto-instances.js.map","import { ripemd160 as internalRipemd160, sha256 as internalSha256, } from './default-crypto-instances.js';\n/**\n * Hash the given payload with sha256, then hash the 32-byte result with\n * ripemd160, returning a 20-byte hash.\n *\n * This hash is used in both {@link AddressType.p2pkh} and\n * {@link AddressType.p2sh20} addresses.\n *\n * @param payload - the Uint8Array to hash\n */\nexport const hash160 = (payload, crypto = { ripemd160: internalRipemd160, sha256: internalSha256 }) => crypto.ripemd160.hash(crypto.sha256.hash(payload));\n/**\n * Hash the given payload with sha256, then hash the 32-byte result with\n * one final round of sha256, returning a 32-byte hash.\n *\n * This type of hash is used to generate identifiers for transactions and blocks\n * (and therefore in block mining).\n *\n * @param payload - the Uint8Array to hash\n */\nexport const hash256 = (payload, sha256 = internalSha256) => sha256.hash(sha256.hash(payload));\n//# sourceMappingURL=combinations.js.map","import { sha256 as internalSha256, sha512 as internalSha512, } from '../crypto/default-crypto-instances.js';\nimport { flattenBinArray } from '../format/format.js';\n/**\n * Instantiate a hash-based message authentication code (HMAC) function as\n * specified by RFC 2104.\n *\n * @param hashFunction - a cryptographic hash function that iterates a basic\n * compression function over blocks of data\n * @param blockByteLength - the byte-length of blocks used in `hashFunction`\n */\nexport const instantiateHmacFunction = (hashFunction, blockByteLength) => (secret, message) => {\n    const key = new Uint8Array(blockByteLength).fill(0);\n    // eslint-disable-next-line functional/no-expression-statements\n    key.set(secret.length > blockByteLength ? hashFunction(secret) : secret, 0);\n    const innerPaddingFill = 0x36;\n    const innerPadding = new Uint8Array(blockByteLength).fill(innerPaddingFill);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n    const innerPrefix = innerPadding.map((pad, index) => pad ^ key[index]);\n    const innerContent = flattenBinArray([innerPrefix, message]);\n    const innerResult = hashFunction(innerContent);\n    const outerPaddingFill = 0x5c;\n    const outerPadding = new Uint8Array(blockByteLength).fill(outerPaddingFill);\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n    const outerPrefix = outerPadding.map((pad, index) => pad ^ key[index]);\n    return hashFunction(flattenBinArray([outerPrefix, innerResult]));\n};\nconst sha256BlockByteLength = 64;\n/**\n * Create a hash-based message authentication code using HMAC-SHA256 as\n * specified in `RFC 4231`. Returns a 32-byte Uint8Array.\n *\n * Secrets longer than the block byte-length (64 bytes) are hashed before\n * use, shortening their length to the minimum recommended length (32 bytes).\n * See `RFC 2104` for details.\n *\n * @param secret - the secret key (recommended length: 32-64 bytes)\n * @param message - the message to authenticate\n * @param sha256 - an implementation of Sha256 (defaults to the\n * internal WASM implementation)\n */\nexport const hmacSha256 = (secret, message, sha256 = internalSha256) => instantiateHmacFunction(sha256.hash, sha256BlockByteLength)(secret, message);\nconst sha512BlockByteLength = 128;\n/**\n * Create a hash-based message authentication code using HMAC-SHA512 as\n * specified in `RFC 4231`. Returns a 64-byte Uint8Array.\n *\n * Secrets longer than the block byte-length (128 bytes) are hashed before\n * use, shortening their length to the minimum recommended length (64 bytes).\n * See `RFC 2104` for details.\n *\n * @param secret - the secret key (recommended length: 64-128 bytes)\n * @param message - the message to authenticate\n * @param sha512 - an implementation of Sha512 (defaults to the\n * internal WASM implementation)\n */\nexport const hmacSha512 = (secret, message, sha512 = internalSha512) => instantiateHmacFunction(sha512.hash, sha512BlockByteLength)(secret, message);\n//# sourceMappingURL=hmac.js.map","import { hash256, sha256 as internalSha256 } from '../crypto/crypto.js';\nimport { base58ToBin, binToBase58, flattenBinArray, formatError, } from '../format/format.js';\n/**\n * Base58 version byte values for common Base58Address format\n * (A.K.A. \"Base58Check\") versions.\n */\nexport var Base58AddressFormatVersion;\n(function (Base58AddressFormatVersion) {\n    /**\n     * A Pay to Public Key Hash (P2PKH) address – base58 encodes to a leading `1`.\n     *\n     * Hex: `0x00`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2pkh\"] = 0] = \"p2pkh\";\n    /**\n     * A 20-byte Pay to Script Hash (P2SH20) address – base58 encodes to a leading\n     * `3`.\n     *\n     * Hex: `0x05`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2sh20\"] = 5] = \"p2sh20\";\n    /**\n     * A private key in Wallet Import Format. For private keys used with\n     * uncompressed public keys, the payload is 32 bytes and causes the version\n     * to be encoded as a `5`. For private keys used with compressed public keys,\n     * a final `0x01` byte is appended to the private key, increasing the payload\n     * to 33 bytes, and causing the version to be encoded as a `K` or `L`.\n     *\n     * Hex: `0x80`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"wif\"] = 128] = \"wif\";\n    /**\n     * A testnet Pay to Public Key Hash (P2PKH) address – base58 encodes to a\n     * leading `m` or `n`.\n     *\n     * Hex: `0x6f`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2pkhTestnet\"] = 111] = \"p2pkhTestnet\";\n    /**\n     * A testnet 20-byte Pay to Script Hash (P2SH20) address – base58 encodes to a\n     * leading `2`.\n     *\n     * Hex: `0xc4`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2sh20Testnet\"] = 196] = \"p2sh20Testnet\";\n    /**\n     * A private key in Wallet Import Format intended for testnet use. For private\n     * keys used with uncompressed public keys, the payload is 32 bytes and causes\n     * the version to be encoded as a `9`. For private keys used with compressed\n     * public keys, a final `0x01` byte is appended to the private key, increasing\n     * the payload to 33 bytes, and causing the version to be encoded as a `c`.\n     *\n     * Hex: `0xef`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"wifTestnet\"] = 239] = \"wifTestnet\";\n    /**\n     * A Pay to Public Key Hash (P2PKH) address intended for use on the Bitcoin\n     * Cash network – base58 encodes to a leading `C`. This version was\n     * temporarily used by the Copay project before the CashAddress format was\n     * standardized.\n     *\n     * Hex: `0x1c`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2pkhCopayBCH\"] = 28] = \"p2pkhCopayBCH\";\n    /**\n     * A 20-byte Pay to Script Hash (P2SH20) address intended for use on the\n     * Bitcoin Cash network – base58 encodes to a leading `H`. This version was\n     * temporarily used by the Copay project before the CashAddress format was\n     * standardized.\n     *\n     * Hex: `0x28`\n     */\n    Base58AddressFormatVersion[Base58AddressFormatVersion[\"p2sh20CopayBCH\"] = 40] = \"p2sh20CopayBCH\";\n})(Base58AddressFormatVersion || (Base58AddressFormatVersion = {}));\n/**\n * Encode a payload using the Base58Address format (A.K.A. \"Base58Check\"), the\n * original address format used by the Satoshi implementation.\n *\n * Note, this method does not enforce error handling via the type system. The\n * returned string will not be a valid Base58Address if `hash` is not exactly 20\n * bytes. If needed, validate the length of `hash` before calling this method.\n *\n * To decode a Base58Address-like format, use {@link decodeBase58AddressFormat}.\n *\n * @remarks\n * A Base58Address includes a 1-byte prefix to indicate the address version, a\n * variable-length payload, and a 4-byte checksum:\n *\n * `[version: 1 byte] [payload: variable length] [checksum: 4 bytes]`\n *\n * The checksum is the first 4 bytes of the double-SHA256 hash of the version\n * byte followed by the payload.\n *\n * @param version - the address version byte (see\n * {@link Base58AddressFormatVersion})\n * @param payload - the Uint8Array payload to encode\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nexport const encodeBase58AddressFormat = (version, payload, sha256 = internalSha256) => {\n    const checksumBytes = 4;\n    const content = Uint8Array.from([version, ...payload]);\n    const checksum = hash256(content, sha256).slice(0, checksumBytes);\n    const bin = flattenBinArray([content, checksum]);\n    return binToBase58(bin);\n};\n/**\n * Encode a hash as a Base58Address.\n *\n * Note, this method does not enforce error handling via the type system. The\n * returned string will not be a valid Base58Address if `hash` is not exactly 20\n * bytes. If needed, validate the length of `hash` before calling this method.\n *\n * For other standards that use the Base58Address format but have other version\n * or length requirements, use {@link encodeCashAddressFormat}.\n *\n * To decode a Base58Address, see {@link decodeBase58Address}.\n *\n * @param type - the type of address to encode: `p2pkh`, `p2sh20`,\n * `p2pkh-testnet`, or `p2sh20-testnet`\n * @param hash - the 20-byte hash to encode\n * (`RIPEMD160(SHA256(public key or bytecode))`)\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nexport const encodeBase58Address = (type, payload, sha256 = internalSha256) => encodeBase58AddressFormat({\n    p2pkh: Base58AddressFormatVersion.p2pkh,\n    p2pkhCopayBCH: Base58AddressFormatVersion.p2pkhCopayBCH,\n    p2pkhTestnet: Base58AddressFormatVersion.p2pkhTestnet,\n    p2sh20: Base58AddressFormatVersion.p2sh20,\n    p2sh20CopayBCH: Base58AddressFormatVersion.p2sh20CopayBCH,\n    p2sh20Testnet: Base58AddressFormatVersion.p2sh20Testnet,\n}[type], payload, sha256);\nexport var Base58AddressError;\n(function (Base58AddressError) {\n    Base58AddressError[\"unknownCharacter\"] = \"Base58Address error: address may only contain valid base58 characters.\";\n    Base58AddressError[\"tooShort\"] = \"Base58Address error: address is too short to be valid.\";\n    Base58AddressError[\"invalidChecksum\"] = \"Base58Address error: address has an invalid checksum.\";\n    Base58AddressError[\"unknownAddressVersion\"] = \"Base58Address error: address uses an unknown address version.\";\n    Base58AddressError[\"incorrectLength\"] = \"Base58Address error: the encoded payload is not the correct length (20 bytes).\";\n})(Base58AddressError || (Base58AddressError = {}));\n/**\n * Attempt to decode a Base58Address-formatted string. This is more lenient than\n * {@link decodeCashAddress}, which also validates the address version.\n *\n * Returns the contents of the address or an error message as a string.\n *\n * To encode a Base58Address-like format, use {@link encodeBase58AddressFormat}.\n *\n * @param address - the string to decode as a base58 address\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nexport const decodeBase58AddressFormat = (address, sha256 = internalSha256) => {\n    const checksumBytes = 4;\n    const bin = base58ToBin(address);\n    if (typeof bin === 'string') {\n        return formatError(Base58AddressError.unknownCharacter, bin);\n    }\n    const minimumBase58AddressLength = 5;\n    if (bin.length < minimumBase58AddressLength) {\n        return Base58AddressError.tooShort;\n    }\n    const content = bin.slice(0, -checksumBytes);\n    const checksum = bin.slice(-checksumBytes);\n    const expectedChecksum = sha256\n        .hash(sha256.hash(content))\n        .slice(0, checksumBytes);\n    if (!checksum.every((value, i) => value === expectedChecksum[i])) {\n        return Base58AddressError.invalidChecksum;\n    }\n    return {\n        payload: content.slice(1),\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        version: content[0],\n    };\n};\n/**\n * Decode and validate a Base58Address, strictly checking the version and\n * payload length.\n *\n * Because the Wallet Import Format (WIF) private key serialization format uses\n * the Base58Address format, some libraries allow WIF key decoding via the same\n * method as base58 address decoding. This method accepts only Base58Address\n * types, but WIF keys can be decoded with {@link decodePrivateKeyWif}.\n *\n * For other address-like standards that closely follow the Base58Address\n * format (but have alternative version byte requirements), use\n * {@link decodeBase58AddressFormat}.\n *\n * To encode a Base58Address, see {@link encodeBase58Address}.\n *\n * @param address - the string to decode as a base58 address\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nexport const decodeBase58Address = (address, sha256 = internalSha256) => {\n    const decoded = decodeBase58AddressFormat(address, sha256);\n    if (typeof decoded === 'string')\n        return decoded;\n    if (![\n        Base58AddressFormatVersion.p2pkh,\n        Base58AddressFormatVersion.p2sh20,\n        Base58AddressFormatVersion.p2pkhTestnet,\n        Base58AddressFormatVersion.p2sh20Testnet,\n        Base58AddressFormatVersion.p2pkhCopayBCH,\n        Base58AddressFormatVersion.p2sh20CopayBCH,\n    ].includes(decoded.version)) {\n        return Base58AddressError.unknownAddressVersion;\n    }\n    const hash160Length = 20;\n    if (decoded.payload.length !== hash160Length) {\n        return Base58AddressError.incorrectLength;\n    }\n    return decoded;\n};\n//# sourceMappingURL=base58-address.js.map","/**\n * The list of 32 symbols used in Bech32 encoding.\n */\n// cspell: disable-next-line\nexport const bech32CharacterSet = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n/**\n * An object mapping each of the 32 symbols used in Bech32 encoding to their respective index in the character set.\n */\n// prettier-ignore\nexport const bech32CharacterSetIndex = { q: 0, p: 1, z: 2, r: 3, y: 4, '9': 5, x: 6, '8': 7, g: 8, f: 9, '2': 10, t: 11, v: 12, d: 13, w: 14, '0': 15, s: 16, '3': 17, j: 18, n: 19, '5': 20, '4': 21, k: 22, h: 23, c: 24, e: 25, '6': 26, m: 27, u: 28, a: 29, '7': 30, l: 31 }; // eslint-disable-line sort-keys, @typescript-eslint/naming-convention\nexport var BitRegroupingError;\n(function (BitRegroupingError) {\n    BitRegroupingError[\"integerOutOfRange\"] = \"An integer provided in the source array is out of the range of the specified source word length.\";\n    BitRegroupingError[\"hasDisallowedPadding\"] = \"Encountered padding when padding was disallowed.\";\n    BitRegroupingError[\"requiresDisallowedPadding\"] = \"Encoding requires padding while padding is disallowed.\";\n})(BitRegroupingError || (BitRegroupingError = {}));\n/* eslint-disable functional/no-let, no-bitwise, functional/no-expression-statements, functional/no-conditional-statements, complexity */\n/**\n * Given an array of integers, regroup bits from `sourceWordLength` to\n * `resultWordLength`, returning a new array of integers between 0 and\n * toWordLength^2.\n *\n * Note, if `bin` is within the range of `sourceWordLength` and `padding` is\n * `true`, this method will never error.\n *\n * A.K.A. `convertbits`\n */\n// Derived from: https://github.com/sipa/bech32\nexport const regroupBits = ({ bin, sourceWordLength, resultWordLength, allowPadding = true, }) => {\n    let accumulator = 0;\n    let bits = 0;\n    const result = [];\n    const maxResultInt = (1 << resultWordLength) - 1;\n    // eslint-disable-next-line functional/no-loop-statements, @typescript-eslint/prefer-for-of, no-plusplus\n    for (let p = 0; p < bin.length; ++p) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const value = bin[p];\n        if (value < 0 || value >> sourceWordLength !== 0) {\n            return BitRegroupingError.integerOutOfRange;\n        }\n        accumulator = (accumulator << sourceWordLength) | value;\n        bits += sourceWordLength;\n        // eslint-disable-next-line functional/no-loop-statements\n        while (bits >= resultWordLength) {\n            bits -= resultWordLength;\n            // eslint-disable-next-line functional/immutable-data\n            result.push((accumulator >> bits) & maxResultInt);\n        }\n    }\n    if (allowPadding) {\n        if (bits > 0) {\n            // eslint-disable-next-line functional/immutable-data\n            result.push((accumulator << (resultWordLength - bits)) & maxResultInt);\n        }\n    }\n    else if (bits >= sourceWordLength) {\n        return BitRegroupingError.hasDisallowedPadding;\n    }\n    else if (((accumulator << (resultWordLength - bits)) & maxResultInt) > 0) {\n        return BitRegroupingError.requiresDisallowedPadding;\n    }\n    return result;\n};\n/* eslint-enable functional/no-let, no-bitwise, functional/no-expression-statements, functional/no-conditional-statements, complexity */\n/**\n * Encode an array of numbers as a base32 string using the Bech32 character set.\n *\n * Note, this method always completes. For a valid result, all items in\n * `base32IntegerArray` must be between `0` and `32`. To prepare another array\n * type for encoding, see {@link regroupBits}.\n *\n * For the reverse, see {@link decodeBech32}.\n *\n * @param base32IntegerArray - the array of 5-bit integers to encode\n */\nexport const encodeBech32 = (base32IntegerArray) => {\n    // eslint-disable-next-line functional/no-let\n    let result = '';\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < base32IntegerArray.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statements, @typescript-eslint/no-non-null-assertion\n        result += bech32CharacterSet[base32IntegerArray[i]];\n    }\n    return result;\n};\n/**\n * Decode a Bech32-encoded string into an array of 5-bit integers.\n *\n * Note, this method always completes. If `validBech32` is not valid bech32,\n * an incorrect result will be returned. If `validBech32` is potentially\n * malformed, check it with {@link isBech32CharacterSet} before calling\n * this method.\n *\n * For the reverse, see {@link encodeBech32}.\n *\n * @param validBech32 - the bech32-encoded string to decode\n */\nexport const decodeBech32 = (validBech32) => {\n    const result = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < validBech32.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(bech32CharacterSetIndex[validBech32[i]]);\n    }\n    return result;\n};\nconst nonBech32Characters = new RegExp(`[^${bech32CharacterSet}]`, 'u');\nconst base32WordLength = 5;\nconst base256WordLength = 8;\n/**\n * Validate that a string uses only characters from the bech32 character set.\n *\n * @param maybeBech32 - a string to test for valid Bech32 encoding\n */\nexport const isBech32CharacterSet = (maybeBech32) => !nonBech32Characters.test(maybeBech32);\n/**\n * Returns an array of the non-Bech32 characters in the provided string; if all\n * characters are valid, an empty array is returned.\n * @param maybeBech32 - the string to test\n */\nexport const extractNonBech32Characters = (maybeBech32) => [\n    ...new Set([...maybeBech32].filter((character) => !bech32CharacterSet.includes(character))),\n];\nexport var Bech32DecodingError;\n(function (Bech32DecodingError) {\n    Bech32DecodingError[\"notBech32CharacterSet\"] = \"Bech32 decoding error: input contains characters outside of the Bech32 character set.\";\n})(Bech32DecodingError || (Bech32DecodingError = {}));\n/**\n * Convert a padded bech32-encoded string (without checksum) to a Uint8Array,\n * removing the padding. If the string is not valid Bech32, or if the array of\n * 5-bit integers would require padding to be regrouped into 8-bit bytes, this\n * method returns an error message.\n *\n * For the reverse, see {@link binToBech32Padded}.\n *\n * @param bech32Padded - the padded bech32-encoded string to decode\n */\nexport const bech32PaddedToBin = (bech32Padded) => {\n    const result = isBech32CharacterSet(bech32Padded)\n        ? regroupBits({\n            allowPadding: false,\n            bin: decodeBech32(bech32Padded),\n            resultWordLength: base256WordLength,\n            sourceWordLength: base32WordLength,\n        })\n        : Bech32DecodingError.notBech32CharacterSet;\n    return typeof result === 'string' ? result : Uint8Array.from(result);\n};\n/**\n * Convert a Uint8Array to a padded bech32-encoded string (without a checksum),\n * adding padding bits as necessary to convert all bytes to 5-bit integers.\n *\n * For the reverse, see {@link bech32PaddedToBin}.\n *\n * @param bytes - the Uint8Array to bech32 encode\n */\nexport const binToBech32Padded = (bytes) => encodeBech32(regroupBits({\n    bin: bytes,\n    resultWordLength: base32WordLength,\n    sourceWordLength: base256WordLength,\n}));\n//# sourceMappingURL=bech32.js.map","import { formatError } from '../format/format.js';\nimport { decodeBech32, encodeBech32, extractNonBech32Characters, isBech32CharacterSet, regroupBits, } from './bech32.js';\nexport var CashAddressNetworkPrefix;\n(function (CashAddressNetworkPrefix) {\n    CashAddressNetworkPrefix[\"mainnet\"] = \"bitcoincash\";\n    CashAddressNetworkPrefix[\"testnet\"] = \"bchtest\";\n    CashAddressNetworkPrefix[\"regtest\"] = \"bchreg\";\n})(CashAddressNetworkPrefix || (CashAddressNetworkPrefix = {}));\n/**\n * The CashAddress specification standardizes the format of the version byte:\n * - Most significant bit: reserved, must be `0`\n * - next 4 bits: Address Type\n * - 3 least significant bits: Payload Length\n *\n * Two Address Type values are currently standardized:\n * - 0 (`0b0000`): P2PKH\n * - 1 (`0b0001`): P2SH\n *\n * And two are proposed by `CHIP-2022-02-CashTokens`:\n * - 2 (`0b0010`): P2PKH + Token Support\n * - 3 (`0b0011`): P2SH + Token Support\n *\n * The CashAddress specification standardizes expected payload length using\n * {@link CashAddressLengthBits}. Currently, two length bit values are in use by\n * standard CashAddress types:\n * - `0` (`0b000`): 20 bytes (in use by `p2pkh` and `p2sh20`)\n * - `3` (`0b011`): 32 bytes (in use by `p2sh32`)\n */\nexport var CashAddressVersionByte;\n(function (CashAddressVersionByte) {\n    /**\n     * Pay to Public Key Hash (P2PKH): `0b00000000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0000` (P2PKH)\n     * - Length bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2pkh\"] = 0] = \"p2pkh\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20): `0b00001000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0001` (P2SH)\n     * - Length bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh20\"] = 8] = \"p2sh20\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH20): `0b00001000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0001` (P2SH)\n     * - Length bits: `011` (32 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh32\"] = 11] = \"p2sh32\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support: `0b00010000`\n     *\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0010` (P2PKH + Tokens)\n     * - Length bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2pkhWithTokens\"] = 16] = \"p2pkhWithTokens\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20) with token support: `0b00011000`\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0011` (P2SH + Tokens)\n     * - Length bits: `000` (20 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh20WithTokens\"] = 24] = \"p2sh20WithTokens\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH32) with token support: `0b00011011`\n     * - Most significant bit: `0` (reserved)\n     * - Address Type bits: `0011` (P2SH + Tokens)\n     * - Length bits: `011` (32 bytes)\n     */\n    CashAddressVersionByte[CashAddressVersionByte[\"p2sh32WithTokens\"] = 27] = \"p2sh32WithTokens\";\n})(CashAddressVersionByte || (CashAddressVersionByte = {}));\n/**\n * The address types currently defined in the CashAddress specification. See\n * also: {@link CashAddressVersionByte}.\n */\nexport var CashAddressType;\n(function (CashAddressType) {\n    /**\n     * Pay to Public Key Hash (P2PKH): `0b0000`\n     */\n    CashAddressType[\"p2pkh\"] = \"p2pkh\";\n    /**\n     * Pay to Script Hash (P2SH): `0b0001`\n     *\n     * Note, this type is used for both {@link CashAddressVersionByte.p2sh20} and\n     * {@link CashAddressVersionByte.p2sh32}.\n     */\n    CashAddressType[\"p2sh\"] = \"p2sh\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support: `0b0010`\n     */\n    CashAddressType[\"p2pkhWithTokens\"] = \"p2pkhWithTokens\";\n    /**\n     * Pay to Script Hash (P2SH) with token support: `0b0011`\n     *\n     * Note, this type is used for both\n     * {@link CashAddressVersionByte.p2sh20WithTokens} and\n     * {@link CashAddressVersionByte.p2sh32WithTokens}.\n     */\n    CashAddressType[\"p2shWithTokens\"] = \"p2shWithTokens\";\n})(CashAddressType || (CashAddressType = {}));\n/**\n * The address type bits currently defined in the CashAddress specification.\n * These map to: {@link CashAddressType}.\n */\nexport var CashAddressTypeBits;\n(function (CashAddressTypeBits) {\n    /**\n     * Pay to Public Key Hash (P2PKH)\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2pkh\"] = 0] = \"p2pkh\";\n    /**\n     * Pay to Script Hash (P2SH)\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2sh\"] = 1] = \"p2sh\";\n    /**\n     * Pay to Public Key Hash (P2PKH) with token support\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2pkhWithTokens\"] = 2] = \"p2pkhWithTokens\";\n    /**\n     * Pay to Script Hash (P2SH) with token support\n     */\n    CashAddressTypeBits[CashAddressTypeBits[\"p2shWithTokens\"] = 3] = \"p2shWithTokens\";\n})(CashAddressTypeBits || (CashAddressTypeBits = {}));\nexport const cashAddressTypeToTypeBits = {\n    [CashAddressType.p2pkh]: CashAddressTypeBits.p2pkh,\n    [CashAddressType.p2sh]: CashAddressTypeBits.p2sh,\n    [CashAddressType.p2pkhWithTokens]: CashAddressTypeBits.p2pkhWithTokens,\n    [CashAddressType.p2shWithTokens]: CashAddressTypeBits.p2shWithTokens,\n};\nexport const cashAddressTypeBitsToType = {\n    [CashAddressTypeBits.p2pkh]: CashAddressType.p2pkh,\n    [CashAddressTypeBits.p2sh]: CashAddressType.p2sh,\n    [CashAddressTypeBits.p2pkhWithTokens]: CashAddressType.p2pkhWithTokens,\n    [CashAddressTypeBits.p2shWithTokens]: CashAddressType.p2shWithTokens,\n};\n/* eslint-disable @typescript-eslint/naming-convention */\nexport const cashAddressLengthBitsToLength = {\n    0: 20,\n    1: 24,\n    2: 28,\n    3: 32,\n    4: 40,\n    5: 48,\n    6: 56,\n    7: 64,\n};\nexport const cashAddressLengthToLengthBits = {\n    20: 0,\n    24: 1,\n    28: 2,\n    32: 3,\n    40: 4,\n    48: 5,\n    56: 6,\n    64: 7,\n};\n/**\n * Encode a CashAddress version byte for the given address type and payload\n * length. See {@link CashAddressVersionByte} for more information.\n *\n * The `type` parameter must be a number between `0` and `15`, and `bitLength`\n * must be one of the standardized lengths. To use the contents of a variable,\n * cast it to {@link CashAddressType} or\n * {@link CashAddressSupportedLength} respectively,\n * e.g.:\n * ```ts\n * const type = 3 as CashAddressType;\n * const length = 20 as CashAddressSupportedLength;\n * getCashAddressVersionByte(type, length);\n * ```\n *\n * For the reverse, see {@link decodeCashAddressVersionByte}.\n *\n * @param typeBits - The address type bit of the payload being encoded.\n * @param length - The length of the payload being encoded.\n */\nexport const encodeCashAddressVersionByte = (typeBits, length) => \n// eslint-disable-next-line no-bitwise\n(typeBits << 3 /* Constants.cashAddressTypeBitsShift */) |\n    cashAddressLengthToLengthBits[length];\nexport var CashAddressVersionByteDecodingError;\n(function (CashAddressVersionByteDecodingError) {\n    CashAddressVersionByteDecodingError[\"reservedBitSet\"] = \"Reserved bit is set.\";\n})(CashAddressVersionByteDecodingError || (CashAddressVersionByteDecodingError = {}));\n/**\n * Decode a CashAddress version byte. For a list of known versions, see\n * {@link CashAddressVersionByte}.\n *\n * For the reverse, see {@link encodeCashAddressVersionByte}.\n *\n * @param version - The version byte to decode.\n */\nexport const decodeCashAddressVersionByte = (version) => \n// eslint-disable-next-line no-negated-condition, no-bitwise\n(version & 128 /* Constants.cashAddressReservedBitMask */) !== 0\n    ? CashAddressVersionByteDecodingError.reservedBitSet\n    : {\n        length: cashAddressLengthBitsToLength[\n        // eslint-disable-next-line no-bitwise\n        (version &\n            7 /* Constants.cashAddressLengthBits */)],\n        typeBits: \n        // eslint-disable-next-line no-bitwise\n        (version >>> 3 /* Constants.cashAddressTypeBitsShift */) &\n            15 /* Constants.cashAddressTypeBits */,\n    };\n/**\n * Convert a string into an array of 5-bit numbers, representing the characters\n * in a case-insensitive way.\n *\n * @param prefix - The prefix to mask.\n */\nexport const maskCashAddressPrefix = (prefix) => {\n    const result = [];\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < prefix.length; i++) {\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, functional/immutable-data\n        result.push(prefix.charCodeAt(i) & 31 /* Constants.asciiCaseInsensitiveBits */);\n    }\n    return result;\n};\n// prettier-ignore\nconst bech32GeneratorMostSignificantByte = [0x98, 0x79, 0xf3, 0xae, 0x1e]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n// prettier-ignore\nconst bech32GeneratorRemainingBytes = [0xf2bc8e61, 0xb76d99e2, 0x3e5fb3c4, 0x2eabe2a8, 0x4f43e470]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n/**\n * Perform the CashAddress polynomial modulo operation, which is based on the\n * Bech32 polynomial modulo operation, but the returned checksum is 40 bits,\n * rather than 30.\n *\n * A.K.A. `PolyMod`\n *\n * @remarks\n * Notes from C++ implementation:\n * This function will compute what 8 5-bit values to XOR into the last 8 input\n * values, in order to make the checksum 0. These 8 values are packed together\n * in a single 40-bit integer. The higher bits correspond to earlier values.\n *\n * The input is interpreted as a list of coefficients of a polynomial over F\n * = GF(32), with an implicit 1 in front. If the input is [v0,v1,v2,v3,v4],\n * that polynomial is v(x) = 1*x^5 + v0*x^4 + v1*x^3 + v2*x^2 + v3*x + v4.\n * The implicit 1 guarantees that [v0,v1,v2,...] has a distinct checksum\n * from [0,v0,v1,v2,...].\n *\n * The output is a 40-bit integer whose 5-bit groups are the coefficients of\n * the remainder of v(x) mod g(x), where g(x) is the cashaddr generator, x^8\n * + [19]*x^7 + [3]*x^6 + [25]*x^5 + [11]*x^4 + [25]*x^3 + [3]*x^2 + [19]*x\n * + [1]. g(x) is chosen in such a way that the resulting code is a BCH\n * code, guaranteeing detection of up to 4 errors within a window of 1025\n * characters. Among the various possible BCH codes, one was selected to in\n * fact guarantee detection of up to 5 errors within a window of 160\n * characters and 6 errors within a window of 126 characters. In addition,\n * the code guarantee the detection of a burst of up to 8 errors.\n *\n * Note that the coefficients are elements of GF(32), here represented as\n * decimal numbers between []. In this finite field, addition is just XOR of\n * the corresponding numbers. For example, [27] + [13] = [27 ^ 13] = [22].\n * Multiplication is more complicated, and requires treating the bits of\n * values themselves as coefficients of a polynomial over a smaller field,\n * GF(2), and multiplying those polynomials mod a^5 + a^3 + 1. For example,\n * [5] * [26] = (a^2 + 1) * (a^4 + a^3 + a) = (a^4 + a^3 + a) * a^2 + (a^4 +\n * a^3 + a) = a^6 + a^5 + a^4 + a = a^3 + 1 (mod a^5 + a^3 + 1) = [9].\n *\n * During the course of the loop below, `c` contains the bit-packed\n * coefficients of the polynomial constructed from just the values of v that\n * were processed so far, mod g(x). In the above example, `c` initially\n * corresponds to 1 mod (x), and after processing 2 inputs of v, it\n * corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the\n * starting value for `c`.\n *\n * @param v - Array of 5-bit integers over which the checksum is to be computed.\n */\n// Derived from the `bitcore-lib-cash` implementation (does not require BigInt): https://github.com/bitpay/bitcore\nexport const cashAddressPolynomialModulo = (v) => {\n    /* eslint-disable functional/no-let, functional/no-loop-statements, functional/no-expression-statements, no-bitwise, @typescript-eslint/no-magic-numbers */\n    let mostSignificantByte = 0;\n    let lowerBytes = 1;\n    let c = 0;\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of, no-plusplus\n    for (let j = 0; j < v.length; j++) {\n        c = mostSignificantByte >>> 3;\n        mostSignificantByte &= 0x07;\n        mostSignificantByte <<= 5;\n        mostSignificantByte |= lowerBytes >>> 27;\n        lowerBytes &= 0x07ffffff;\n        lowerBytes <<= 5;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        lowerBytes ^= v[j];\n        // eslint-disable-next-line no-plusplus\n        for (let i = 0; i < bech32GeneratorMostSignificantByte.length; ++i) {\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (c & (1 << i)) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                mostSignificantByte ^= bech32GeneratorMostSignificantByte[i];\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                lowerBytes ^= bech32GeneratorRemainingBytes[i];\n            }\n        }\n    }\n    lowerBytes ^= 1;\n    // eslint-disable-next-line functional/no-conditional-statements\n    if (lowerBytes < 0) {\n        lowerBytes ^= 1 << 31;\n        lowerBytes += (1 << 30) * 2;\n    }\n    return mostSignificantByte * (1 << 30) * 4 + lowerBytes;\n    /* eslint-enable functional/no-let, functional/no-loop-statements, functional/no-expression-statements, no-bitwise, @typescript-eslint/no-magic-numbers */\n};\n/**\n * Convert the checksum returned by {@link cashAddressPolynomialModulo} to an\n * array of 5-bit positive integers that can be Base32 encoded.\n * @param checksum - A 40 bit checksum returned by\n * {@link cashAddressPolynomialModulo}.\n */\nexport const cashAddressChecksumToUint5Array = (checksum) => {\n    const result = [];\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < 8 /* Constants.base256WordLength */; ++i) {\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-magic-numbers, functional/immutable-data\n        result.push(checksum & 31);\n        // eslint-disable-next-line functional/no-expression-statements, @typescript-eslint/no-magic-numbers, no-param-reassign\n        checksum /= 32;\n    }\n    // eslint-disable-next-line functional/immutable-data\n    return result.reverse();\n};\nexport var CashAddressFormatEncodingError;\n(function (CashAddressFormatEncodingError) {\n    CashAddressFormatEncodingError[\"excessiveVersion\"] = \"CashAddress format encoding error: version must be 255 or less.\";\n})(CashAddressFormatEncodingError || (CashAddressFormatEncodingError = {}));\nexport var CashAddressEncodingError;\n(function (CashAddressEncodingError) {\n    CashAddressEncodingError[\"noTypeBitsValueStandardizedForP2pk\"] = \"CashAddress encoding error: no CashAddress type bit has been standardized for P2PK locking bytecode.\";\n    CashAddressEncodingError[\"unsupportedPayloadLength\"] = \"CashAddress encoding error: a payload of this length can not be encoded as a valid CashAddress.\";\n    CashAddressEncodingError[\"unknownLockingBytecodeType\"] = \"CashAddress encoding error: unknown locking bytecode type.\";\n})(CashAddressEncodingError || (CashAddressEncodingError = {}));\n/**\n * Encode a payload as a CashAddress-like string using the CashAddress format.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * For the reverse, see {@link decodeCashAddressFormat}.\n *\n * To encode a standard CashAddress, use {@link encodeCashAddress}.\n */\nexport const encodeCashAddressFormat = ({ payload, prefix, throwErrors = true, version, }) => {\n    const checksum40BitPlaceholder = [0, 0, 0, 0, 0, 0, 0, 0];\n    if (version > 255 /* Constants.maximumCashAddressFormatVersion */) {\n        return formatError(CashAddressFormatEncodingError.excessiveVersion, `Version: ${version}.`, throwErrors);\n    }\n    const payloadContents = regroupBits({\n        bin: Uint8Array.from([version, ...payload]),\n        resultWordLength: 5 /* Constants.base32WordLength */,\n        sourceWordLength: 8 /* Constants.base256WordLength */,\n    });\n    const checksumContents = [\n        ...maskCashAddressPrefix(prefix),\n        0 /* Constants.payloadSeparator */,\n        ...payloadContents,\n        ...checksum40BitPlaceholder,\n    ];\n    const checksum = cashAddressPolynomialModulo(checksumContents);\n    const encoded = [\n        ...payloadContents,\n        ...cashAddressChecksumToUint5Array(checksum),\n    ];\n    const address = `${prefix}:${encodeBech32(encoded)}`;\n    return { address };\n};\nexport const isValidCashAddressPayloadLength = (length) => cashAddressLengthToLengthBits[length] !== undefined;\n/**\n * Encode a payload as a CashAddress. This function is similar to\n * {@link encodeCashAddress} but supports non-standard `prefix`es and `type`s.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * For other address standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link encodeCashAddressFormat}.\n *\n * For the reverse, see {@link decodeCashAddressNonStandard}.\n */\nexport const encodeCashAddressNonStandard = ({ payload, prefix, throwErrors = true, typeBits, }) => {\n    const { length } = payload;\n    if (!isValidCashAddressPayloadLength(length)) {\n        return formatError(CashAddressEncodingError.unsupportedPayloadLength, `Payload length: ${length}.`, throwErrors);\n    }\n    return encodeCashAddressFormat({\n        payload,\n        prefix,\n        throwErrors,\n        version: encodeCashAddressVersionByte(typeBits, length),\n    });\n};\n/**\n * Encode a payload as a CashAddress.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * To encode a CashAddress with a custom/unknown prefix or type bit, see\n * {@link encodeCashAddressNonStandard}. For other address standards that\n * closely follow the CashAddress specification (but have alternative version\n * byte requirements), use {@link encodeCashAddressFormat}.\n *\n * To decode a CashAddress, use {@link decodeCashAddress}.\n *\n * @returns If `throwErrors` is `true`, the CashAddress as a `string`. If\n * `throwErrors` is `false`, a {@link CashAddressResult} on successful encoding\n * or an error message as a `string`.\n */\nexport const encodeCashAddress = ({ payload, prefix = 'bitcoincash', throwErrors = true, type, }) => encodeCashAddressNonStandard({\n    payload,\n    prefix,\n    throwErrors,\n    typeBits: cashAddressTypeToTypeBits[type],\n});\nexport var CashAddressDecodingError;\n(function (CashAddressDecodingError) {\n    CashAddressDecodingError[\"improperPadding\"] = \"CashAddress decoding error: the payload is improperly padded.\";\n    CashAddressDecodingError[\"invalidCharacters\"] = \"CashAddress decoding error: the payload contains unexpected characters.\";\n    CashAddressDecodingError[\"invalidChecksum\"] = \"CashAddress decoding error: invalid checksum - please review the address for errors.\";\n    CashAddressDecodingError[\"invalidFormat\"] = \"CashAddress decoding error: CashAddresses should be of the form \\\"prefix:payload\\\".\";\n    CashAddressDecodingError[\"mismatchedPayloadLength\"] = \"CashAddress decoding error: mismatched payload length for specified address version.\";\n    CashAddressDecodingError[\"reservedBit\"] = \"CashAddress decoding error: unknown CashAddress version, reserved bit set.\";\n    CashAddressDecodingError[\"unknownAddressType\"] = \"CashAddress decoding error: unknown CashAddress type.\";\n})(CashAddressDecodingError || (CashAddressDecodingError = {}));\n/**\n * Decode and validate a string using the CashAddress format. This is more\n * lenient than {@link decodeCashAddress}, which also validates the contents of\n * the version byte.\n *\n * Note, this method requires `address` to include a network prefix. To\n * decode a string with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * For the reverse, see {@link encodeCashAddressFormat}.\n *\n * @param address - The CashAddress-like string to decode.\n */\n// eslint-disable-next-line complexity\nexport const decodeCashAddressFormat = (address) => {\n    const parts = address.toLowerCase().split(':');\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {\n        return formatError(CashAddressDecodingError.invalidFormat, `Provided address: \"${address}\".`);\n    }\n    const [prefix, payload] = parts;\n    if (!isBech32CharacterSet(payload)) {\n        return formatError(CashAddressDecodingError.invalidCharacters, `Invalid characters: ${extractNonBech32Characters(payload).join(', ')}.`);\n    }\n    const decodedPayload = decodeBech32(payload);\n    const polynomial = [\n        ...maskCashAddressPrefix(prefix),\n        0 /* Constants.payloadSeparator */,\n        ...decodedPayload,\n    ];\n    if (cashAddressPolynomialModulo(polynomial) !== 0) {\n        return CashAddressDecodingError.invalidChecksum;\n    }\n    const checksum40BitPlaceholderLength = 8;\n    const payloadContents = regroupBits({\n        allowPadding: false,\n        bin: decodedPayload.slice(0, -checksum40BitPlaceholderLength),\n        resultWordLength: 8 /* Constants.base256WordLength */,\n        sourceWordLength: 5 /* Constants.base32WordLength */,\n    });\n    if (typeof payloadContents === 'string') {\n        return formatError(CashAddressDecodingError.improperPadding, payloadContents);\n    }\n    const [version, ...contents] = payloadContents;\n    const result = Uint8Array.from(contents);\n    return { payload: result, prefix, version };\n};\n/**\n * Decode and validate a CashAddress, strictly checking the version byte\n * according to the CashAddress specification. This is important for error\n * detection in CashAddresses.\n *\n * This function is similar to {@link decodeCashAddress} but supports\n * non-standard `type`s.\n *\n * For other address-like standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link decodeCashAddressFormat}.\n *\n * Note, this method requires that CashAddresses include a network prefix. To\n * decode an address with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * For the reverse, see {@link encodeCashAddressNonStandard}.\n *\n * @param address - The CashAddress to decode.\n */\nexport const decodeCashAddressNonStandard = (address) => {\n    const decoded = decodeCashAddressFormat(address);\n    if (typeof decoded === 'string') {\n        return decoded;\n    }\n    const info = decodeCashAddressVersionByte(decoded.version);\n    if (info === CashAddressVersionByteDecodingError.reservedBitSet) {\n        return formatError(CashAddressDecodingError.reservedBit);\n    }\n    if (decoded.payload.length !== info.length) {\n        return formatError(CashAddressDecodingError.mismatchedPayloadLength, `Version byte indicated a byte length of ${info.length}, but the payload is ${decoded.payload.length} bytes.`);\n    }\n    return {\n        payload: decoded.payload,\n        prefix: decoded.prefix,\n        typeBits: info.typeBits,\n    };\n};\n/**\n * Decode and validate a CashAddress, strictly checking the version byte\n * according to the CashAddress specification. This is important for error\n * detection in CashAddresses.\n *\n * To decode CashAddresses with non-standard `type`s,\n * see {@link decodeCashAddressNonStandard}.\n *\n * For other address-like standards that closely follow the CashAddress\n * specification (but have alternative version byte requirements), use\n * {@link decodeCashAddressFormat}.\n *\n * Note, this method requires that CashAddresses include a network prefix. To\n * decode an address with an unknown prefix, try\n * {@link decodeCashAddressFormatWithoutPrefix}.\n *\n * To encode a CashAddress, use {@link encodeCashAddress}.\n *\n * @param address - The CashAddress to decode.\n */\nexport const decodeCashAddress = (address) => {\n    const decoded = decodeCashAddressNonStandard(address);\n    if (typeof decoded === 'string') {\n        return decoded;\n    }\n    const type = cashAddressTypeBitsToType[decoded.typeBits];\n    if (type === undefined) {\n        return formatError(CashAddressDecodingError.unknownAddressType, `Type bit value: ${decoded.typeBits}.`);\n    }\n    return {\n        payload: decoded.payload,\n        prefix: decoded.prefix,\n        type,\n    };\n};\n/**\n * Attempt to decode and validate a CashAddress against a list of possible\n * prefixes. If the correct prefix is known, use {@link decodeCashAddress}.\n *\n * @param address - The CashAddress to decode.\n * @param possiblePrefixes - The network prefixes to try.\n */\n// decodeCashAddressWithoutPrefix\nexport const decodeCashAddressFormatWithoutPrefix = (address, possiblePrefixes = [\n    CashAddressNetworkPrefix.mainnet,\n    CashAddressNetworkPrefix.testnet,\n    CashAddressNetworkPrefix.regtest,\n]) => {\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const prefix of possiblePrefixes) {\n        const attempt = decodeCashAddressFormat(`${prefix}:${address}`);\n        if (attempt !== CashAddressDecodingError.invalidChecksum) {\n            return attempt;\n        }\n    }\n    return CashAddressDecodingError.invalidChecksum;\n};\n/**\n * Convert a CashAddress polynomial to CashAddress string format.\n *\n * @remarks\n * CashAddress polynomials take the form:\n *\n * `[lowest 5 bits of each prefix character] 0 [payload + checksum]`\n *\n * This method remaps the 5-bit integers in the prefix location to the matching\n * ASCII lowercase characters, replaces the separator with `:`, and then Bech32\n * encodes the remaining payload and checksum.\n *\n * @param polynomial - An array of 5-bit integers representing the terms of a\n * CashAddress polynomial.\n */\nexport const cashAddressPolynomialToCashAddress = (polynomial) => {\n    const separatorPosition = polynomial.indexOf(0);\n    const prefix = polynomial\n        .slice(0, separatorPosition)\n        .map((integer) => String.fromCharCode(96 /* Constants.asciiLowerCaseStart */ + integer))\n        .join('');\n    const contents = encodeBech32(polynomial.slice(separatorPosition + 1));\n    return `${prefix}:${contents}`;\n};\nexport var CashAddressFormatCorrectionError;\n(function (CashAddressFormatCorrectionError) {\n    CashAddressFormatCorrectionError[\"tooManyErrors\"] = \"CashAddress format correction error: this address cannot be corrected as it contains more than 2 errors.\";\n})(CashAddressFormatCorrectionError || (CashAddressFormatCorrectionError = {}));\n/**\n * Attempt to correct up to 2 errors in a CashAddress-formatted string. The\n * string must include the prefix and only contain Bech32 characters.\n *\n * ## **CAUTION: improper use of this function can lead to lost funds.**\n *\n * Using error correction of CashAddress-like formats degrades error detection,\n * i.e. if the payload contains more than 2 errors, it is possible that error\n * correction will \"correct\" the payload to a plausible but incorrect payload.\n *\n * For applications which proceed to take irreversible actions – like sending a\n * payment – **naive usage of CashAddress Format error correction can lead to\n * vulnerabilities and lost funds**.\n *\n * It is strongly advised that this method only be used in fail-safe\n * applications (e.g. automatic correction of CashAddress-formatted private key\n * material during wallet recovery) or under explicit user control (e.g. \"The\n * address you entered is invalid, please review the highlighted characters and\n * try again.\").\n *\n * Only 2 substitution errors can be corrected (or a single swap) – deletions\n * and insertions (errors that shift many other characters and change the\n * length of the payload) can never be safely corrected and will produce an\n * error.\n *\n * Errors can be corrected in both the prefix and the payload, but attempting to\n * correct errors in the prefix prior to this method can improve results, e.g.\n * for `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfde0x`, the string\n * `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can be corrected, while\n * `typo:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can not.\n *\n * @param address - The address or formatted data to correct.\n */\n// Derived from: https://github.com/deadalnix/cashaddressed\n// eslint-disable-next-line complexity\nexport const attemptCashAddressFormatErrorCorrection = (address) => {\n    const parts = address.toLowerCase().split(':');\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {\n        return CashAddressDecodingError.invalidFormat;\n    }\n    const [prefix, payload] = parts;\n    if (!isBech32CharacterSet(payload)) {\n        return formatError(CashAddressDecodingError.invalidCharacters, `Invalid characters: ${extractNonBech32Characters(payload).join(', ')}.`);\n    }\n    const decodedPayload = decodeBech32(payload);\n    const polynomial = [...maskCashAddressPrefix(prefix), 0, ...decodedPayload];\n    const originalChecksum = cashAddressPolynomialModulo(polynomial);\n    if (originalChecksum === 0) {\n        return {\n            address: cashAddressPolynomialToCashAddress(polynomial),\n            corrections: [],\n        };\n    }\n    const syndromes = {};\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let term = 0; term < polynomial.length; term++) {\n        // eslint-disable-next-line functional/no-loop-statements\n        for (\n        // eslint-disable-next-line functional/no-let\n        let errorVector = 1; errorVector < 32 /* Constants.finiteFieldOrder */; \n        // eslint-disable-next-line no-plusplus\n        errorVector++) {\n            // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n            polynomial[term] ^= errorVector;\n            const correct = cashAddressPolynomialModulo(polynomial);\n            if (correct === 0) {\n                return {\n                    address: cashAddressPolynomialToCashAddress(polynomial),\n                    corrections: [term],\n                };\n            }\n            // eslint-disable-next-line no-bitwise\n            const s0 = (BigInt(correct) ^ BigInt(originalChecksum)).toString();\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            syndromes[s0] = term * 32 /* Constants.finiteFieldOrder */ + errorVector;\n            // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n            polynomial[term] ^= errorVector;\n        }\n    }\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const [s0, pe] of Object.entries(syndromes)) {\n        // eslint-disable-next-line no-bitwise\n        const s1Location = (BigInt(s0) ^ BigInt(originalChecksum)).toString();\n        const s1 = syndromes[s1Location];\n        if (s1 !== undefined) {\n            const correctionIndex1 = Math.trunc(pe / 32 /* Constants.finiteFieldOrder */);\n            const correctionIndex2 = Math.trunc(s1 / 32 /* Constants.finiteFieldOrder */);\n            // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n            polynomial[correctionIndex1] ^= pe % 32 /* Constants.finiteFieldOrder */;\n            // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n            polynomial[correctionIndex2] ^= s1 % 32 /* Constants.finiteFieldOrder */;\n            return {\n                address: cashAddressPolynomialToCashAddress(polynomial),\n                corrections: [correctionIndex1, correctionIndex2].sort((a, b) => a - b),\n            };\n        }\n    }\n    return CashAddressFormatCorrectionError.tooManyErrors;\n};\n//# sourceMappingURL=cash-address.js.map","import { sha256 as internalSha256 } from '../crypto/crypto.js';\nimport { unknownValue } from '../format/format.js';\nimport { Base58AddressFormatVersion, decodeBase58Address, encodeBase58AddressFormat, } from './base58-address.js';\nimport { CashAddressEncodingError, CashAddressType, decodeCashAddress, encodeCashAddress, } from './cash-address.js';\n/**\n * The most common address types used on Bitcoin Cash and similar networks. Each\n * address type represents a commonly used locking bytecode pattern.\n *\n * @remarks\n * Addresses are strings that encode information about the network and\n * `lockingBytecode` to which a transaction output can pay.\n *\n * Several address formats exist – `Base58Address` was the format used by the\n * original satoshi client, and is still in use on several active chains (see\n * {@link encodeBase58Address}). On Bitcoin Cash, the `CashAddress` standard is\n * most common (See {@link encodeCashAddress}).\n */\nexport var LockingBytecodeType;\n(function (LockingBytecodeType) {\n    /**\n     * Pay to Public Key (P2PK). This address type is uncommon, and primarily\n     * occurs in early blocks because the original satoshi implementation mined\n     * rewards to P2PK addresses.\n     *\n     * There are no standardized address formats for representing a P2PK address.\n     * Instead, most applications use the `AddressType.p2pkh` format.\n     */\n    LockingBytecodeType[\"p2pk\"] = \"P2PK\";\n    /**\n     * Pay to Public Key Hash (P2PKH). The most common address type. P2PKH\n     * addresses lock funds using a single private key.\n     */\n    LockingBytecodeType[\"p2pkh\"] = \"P2PKH\";\n    /**\n     * 20-byte Pay to Script Hash (P2SH20). An address type that locks funds to\n     * the 20-byte hash of a script provided in the spending transaction. See\n     * BIPs 13 and 16 for details.\n     */\n    LockingBytecodeType[\"p2sh20\"] = \"P2SH20\";\n    /**\n     * 32-byte Pay to Script Hash (P2SH32). An address type that locks funds to\n     * the 32-byte hash of a script provided in the spending transaction.\n     */\n    LockingBytecodeType[\"p2sh32\"] = \"P2SH32\";\n})(LockingBytecodeType || (LockingBytecodeType = {}));\nexport const isPayToPublicKeyUncompressed = (lockingBytecode) => lockingBytecode.length === 67 /* PayToPublicKeyUncompressed.length */ &&\n    lockingBytecode[0] === 65 /* Opcodes.OP_PUSHBYTES_65 */ &&\n    lockingBytecode[66 /* PayToPublicKeyUncompressed.lastElement */] ===\n        172 /* Opcodes.OP_CHECKSIG */;\nexport const isPayToPublicKeyCompressed = (lockingBytecode) => lockingBytecode.length === 35 /* PayToPublicKeyCompressed.length */ &&\n    lockingBytecode[0] === 33 /* Opcodes.OP_PUSHBYTES_33 */ &&\n    lockingBytecode[34 /* PayToPublicKeyCompressed.lastElement */] === 172 /* Opcodes.OP_CHECKSIG */;\nexport const isPayToPublicKey = (lockingBytecode) => isPayToPublicKeyCompressed(lockingBytecode) ||\n    isPayToPublicKeyUncompressed(lockingBytecode);\n// eslint-disable-next-line complexity\nexport const isPayToPublicKeyHash = (lockingBytecode) => lockingBytecode.length === 25 /* PayToPublicKeyHash.length */ &&\n    lockingBytecode[0] === 118 /* Opcodes.OP_DUP */ &&\n    lockingBytecode[1] === 169 /* Opcodes.OP_HASH160 */ &&\n    lockingBytecode[2] === 20 /* Opcodes.OP_PUSHBYTES_20 */ &&\n    lockingBytecode[23] === 136 /* Opcodes.OP_EQUALVERIFY */ &&\n    lockingBytecode[24] === 172 /* Opcodes.OP_CHECKSIG */;\nexport const isPayToScriptHash20 = (lockingBytecode) => lockingBytecode.length === 23 /* PayToScriptHash20.length */ &&\n    lockingBytecode[0] === 169 /* Opcodes.OP_HASH160 */ &&\n    lockingBytecode[1] === 20 /* Opcodes.OP_PUSHBYTES_20 */ &&\n    lockingBytecode[22 /* PayToScriptHash20.lastElement */] === 135 /* Opcodes.OP_EQUAL */;\nexport const isPayToScriptHash32 = (lockingBytecode) => lockingBytecode.length === 35 /* PayToScriptHash32.length */ &&\n    lockingBytecode[0] === 170 /* Opcodes.OP_HASH256 */ &&\n    lockingBytecode[1] === 32 /* Opcodes.OP_PUSHBYTES_32 */ &&\n    lockingBytecode[34 /* PayToScriptHash32.lastElement */] === 135 /* Opcodes.OP_EQUAL */;\n/**\n * Attempt to match a lockingBytecode to a standard address type for use in\n * address encoding. (See {@link LockingBytecodeType} for details.)\n *\n * For a locking bytecode matching the Pay to Public Key Hash (P2PKH) pattern,\n * the returned `type` is {@link LockingBytecodeType.p2pkh} and `payload` is the\n * `HASH160` of the public key.\n *\n * For a locking bytecode matching the 20-byte Pay to Script Hash (P2SH20)\n * pattern, the returned `type` is {@link LockingBytecodeType.p2sh20} and\n * `payload` is the `HASH160` of the redeeming bytecode, A.K.A. \"redeem\n * script hash\".\n *\n * For a locking bytecode matching the Pay to Public Key (P2PK) pattern, the\n * returned `type` is {@link LockingBytecodeType.p2pk} and `payload` is the full\n * public key.\n *\n * Any other locking bytecode will return a `type` of\n * {@link LockingBytecodeType.unknown} and a payload of the\n * unmodified `bytecode`.\n *\n * @param bytecode - the locking bytecode to match\n */\n// eslint-disable-next-line complexity\nexport const lockingBytecodeToAddressContents = (bytecode) => {\n    if (isPayToPublicKeyHash(bytecode)) {\n        return {\n            payload: bytecode.slice(3 /* AddressPayload.p2pkhStart */, 23 /* AddressPayload.p2pkhEnd */),\n            type: LockingBytecodeType.p2pkh,\n        };\n    }\n    if (isPayToScriptHash20(bytecode)) {\n        return {\n            payload: bytecode.slice(2 /* AddressPayload.p2sh20Start */, 22 /* AddressPayload.p2sh20End */),\n            type: LockingBytecodeType.p2sh20,\n        };\n    }\n    if (isPayToScriptHash32(bytecode)) {\n        return {\n            payload: bytecode.slice(2 /* AddressPayload.p2sh32Start */, 34 /* AddressPayload.p2sh32End */),\n            type: LockingBytecodeType.p2sh32,\n        };\n    }\n    if (isPayToPublicKeyUncompressed(bytecode)) {\n        return {\n            payload: bytecode.slice(1 /* AddressPayload.p2pkUncompressedStart */, 66 /* AddressPayload.p2pkUncompressedEnd */),\n            type: LockingBytecodeType.p2pk,\n        };\n    }\n    if (isPayToPublicKeyCompressed(bytecode)) {\n        return {\n            payload: bytecode.slice(1 /* AddressPayload.p2pkCompressedStart */, 34 /* AddressPayload.p2pkCompressedEnd */),\n            type: LockingBytecodeType.p2pk,\n        };\n    }\n    return { payload: bytecode.slice(), type: 'unknown' };\n};\n/**\n * Given the 20-byte {@link hash160} of a compressed public key, return a P2PKH\n * locking bytecode:\n * `OP_DUP OP_HASH160 OP_PUSHBYTES_20 publicKeyHash OP_EQUALVERIFY OP_CHECKSIG`.\n *\n * This method does not validate `publicKeyHash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param publicKeyHash - the 20-byte hash of the compressed public key\n * @returns\n */\nexport const encodeLockingBytecodeP2pkh = (publicKeyHash) => Uint8Array.from([\n    118 /* Opcodes.OP_DUP */,\n    169 /* Opcodes.OP_HASH160 */,\n    20 /* Opcodes.OP_PUSHBYTES_20 */,\n    ...publicKeyHash,\n    136 /* Opcodes.OP_EQUALVERIFY */,\n    172 /* Opcodes.OP_CHECKSIG */,\n]);\n/**\n * Given the 20-byte {@link hash160} of a P2SH20 redeem bytecode, encode a\n * P2SH20 locking bytecode:\n * `OP_HASH160 OP_PUSHBYTES_20 redeemBytecodeHash OP_EQUAL`.\n *\n * This method does not validate `p2sh20Hash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param p2sh20Hash - the 20-byte, p2sh20 redeem bytecode hash\n */\nexport const encodeLockingBytecodeP2sh20 = (p2sh20Hash) => Uint8Array.from([\n    169 /* Opcodes.OP_HASH160 */,\n    20 /* Opcodes.OP_PUSHBYTES_20 */,\n    ...p2sh20Hash,\n    135 /* Opcodes.OP_EQUAL */,\n]);\n/**\n * Given the 32-byte {@link hash256} of a P2SH32 redeem bytecode, encode a\n * P2SH32 locking bytecode:\n * `OP_HASH256 OP_PUSHBYTES_32 redeemBytecodeHash OP_EQUAL`.\n *\n * This method does not validate `p2sh32Hash` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param p2sh32Hash - the 32-byte, p2sh32 redeem bytecode hash\n */\nexport const encodeLockingBytecodeP2sh32 = (p2sh32Hash) => Uint8Array.from([\n    170 /* Opcodes.OP_HASH256 */,\n    32 /* Opcodes.OP_PUSHBYTES_32 */,\n    ...p2sh32Hash,\n    135 /* Opcodes.OP_EQUAL */,\n]);\n/**\n * Given a 33-byte compressed or 65-byte uncompressed public key, encode a P2PK\n * locking bytecode: `OP_PUSHBYTES_33 publicKey OP_CHECKSIG` or\n * `OP_PUSHBYTES_65 publicKey OP_CHECKSIG`.\n *\n * This method does not validate `publicKey` in any way; inputs of incorrect\n * lengths will produce incorrect results.\n *\n * @param publicKey - the 33-byte or 65-byte public key\n */\nexport const encodeLockingBytecodeP2pk = (publicKey) => publicKey.length === 33 /* AddressPayload.compressedPublicKeyLength */\n    ? Uint8Array.from([\n        33 /* Opcodes.OP_PUSHBYTES_33 */,\n        ...publicKey,\n        172 /* Opcodes.OP_CHECKSIG */,\n    ])\n    : Uint8Array.from([\n        65 /* Opcodes.OP_PUSHBYTES_65 */,\n        ...publicKey,\n        172 /* Opcodes.OP_CHECKSIG */,\n    ]);\n/**\n * Get the locking bytecode for a {@link KnownAddressTypeContents}. See\n * {@link lockingBytecodeToAddressContents} for details.\n *\n * @param addressContents - the `AddressContents` to encode\n */\nexport const addressContentsToLockingBytecode = ({ payload, type, }) => {\n    if (type === LockingBytecodeType.p2pkh) {\n        return encodeLockingBytecodeP2pkh(payload);\n    }\n    if (type === LockingBytecodeType.p2sh20) {\n        return encodeLockingBytecodeP2sh20(payload);\n    }\n    if (type === LockingBytecodeType.p2sh32) {\n        return encodeLockingBytecodeP2sh32(payload);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (type === LockingBytecodeType.p2pk) {\n        return encodeLockingBytecodeP2pk(payload);\n    }\n    return unknownValue(type, `Unrecognized addressContents type:`);\n};\n/**\n * Encode a locking bytecode as a CashAddress.\n *\n * If `bytecode` matches a standard pattern, it is encoded using the proper\n * address type and returned as a {@link CashAddressResult}.\n *\n * If `bytecode` cannot be encoded as an address (i.e. because the pattern is\n * not standard), an error message is returned as a `string`.\n *\n * For the reverse, see {@link cashAddressToLockingBytecode}.\n *\n * Due to the high likelihood of runtime errors in a variety of use cases (e.g.\n * attempting to convert P2PK or arbitrary data outputs to CashAddresses for\n * display in a transaction viewer or block explorer), this function returns\n * encoding errors in a type-safe way (as a `string`) rather than via thrown\n * `Error` objects.\n *\n * For applications in which the input to `lockingBytecodeToCashAddress` is\n * trusted (e.g. the application is encoding an address for self-generated\n * locking bytecode), consider using `assertSuccess` to simplify error handling:\n *\n * ```ts\n * import {\n *   assertSuccess,\n *   lockingBytecodeToCashAddress\n * } from '@bitauth/libauth';\n * import { lockingBytecode, useTheAddress } from './my/app.js';\n *\n * const { address } = assertSuccess(\n *   lockingBytecodeToCashAddress(lockingBytecode)\n * );\n *\n * useTheAddress(address);\n * ```\n *\n * @param bytecode - the locking bytecode to encode\n * @param prefix - the network prefix to use, e.g. `bitcoincash`, `bchtest`, or\n * `bchreg`, defaults to `bitcoincash`\n * @param tokenSupport - If `true`, the address will indicate that the receiver\n * accepts CashTokens; defaults to `false`.\n */\n// eslint-disable-next-line complexity\nexport const lockingBytecodeToCashAddress = ({ prefix = 'bitcoincash', bytecode, tokenSupport = false, }) => {\n    const { payload, type } = lockingBytecodeToAddressContents(bytecode);\n    if (type === LockingBytecodeType.p2pkh) {\n        return tokenSupport\n            ? encodeCashAddress({\n                payload,\n                prefix,\n                throwErrors: false,\n                type: CashAddressType.p2pkhWithTokens,\n            })\n            : encodeCashAddress({\n                payload,\n                prefix,\n                throwErrors: false,\n                type: CashAddressType.p2pkh,\n            });\n    }\n    if (type === LockingBytecodeType.p2sh20 ||\n        type === LockingBytecodeType.p2sh32) {\n        return tokenSupport\n            ? encodeCashAddress({\n                payload,\n                prefix,\n                throwErrors: false,\n                type: CashAddressType.p2shWithTokens,\n            })\n            : encodeCashAddress({\n                payload,\n                prefix,\n                throwErrors: false,\n                type: CashAddressType.p2sh,\n            });\n    }\n    if (type === 'P2PK') {\n        return CashAddressEncodingError.noTypeBitsValueStandardizedForP2pk;\n    }\n    return CashAddressEncodingError.unknownLockingBytecodeType;\n};\n/**\n * Convert a CashAddress to its respective locking bytecode.\n *\n * This method returns the locking bytecode and network prefix. If an error\n * occurs, an error message is returned as a string.\n *\n * For the reverse, see {@link lockingBytecodeToCashAddress}.\n *\n * @param address - the CashAddress to convert\n */\n// eslint-disable-next-line complexity\nexport const cashAddressToLockingBytecode = (address) => {\n    const decoded = decodeCashAddress(address);\n    if (typeof decoded === 'string')\n        return decoded;\n    if (decoded.type === CashAddressType.p2pkh ||\n        decoded.type === CashAddressType.p2pkhWithTokens) {\n        return {\n            bytecode: addressContentsToLockingBytecode({\n                payload: decoded.payload,\n                type: LockingBytecodeType.p2pkh,\n            }),\n            prefix: decoded.prefix,\n            tokenSupport: decoded.type === CashAddressType.p2pkhWithTokens,\n        };\n    }\n    if (decoded.type === CashAddressType.p2sh ||\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        decoded.type === CashAddressType.p2shWithTokens) {\n        return {\n            bytecode: addressContentsToLockingBytecode({\n                payload: decoded.payload,\n                type: decoded.payload.length === 32 /* AddressPayload.p2sh32Length */\n                    ? LockingBytecodeType.p2sh32\n                    : LockingBytecodeType.p2sh20,\n            }),\n            prefix: decoded.prefix,\n            tokenSupport: decoded.type === CashAddressType.p2shWithTokens,\n        };\n    }\n    /* c8 ignore next 2 */\n    return unknownValue(decoded.type);\n};\n/**\n * Encode a locking bytecode as a Base58Address for a given network.\n *\n * If `bytecode` matches a standard pattern, it is encoded using the proper\n * address type and returned as a valid Base58Address (string).\n *\n * If `bytecode` cannot be encoded as an address (i.e. because the pattern is\n * not standard), the resulting {@link AddressContents} is returned.\n *\n * For the reverse, see {@link base58AddressToLockingBytecode}.\n *\n * Note, Base58Addresses cannot accept tokens; to accept tokens,\n * use {@link lockingBytecodeToCashAddress} with `tokenSupport` set\n * to `true`.\n *\n * @param bytecode - the locking bytecode to encode\n * @param network - the network for which to encode the address (`mainnet`,\n * `testnet`, or 'copayBCH'), defaults to `mainnet`\n * @param sha256 - an implementation of sha256 (defaults to the internal WASM\n * implementation)\n */\nexport const lockingBytecodeToBase58Address = (bytecode, network = 'mainnet', sha256 = internalSha256) => {\n    const contents = lockingBytecodeToAddressContents(bytecode);\n    if (contents.type === LockingBytecodeType.p2pkh) {\n        return encodeBase58AddressFormat({\n            copayBCH: Base58AddressFormatVersion.p2pkhCopayBCH,\n            mainnet: Base58AddressFormatVersion.p2pkh,\n            testnet: Base58AddressFormatVersion.p2pkhTestnet,\n        }[network], contents.payload, sha256);\n    }\n    if (contents.type === LockingBytecodeType.p2sh20) {\n        return encodeBase58AddressFormat({\n            copayBCH: Base58AddressFormatVersion.p2sh20CopayBCH,\n            mainnet: Base58AddressFormatVersion.p2sh20,\n            testnet: Base58AddressFormatVersion.p2sh20Testnet,\n        }[network], contents.payload, sha256);\n    }\n    return contents;\n};\n/**\n * Convert a Base58Address to its respective locking bytecode.\n *\n * This method returns the locking bytecode and network version. If an error\n * occurs, an error message is returned as a string.\n *\n * For the reverse, see {@link lockingBytecodeToBase58Address}.\n *\n * @param address - the CashAddress to convert\n */\nexport const base58AddressToLockingBytecode = (address, sha256 = internalSha256) => {\n    const decoded = decodeBase58Address(address, sha256);\n    if (typeof decoded === 'string')\n        return decoded;\n    return {\n        bytecode: addressContentsToLockingBytecode({\n            payload: decoded.payload,\n            type: [\n                Base58AddressFormatVersion.p2pkh,\n                Base58AddressFormatVersion.p2pkhCopayBCH,\n                Base58AddressFormatVersion.p2pkhTestnet,\n            ].includes(decoded.version)\n                ? LockingBytecodeType.p2pkh\n                : LockingBytecodeType.p2sh20,\n        }),\n        version: decoded.version,\n    };\n};\n//# sourceMappingURL=locking-bytecode.js.map","import { binToBigIntUint64LE, binToNumberUint32LE, formatError, readCompactUintMinimal, } from '../format/format.js';\nexport var ReadBytesError;\n(function (ReadBytesError) {\n    ReadBytesError[\"insufficientLength\"] = \"Error reading bytes: insufficient length.\";\n})(ReadBytesError || (ReadBytesError = {}));\n/**\n * Returns a function that reads the requested number of bytes from a\n * {@link ReadPosition}, returning either an error message (as a string) or an\n * object containing the `Uint8Array` and the next {@link ReadPosition}.\n *\n * @param length - the number of bytes to read\n */\nexport const readBytes = (length) => (\n/**\n * the {@link ReadPosition} at which to start reading the bytes.\n */\nposition) => {\n    const nextPosition = {\n        bin: position.bin,\n        index: position.index + length,\n    };\n    const result = position.bin.slice(position.index, nextPosition.index);\n    if (result.length !== length) {\n        return formatError(ReadBytesError.insufficientLength, `Bytes requested: ${length}; remaining bytes: ${result.length}`);\n    }\n    return { position: nextPosition, result };\n};\nexport var ReadUint32LEError;\n(function (ReadUint32LEError) {\n    ReadUint32LEError[\"insufficientBytes\"] = \"Error reading Uint32LE: requires 4 bytes.\";\n})(ReadUint32LEError || (ReadUint32LEError = {}));\n/**\n * Read a 4-byte, Uint32LE from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * number and the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading\n */\nexport const readUint32LE = (position) => {\n    const nextPosition = {\n        bin: position.bin,\n        index: position.index + 4 /* ReadConstants.bytesPerUint32 */,\n    };\n    const uint32LEBin = position.bin.subarray(position.index, nextPosition.index);\n    if (uint32LEBin.length !== 4 /* ReadConstants.bytesPerUint32 */) {\n        return formatError(ReadUint32LEError.insufficientBytes, `Remaining bytes: ${uint32LEBin.length}`);\n    }\n    const result = binToNumberUint32LE(uint32LEBin);\n    return { position: nextPosition, result };\n};\nexport var ReadUint64LEError;\n(function (ReadUint64LEError) {\n    ReadUint64LEError[\"insufficientBytes\"] = \"Error reading Uint64LE: requires 8 bytes.\";\n})(ReadUint64LEError || (ReadUint64LEError = {}));\n/**\n * Read {@link Output.valueSatoshis} from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Output.valueSatoshis} and the next {@link ReadPosition}.\n * @param position - the {@link ReadPosition} at which to start reading\n * {@link Output.valueSatoshis}\n */\nexport const readUint64LE = (position) => {\n    const nextPosition = {\n        bin: position.bin,\n        index: position.index + 8 /* ReadConstants.bytesPerUint64 */,\n    };\n    const uint64LEBin = position.bin.subarray(position.index, nextPosition.index);\n    if (uint64LEBin.length !== 8 /* ReadConstants.bytesPerUint64 */) {\n        return formatError(ReadUint64LEError.insufficientBytes, `Remaining bytes: ${uint64LEBin.length}`);\n    }\n    const result = binToBigIntUint64LE(uint64LEBin);\n    return { position: nextPosition, result };\n};\nexport var CompactUintPrefixedBinError;\n(function (CompactUintPrefixedBinError) {\n    CompactUintPrefixedBinError[\"invalidCompactUint\"] = \"Error reading CompactUint-prefixed bin: invalid CompactUint.\";\n    CompactUintPrefixedBinError[\"insufficientBytes\"] = \"Error reading CompactUint-prefixed bin: insufficient bytes.\";\n})(CompactUintPrefixedBinError || (CompactUintPrefixedBinError = {}));\n/**\n * Read a bin (`Uint8Array`) that is prefixed by a minimally-encoded\n * `CompactUint` starting at the provided {@link ReadPosition}, returning either\n * an error message (as a string) or an object containing the `Uint8Array` and\n * the next {@link ReadPosition}. (In the transaction format,\n * `CompactUint`-prefixes are used to indicate the length of unlocking bytecode,\n * locking bytecode, and non-fungible token commitments.)\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * `CompactUint`-prefixed bin (`Uint8Array`)\n */\nexport const readCompactUintPrefixedBin = (position) => {\n    const read = readCompactUintMinimal(position);\n    if (typeof read === 'string') {\n        return formatError(CompactUintPrefixedBinError.invalidCompactUint, read);\n    }\n    const { result, position: p2 } = read;\n    const length = Number(result);\n    const nextPosition = { bin: position.bin, index: p2.index + length };\n    const contents = position.bin.slice(p2.index, nextPosition.index);\n    if (contents.length !== length) {\n        return formatError(CompactUintPrefixedBinError.insufficientBytes, `Required bytes: ${length}, remaining bytes: ${contents.length}`);\n    }\n    return { position: nextPosition, result: contents };\n};\n/**\n * Read the remaining bytes from the provided {@link ReadPosition}, returning\n * an object containing the `Uint8Array` and the next {@link ReadPosition}\n * (with `index === bin.length`).\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * remaining bytes\n */\nexport const readRemainingBytes = (position) => {\n    const nextPosition = {\n        bin: position.bin,\n        index: position.bin.length,\n    };\n    const result = position.bin.subarray(position.index, nextPosition.index);\n    return { position: nextPosition, result };\n};\n//# sourceMappingURL=read-components.js.map","/**\n * The capability assigned to a particular non-fungible token.\n */\nexport var NonFungibleTokenCapability;\n(function (NonFungibleTokenCapability) {\n    /**\n     * No capability, i.e. the token is an **immutable token**.\n     */\n    NonFungibleTokenCapability[\"none\"] = \"none\";\n    /**\n     * The mutable capability (`0x01`), i.e. the token is a **mutable token**.\n     */\n    NonFungibleTokenCapability[\"mutable\"] = \"mutable\";\n    /**\n     * The minting capability (`0x02`), i.e. the token is a **minting token**.\n     */\n    NonFungibleTokenCapability[\"minting\"] = \"minting\";\n})(NonFungibleTokenCapability || (NonFungibleTokenCapability = {}));\n/**\n * The maximum uint64 value – an impossibly large, intentionally invalid value\n * for `valueSatoshis`. See {@link Transaction.valueSatoshis} for details.\n */\n// prettier-ignore\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nexport const excessiveSatoshis = Uint8Array.from([255, 255, 255, 255, 255, 255, 255, 255]);\n//# sourceMappingURL=transaction-types.js.map","import { hash256, sha256 as internalSha256 } from '../crypto/crypto.js';\nimport { bigIntToCompactUint, binToHex, flattenBinArray, formatError, numberToBinUint32LE, readCompactUintMinimal, readItemCount, readMultiple, valueSatoshisToBin, } from '../format/format.js';\nimport { readBytes, readCompactUintPrefixedBin, readRemainingBytes, readUint32LE, readUint64LE, } from './read-components.js';\nimport { NonFungibleTokenCapability } from './transaction-types.js';\n/**\n * Encode a single input for inclusion in an encoded transaction.\n *\n * @param input - the input to encode\n */\nexport const encodeTransactionInput = (input) => flattenBinArray([\n    input.outpointTransactionHash.slice().reverse(),\n    numberToBinUint32LE(input.outpointIndex),\n    bigIntToCompactUint(BigInt(input.unlockingBytecode.length)),\n    input.unlockingBytecode,\n    numberToBinUint32LE(input.sequenceNumber),\n]);\nexport var TransactionDecodingError;\n(function (TransactionDecodingError) {\n    TransactionDecodingError[\"transaction\"] = \"Error reading transaction.\";\n    TransactionDecodingError[\"endsWithUnexpectedBytes\"] = \"Error decoding transaction: the provided input includes unexpected bytes after the encoded transaction.\";\n    TransactionDecodingError[\"input\"] = \"Error reading transaction input.\";\n    TransactionDecodingError[\"inputs\"] = \"Error reading transaction inputs.\";\n    TransactionDecodingError[\"output\"] = \"Error reading transaction output.\";\n    TransactionDecodingError[\"outputs\"] = \"Error reading transaction outputs.\";\n    TransactionDecodingError[\"outputsEndWithUnexpectedBytes\"] = \"Error decoding transaction outputs: the provided serialization includes unexpected bytes after the encoded transaction outputs.\";\n    TransactionDecodingError[\"lockingBytecodeLength\"] = \"Error reading locking bytecode length.\";\n})(TransactionDecodingError || (TransactionDecodingError = {}));\n/**\n * Read a transaction {@link Input} from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Input} and the next {@link ReadPosition}.\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction output\n */\nexport const readTransactionInput = (position) => {\n    const inputRead = readMultiple(position, [\n        readBytes(32 /* TransactionConstants.outpointTransactionHashLength */),\n        readUint32LE,\n        readCompactUintPrefixedBin,\n        readUint32LE,\n    ]);\n    if (typeof inputRead === 'string') {\n        return formatError(TransactionDecodingError.input, inputRead);\n    }\n    const { position: nextPosition, result: [outpointTransactionHash, outpointIndex, unlockingBytecode, sequenceNumber,], } = inputRead;\n    return {\n        position: nextPosition,\n        result: {\n            outpointIndex,\n            outpointTransactionHash: outpointTransactionHash.reverse(),\n            sequenceNumber,\n            unlockingBytecode,\n        },\n    };\n};\n/**\n * Encode a set of {@link Input}s for inclusion in an encoded transaction\n * including the prefixed number of inputs.\n *\n * Format: [CompactUint: input count] [encoded inputs]\n *\n * @param inputs - the set of inputs to encode\n */\nexport const encodeTransactionInputs = (inputs) => flattenBinArray([\n    bigIntToCompactUint(BigInt(inputs.length)),\n    ...inputs.map(encodeTransactionInput),\n]);\n/**\n * Read a set of transaction {@link Input}s beginning at {@link ReadPosition}.\n * A CompactUint will be read to determine the number of inputs, and that\n * number of transaction inputs will be read and returned. Returns either an\n * error message (as a string) or an object containing the array of inputs and\n * the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction inputs\n */\nexport const readTransactionInputs = (position) => {\n    const inputsRead = readItemCount(position, readTransactionInput);\n    if (typeof inputsRead === 'string') {\n        return formatError(TransactionDecodingError.inputs, inputsRead);\n    }\n    return inputsRead;\n};\nconst maximumTokenAmount = 9223372036854775807n;\nexport const nftCapabilityNumberToLabel = [\n    NonFungibleTokenCapability.none,\n    NonFungibleTokenCapability.mutable,\n    NonFungibleTokenCapability.minting,\n];\nexport const nftCapabilityLabelToNumber = {\n    [NonFungibleTokenCapability.none]: 0,\n    [NonFungibleTokenCapability.mutable]: 1,\n    [NonFungibleTokenCapability.minting]: 2,\n};\nexport var CashTokenDecodingError;\n(function (CashTokenDecodingError) {\n    CashTokenDecodingError[\"invalidPrefix\"] = \"Error reading token prefix.\";\n    CashTokenDecodingError[\"insufficientLength\"] = \"Invalid token prefix: insufficient length.\";\n    CashTokenDecodingError[\"reservedBit\"] = \"Invalid token prefix: reserved bit is set.\";\n    CashTokenDecodingError[\"invalidCapability\"] = \"Invalid token prefix: capability must be none (0), mutable (1), or minting (2).\";\n    CashTokenDecodingError[\"commitmentWithoutNft\"] = \"Invalid token prefix: commitment requires an NFT.\";\n    CashTokenDecodingError[\"capabilityWithoutNft\"] = \"Invalid token prefix: capability requires an NFT.\";\n    CashTokenDecodingError[\"commitmentLengthZero\"] = \"Invalid token prefix: if encoded, commitment length must be greater than 0.\";\n    CashTokenDecodingError[\"invalidCommitment\"] = \"Invalid token prefix: invalid non-fungible token commitment.\";\n    CashTokenDecodingError[\"invalidAmountEncoding\"] = \"Invalid token prefix: invalid fungible token amount encoding.\";\n    CashTokenDecodingError[\"zeroAmount\"] = \"Invalid token prefix: if encoded, fungible token amount must be greater than 0.\";\n    CashTokenDecodingError[\"excessiveAmount\"] = \"Invalid token prefix: exceeds maximum fungible token amount of 9223372036854775807.\";\n    CashTokenDecodingError[\"noTokens\"] = \"Invalid token prefix: must encode at least one token.\";\n})(CashTokenDecodingError || (CashTokenDecodingError = {}));\n/**\n * Read a token amount from the provided {@link ReadPosition}, returning either\n * an error message (as a string) or an object containing the value and the next\n * {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * token amount.\n */\nexport const readTokenAmount = (position) => {\n    const amountRead = readCompactUintMinimal(position);\n    if (typeof amountRead === 'string') {\n        return formatError(CashTokenDecodingError.invalidAmountEncoding, amountRead);\n    }\n    if (amountRead.result > maximumTokenAmount) {\n        return formatError(CashTokenDecodingError.excessiveAmount, `Encoded amount: ${amountRead.result}`);\n    }\n    if (amountRead.result === 0n) {\n        return formatError(CashTokenDecodingError.zeroAmount);\n    }\n    return amountRead;\n};\n/**\n * Attempt to read a transaction {@link Output}'s token prefix from the provided\n * {@link ReadPosition}, returning either an error message (as a string) or an\n * object containing the (optional) token information and the\n * next {@link ReadPosition}.\n *\n * Rather than using this function directly, most applications\n * should use {@link readLockingBytecodeWithPrefix}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * token prefix\n */\n// eslint-disable-next-line complexity\nexport const readTokenPrefix = (position) => {\n    const { bin, index } = position;\n    if (bin[index] !== 239 /* CashTokens.PREFIX_TOKEN */) {\n        return { position, result: {} };\n    }\n    if (bin.length < index + 34 /* CashTokens.minimumPrefixLength */) {\n        return formatError(CashTokenDecodingError.insufficientLength, `The minimum possible length is ${34 /* CashTokens.minimumPrefixLength */}. Missing bytes: ${34 /* CashTokens.minimumPrefixLength */ - (bin.length - index)}`);\n    }\n    const category = bin\n        .slice(index + 1, index + 33 /* CashTokens.tokenBitfieldIndex */)\n        .reverse();\n    const tokenBitfield = bin[index + 33 /* CashTokens.tokenBitfieldIndex */]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    /* eslint-disable no-bitwise */\n    const prefixStructure = tokenBitfield & 240 /* CashTokens.tokenFormatMask */;\n    if ((prefixStructure & 128 /* CashTokens.RESERVED_BIT */) !== 0) {\n        return formatError(CashTokenDecodingError.reservedBit, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const nftCapabilityInt = tokenBitfield & 15 /* CashTokens.nftCapabilityMask */;\n    if (nftCapabilityInt > 2 /* CashTokens.maximumCapability */) {\n        return formatError(CashTokenDecodingError.invalidCapability, `Capability value: ${nftCapabilityInt}`);\n    }\n    const capability = nftCapabilityNumberToLabel[nftCapabilityInt]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    const hasNft = (prefixStructure & 32 /* CashTokens.HAS_NFT */) !== 0;\n    const hasCommitmentLength = (prefixStructure & 64 /* CashTokens.HAS_COMMITMENT_LENGTH */) !== 0;\n    if (hasCommitmentLength && !hasNft) {\n        return formatError(CashTokenDecodingError.commitmentWithoutNft, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const hasAmount = (prefixStructure & 16 /* CashTokens.HAS_AMOUNT */) !== 0;\n    /* eslint-enable no-bitwise */\n    const nextPosition = {\n        bin,\n        index: index + 33 /* CashTokens.tokenBitfieldIndex */ + 1,\n    };\n    if (hasNft) {\n        const commitmentRead = hasCommitmentLength\n            ? readCompactUintPrefixedBin(nextPosition)\n            : { position: nextPosition, result: Uint8Array.of() };\n        if (typeof commitmentRead === 'string') {\n            return formatError(CashTokenDecodingError.invalidCommitment, commitmentRead);\n        }\n        if (hasCommitmentLength && commitmentRead.result.length === 0) {\n            return formatError(CashTokenDecodingError.commitmentLengthZero);\n        }\n        const amountRead = hasAmount\n            ? readTokenAmount(commitmentRead.position)\n            : { position: commitmentRead.position, result: 0n };\n        if (typeof amountRead === 'string') {\n            return amountRead;\n        }\n        return {\n            position: amountRead.position,\n            result: {\n                token: {\n                    amount: amountRead.result,\n                    category,\n                    nft: { capability, commitment: commitmentRead.result },\n                },\n            },\n        };\n    }\n    if (capability !== NonFungibleTokenCapability.none) {\n        return formatError(CashTokenDecodingError.capabilityWithoutNft, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    if (!hasAmount) {\n        return formatError(CashTokenDecodingError.noTokens, `Bitfield: 0b${tokenBitfield.toString(2 /* CashTokens.useBinaryOutput */)}`);\n    }\n    const amountRead = readTokenAmount(nextPosition);\n    if (typeof amountRead === 'string') {\n        return amountRead;\n    }\n    return {\n        position: amountRead.position,\n        result: { token: { amount: amountRead.result, category } },\n    };\n};\n/**\n * Read the locking bytecode and token prefix (if present) of a transaction\n * {@link Output}, beginning at the `CompactUint` indicating the\n * combined length.\n * @param position - the {@link ReadPosition} at which to start reading the\n * optional token prefix and locking bytecode\n */\nexport const readLockingBytecodeWithPrefix = (position) => {\n    const bytecodeRead = readCompactUintPrefixedBin(position);\n    if (typeof bytecodeRead === 'string') {\n        return formatError(TransactionDecodingError.lockingBytecodeLength, bytecodeRead);\n    }\n    const { result: contents, position: nextPosition } = bytecodeRead;\n    const contentsRead = readMultiple({ bin: contents, index: 0 }, [\n        readTokenPrefix,\n        readRemainingBytes,\n    ]);\n    if (typeof contentsRead === 'string') {\n        return formatError(CashTokenDecodingError.invalidPrefix, contentsRead);\n    }\n    const { result: [{ token }, lockingBytecode], } = contentsRead;\n    return {\n        position: nextPosition,\n        result: { lockingBytecode, ...(token === undefined ? {} : { token }) },\n    };\n};\n/**\n * Read a transaction {@link Output} from the provided {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Output} and the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction output\n */\nexport const readTransactionOutput = (position) => {\n    const outputRead = readMultiple(position, [\n        readUint64LE,\n        readLockingBytecodeWithPrefix,\n    ]);\n    if (typeof outputRead === 'string') {\n        return formatError(TransactionDecodingError.output, outputRead);\n    }\n    const { position: nextPosition, result: [valueSatoshis, { lockingBytecode, token }], } = outputRead;\n    return {\n        position: nextPosition,\n        result: {\n            lockingBytecode,\n            ...(token === undefined ? {} : { token }),\n            valueSatoshis,\n        },\n    };\n};\n/**\n * Given {@link Output.token} data, encode a token prefix.\n *\n * This function does not fail, but returns an empty Uint8Array if the token\n * data does not encode any tokens (even if `token.category` is set).\n *\n * @param token - the token data to encode\n */\n// eslint-disable-next-line complexity\nexport const encodeTokenPrefix = (token) => {\n    if (token === undefined || (token.nft === undefined && token.amount < 1n)) {\n        return Uint8Array.of();\n    }\n    const hasNft = token.nft === undefined ? 0 : 32 /* CashTokens.HAS_NFT */;\n    const capabilityInt = token.nft === undefined\n        ? 0\n        : nftCapabilityLabelToNumber[token.nft.capability];\n    const hasCommitmentLength = token.nft !== undefined && token.nft.commitment.length > 0\n        ? 64 /* CashTokens.HAS_COMMITMENT_LENGTH */\n        : 0;\n    const hasAmount = token.amount > 0n ? 16 /* CashTokens.HAS_AMOUNT */ : 0;\n    const tokenBitfield = \n    // eslint-disable-next-line no-bitwise\n    hasNft | hasCommitmentLength | hasAmount | capabilityInt;\n    return flattenBinArray([\n        Uint8Array.of(239 /* CashTokens.PREFIX_TOKEN */),\n        token.category.slice().reverse(),\n        Uint8Array.of(tokenBitfield),\n        ...(hasCommitmentLength === 0\n            ? []\n            : [\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                bigIntToCompactUint(BigInt(token.nft.commitment.length)),\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                token.nft.commitment,\n            ]),\n        ...(hasAmount === 0 ? [] : [bigIntToCompactUint(token.amount)]),\n    ]);\n};\n/**\n * Encode a single {@link Output} for inclusion in an encoded transaction.\n *\n * @param output - the output to encode\n */\nexport const encodeTransactionOutput = (output) => {\n    const lockingBytecodeField = flattenBinArray([\n        encodeTokenPrefix(output.token),\n        output.lockingBytecode,\n    ]);\n    return flattenBinArray([\n        valueSatoshisToBin(output.valueSatoshis),\n        bigIntToCompactUint(BigInt(lockingBytecodeField.length)),\n        lockingBytecodeField,\n    ]);\n};\n/**\n * Read a set of transaction {@link Output}s beginning at {@link ReadPosition}.\n * A CompactUint will be read to determine the number of outputs, and that\n * number of transaction outputs will be read and returned. Returns either an\n * error message (as a string) or an object containing the array of outputs and\n * the next {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * transaction outputs\n */\nexport const readTransactionOutputs = (position) => {\n    const outputsRead = readItemCount(position, readTransactionOutput);\n    if (typeof outputsRead === 'string') {\n        return formatError(TransactionDecodingError.outputs, outputsRead);\n    }\n    return outputsRead;\n};\n/**\n * Decode a CompactUint-prefixed series of Transaction {@link Output}s\n * according to the version 1/2 P2P network transaction format.\n *\n * This function verifies that the provided `bin` contains one `CompactUint`\n * followed by the indicated number of serialized transaction outputs with no\n * additional data. To read a transaction from a\n * specific location within a `Uint8Array`, use {@link readTransactionCommon}.\n *\n * For the reverse, see {@link encodeTransactionOutputs}.\n *\n * @param bin - the encoded transaction to decode\n */\nexport const decodeTransactionOutputs = (bin) => {\n    const outputsRead = readTransactionOutputs({ bin, index: 0 });\n    if (typeof outputsRead === 'string') {\n        return outputsRead;\n    }\n    if (outputsRead.position.index !== bin.length) {\n        return formatError(TransactionDecodingError.outputsEndWithUnexpectedBytes, `Last encoded transaction output ends at index ${outputsRead.position.index - 1}, leaving ${bin.length - outputsRead.position.index} remaining byte(s).`);\n    }\n    return outputsRead.result;\n};\n/**\n * Encode a set of {@link Output}s for inclusion in an encoded transaction\n * including the prefixed number of outputs. Note, this encoding differs from\n * {@link encodeTransactionOutputsForSigning} (used for signing serializations).\n *\n * Format: `[CompactUint: output count] [encoded outputs]`\n *\n * For the reverse, see {@link decodeTransactionOutputs}.\n *\n * @param outputs - the set of outputs to encode\n */\nexport const encodeTransactionOutputs = (outputs) => flattenBinArray([\n    bigIntToCompactUint(BigInt(outputs.length)),\n    ...outputs.map(encodeTransactionOutput),\n]);\n/**\n * Read a version 1 or 2 transaction beginning at {@link ReadPosition},\n * returning either an error message (as a string) or an object containing the\n * {@link Transaction} and the next {@link ReadPosition}. Rather than using this\n * function directly, most applications should\n * use {@link decodeTransactionCommon}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * {@link TransactionCommon}\n */\nexport const readTransactionCommon = (position) => {\n    const transactionRead = readMultiple(position, [\n        readUint32LE,\n        readTransactionInputs,\n        readTransactionOutputs,\n        readUint32LE,\n    ]);\n    if (typeof transactionRead === 'string') {\n        return formatError(TransactionDecodingError.transaction, transactionRead);\n    }\n    const { position: nextPosition, result: [version, inputs, outputs, locktime], } = transactionRead;\n    return {\n        position: nextPosition,\n        result: { inputs, locktime, outputs, version },\n    };\n};\nexport const readTransaction = readTransactionCommon;\nexport const readTransactionOutputNonTokenAware = (pos) => {\n    const outputRead = readMultiple(pos, [\n        readUint64LE,\n        readCompactUintPrefixedBin,\n    ]);\n    if (typeof outputRead === 'string') {\n        return formatError(TransactionDecodingError.output, outputRead);\n    }\n    const { position: nextPosition, result: [valueSatoshis, lockingBytecode], } = outputRead;\n    return {\n        position: nextPosition,\n        result: { lockingBytecode, valueSatoshis },\n    };\n};\nexport const readTransactionOutputsNonTokenAware = (pos) => {\n    const outputsRead = readItemCount(pos, readTransactionOutputNonTokenAware);\n    if (typeof outputsRead === 'string') {\n        return formatError(TransactionDecodingError.outputs, outputsRead);\n    }\n    return outputsRead;\n};\n/**\n * Read a version 1 or 2 transaction beginning at a {@link ReadPosition} as if\n * CHIP-2022-02-CashTokens were not deployed, returning either an error message\n * (as a string) or an object containing the {@link Transaction} and the next\n * {@link ReadPosition}.\n *\n * This function emulates legacy transaction parsing to test behavior prior to\n * deployment of CHIP-2022-02-CashTokens; most applications should instead\n * use {@link readTransactionCommon}.\n *\n * @param position - the {@link ReadPosition} at which to start reading the\n * {@link TransactionCommon}\n */\nexport const readTransactionNonTokenAware = (position) => {\n    const transactionRead = readMultiple(position, [\n        readUint32LE,\n        readTransactionInputs,\n        readTransactionOutputsNonTokenAware,\n        readUint32LE,\n    ]);\n    if (typeof transactionRead === 'string') {\n        return formatError(TransactionDecodingError.transaction, transactionRead);\n    }\n    const { position: nextPosition, result: [version, inputs, outputs, locktime], } = transactionRead;\n    return {\n        position: nextPosition,\n        result: { inputs, locktime, outputs, version },\n    };\n};\n/**\n * Decode a {@link TransactionCommon} according to the version 1/2 P2P network\n * transaction format.\n *\n * This function verifies that the provided `bin` contains only one transaction\n * and no additional data. To read a transaction from a specific location within\n * a `Uint8Array`, use {@link readTransactionCommon}.\n *\n * For the reverse, see {@link encodeTransactionCommon}.\n *\n * @param bin - the encoded transaction to decode\n */\nexport const decodeTransactionCommon = (bin) => {\n    const transactionRead = readTransactionCommon({ bin, index: 0 });\n    if (typeof transactionRead === 'string') {\n        return transactionRead;\n    }\n    if (transactionRead.position.index !== bin.length) {\n        return formatError(TransactionDecodingError.endsWithUnexpectedBytes, `Encoded transaction ends at index ${transactionRead.position.index - 1}, leaving ${bin.length - transactionRead.position.index} remaining bytes.`);\n    }\n    return transactionRead.result;\n};\nexport const decodeTransactionBch = decodeTransactionCommon;\nexport const decodeTransaction = decodeTransactionBch;\n/**\n * @deprecated Alias of `decodeTransactionBch` for backwards-compatibility.\n */\nexport const decodeTransactionBCH = decodeTransactionBch;\n/**\n * Decode a {@link TransactionCommon} from a trusted source according to the\n * version 1/2 P2P network transaction format.\n *\n * Note: this method throws runtime errors when attempting to decode messages\n * which do not properly follow the transaction format. If the input is\n * untrusted, use {@link decodeTransactionCommon}.\n *\n * @param bin - the raw message to decode\n */\nexport const decodeTransactionUnsafeCommon = (bin) => {\n    const result = decodeTransactionCommon(bin);\n    if (typeof result === 'string') {\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new Error(result);\n    }\n    return result;\n};\nexport const decodeTransactionUnsafeBch = decodeTransactionUnsafeCommon;\nexport const decodeTransactionUnsafe = decodeTransactionUnsafeBch;\n/**\n * @deprecated Alias of `decodeTransactionUnsafeBch` for backwards-compatibility.\n */\nexport const decodeTransactionUnsafeBCH = decodeTransactionUnsafeBch;\n/**\n * Encode a {@link Transaction} using the standard P2P network format. This\n * serialization is also used when computing the transaction's hash (A.K.A.\n * \"transaction ID\" or \"TXID\").\n *\n * For the reverse, see {@link decodeTransactionCommon}.\n */\nexport const encodeTransactionCommon = (tx) => flattenBinArray([\n    numberToBinUint32LE(tx.version),\n    encodeTransactionInputs(tx.inputs),\n    encodeTransactionOutputs(tx.outputs),\n    numberToBinUint32LE(tx.locktime),\n]);\nexport const encodeTransactionBch = encodeTransactionCommon;\nexport const encodeTransaction = encodeTransactionBch;\n/**\n * @deprecated Alias of `decodeTransactionUnsafeBch` for backwards-compatibility.\n */\nexport const encodeTransactionBCH = encodeTransactionBch;\n/**\n * Compute a transaction hash (A.K.A. \"transaction ID\" or \"TXID\") from an\n * encoded transaction in P2P network message order. This is the byte order\n * produced by most sha256 libraries and used by encoded P2P network messages.\n * It is also the byte order produced by `OP_SHA256` and `OP_HASH256` in the\n * virtual machine.\n *\n * @returns the transaction hash in P2P network message byte order\n *\n * @param transaction - the encoded transaction\n * @param sha256 - an implementation of sha256\n */\nexport const hashTransactionP2pOrder = (transaction, sha256 = internalSha256) => hash256(transaction, sha256);\n/**\n * Compute a transaction hash (A.K.A. \"transaction ID\" or \"TXID\") from an\n * encoded transaction in user interface byte order. This is the byte order\n * typically used by block explorers, wallets, and other user interfaces.\n *\n * To return this result as a `string`, use {@link hashTransaction}.\n *\n * @returns the transaction hash in User Interface byte order\n *\n * @param transaction - the encoded transaction\n * @param sha256 - an implementation of sha256\n */\nexport const hashTransactionUiOrder = (transaction, sha256 = internalSha256) => hashTransactionP2pOrder(transaction, sha256).reverse();\n/**\n * Return an encoded {@link Transaction}'s hash/ID as a string in user interface\n * byte order (typically used by wallets and block explorers).\n *\n * To return this result as a `Uint8Array`, use {@link hashTransactionUiOrder}.\n *\n * @param transaction - the encoded transaction\n */\nexport const hashTransaction = (transaction) => binToHex(hashTransactionUiOrder(transaction));\n/**\n * Encode all outpoints in a series of transaction inputs. (For use in\n * {@link hashTransactionOutpoints}.)\n *\n * @param inputs - the series of inputs from which to extract the outpoints\n */\nexport const encodeTransactionOutpoints = (inputs) => flattenBinArray(inputs.map((i) => flattenBinArray([\n    i.outpointTransactionHash.slice().reverse(),\n    numberToBinUint32LE(i.outpointIndex),\n])));\n/**\n * Encode an array of transaction {@link Output}s for use in transaction signing\n * serializations. Note, this encoding differs from\n * {@link encodeTransactionOutputs} (used for encoding full transactions).\n *\n * @param outputs - the array of outputs to encode\n */\nexport const encodeTransactionOutputsForSigning = (outputs) => flattenBinArray(outputs.map(encodeTransactionOutput));\n/**\n * Encode the sequence numbers of an array of transaction inputs for use in\n * transaction signing serializations.\n *\n * @param inputs - the array of inputs from which to extract the sequence\n * numbers\n */\nexport const encodeTransactionInputSequenceNumbersForSigning = (inputs) => flattenBinArray(inputs.map((i) => numberToBinUint32LE(i.sequenceNumber)));\n//# sourceMappingURL=transaction-encoding.js.map","import { hash256, sha256 as internalSha256 } from '../../../crypto/crypto.js';\nimport { bigIntToCompactUint, flattenBinArray, numberToBinUint32LE, valueSatoshisToBin, } from '../../../format/format.js';\nimport { encodeTokenPrefix, encodeTransactionInputSequenceNumbersForSigning, encodeTransactionOutpoints, encodeTransactionOutput, encodeTransactionOutputsForSigning, } from '../../../message/message.js';\n/**\n * A.K.A. `sighash` flags\n */\nexport var SigningSerializationFlag;\n(function (SigningSerializationFlag) {\n    /**\n     * A.K.A. `SIGHASH_ALL`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"allOutputs\"] = 1] = \"allOutputs\";\n    /**\n     * A.K.A `SIGHASH_NONE`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"noOutputs\"] = 2] = \"noOutputs\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"correspondingOutput\"] = 3] = \"correspondingOutput\";\n    /**\n     * A.K.A. `SIGHASH_UTXOS`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"utxos\"] = 32] = \"utxos\";\n    SigningSerializationFlag[SigningSerializationFlag[\"forkId\"] = 64] = \"forkId\";\n    /**\n     * A.K.A `ANYONE_CAN_PAY`/`SIGHASH_ANYONECANPAY`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"singleInput\"] = 128] = \"singleInput\";\n})(SigningSerializationFlag || (SigningSerializationFlag = {}));\n/* eslint-disable no-bitwise, @typescript-eslint/prefer-literal-enum-member */\nexport var SigningSerializationType;\n(function (SigningSerializationType) {\n    SigningSerializationType[SigningSerializationType[\"allOutputs\"] = 65] = \"allOutputs\";\n    SigningSerializationType[SigningSerializationType[\"allOutputsAllUtxos\"] = 97] = \"allOutputsAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"allOutputsSingleInput\"] = 193] = \"allOutputsSingleInput\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutput\"] = 67] = \"correspondingOutput\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutputAllUtxos\"] = 99] = \"correspondingOutputAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"correspondingOutputSingleInput\"] = 195] = \"correspondingOutputSingleInput\";\n    SigningSerializationType[SigningSerializationType[\"noOutputs\"] = 66] = \"noOutputs\";\n    SigningSerializationType[SigningSerializationType[\"noOutputsAllUtxos\"] = 98] = \"noOutputsAllUtxos\";\n    SigningSerializationType[SigningSerializationType[\"noOutputsSingleInput\"] = 194] = \"noOutputsSingleInput\";\n})(SigningSerializationType || (SigningSerializationType = {}));\n/* eslint-enable no-bitwise, @typescript-eslint/prefer-literal-enum-member */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SigningSerializationTypeBch = SigningSerializationType;\n/**\n * @deprecated Alias of `SigningSerializationTypeBch` for backwards-compatibility.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SigningSerializationTypeBCH = SigningSerializationTypeBch;\nconst match = (type, flag) => \n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n(type[0] & flag) !== 0;\nconst equals = (type, flag) => (type[0] & 31 /* Internal.mask5Bits */) === flag;\nconst shouldSerializeSingleInput = (type) => match(type, SigningSerializationFlag.singleInput);\nconst shouldSerializeCorrespondingOutput = (type) => equals(type, SigningSerializationFlag.correspondingOutput);\nconst shouldSerializeNoOutputs = (type) => equals(type, SigningSerializationFlag.noOutputs);\nconst shouldSerializeUtxos = (type) => match(type, SigningSerializationFlag.utxos);\nconst emptyHash = () => new Uint8Array(32 /* Internal.sha256HashByteLength */).fill(0);\n/**\n * Return the proper `hashPrevouts` value for a given a signing serialization\n * type.\n */\nexport const hashPrevouts = ({ signingSerializationType, transactionOutpoints, }, sha256 = internalSha256) => shouldSerializeSingleInput(signingSerializationType)\n    ? emptyHash()\n    : hash256(transactionOutpoints, sha256);\n/**\n * Return the proper `hashUtxos` value for a given a signing serialization\n * type.\n */\nexport const hashUtxos = ({ signingSerializationType, transactionUtxos, }, sha256 = internalSha256) => shouldSerializeUtxos(signingSerializationType)\n    ? hash256(transactionUtxos, sha256)\n    : Uint8Array.of();\n/**\n * Return the proper `hashSequence` value for a given a signing serialization\n * type.\n */\nexport const hashSequence = ({ signingSerializationType, transactionSequenceNumbers, }, sha256 = internalSha256) => !shouldSerializeSingleInput(signingSerializationType) &&\n    !shouldSerializeCorrespondingOutput(signingSerializationType) &&\n    !shouldSerializeNoOutputs(signingSerializationType)\n    ? hash256(transactionSequenceNumbers, sha256)\n    : emptyHash();\n/**\n * Return the proper `hashOutputs` value for a given a signing serialization\n * type.\n */\nexport const hashOutputs = ({ correspondingOutput, signingSerializationType, transactionOutputs, }, sha256 = internalSha256) => !shouldSerializeCorrespondingOutput(signingSerializationType) &&\n    !shouldSerializeNoOutputs(signingSerializationType)\n    ? hash256(transactionOutputs, sha256)\n    : shouldSerializeCorrespondingOutput(signingSerializationType)\n        ? correspondingOutput === undefined\n            ? emptyHash()\n            : hash256(correspondingOutput, sha256)\n        : emptyHash();\n/**\n * Encode the signature-protected properties of a transaction following the\n * algorithm required by the `signingSerializationType` of a signature.\n *\n * Note: When validating transactions with multiple signatures,\n * performance-critical applications should use a memoized sha256 implementation\n * to avoid re-computing hashes.\n */\nexport const encodeSigningSerializationBch = ({ correspondingOutput, coveredBytecode, forkId = new Uint8Array([0, 0, 0]), locktime, outpointIndex, outpointTransactionHash, outputTokenPrefix, outputValue, sequenceNumber, signingSerializationType, transactionOutpoints, transactionOutputs, transactionSequenceNumbers, transactionUtxos, version, }, sha256 = internalSha256) => flattenBinArray([\n    numberToBinUint32LE(version),\n    hashPrevouts({ signingSerializationType, transactionOutpoints }, sha256),\n    hashUtxos({ signingSerializationType, transactionUtxos }, sha256),\n    hashSequence({\n        signingSerializationType,\n        transactionSequenceNumbers,\n    }, sha256),\n    outpointTransactionHash.slice().reverse(),\n    numberToBinUint32LE(outpointIndex),\n    outputTokenPrefix,\n    bigIntToCompactUint(BigInt(coveredBytecode.length)),\n    coveredBytecode,\n    outputValue,\n    numberToBinUint32LE(sequenceNumber),\n    hashOutputs({\n        correspondingOutput,\n        signingSerializationType,\n        transactionOutputs,\n    }, sha256),\n    numberToBinUint32LE(locktime),\n    signingSerializationType,\n    forkId,\n]);\n/**\n * @deprecated Alias of `encodeSigningSerializationBch` for backwards-compatibility.\n */\nexport const encodeSigningSerializationBCH = encodeSigningSerializationBch;\n/**\n * Generate the encoded components of a BCH signing serialization from\n * compilation context.\n */\nexport const generateSigningSerializationComponentsBch = (context) => ({\n    correspondingOutput: context.inputIndex < context.transaction.outputs.length\n        ? encodeTransactionOutput(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        context.transaction.outputs[context.inputIndex])\n        : undefined,\n    locktime: context.transaction.locktime,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    outpointIndex: context.transaction.inputs[context.inputIndex].outpointIndex,\n    outpointTransactionHash: \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.transaction.inputs[context.inputIndex].outpointTransactionHash,\n    outputTokenPrefix: encodeTokenPrefix(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.sourceOutputs[context.inputIndex].token),\n    outputValue: valueSatoshisToBin(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.sourceOutputs[context.inputIndex].valueSatoshis),\n    sequenceNumber: \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context.transaction.inputs[context.inputIndex].sequenceNumber,\n    transactionOutpoints: encodeTransactionOutpoints(context.transaction.inputs),\n    transactionOutputs: encodeTransactionOutputsForSigning(context.transaction.outputs),\n    transactionSequenceNumbers: encodeTransactionInputSequenceNumbersForSigning(context.transaction.inputs),\n    transactionUtxos: encodeTransactionOutputsForSigning(context.sourceOutputs),\n    version: context.transaction.version,\n});\n/**\n * @deprecated Alias of `generateSigningSerializationComponentsBch` for backwards-compatibility.\n */\nexport const generateSigningSerializationComponentsBCH = generateSigningSerializationComponentsBch;\n/**\n * Generate the signing serialization for a particular transaction input\n * following the algorithm required by the provided `signingSerializationType`.\n *\n * Note: When validating transactions with multiple signatures,\n * performance-critical applications should use a memoized sha256 implementation\n * to avoid re-computing hashes.\n */\nexport const generateSigningSerializationBch = (context, { coveredBytecode, signingSerializationType, }, sha256 = internalSha256) => encodeSigningSerializationBch({\n    ...generateSigningSerializationComponentsBch(context),\n    coveredBytecode,\n    signingSerializationType,\n}, sha256);\n/**\n * @deprecated Alias of `generateSigningSerializationBch` for backwards-compatibility.\n */\nexport const generateSigningSerializationBCH = generateSigningSerializationBch;\n/**\n * @param signingSerializationType - the 32-bit number indicating the signing\n * serialization algorithm to use\n */\nexport const isLegacySigningSerialization = (signingSerializationType) => {\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const forkValue = signingSerializationType >> 8;\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const newForkValue = (forkValue ^ 0xdead) | 0xff0000;\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n    const sighashType = (newForkValue << 8) | (signingSerializationType & 0xff);\n    // eslint-disable-next-line no-bitwise\n    return (sighashType & SigningSerializationFlag.forkId) === 0;\n};\n//# sourceMappingURL=signing-serialization.js.map","import { SigningSerializationTypeBch } from './signing-serialization.js';\n/**\n * Consensus settings for the `BCH_2023_05` instruction set.\n */\nexport var ConsensusCommon;\n(function (ConsensusCommon) {\n    /**\n     * A.K.A. `MAX_SCRIPT_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumBytecodeLength\"] = 10000] = \"maximumBytecodeLength\";\n    ConsensusCommon[ConsensusCommon[\"maximumControlStackDepth\"] = 100] = \"maximumControlStackDepth\";\n    /**\n     * A.K.A. `MAX_OP_RETURN_RELAY`, `nMaxDatacarrierBytes`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumDataCarrierBytes\"] = 223] = \"maximumDataCarrierBytes\";\n    /**\n     * A.K.A. `MAX_OPS_PER_SCRIPT`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumOperationCount\"] = 201] = \"maximumOperationCount\";\n    /**\n     * A.K.A. `MAX_STACK_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStackDepth\"] = 1000] = \"maximumStackDepth\";\n    /**\n     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStackItemLength\"] = 520] = \"maximumStackItemLength\";\n    /**\n     * A.K.A. `MAX_STANDARD_VERSION`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardVersion\"] = 2] = \"maximumStandardVersion\";\n    /**\n     * A.K.A. `MAX_TX_IN_SCRIPT_SIG_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardUnlockingBytecodeLength\"] = 1650] = \"maximumStandardUnlockingBytecodeLength\";\n    /**\n     * A.K.A. `MIN_TX_SIZE`\n     */\n    // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n    ConsensusCommon[ConsensusCommon[\"minimumTransactionSize\"] = 100] = \"minimumTransactionSize\";\n    /**\n     * A.K.A. `MAX_STANDARD_TX_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStandardTransactionSize\"] = 100000] = \"maximumStandardTransactionSize\";\n    /**\n     * A.K.A. `MAX_TX_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumTransactionSize\"] = 1000000] = \"maximumTransactionSize\";\n    /**\n     * A.K.A. `MAXIMUM_ELEMENT_SIZE_64_BIT`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumVmNumberByteLength\"] = 8] = \"maximumVmNumberByteLength\";\n    // eslint-disable-next-line @typescript-eslint/no-mixed-enums\n    ConsensusCommon[\"minVmNumber\"] = \"-9223372036854775807\";\n    ConsensusCommon[\"maxVmNumber\"] = \"9223372036854775807\";\n    ConsensusCommon[ConsensusCommon[\"schnorrSignatureLength\"] = 64] = \"schnorrSignatureLength\";\n})(ConsensusCommon || (ConsensusCommon = {}));\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SigningSerializationTypesCommon = [\n    SigningSerializationTypeBch.allOutputs,\n    SigningSerializationTypeBch.allOutputsSingleInput,\n    SigningSerializationTypeBch.correspondingOutput,\n    SigningSerializationTypeBch.correspondingOutputSingleInput,\n    SigningSerializationTypeBch.noOutputs,\n    SigningSerializationTypeBch.noOutputsSingleInput,\n];\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SigningSerializationTypesBch = [\n    ...SigningSerializationTypesCommon,\n    SigningSerializationTypeBch.allOutputsAllUtxos,\n    SigningSerializationTypeBch.correspondingOutputAllUtxos,\n    SigningSerializationTypeBch.noOutputsAllUtxos,\n];\n//# sourceMappingURL=consensus.js.map","import { formatError } from '../../../format/format.js';\nexport var AuthenticationErrorCommon;\n(function (AuthenticationErrorCommon) {\n    AuthenticationErrorCommon[\"calledReserved\"] = \"Program called an unassigned, reserved operation.\";\n    AuthenticationErrorCommon[\"calledReturn\"] = \"Program called an OP_RETURN operation.\";\n    AuthenticationErrorCommon[\"calledUpgradableNop\"] = \"Program called a disallowed upgradable non-operation (OP_NOP1-OP_NOP10).\";\n    AuthenticationErrorCommon[\"checkSequenceUnavailable\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation, but OP_CHECKSEQUENCEVERIFY requires transaction version 2 or higher.\";\n    AuthenticationErrorCommon[\"disabledOpcode\"] = \"Program contains a disabled opcode.\";\n    AuthenticationErrorCommon[\"divisionByZero\"] = \"Program attempted to divide a number by zero.\";\n    AuthenticationErrorCommon[\"emptyAlternateStack\"] = \"Tried to read from an empty alternate stack.\";\n    AuthenticationErrorCommon[\"emptyStack\"] = \"Tried to read from an empty stack.\";\n    AuthenticationErrorCommon[\"exceededMaximumBytecodeLengthLocking\"] = \"The provided locking bytecode exceeds the maximum bytecode length.\";\n    AuthenticationErrorCommon[\"exceededMaximumBytecodeLengthUnlocking\"] = \"The provided unlocking bytecode exceeds the maximum bytecode length.\";\n    AuthenticationErrorCommon[\"exceededMaximumVmNumberByteLength\"] = \"Program attempted an OP_BIN2NUM operation on a byte sequence that cannot be encoded within the maximum VM Number length.\";\n    AuthenticationErrorCommon[\"exceededMaximumControlStackDepth\"] = \"Program exceeded the maximum control stack depth.\";\n    AuthenticationErrorCommon[\"exceededMaximumSignatureCheckCount\"] = \"Program exceeded the maximum signature check count.\";\n    AuthenticationErrorCommon[\"exceededMaximumStackDepth\"] = \"Program exceeded the maximum stack depth.\";\n    AuthenticationErrorCommon[\"exceededMaximumStackItemLength\"] = \"Program attempted to push a stack item that exceeded the maximum stack item length.\";\n    AuthenticationErrorCommon[\"exceededMaximumOperationCount\"] = \"Program exceeded the maximum operation count (201 operations).\";\n    AuthenticationErrorCommon[\"exceedsMaximumMultisigPublicKeyCount\"] = \"Program called an OP_CHECKMULTISIG that exceeds the maximum public key count (20 public keys).\";\n    AuthenticationErrorCommon[\"failedVerify\"] = \"Program failed an OP_VERIFY operation.\";\n    AuthenticationErrorCommon[\"invalidStackIndex\"] = \"Tried to read from an invalid stack index.\";\n    AuthenticationErrorCommon[\"incompatibleLocktimeType\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation with an incompatible locktime type. The transaction locktime and required locktime must both refer to either a block height or a block time.\";\n    AuthenticationErrorCommon[\"incompatibleSequenceType\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation with an incompatible sequence type flag. The input sequence number and required sequence number must both use the same sequence locktime type.\";\n    AuthenticationErrorCommon[\"insufficientLength\"] = \"Program called an OP_NUM2BIN operation with an insufficient byte length to re-encode the provided number.\";\n    AuthenticationErrorCommon[\"insufficientPublicKeys\"] = \"Program called an OP_CHECKMULTISIG operation that requires signatures from more public keys than are provided.\";\n    AuthenticationErrorCommon[\"invalidCheckBitsValue\"] = \"Program called an OP_CHECKMULTISIG operation with an invalid CheckBits value.\";\n    AuthenticationErrorCommon[\"invalidCheckBitsSignatureCount\"] = \"Program called an OP_CHECKMULTISIG operation with a CheckBits value configuring validation for an incorrect number of signatures.\";\n    AuthenticationErrorCommon[\"invalidNaturalNumber\"] = \"Invalid input: the key/signature count inputs for OP_CHECKMULTISIG require a natural number (n > 0).\";\n    AuthenticationErrorCommon[\"invalidPublicKeyEncoding\"] = \"Encountered an improperly encoded public key.\";\n    AuthenticationErrorCommon[\"invalidVmNumber\"] = \"Invalid input: this operation requires a valid VM Number.\";\n    AuthenticationErrorCommon[\"invalidSignatureEncoding\"] = \"Encountered an improperly encoded signature.\";\n    AuthenticationErrorCommon[\"invalidSplitIndex\"] = \"Program called an OP_SPLIT operation with an invalid index.\";\n    AuthenticationErrorCommon[\"invalidTransactionInputIndex\"] = \"Program attempted to read from an invalid transaction input index.\";\n    AuthenticationErrorCommon[\"invalidTransactionOutputIndex\"] = \"Program attempted to read from an invalid transaction output index.\";\n    AuthenticationErrorCommon[\"invalidTransactionUtxoIndex\"] = \"Program attempted to read from an invalid transaction UTXO index.\";\n    AuthenticationErrorCommon[\"locktimeDisabled\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation, but locktime is disabled for this transaction.\";\n    AuthenticationErrorCommon[\"mismatchedBitwiseOperandLength\"] = \"Program attempted a bitwise operation on operands of different lengths.\";\n    AuthenticationErrorCommon[\"malformedLockingBytecode\"] = \"The provided locking bytecode is malformed.\";\n    AuthenticationErrorCommon[\"malformedP2shBytecode\"] = \"Redeem bytecode was malformed prior to P2SH evaluation.\";\n    AuthenticationErrorCommon[\"malformedPush\"] = \"Program must be long enough to push the requested number of bytes.\";\n    AuthenticationErrorCommon[\"malformedUnlockingBytecode\"] = \"The provided unlocking bytecode is malformed.\";\n    AuthenticationErrorCommon[\"negativeLocktime\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY or OP_CHECKSEQUENCEVERIFY operation with a negative locktime.\";\n    AuthenticationErrorCommon[\"nonEmptyControlStackLockingBytecode\"] = \"The locking bytecode completed with a non-empty control stack.\";\n    AuthenticationErrorCommon[\"nonEmptyControlStackRedeemBytecode\"] = \"The redeem bytecode completed with a non-empty control stack.\";\n    AuthenticationErrorCommon[\"nonEmptyControlStackUnlockingBytecode\"] = \"The unlocking bytecode completed with a non-empty control stack.\";\n    AuthenticationErrorCommon[\"nonMinimalPush\"] = \"Push operations must use the smallest possible encoding.\";\n    AuthenticationErrorCommon[\"nonNullSignatureFailure\"] = \"Program failed a signature verification with a non-null signature (violating the \\\"NULLFAIL\\\" rule).\";\n    AuthenticationErrorCommon[\"nonSchnorrSizedSignatureInSchnorrMultiSig\"] = \"Program used a non schnorr-sized signature (65 bytes) in a schnorr OP_CHECKMULTISIG operation.\";\n    AuthenticationErrorCommon[\"overflowsVmNumberRange\"] = \"Program attempted an arithmetic operation which exceeds the range of VM Numbers.\";\n    AuthenticationErrorCommon[\"requiresCleanStackLockingBytecode\"] = \"Non-P2SH locking bytecode completed evaluation with an unexpected number of items on the stack (must be exactly 1).\";\n    AuthenticationErrorCommon[\"requiresCleanStackRedeemBytecode\"] = \"P2SH redeem bytecode completed evaluation with an unexpected number of items on the stack (must be exactly 1).\";\n    AuthenticationErrorCommon[\"requiresPushOnly\"] = \"Unlocking bytecode may contain only push operations in version 1 and 2 transactions.\";\n    AuthenticationErrorCommon[\"schnorrSizedSignatureInEcdsaMultiSig\"] = \"Program used a schnorr-sized signature (65 bytes) in a legacy-mode (ECDSA) OP_CHECKMULTISIG operation.\";\n    AuthenticationErrorCommon[\"tokenValidationExcessiveCommitmentLength\"] = \"Transaction violates token validation: excessive token commitment length.\";\n    AuthenticationErrorCommon[\"tokenValidationInvalidMintingToken\"] = \"Transaction violates token validation: the transaction outputs include a minting token that is not substantiated by the transaction inputs.\";\n    AuthenticationErrorCommon[\"tokenValidationExcessiveAmount\"] = \"Transaction violates token validation: the transaction outputs include a sum of fungible tokens for a category exceeding the maximum fungible token amount.\";\n    AuthenticationErrorCommon[\"tokenValidationInvalidFungibleMint\"] = \"Transaction violates token validation: the transaction creates new fungible tokens for a category without a matching genesis input.\";\n    AuthenticationErrorCommon[\"tokenValidationOutputsExceedInputs\"] = \"Transaction violates token validation: the sum of fungible tokens in the transaction outputs exceed that of the transaction inputs for a category.\";\n    AuthenticationErrorCommon[\"tokenValidationExcessiveMutableTokens\"] = \"Transaction violates token validation: the transaction creates more mutable tokens than are available for a category without a matching minting token.\";\n    AuthenticationErrorCommon[\"tokenValidationExcessiveImmutableTokens\"] = \"Transaction violates token validation: the transaction creates an immutable token for a category without a matching minting token or sufficient mutable tokens.\";\n    AuthenticationErrorCommon[\"unexpectedElse\"] = \"Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block.\";\n    AuthenticationErrorCommon[\"unexpectedEndIf\"] = \"Encountered an OP_ENDIF that is not following a matching OP_IF.\";\n    AuthenticationErrorCommon[\"unknownOpcode\"] = \"Called an unknown opcode.\";\n    AuthenticationErrorCommon[\"unmatchedSequenceDisable\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation requiring the disable flag, but the input's sequence number is missing the disable flag.\";\n    AuthenticationErrorCommon[\"unmatchedP2shRedeemBytecode\"] = \"The P2SH redeem bytecode provided in this input does not match the hash required by the locking bytecode.\";\n    AuthenticationErrorCommon[\"unsatisfiedLocktime\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation that requires a locktime greater than the transaction's locktime.\";\n    AuthenticationErrorCommon[\"unsatisfiedSequenceNumber\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation that requires a sequence number greater than the input's sequence number.\";\n    AuthenticationErrorCommon[\"unsuccessfulEvaluation\"] = \"Unsuccessful evaluation: completed with a non-truthy value on top of the stack.\";\n    AuthenticationErrorCommon[\"verifyFailedExcessiveLength\"] = \"Unable to verify transaction: excessive byte length.\";\n    AuthenticationErrorCommon[\"verifyFailedInsufficientLength\"] = \"Unable to verify transaction: insufficient byte length.\";\n    AuthenticationErrorCommon[\"verifyFailedMismatchedSourceOutputs\"] = \"Unable to verify transaction: a single spent output must be provided for each transaction input.\";\n    AuthenticationErrorCommon[\"verifyFailedNoInputs\"] = \"Unable to verify transaction: transactions must have at least one input.\";\n    AuthenticationErrorCommon[\"verifyFailedNoOutputs\"] = \"Unable to verify transaction: transactions must have at least one output.\";\n    AuthenticationErrorCommon[\"verifyFailedInputsExceedMaxMoney\"] = \"Unable to verify transaction: the sum of source output values exceeds the maximum possible satoshi value.\";\n    AuthenticationErrorCommon[\"verifyFailedOutputsExceedInputs\"] = \"Unable to verify transaction: the sum of transaction output values exceeds the sum of transaction inputs.\";\n    AuthenticationErrorCommon[\"verifyFailedOutputsExceedMaxMoney\"] = \"Unable to verify transaction: the sum of transaction output values exceeds the maximum possible satoshi value.\";\n    AuthenticationErrorCommon[\"verifyFailedDuplicateSourceOutputs\"] = \"Unable to verify transaction: the transaction attempts to spend the same outpoint in multiple inputs.\";\n    AuthenticationErrorCommon[\"verifyFailedInvalidVersion\"] = \"Unable to verify transaction: transaction version must be either 1 or 2.\";\n    AuthenticationErrorCommon[\"verifyFailedExcessiveSigChecks\"] = \"Unable to verify transaction: excessive cumulative signature check count.\";\n    AuthenticationErrorCommon[\"verifyStandardFailedExcessiveLength\"] = \"Unable to verify standard transaction: transaction exceeds maximum standard byte length.\";\n    AuthenticationErrorCommon[\"verifyStandardFailedNonstandardOutput\"] = \"Unable to verify standard transaction: standard transactions may only create standard output types.\";\n    AuthenticationErrorCommon[\"verifyStandardFailedNonstandardSourceOutput\"] = \"Unable to verify standard transaction: standard transactions may only spend standard output types.\";\n    AuthenticationErrorCommon[\"verifyStandardFailedDustOutput\"] = \"Unable to verify standard transaction: standard transactions may not have dust outputs.\";\n    AuthenticationErrorCommon[\"verifyStandardFailedExcessiveDataCarrierBytes\"] = \"Unable to verify standard transaction: excessive data carrier bytes.\";\n    AuthenticationErrorCommon[\"verifyStandardFailedExcessiveUnlockingBytecodeLength\"] = \"Unable to verify standard transaction: excessive unlocking bytecode length.\";\n    AuthenticationErrorCommon[\"verifyStandardFailedNonPushUnlockingBytecode\"] = \"Unable to verify standard transaction: unlocking bytecode must only include push operations.\";\n})(AuthenticationErrorCommon || (AuthenticationErrorCommon = {}));\n/**\n * Applies the `error` to a `state`.\n *\n * @remarks\n * If the state already has an error, this method does not override it.\n * (Evaluation should end after the first encountered error, so further errors\n * aren't relevant.)\n */\nexport const applyError = (state, errorType, errorDetails) => ({\n    ...state,\n    error: state.error ?? formatError(errorType, errorDetails),\n});\n//# sourceMappingURL=errors.js.map","/**\n * The `BCH_2023_05` instruction set.\n */\nexport var OpcodesBch2023;\n(function (OpcodesBch2023) {\n    /**\n     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`\n     */\n    OpcodesBch2023[OpcodesBch2023[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    /**\n     * A.K.A. `OP_TRUE`\n     */\n    OpcodesBch2023[OpcodesBch2023[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_SPLIT\"] = 127] = \"OP_SPLIT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NUM2BIN\"] = 128] = \"OP_NUM2BIN\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_BIN2NUM\"] = 129] = \"OP_BIN2NUM\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    /**\n     * A.K.A. OP_0EQUAL\n     */\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CHECKDATASIG\"] = 186] = \"OP_CHECKDATASIG\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_CHECKDATASIGVERIFY\"] = 187] = \"OP_CHECKDATASIGVERIFY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_REVERSEBYTES\"] = 188] = \"OP_REVERSEBYTES\";\n    /**\n     * First codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    /**\n     * Last codepoint left undefined before nullary introspection operations.\n     */\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_INPUTINDEX\"] = 192] = \"OP_INPUTINDEX\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_ACTIVEBYTECODE\"] = 193] = \"OP_ACTIVEBYTECODE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_TXVERSION\"] = 194] = \"OP_TXVERSION\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_TXINPUTCOUNT\"] = 195] = \"OP_TXINPUTCOUNT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_TXOUTPUTCOUNT\"] = 196] = \"OP_TXOUTPUTCOUNT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_TXLOCKTIME\"] = 197] = \"OP_TXLOCKTIME\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UTXOVALUE\"] = 198] = \"OP_UTXOVALUE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UTXOBYTECODE\"] = 199] = \"OP_UTXOBYTECODE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OUTPOINTTXHASH\"] = 200] = \"OP_OUTPOINTTXHASH\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OUTPOINTINDEX\"] = 201] = \"OP_OUTPOINTINDEX\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_INPUTBYTECODE\"] = 202] = \"OP_INPUTBYTECODE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_INPUTSEQUENCENUMBER\"] = 203] = \"OP_INPUTSEQUENCENUMBER\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OUTPUTVALUE\"] = 204] = \"OP_OUTPUTVALUE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OUTPUTBYTECODE\"] = 205] = \"OP_OUTPUTBYTECODE\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UTXOTOKENCATEGORY\"] = 206] = \"OP_UTXOTOKENCATEGORY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UTXOTOKENCOMMITMENT\"] = 207] = \"OP_UTXOTOKENCOMMITMENT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UTXOTOKENAMOUNT\"] = 208] = \"OP_UTXOTOKENAMOUNT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OUTPUTTOKENCATEGORY\"] = 209] = \"OP_OUTPUTTOKENCATEGORY\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OUTPUTTOKENCOMMITMENT\"] = 210] = \"OP_OUTPUTTOKENCOMMITMENT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_OUTPUTTOKENAMOUNT\"] = 211] = \"OP_OUTPUTTOKENAMOUNT\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    /**\n     * A.K.A. `PREFIX_TOKEN`, the codepoint used by CashToken locking\n     * bytecode prefixes.\n     */\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    /**\n     * A.K.A. `OP_PREFIX_BEGIN`\n     */\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    /**\n     * A.K.A. `OP_PREFIX_END`\n     */\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN250\"] = 250] = \"OP_UNKNOWN250\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN251\"] = 251] = \"OP_UNKNOWN251\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN253\"] = 253] = \"OP_UNKNOWN253\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN254\"] = 254] = \"OP_UNKNOWN254\";\n    OpcodesBch2023[OpcodesBch2023[\"OP_UNKNOWN255\"] = 255] = \"OP_UNKNOWN255\";\n})(OpcodesBch2023 || (OpcodesBch2023 = {}));\n//# sourceMappingURL=bch-2023-opcodes.js.map","import { OpcodesBch2023 } from '../2023/bch-2023-opcodes.js';\n/**\n * The opcodes added to the `BCH_2026_05` instruction set beyond those present in\n * `BCH_2023_05`.\n */\nexport var OpcodesBch2026Additions;\n(function (OpcodesBch2026Additions) {\n    /**\n     * Formerly `OP_VERIF`\n     */\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_BEGIN\"] = 101] = \"OP_BEGIN\";\n    /**\n     * Formerly `OP_VERNOTIF`\n     */\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_UNTIL\"] = 102] = \"OP_UNTIL\";\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    /**\n     * Formerly `OP_RESERVED1`\n     */\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_DEFINE\"] = 137] = \"OP_DEFINE\";\n    /**\n     * Formerly `OP_RESERVED2`\n     */\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_INVOKE\"] = 138] = \"OP_INVOKE\";\n    /**\n     * Formerly `OP_2MUL`\n     */\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_LSHIFTNUM\"] = 141] = \"OP_LSHIFTNUM\";\n    /**\n     * Formerly `OP_2DIV`\n     */\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_RSHIFTNUM\"] = 142] = \"OP_RSHIFTNUM\";\n    /**\n     *Formerly `OP_LSHIFT`\n     */\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_LSHIFTBIN\"] = 152] = \"OP_LSHIFTBIN\";\n    /**\n     *Formerly `OP_RSHIFT`\n     */\n    OpcodesBch2026Additions[OpcodesBch2026Additions[\"OP_RSHIFTBIN\"] = 153] = \"OP_RSHIFTBIN\";\n})(OpcodesBch2026Additions || (OpcodesBch2026Additions = {}));\n/**\n * The `BCH_SPEC` instruction set.\n *\n * Note: to maximize script compilation compatibility, this instruction set also\n * includes the previous names for new opcodes (e.g. `OP_VERIF` for `OP_BEGIN`).\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const OpcodesBch2026 = { ...OpcodesBch2023, ...OpcodesBch2026Additions };\n//# sourceMappingURL=bch-2026-opcodes.js.map","import { OpcodesBch2026 } from '../2026/bch-2026-opcodes.js';\n/**\n * The opcodes added to the `BCH_SPEC` instruction set beyond those present in\n * `BCH_2026_05`.\n *\n * These opcodes are exposed for testing and not currently expected to become\n * part of a known upgrade. `BCH_SPEC` opcodes may be removed or modified by\n * future versions of Libauth.\n */\nexport var OpcodesBchSpecAdditions;\n(function (OpcodesBchSpecAdditions) {\n    /**\n     * Overrides `OP_VER`\n     */\n    OpcodesBchSpecAdditions[OpcodesBchSpecAdditions[\"OP_EVAL\"] = 98] = \"OP_EVAL\";\n    /**\n     * Overrides `OP_NOP1`\n     */\n    OpcodesBchSpecAdditions[OpcodesBchSpecAdditions[\"OP_POW\"] = 176] = \"OP_POW\";\n})(OpcodesBchSpecAdditions || (OpcodesBchSpecAdditions = {}));\n/**\n * The `BCH_SPEC` instruction set.\n *\n * Note: to maximize script compilation compatibility, this instruction set also\n * includes the previous names for new opcodes (e.g. `OP_VERIF` for `OP_BEGIN`).\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const OpcodesBchSpec = { ...OpcodesBch2026, ...OpcodesBchSpecAdditions };\n//# sourceMappingURL=bch-spec-opcodes.js.map","/* eslint-disable max-lines */\nimport { isPayToPublicKey, isPayToPublicKeyHash, isPayToScriptHash20, isPayToScriptHash32, } from '../../../address/address.js';\nimport { binToHex, flattenBinArray, numberToBinUint16LE, numberToBinUint32LE, } from '../../../format/format.js';\nimport { encodeTransactionOutput } from '../../../message/message.js';\nimport { OpcodesBchSpec } from '../bch/spec/bch-spec-opcodes.js';\nimport { OpcodesBtc } from '../btc/btc-opcodes.js';\n/**\n * A type-guard that checks if the provided instruction is malformed.\n * @param instruction - the instruction to check\n */\nexport const authenticationInstructionIsMalformed = (instruction) => 'malformed' in instruction;\n/**\n * A type-guard that checks if the final instruction in the provided array of\n * instructions is malformed. (Only the final instruction can be malformed.)\n * @param instructions - the array of instructions to check\n */\nexport const authenticationInstructionsAreMalformed = (instructions) => instructions.length > 0 &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    authenticationInstructionIsMalformed(instructions[instructions.length - 1]);\nexport const authenticationInstructionsArePushInstructions = (instructions) => instructions.every((instruction) => 'data' in instruction);\nconst uint8Bytes = 1;\nconst uint16Bytes = 2;\nconst uint32Bytes = 4;\n/**\n * Read a little endian number of `length` from the provided\n * {@link ReadPosition}.\n *\n * @param position - the {@link ReadPosition} at which to start reading\n * @param length - the length of the little endian number to read\n */\nexport const readLittleEndianNumber = (position, length) => {\n    const view = new DataView(position.bin.buffer, position.bin.byteOffset, position.bin.byteLength);\n    const readAsLittleEndian = true;\n    return length === uint8Bytes\n        ? view.getUint8(position.index)\n        : length === uint16Bytes\n            ? view.getUint16(position.index, readAsLittleEndian)\n            : view.getUint32(position.index, readAsLittleEndian);\n};\n/**\n * Returns the number of bytes used to indicate the length of the push in this\n * operation.\n * @param opcode - an opcode between 0x00 and 0xff\n */\nexport const opcodeToPushLength = (opcode) => ({\n    [76 /* CommonPushOpcodes.OP_PUSHDATA_1 */]: uint8Bytes,\n    [77 /* CommonPushOpcodes.OP_PUSHDATA_2 */]: uint16Bytes,\n    [78 /* CommonPushOpcodes.OP_PUSHDATA_4 */]: uint32Bytes,\n})[opcode] ?? 0;\n/**\n * Decode one virtual machine bytecode instruction from the\n * provided {@link ReadPosition}.\n *\n * Returns an object with an `instruction` referencing a\n * {@link AuthenticationInstructionMaybeMalformed} and the next position.\n *\n * If the next index is greater than or equal to the length of the bytecode, the\n * bytecode has been fully decoded.\n *\n * The final {@link AuthenticationInstructionMaybeMalformed} in the bytecode may\n * be malformed if 1) the final operation is a push and 2) too few bytes remain\n * for the push operation to complete.\n *\n * @param position - the {@link ReadPosition} at which to start reading\n */\n// eslint-disable-next-line complexity\nexport const readAuthenticationInstruction = (position) => {\n    const { bin, index } = position;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const opcode = bin[index];\n    if (opcode > 78 /* CommonPushOpcodes.OP_PUSHDATA_4 */) {\n        return {\n            instruction: { opcode },\n            position: { bin, index: index + 1 },\n        };\n    }\n    const lengthBytes = opcodeToPushLength(opcode);\n    if (lengthBytes !== 0 && index + lengthBytes >= bin.length) {\n        const sliceStart = index + 1;\n        const sliceEnd = sliceStart + lengthBytes;\n        return {\n            instruction: {\n                expectedLengthBytes: lengthBytes,\n                length: bin.slice(sliceStart, sliceEnd),\n                malformed: true,\n                opcode,\n            },\n            position: { bin, index: sliceEnd },\n        };\n    }\n    const dataBytes = lengthBytes === 0\n        ? opcode\n        : readLittleEndianNumber({ bin, index: index + 1 }, lengthBytes);\n    const dataStart = index + 1 + lengthBytes;\n    const dataEnd = dataStart + dataBytes;\n    return {\n        instruction: {\n            data: bin.slice(dataStart, dataEnd),\n            ...(dataEnd > bin.length\n                ? { expectedDataBytes: dataEnd - dataStart, malformed: true }\n                : undefined),\n            opcode,\n        },\n        position: { bin, index: dataEnd },\n    };\n};\n/**\n * @param instruction - the {@link AuthenticationInstruction} to clone.\n * @returns A copy of the provided {@link AuthenticationInstruction}.\n *\n * @deprecated use `structuredClone` instead\n */\nexport const cloneAuthenticationInstruction = (instruction) => ({\n    ...('data' in instruction ? { data: instruction.data } : {}),\n    opcode: instruction.opcode,\n});\n/**\n * Decode authentication virtual machine bytecode (`lockingBytecode` or\n * `unlockingBytecode`) into {@link AuthenticationInstructionsMaybeMalformed}.\n * The method {@link authenticationInstructionsAreMalformed} can be used to\n * check if these instructions include a malformed instruction. If not, they are\n * valid {@link AuthenticationInstructions}.\n *\n * @param bytecode - the authentication virtual machine bytecode to decode\n */\nexport const decodeAuthenticationInstructions = (bytecode) => {\n    const instructions = [];\n    // eslint-disable-next-line functional/no-let\n    let i = 0;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (i < bytecode.length) {\n        const { instruction, position } = readAuthenticationInstruction({\n            bin: bytecode,\n            index: i,\n        });\n        // eslint-disable-next-line functional/no-expression-statements\n        i = position.index;\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        instructions.push(instruction);\n    }\n    return instructions;\n};\n/**\n * OP_0 is the only single-word push. All other push instructions will\n * disassemble to multiple ASM words. (OP_1-OP_16 are handled like normal\n * operations.)\n */\nconst isMultiWordPush = (opcode) => opcode !== 0 /* CommonPushOpcodes.OP_0 */;\nconst formatAsmPushHex = (data) => data.length > 0 ? `0x${binToHex(data)}` : '';\nconst formatMissingBytesAsm = (missing) => `[missing ${missing} byte${missing === 1 ? '' : 's'}]`;\nconst hasMalformedLength = (instruction) => 'length' in instruction;\nconst isPushData = (pushOpcode) => pushOpcode >= 76 /* CommonPushOpcodes.OP_PUSHDATA_1 */;\n/**\n * Disassemble a malformed authentication instruction into a string description.\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the {@link AuthenticationInstructionMalformed} to\n * disassemble\n */\nexport const disassembleAuthenticationInstructionMalformed = (opcodes, instruction) => `${opcodes[instruction.opcode] ?? 'OP_UNKNOWN'} ${hasMalformedLength(instruction)\n    ? `${formatAsmPushHex(instruction.length)}${formatMissingBytesAsm(instruction.expectedLengthBytes - instruction.length.length)}`\n    : `${isPushData(instruction.opcode)\n        ? `${instruction.expectedDataBytes} `\n        : ''}${formatAsmPushHex(instruction.data)}${formatMissingBytesAsm(instruction.expectedDataBytes - instruction.data.length)}`}`;\n/**\n * Disassemble a properly-formed authentication instruction into a string\n * description.\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the instruction to disassemble\n */\nexport const disassembleAuthenticationInstruction = (opcodes, instruction) => `${opcodes[instruction.opcode] ?? 'OP_UNKNOWN'}${'data' in instruction && isMultiWordPush(instruction.opcode)\n    ? ` ${isPushData(instruction.opcode) ? `${instruction.data.length} ` : ''}${formatAsmPushHex(instruction.data)}`\n    : ''}`;\n/**\n * Disassemble a single {@link AuthenticationInstructionMaybeMalformed} into its\n * ASM representation.\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instruction - the instruction to disassemble\n */\nexport const disassembleAuthenticationInstructionMaybeMalformed = (opcodes, instruction) => authenticationInstructionIsMalformed(instruction)\n    ? disassembleAuthenticationInstructionMalformed(opcodes, instruction)\n    : disassembleAuthenticationInstruction(opcodes, instruction);\n/**\n * Disassemble an array of {@link AuthenticationInstructionMaybeMalformed}\n * (including potentially malformed instructions) into its ASM representation.\n *\n * This method supports disassembling an array including multiple\n * {@link AuthenticationInstructionMaybeMalformed}s, rather than the more\n * constrained {@link AuthenticationInstructionsMaybeMalformed} (may only\n * include one malformed instruction as the last item in the array).\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param instructions - the array of instructions to disassemble\n */\nexport const disassembleAuthenticationInstructionsMaybeMalformed = (opcodes, instructions) => instructions\n    .map((instruction) => disassembleAuthenticationInstructionMaybeMalformed(opcodes, instruction))\n    .join(' ');\n/**\n * Disassemble authentication bytecode into a lossless ASM representation. (All\n * push operations are represented with the same opcodes used in the bytecode,\n * even when non-minimally encoded.)\n *\n * For the reverse, see {@link assembleBytecode}.\n *\n * @param opcodes - a mapping of possible opcodes to their string representation\n * @param bytecode - the authentication bytecode to disassemble\n */\nexport const disassembleBytecode = (opcodes, bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(opcodes, decodeAuthenticationInstructions(bytecode));\n/**\n * Disassemble BCH authentication bytecode into its ASM representation.\n *\n * Note, this method automatically uses the latest BCH instruction set. To\n * manually select an instruction set, use {@link disassembleBytecode}.\n *\n * For the reverse, see {@link assembleBytecodeBch}.\n *\n * @param bytecode - the virtual machine bytecode to disassemble\n */\nexport const disassembleBytecodeBch = (bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(OpcodesBchSpec, decodeAuthenticationInstructions(bytecode));\n/**\n * @deprecated Alias of `disassembleBytecodeBch` for backwards-compatibility.\n */\nexport const disassembleBytecodeBCH = disassembleBytecodeBch;\n/**\n * Disassemble BTC authentication bytecode into its ASM representation.\n *\n * Note, this method automatically uses the latest BTC instruction set. To\n * manually select an instruction set, use {@link disassembleBytecode}.\n *\n * For the reverse, see {@link assembleBytecodeBtc}.\n *\n * @param bytecode - the virtual machine bytecode to disassemble\n */\nexport const disassembleBytecodeBtc = (bytecode) => disassembleAuthenticationInstructionsMaybeMalformed(OpcodesBtc, decodeAuthenticationInstructions(bytecode));\n/**\n * @deprecated Alias of `disassembleBytecodeBtc` for backwards-compatibility.\n */\nexport const disassembleBytecodeBTC = disassembleBytecodeBtc;\n/**\n * Create an object where each key is an opcode identifier and each value is\n * the bytecode value (`Uint8Array`) it represents.\n * @param opcodes - An opcode enum, e.g. {@link OpcodesBch}\n */\nexport const generateBytecodeMap = (opcodes) => Object.entries(opcodes)\n    .filter((entry) => typeof entry[1] === 'number')\n    .reduce((identifiers, pair) => ({\n    ...identifiers,\n    [pair[0]]: Uint8Array.of(pair[1]),\n}), {});\nconst getInstructionLengthBytes = (instruction) => {\n    const { opcode } = instruction;\n    const expectedLength = opcodeToPushLength(opcode);\n    return expectedLength === uint8Bytes\n        ? Uint8Array.of(instruction.data.length)\n        : expectedLength === uint16Bytes\n            ? numberToBinUint16LE(instruction.data.length)\n            : numberToBinUint32LE(instruction.data.length);\n};\n/**\n * Re-encode a valid authentication instruction.\n * @param instruction - the instruction to encode\n */\nexport const encodeAuthenticationInstruction = (instruction) => Uint8Array.from([\n    instruction.opcode,\n    ...('data' in instruction\n        ? [\n            ...(isPushData(instruction.opcode)\n                ? getInstructionLengthBytes(instruction)\n                : []),\n            ...instruction.data,\n        ]\n        : []),\n]);\n/**\n * Re-encode a malformed authentication instruction.\n * @param instruction - the {@link AuthenticationInstructionMalformed} to encode\n */\nexport const encodeAuthenticationInstructionMalformed = (instruction) => {\n    const { opcode } = instruction;\n    if (hasMalformedLength(instruction)) {\n        return Uint8Array.from([opcode, ...instruction.length]);\n    }\n    if (isPushData(opcode)) {\n        return Uint8Array.from([\n            opcode,\n            ...(opcode === 76 /* CommonPushOpcodes.OP_PUSHDATA_1 */\n                ? Uint8Array.of(instruction.expectedDataBytes)\n                : opcode === 77 /* CommonPushOpcodes.OP_PUSHDATA_2 */\n                    ? numberToBinUint16LE(instruction.expectedDataBytes)\n                    : numberToBinUint32LE(instruction.expectedDataBytes)),\n            ...instruction.data,\n        ]);\n    }\n    return Uint8Array.from([opcode, ...instruction.data]);\n};\n/**\n * Re-encode a potentially-malformed authentication instruction.\n * @param instruction - the {@link AuthenticationInstructionMaybeMalformed}\n * to encode\n */\nexport const encodeAuthenticationInstructionMaybeMalformed = (instruction) => authenticationInstructionIsMalformed(instruction)\n    ? encodeAuthenticationInstructionMalformed(instruction)\n    : encodeAuthenticationInstruction(instruction);\n/**\n * Re-encode an array of valid authentication instructions.\n * @param instructions - the array of valid instructions to encode\n */\nexport const encodeAuthenticationInstructions = (instructions) => flattenBinArray(instructions.map(encodeAuthenticationInstruction));\n/**\n * Re-encode an array of potentially-malformed authentication instructions.\n * @param instructions - the array of\n * {@link AuthenticationInstructionMaybeMalformed}s to encode\n */\nexport const encodeAuthenticationInstructionsMaybeMalformed = (instructions) => flattenBinArray(instructions.map(encodeAuthenticationInstructionMaybeMalformed));\nexport var VmNumberError;\n(function (VmNumberError) {\n    VmNumberError[\"outOfRange\"] = \"Failed to decode VM Number: overflows VM Number range.\";\n    VmNumberError[\"requiresMinimal\"] = \"Failed to decode VM Number: the number is not minimally-encoded.\";\n})(VmNumberError || (VmNumberError = {}));\nexport const isVmNumberError = (value) => value === VmNumberError.outOfRange || value === VmNumberError.requiresMinimal;\n/**\n * This method attempts to decode a VM Number, a format in which numeric values\n * are represented on the stack. (The Satoshi implementation calls this\n * `CScriptNum`.)\n *\n * If `bytes` is a valid VM Number, this method returns the represented number\n * in BigInt format. If `bytes` is not valid, a {@link VmNumberError}\n * is returned.\n *\n * All common operations accepting numeric parameters or pushing numeric values\n * to the stack currently use the VM Number format. The binary format of numbers\n * wouldn't be important if they could only be operated on by arithmetic\n * operators, but since the results of these operations may become input to\n * other operations (e.g. hashing), the specific representation is consensus-\n * critical.\n *\n * For the reverse, see {@link bigIntToVmNumber}.\n *\n * @param bytes - a Uint8Array from the stack\n */\n// eslint-disable-next-line complexity\nexport const vmNumberToBigInt = (bytes, { maximumVmNumberByteLength = 0, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: 0,\n    requireMinimalEncoding: true,\n}) => {\n    if (bytes.length === 0) {\n        return 0n;\n    }\n    if (maximumVmNumberByteLength !== 0 &&\n        bytes.length > maximumVmNumberByteLength) {\n        return VmNumberError.outOfRange;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const mostSignificantByte = bytes[bytes.length - 1];\n    const secondMostSignificantByte = bytes[bytes.length - 1 - 1];\n    const allButTheSignBit = 0b1111_111;\n    const justTheSignBit = 0b1000_0000;\n    if (requireMinimalEncoding &&\n        // eslint-disable-next-line no-bitwise\n        (mostSignificantByte & allButTheSignBit) === 0 &&\n        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n        (bytes.length <= 1 || (secondMostSignificantByte & justTheSignBit) === 0)) {\n        return VmNumberError.requiresMinimal;\n    }\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.length);\n    // eslint-disable-next-line functional/no-let\n    let result = 0n;\n    const wordBytes = 8;\n    const wordBits = 64n;\n    // eslint-disable-next-line functional/no-loop-statements, functional/no-let\n    for (let off = bytes.length - wordBytes; off >= 0; off -= wordBytes) {\n        const littleEndianWord = view.getBigUint64(off, true);\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise\n        result = (result << wordBits) | littleEndianWord;\n    }\n    const byteBits = 8n;\n    // eslint-disable-next-line functional/no-loop-statements, functional/no-let, no-plusplus\n    for (let i = (bytes.length % wordBytes) - 1; i >= 0; --i) {\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n        result = (result << byteBits) | BigInt(bytes[i]);\n    }\n    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n    const negative = (bytes[bytes.length - 1] & 128 /* VmNumber.signByte */) !== 0;\n    if (!negative)\n        return result;\n    const bitsPerByte = 8;\n    const signDepth = bitsPerByte * (bytes.length - 1);\n    // eslint-disable-next-line no-bitwise\n    const removeSign = ~(BigInt(128 /* VmNumber.signByte */) << BigInt(signDepth));\n    // eslint-disable-next-line no-bitwise\n    return -(result & removeSign);\n};\n/**\n * Convert a BigInt into the VM Number format. See {@link vmNumberToBigInt} for\n * more information.\n *\n * For the reverse, use {@link vmNumberToBigInt}.\n *\n * @param integer - the BigInt to encode as a VM Number\n */\n// eslint-disable-next-line complexity\nexport const bigIntToVmNumber = (integer) => {\n    if (integer === 0n) {\n        return new Uint8Array();\n    }\n    const bytes = [];\n    const isNegative = integer < 0;\n    const byteStates = 0xff;\n    const bitsPerByte = 8;\n    // eslint-disable-next-line functional/no-let\n    let remaining = isNegative ? -integer : integer;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (remaining > 0) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data, no-bitwise\n        bytes.push(Number(remaining & BigInt(byteStates)));\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise\n        remaining >>= BigInt(bitsPerByte);\n    }\n    const signFlippingByte = 0x80;\n    // eslint-disable-next-line no-bitwise, functional/no-conditional-statements, @typescript-eslint/no-non-null-assertion\n    if ((bytes[bytes.length - 1] & signFlippingByte) > 0) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        bytes.push(isNegative ? signFlippingByte : 0x00);\n        // eslint-disable-next-line functional/no-conditional-statements\n    }\n    else if (isNegative) {\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n        bytes[bytes.length - 1] |= signFlippingByte;\n    }\n    return new Uint8Array(bytes);\n};\n/**\n * Returns true if the provided stack item is \"truthy\" in the sense required\n * by several operations (anything but zero and \"negative zero\").\n *\n * The Satoshi implementation calls this method `CastToBool`.\n *\n * To cast a boolean value to a stack item (VM number),\n * use {@link booleanToVmNumber}.\n *\n * @param item - the stack item to check for truthiness\n */\nexport const stackItemIsTruthy = (item) => {\n    const signFlippingByte = 0x80;\n    // eslint-disable-next-line functional/no-let, functional/no-loop-statements, no-plusplus\n    for (let i = 0; i < item.length; i++) {\n        if (item[i] !== 0) {\n            if (i === item.length - 1 && item[i] === signFlippingByte) {\n                return false;\n            }\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Convert a boolean into VM Number format (the type used to express\n * boolean values emitted by several operations).\n *\n * For the less-strict inverse used by the VM, see {@link stackItemIsTruthy}.\n *\n * @param value - the boolean value to convert\n */\nexport const booleanToVmNumber = (value) => value ? bigIntToVmNumber(1n) : bigIntToVmNumber(0n);\n/**\n * From C++ implementation:\n * Note that IsPushOnly() *does* consider OP_RESERVED to be a push-type\n * opcode, however execution of OP_RESERVED fails, so it's not relevant to\n * P2SH/BIP62 as the scriptSig would fail prior to the P2SH special\n * validation code being executed.\n */\nexport const isPushOperation = (opcode) => opcode <= 96 /* Opcodes.OP_16 */;\nexport const isPushOnly = (bytecode) => {\n    const instructions = decodeAuthenticationInstructions(bytecode);\n    return instructions.every((instruction) => isPushOperation(instruction.opcode));\n};\nexport const isPushOnlyAccurate = (bytecode) => {\n    const instructions = decodeAuthenticationInstructions(bytecode);\n    return (!authenticationInstructionsAreMalformed(instructions) &&\n        authenticationInstructionsArePushInstructions(instructions));\n};\n/**\n * Test if the provided locking bytecode is an arbitrary data output (A.K.A.\n * `TX_NULL_DATA`, \"data carrier\", or OP_RETURN output).\n * @param lockingBytecode - the locking bytecode to test\n */\nexport const isArbitraryDataOutput = (lockingBytecode) => lockingBytecode.length >= 1 &&\n    lockingBytecode[0] === 106 /* Opcodes.OP_RETURN */ &&\n    isPushOnly(lockingBytecode.slice(1));\n/**\n * Given a number of bytes and a fee rate in satoshis-per-kilobyte, return the\n * minimum required fee. This calculation is important for standardness in dust\n * threshold calculation.\n *\n * @param length - the number of bytes for which the fee is to be paid\n * @param feeRateSatsPerKb - the fee rate in satoshis per 1000 bytes\n */\nexport const getMinimumFee = (length, feeRateSatsPerKb) => {\n    if (length < 1n)\n        return 0n;\n    const truncated = (length * feeRateSatsPerKb) / BigInt(1000 /* Dust.bytesPerKb */);\n    return truncated === 0n ? 1n : truncated;\n};\n/**\n * Given an encoded output length, return the minimum output value in satoshis\n * required to exceed the dust threshold. See {@link getDustThreshold}\n * for details.\n *\n * Most applications should instead use {@link getDustThreshold} to ensure\n * proper encoding and proper treatment of arbitrary data outputs\n * ({@link isArbitraryDataOutput}).\n *\n * @param outputLength - the length of the serialized output\n * @param dustRelayFeeSatPerKb - the \"dust relay fee\", defaults to `1000n`\n */\nexport const getDustThresholdForLength = (outputLength, dustRelayFeeSatPerKb = BigInt(1000 /* Dust.standardDustRelayFee */)) => {\n    const expectedTotalLength = outputLength + 148 /* Dust.p2pkhInputLength */;\n    return (BigInt(3 /* Dust.minimumFeeMultiple */) *\n        getMinimumFee(BigInt(expectedTotalLength), dustRelayFeeSatPerKb));\n};\n/**\n * Given an {@link Output} and (optionally) a dust relay fee in\n * satoshis-per-kilobyte, return the minimum satoshi value for this output to\n * not be considered a \"dust output\". **For nodes to relay or mine a transaction\n * with this output, the output must have a satoshi value greater than or equal\n * to this threshold.**\n *\n * By standardness, if an output is expected to cost more than 1/3 of it's value\n * in fees to spend, it is considered dust. When calculating the expected fee,\n * the input size is assumed to be (at least) the size of a typical P2PKH input\n * spent using a 72-byte ECDSA signature, 148 bytes:\n * - Outpoint transaction hash: 32 bytes\n * - Outpoint index: 4 bytes\n * - Unlocking bytecode length: 1 byte\n * - Push of 72-byte ECDSA signature: 72 + 1 byte\n * - Push of public key: 33 + 1 byte\n * - Sequence number: 4 bytes\n *\n * The encoded length of the serialized output is added to 148 bytes, and the\n * dust threshold for the output is 3 times the minimum fee for the total bytes.\n * For a P2PKH output (34 bytes) and the standard 1000 sat/Kb dust relay fee,\n * this results in a dust limit of `546` satoshis (`(34+148)*3*1000/1000`).\n *\n * Note, arbitrary data outputs are not required to meet the dust limit as\n * they are provably unspendable and can be pruned from the UTXO set.\n *\n * @param output - the output to test\n * @param dustRelayFeeSatPerKb - the \"dust relay fee\", defaults to `1000n`\n */\nexport const getDustThreshold = (output, dustRelayFeeSatPerKb = BigInt(1000 /* Dust.standardDustRelayFee */)) => {\n    if (isArbitraryDataOutput(output.lockingBytecode)) {\n        return 0n;\n    }\n    const encodedOutputLength = encodeTransactionOutput(output).length;\n    return getDustThresholdForLength(encodedOutputLength, dustRelayFeeSatPerKb);\n};\n/**\n * Given an {@link Output} and (optionally) a dust relay fee in\n * satoshis-per-kilobyte, return `true` if the provided output is considered\n * a \"dust output\", or `false` otherwise.\n *\n * @param output - the output to test\n * @param dustRelayFeeSatPerKb - the \"dust relay fee\", defaults to `1000n`\n */\nexport const isDustOutput = (output, dustRelayFeeSatPerKb = BigInt(1000 /* Dust.standardDustRelayFee */)) => output.valueSatoshis < getDustThreshold(output, dustRelayFeeSatPerKb);\nexport const isValidUncompressedPublicKeyEncoding = (publicKey) => publicKey.length === 65 /* PublicKey.uncompressedByteLength */ &&\n    publicKey[0] === 4 /* PublicKey.uncompressedHeaderByte */;\nexport const isValidCompressedPublicKeyEncoding = (publicKey) => publicKey.length === 33 /* PublicKey.compressedByteLength */ &&\n    (publicKey[0] === 2 /* PublicKey.compressedHeaderByteEven */ ||\n        publicKey[0] === 3 /* PublicKey.compressedHeaderByteOdd */);\nexport const isValidPublicKeyEncoding = (publicKey) => isValidCompressedPublicKeyEncoding(publicKey) ||\n    isValidUncompressedPublicKeyEncoding(publicKey);\n// eslint-disable-next-line complexity\nexport const isStandardnessPublicKeyEncodingPre2026 = (publicKey) => {\n    const [header] = publicKey;\n    if (publicKey.length === 33 /* PublicKey.compressedByteLength */) {\n        return (header === 2 /* PublicKey.compressedHeaderByteEven */ ||\n            header === 3 /* PublicKey.compressedHeaderByteOdd */);\n    }\n    if (publicKey.length === 65 /* PublicKey.uncompressedByteLength */) {\n        return (header === 4 /* PublicKey.uncompressedHeaderByte */ ||\n            header === 6 /* PublicKey.uncompressedHeaderByteLegacyEvenY */ ||\n            header === 7 /* PublicKey.uncompressedHeaderByteLegacyOddY */);\n    }\n    return false;\n};\n// eslint-disable-next-line complexity\nexport const pushNumberOpcodeToNumber = (opcode) => {\n    if (opcode === 0 /* Opcodes.OP_0 */) {\n        return 0;\n    }\n    if (opcode === 79 /* Opcodes.OP_1NEGATE */) {\n        return -1;\n    }\n    if (!Number.isInteger(opcode) ||\n        opcode < 81 /* Opcodes.OP_1 */ ||\n        opcode > 96 /* Opcodes.OP_16 */) {\n        return false;\n    }\n    return opcode - 80 /* Opcodes.OP_RESERVED */;\n};\n// eslint-disable-next-line complexity\nexport const isSimpleMultisig = (lockingBytecode) => {\n    const instructions = decodeAuthenticationInstructions(lockingBytecode);\n    if (authenticationInstructionsAreMalformed(instructions)) {\n        return false;\n    }\n    const lastIndex = instructions.length - 1;\n    if (instructions.length < 4 /* Multisig.minimumInstructions */ ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        instructions[lastIndex].opcode !== 174 /* Opcodes.OP_CHECKMULTISIG */) {\n        return false;\n    }\n    /**\n     * The required count of signers (the `m` in `m-of-n`).\n     */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const m = pushNumberOpcodeToNumber(instructions[0].opcode);\n    /**\n     * The total count of signers (the `n` in `m-of-n`).\n     */\n    const n = pushNumberOpcodeToNumber(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    instructions[lastIndex - 1].opcode);\n    if (n === false || m === false) {\n        return false;\n    }\n    const publicKeyInstructions = instructions.slice(1 /* Multisig.keyStart */, -2 /* Multisig.keyEnd */);\n    if (!authenticationInstructionsArePushInstructions(publicKeyInstructions)) {\n        return false;\n    }\n    const publicKeys = publicKeyInstructions.map((instruction) => instruction.data);\n    if (publicKeys.some((key) => !isStandardnessPublicKeyEncodingPre2026(key))) {\n        return false;\n    }\n    return { m, n, publicKeys };\n};\n// eslint-disable-next-line complexity\nexport const isStandardMultisig = (lockingBytecode) => {\n    const multisigProperties = isSimpleMultisig(lockingBytecode);\n    if (multisigProperties === false) {\n        return false;\n    }\n    const { m, n } = multisigProperties;\n    if (n < 1 || n > 3 /* Multisig.maximumStandardN */ || m < 1 || m > n) {\n        return false;\n    }\n    return true;\n};\n/**\n * Test that the provided locking bytecode matches one of the standard output\n * bytecode patterns prior to the `BCH_2023_05` upgrade (following\n * P2SH32 activation).\n * @param lockingBytecode - the locking bytecode to test for standardness\n */\nexport const isStandardOutputBytecodePre2023 = (lockingBytecode) => isPayToPublicKeyHash(lockingBytecode) ||\n    isPayToScriptHash20(lockingBytecode) ||\n    isPayToPublicKey(lockingBytecode) ||\n    isArbitraryDataOutput(lockingBytecode) ||\n    isStandardMultisig(lockingBytecode);\n/**\n * Test that the provided locking bytecode matches one of the standard output\n * bytecode patterns as of the `BCH_2023_05` upgrade (following\n * P2SH32 activation).\n * @param lockingBytecode - the locking bytecode to test for standardness\n */\nexport const isStandardOutputBytecode2023 = (lockingBytecode) => isStandardOutputBytecodePre2023(lockingBytecode) ||\n    isPayToScriptHash32(lockingBytecode);\n// eslint-disable-next-line complexity\nexport const isStandardUtxoBytecode2023 = (lockingBytecode) => isPayToPublicKeyHash(lockingBytecode) ||\n    isPayToScriptHash20(lockingBytecode) ||\n    isPayToPublicKey(lockingBytecode) ||\n    isArbitraryDataOutput(lockingBytecode) ||\n    isSimpleMultisig(lockingBytecode) !== false ||\n    isPayToScriptHash32(lockingBytecode);\n/**\n * Test a stack item for the SegWit Recovery Rules activated in `BCH_2019_05`.\n *\n * @param bytecode - the stack item to test\n */\n// eslint-disable-next-line complexity\nexport const isWitnessProgram = (bytecode) => {\n    const correctLength = bytecode.length >= 4 /* SegWit.minimumLength */ &&\n        bytecode.length <= 42 /* SegWit.maximumLength */;\n    const validVersionPush = bytecode[0] === 0 /* SegWit.OP_0 */ ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        (bytecode[0] >= 81 /* SegWit.OP_1 */ && bytecode[0] <= 96 /* SegWit.OP_16 */);\n    const correctLengthByte = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    bytecode[1] + 2 /* SegWit.versionAndLengthBytes */ === bytecode.length;\n    return correctLength && validVersionPush && correctLengthByte;\n};\n//# sourceMappingURL=instruction-sets-utils.js.map","import { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { bigIntToVmNumber, isVmNumberError, vmNumberToBigInt, } from './instruction-sets-utils.js';\nexport const incrementOperationCount = (operation) => (state) => {\n    const nextState = operation(state);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    nextState.operationCount += 1;\n    return nextState;\n};\nexport const executionIsActive = (state) => state.controlStack.every((item) => item !== false);\nexport const conditionallyEvaluate = (operation) => (state) => executionIsActive(state) ? operation(state) : state;\n/**\n * Map a function over each operation in an {@link InstructionSet.operations}\n * object, assigning the result to the same `opcode` in the resulting object.\n * @param operationMap - an operations map from an {@link InstructionSet}\n * @param combinators - a list of functions to apply (in order) to\n * each operation\n */\nexport const mapOverOperations = (combinators, operationMap) => Object.keys(operationMap).reduce((result, opcode) => ({\n    ...result,\n    [opcode]: combinators.reduce((op, combinator) => combinator(op), \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    operationMap[Number(opcode)]),\n}), {});\n/**\n * Pop one stack item off of `state.stack` and provide that item to `operation`.\n */\nexport const useOneStackItem = (state, operation) => {\n    // eslint-disable-next-line functional/immutable-data\n    const item = state.stack.pop();\n    if (item === undefined) {\n        return applyError(state, AuthenticationErrorCommon.emptyStack);\n    }\n    return operation(state, [item]);\n};\nexport const useTwoStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueTwo]) => useOneStackItem(nextState, (lastState, [valueTop]) => operation(lastState, [valueTop, valueTwo])));\nexport const useThreeStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueThree]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree])));\nexport const useFourStackItems = (state, operation) => useTwoStackItems(state, (nextState, [valueThree, valueFour]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree, valueFour])));\nexport const useSixStackItems = (state, operation) => useFourStackItems(state, (nextState, [valueThree, valueFour, valueFive, valueSix]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [\n    valueTop,\n    valueTwo,\n    valueThree,\n    valueFour,\n    valueFive,\n    valueSix,\n])));\nexport const useOneVmNumber = (state, operation, { maximumVmNumberByteLength = 0, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: 0,\n    requireMinimalEncoding: true,\n}) => useOneStackItem(state, (nextState, [item]) => {\n    const value = vmNumberToBigInt(item, {\n        maximumVmNumberByteLength,\n        requireMinimalEncoding,\n    });\n    if (isVmNumberError(value)) {\n        return applyError(state, AuthenticationErrorCommon.invalidVmNumber, value);\n    }\n    return operation(nextState, [value]);\n});\n/**\n * Note that returned parameters are in source order,\n * e.g. `<first> <second> OP_CODE`.\n */\nexport const useTwoVmNumbers = (state, operation, { maximumVmNumberByteLength = 0, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: 0,\n    requireMinimalEncoding: true,\n}) => useOneVmNumber(state, (nextState, [secondValue]) => useOneVmNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue]), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n}), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n});\n/**\n * Note that returned parameters are in source order,\n * e.g. `<first> <second> <third> OP_CODE`.\n */\nexport const useThreeVmNumbers = (state, operation, { maximumVmNumberByteLength = 0, requireMinimalEncoding = true, } = {\n    maximumVmNumberByteLength: 0,\n    requireMinimalEncoding: true,\n}) => useTwoVmNumbers(state, (nextState, [secondValue, thirdValue]) => useOneVmNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue, thirdValue]), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n}), {\n    maximumVmNumberByteLength,\n    requireMinimalEncoding,\n});\n/**\n * Return the provided state with the provided value pushed to its stack.\n * @param state - the state to update and return\n * @param data - the values to push to the stack\n * @param pushedBytes - the number of bytes this operation should add to\n * `state.metrics.stackPushedBytes`; defaults to the sum of all `data` lengths\n */\nexport const pushToStack = (state, data, { pushedBytes = data.reduce((acc, item) => acc + item.length, 0) } = {}) => {\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.stack.push(...data);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.metrics.stackPushedBytes += pushedBytes;\n    return state;\n};\n/**\n * If the provided item exceeds the maximum stack item length, apply an error.\n * Otherwise, return the provided state with the item pushed to its stack.\n * @param state - the state to update and return\n * @param item - the value to push to the stack\n */\nexport const pushToStackChecked = (state, item, { maximumStackItemLength = ConsensusCommon.maximumStackItemLength, } = {}) => {\n    if (item.length > maximumStackItemLength) {\n        return applyError(state, AuthenticationErrorCommon.exceededMaximumStackItemLength, `Maximum stack item length: ${maximumStackItemLength}; item length: ${item.length} bytes.`);\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.stack.push(item);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.metrics.stackPushedBytes += item.length;\n    return state;\n};\n/**\n * Return the provided state with the VM number pushed to its stack.\n * @param state - the state to update and return\n * @param vmNumber - the number to push to the stack\n */\nexport const pushToStackVmNumber = (state, vmNumber) => pushToStack(state, [bigIntToVmNumber(vmNumber)]);\n/**\n * If the provided number is outside the VM number range, apply an error.\n * Otherwise, return the provided state with the VM number pushed to its stack.\n * @param state - the state to update and return\n * @param vmNumber - the VM number to push to the stack\n */\nexport const pushToStackVmNumberChecked = (state, vmNumber, { maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, hasEncodingCost = true, } = {}) => {\n    const encoded = bigIntToVmNumber(vmNumber);\n    if (encoded.length > maximumVmNumberByteLength) {\n        return applyError(state, AuthenticationErrorCommon.overflowsVmNumberRange, `Maximum VM number byte length: ${maximumVmNumberByteLength}; encoded number length: ${encoded.length}.`);\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.metrics.arithmeticCost += hasEncodingCost ? encoded.length : 0;\n    return pushToStack(state, [encoded]);\n};\nexport const combineOperations = (firstOperation, secondOperation) => (state) => secondOperation(firstOperation(state));\n/**\n * Given a message length, compute and return the number of hash digest\n * iterations required. (See `CHIP-2021-05-vm-limits`)\n */\nexport const lengthToHashDigestIterationCount = (messageLength) => \n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers\n1 + (((messageLength + 8) / 64) | 0);\n/**\n * Given a program state, increment the hash digest iteration count for a\n * message of the provided length. If the total would exceed the maximum, append\n * an error.\n */\nexport const incrementHashDigestIterations = (state, { messageLength, resultIsHashed, }, \n/**\n * The operation to execute if no error occurred\n */\noperation) => {\n    const newIterations = lengthToHashDigestIterationCount(messageLength);\n    const secondRound = resultIsHashed ? 1 : 0;\n    const requiredTotalIterations = state.metrics.hashDigestIterations + newIterations + secondRound;\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.metrics.hashDigestIterations = requiredTotalIterations;\n    return operation(state);\n};\n//# sourceMappingURL=combinators.js.map","import { executionIsActive, useOneStackItem } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { stackItemIsTruthy } from './instruction-sets-utils.js';\nexport const opVerify = (state) => useOneStackItem(state, (nextState, [item]) => stackItemIsTruthy(item)\n    ? nextState\n    : applyError(nextState, AuthenticationErrorCommon.failedVerify));\nexport const reservedOperation = (state) => applyError(state, AuthenticationErrorCommon.calledReserved);\nexport const opReturn = (state) => applyError(state, AuthenticationErrorCommon.calledReturn);\n/**\n * Return the provided state with the provided value pushed to its control stack.\n * @param state - the state to update and return\n * @param data - the value to push to the stack\n */\nexport const pushToControlStack = (state, value) => {\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.controlStack.push(value);\n    return state;\n};\nexport const opIf = (state) => {\n    if (executionIsActive(state)) {\n        return useOneStackItem(state, (nextState, [item]) => pushToControlStack(nextState, stackItemIsTruthy(item)));\n    }\n    return pushToControlStack(state, false);\n};\n/**\n * Note, `OP_NOTIF` is not completely equivalent to `OP_NOT OP_IF`. `OP_NOT`\n * operates on a VM Number (as the inverse of `OP_0NOTEQUAL`), while `OP_NOTIF`\n * checks the \"truthy-ness\" of a stack item like `OP_IF`.\n */\nexport const opNotIf = (state) => {\n    if (executionIsActive(state)) {\n        return useOneStackItem(state, (nextState, [item]) => pushToControlStack(nextState, !stackItemIsTruthy(item)));\n    }\n    return pushToControlStack(state, false);\n};\nexport const opEndIf = (state) => {\n    // eslint-disable-next-line functional/immutable-data\n    const element = state.controlStack.pop();\n    if (typeof element !== 'boolean') {\n        return applyError(state, AuthenticationErrorCommon.unexpectedEndIf);\n    }\n    return state;\n};\nexport const opElse = (state) => {\n    const top = state.controlStack[state.controlStack.length - 1];\n    if (typeof top !== 'boolean') {\n        return applyError(state, AuthenticationErrorCommon.unexpectedElse);\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.controlStack[state.controlStack.length - 1] = !top;\n    return state;\n};\n//# sourceMappingURL=flow-control.js.map","import { combineOperations, pushToStackVmNumberChecked, useOneVmNumber, useThreeVmNumbers, useTwoVmNumbers, } from './combinators.js';\nimport { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { opVerify } from './flow-control.js';\nconst createNumericOperation = (useVmNumbers) => (operate, { hasEncodingCost, maximumVmNumberByteLength, }) => (state) => useVmNumbers(state, (nextState, values) => {\n    const result = operate(values);\n    return pushToStackVmNumberChecked(nextState, result, {\n        hasEncodingCost,\n        maximumVmNumberByteLength,\n    });\n}, { maximumVmNumberByteLength });\nexport const numericOperationUnary = createNumericOperation(useOneVmNumber);\nexport const numericOperationBinary = createNumericOperation(useTwoVmNumbers);\nexport const numericOperationTernary = createNumericOperation(useThreeVmNumbers);\nexport const createOp1Add = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationUnary(([value]) => value + 1n, {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n});\nexport const op1Add = createOp1Add();\nexport const createOp1Sub = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationUnary(([value]) => value - 1n, {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n});\nexport const op1Sub = createOp1Sub();\nexport const createOpNegate = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationUnary(([value]) => -value, {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n});\nexport const opNegate = createOpNegate();\nexport const createOpAbs = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationUnary(([value]) => (value < 0 ? -value : value), {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n});\nexport const opAbs = createOpAbs();\nexport const createOpNot = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationUnary(([value]) => (value === 0n ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opNot = createOpNot();\nexport const createOp0NotEqual = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationUnary(([value]) => (value === 0n ? 0n : 1n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const op0NotEqual = createOp0NotEqual();\nexport const createOpAdd = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => a + b, {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n});\nexport const opAdd = createOpAdd();\nexport const createOpSub = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => a - b, {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n});\nexport const opSub = createOpSub();\nexport const createOpBoolAnd = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a !== 0n && b !== 0n ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opBoolAnd = createOpBoolAnd();\nexport const createOpBoolOr = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a !== 0n || b !== 0n ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opBoolOr = createOpBoolOr();\nexport const createOpNumEqual = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a === b ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opNumEqual = createOpNumEqual();\nexport const createOpNumEqualVerify = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => combineOperations(createOpNumEqual({ maximumVmNumberByteLength }), opVerify);\nexport const opNumEqualVerify = createOpNumEqualVerify();\nexport const createOpNumNotEqual = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a === b ? 0n : 1n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opNumNotEqual = createOpNumNotEqual();\nexport const createOpLessThan = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a < b ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opLessThan = createOpLessThan();\nexport const createOpLessThanOrEqual = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a <= b ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opLessThanOrEqual = createOpLessThan();\nexport const createOpGreaterThan = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a > b ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opGreaterThan = createOpGreaterThan();\nexport const createOpGreaterThanOrEqual = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a >= b ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opGreaterThanOrEqual = createOpGreaterThanOrEqual();\nexport const createOpMin = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a < b ? a : b), {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n});\nexport const opMin = createOpMin();\nexport const createOpMax = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationBinary(([a, b]) => (a > b ? a : b), {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n});\nexport const opMax = createOpMax();\nexport const createOpWithin = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => numericOperationTernary(([a, b, c]) => (b <= a && a < c ? 1n : 0n), {\n    hasEncodingCost: false,\n    maximumVmNumberByteLength,\n});\nexport const opWithin = createOpWithin();\nexport const measureArithmeticCost = (state, operation) => {\n    const [firstInput, secondInput] = state.stack.slice(-2 /* Constants.lastTwoItems */);\n    const firstLength = firstInput?.length ?? 0;\n    const secondLength = secondInput?.length ?? 0;\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.metrics.arithmeticCost += firstLength * secondLength;\n    return operation(state);\n};\nexport const createOpMul = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => (state) => measureArithmeticCost(state, numericOperationBinary(([a, b]) => a * b, {\n    hasEncodingCost: true,\n    maximumVmNumberByteLength,\n}));\nexport const opMul = createOpMul();\nexport const createOpDiv = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => (state) => measureArithmeticCost(state, () => useTwoVmNumbers(state, (nextState, [a, b]) => b === 0n\n    ? applyError(nextState, AuthenticationErrorCommon.divisionByZero)\n    : pushToStackVmNumberChecked(nextState, a / b, {\n        hasEncodingCost: true,\n        maximumVmNumberByteLength,\n    }), { maximumVmNumberByteLength }));\nexport const opDiv = createOpDiv();\nexport const createOpMod = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => (state) => measureArithmeticCost(state, () => useTwoVmNumbers(state, (nextState, [a, b]) => b === 0n\n    ? applyError(nextState, AuthenticationErrorCommon.divisionByZero)\n    : pushToStackVmNumberChecked(nextState, a % b, {\n        hasEncodingCost: true,\n        maximumVmNumberByteLength,\n    }), { maximumVmNumberByteLength }));\nexport const opMod = createOpDiv();\n//# sourceMappingURL=arithmetic.js.map","import { binsAreEqual } from '../../../format/format.js';\nimport { combineOperations, pushToStack, useTwoStackItems, } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { opVerify } from './flow-control.js';\nimport { booleanToVmNumber } from './instruction-sets-utils.js';\nexport const opEqual = (state) => useTwoStackItems(state, (nextState, [element1, element2]) => pushToStack(nextState, [\n    booleanToVmNumber(binsAreEqual(element1, element2)),\n]));\nexport const opEqualVerify = combineOperations(opEqual, opVerify);\nexport const bitwiseOperation = (combine) => (state) => useTwoStackItems(state, (nextState, [a, b]) => a.length === b.length\n    ? pushToStack(nextState, [combine(a, b)])\n    : applyError(nextState, AuthenticationErrorCommon.mismatchedBitwiseOperandLength, `First item length: ${a.length} bytes. Second item length: ${b.length} bytes.`));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nexport const opAnd = bitwiseOperation((a, b) => a.map((v, i) => v & b[i]));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nexport const opOr = bitwiseOperation((a, b) => a.map((v, i) => v | b[i]));\n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\nexport const opXor = bitwiseOperation((a, b) => a.map((v, i) => v ^ b[i]));\n//# sourceMappingURL=bitwise.js.map","import { conditionallyEvaluate } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nexport const undefinedOperation = conditionallyEvaluate((state) => applyError(state, AuthenticationErrorCommon.unknownOpcode));\nconst sha256HashLength = 32;\n/**\n * This is a meaningless but complete {@link CompilationContextCommon} that uses\n * a default value for each property. This is useful for testing\n * and debugging.\n */\n// eslint-disable-next-line complexity\nexport const createCompilationContextCommonTesting = ({ sourceOutputs, inputs, locktime, version, outputs, } = {}) => ({\n    inputIndex: 0,\n    sourceOutputs: sourceOutputs\n        ? sourceOutputs\n        : [\n            {\n                lockingBytecode: Uint8Array.from([]),\n                valueSatoshis: 0xffffffffffffffffn,\n            },\n        ],\n    transaction: {\n        inputs: inputs\n            ? inputs\n            : [\n                {\n                    outpointIndex: 0,\n                    outpointTransactionHash: new Uint8Array(sha256HashLength).fill(1),\n                    sequenceNumber: 0,\n                    unlockingBytecode: undefined,\n                },\n            ],\n        locktime: locktime ?? 0,\n        outputs: outputs ?? [\n            {\n                lockingBytecode: Uint8Array.from([]),\n                valueSatoshis: 0xffffffffffffffffn,\n            },\n        ],\n        version: version ?? 0,\n    },\n});\n//# sourceMappingURL=common-types.js.map","import { ConsensusCommon } from './consensus.js';\nconst isNegative = (value) => \n// eslint-disable-next-line no-bitwise, @typescript-eslint/no-non-null-assertion\n(value & 128 /* Mask.negative */) !== 0;\nconst hasUnnecessaryPadding = (length, firstByte, secondByte) => length > 1 && firstByte === 0 && !isNegative(secondByte);\nconst isValidInteger = (signature, tagIndex, length, valueIndex) => signature[tagIndex] === 2 /* ASN1.integerTagType */ &&\n    length !== 0 &&\n    !isNegative(signature[valueIndex]) &&\n    !hasUnnecessaryPadding(length, signature[valueIndex], signature[valueIndex + 1]);\n/**\n * Validate a DER-encoded signature.\n *\n * @remarks\n * This function is consensus-critical since BIP66, but differs from the BIP66\n * specification in that it does not validate the existence of a signing\n * serialization type byte at the end of the signature (to support\n * OP_CHECKDATASIG). To validate a bitcoin-encoded signature (including null\n * signatures), use {@link isValidSignatureEncodingBchTransaction}.\n *\n * @privateRemarks\n * From the Bitcoin ABC C++ implementation:\n *\n * Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n * total-length: 1-byte length descriptor of everything that follows,\n * excluding the sighash byte.\n * R-length: 1-byte length descriptor of the R value that follows.\n * R: arbitrary-length big-endian encoded R value. It must use the\n * shortest possible encoding for a positive integers (which means no null\n * bytes at the start, except a single one when the next byte has its highest\n * bit set).\n * S-length: 1-byte length descriptor of the S value that follows.\n * S: arbitrary-length big-endian encoded S value. The same rules apply.\n */\n// eslint-disable-next-line complexity\nexport const isValidSignatureEncodingDER = (signature) => {\n    const correctLengthRange = signature.length > 8 /* DER.minimumLength */ &&\n        signature.length < 72 /* DER.maximumLength */;\n    const correctSequenceTagType = signature[0 /* DER.sequenceTagIndex */] === 48 /* ASN1.sequenceTagType */;\n    const correctSequenceLength = signature[1 /* DER.sequenceLengthIndex */] ===\n        signature.length - 2 /* DER.sequenceMetadataBytes */;\n    const rLength = signature[3 /* DER.rLengthIndex */];\n    if (rLength === undefined) {\n        return false;\n    }\n    const consistentRLength = rLength <= signature.length - 7 /* DER.minimumNonRValueBytes */;\n    const rIsValid = isValidInteger(signature, 2 /* DER.rTagIndex */, rLength, 4 /* DER.rValueIndex */);\n    const sTagIndex = 4 /* DER.rValueIndex */ + rLength;\n    const sLengthIndex = sTagIndex + 1;\n    const sLength = signature[sLengthIndex];\n    if (sLength === undefined) {\n        return false;\n    }\n    const sValueIndex = sLengthIndex + 1;\n    const consistentSLength = sValueIndex + sLength === signature.length;\n    const sIsValid = isValidInteger(signature, sTagIndex, sLength, sValueIndex);\n    return (correctLengthRange &&\n        correctSequenceTagType &&\n        correctSequenceLength &&\n        consistentRLength &&\n        rIsValid &&\n        consistentSLength &&\n        sIsValid);\n};\n/**\n * Validate the encoding of a transaction signature, including a signing\n * serialization type byte (A.K.A. \"sighash\" byte).\n *\n * @param transactionSignature - the full transaction signature\n */\nexport const isValidSignatureEncodingBchTransaction = (transactionSignature, validSigningSerializationTypes) => transactionSignature.length === 0 ||\n    (validSigningSerializationTypes.includes(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    transactionSignature[transactionSignature.length - 1]) &&\n        (transactionSignature.length ===\n            ConsensusCommon.schnorrSignatureLength + 1 ||\n            isValidSignatureEncodingDER(transactionSignature.slice(0, transactionSignature.length - 1))));\n/**\n * Split a bitcoin-encoded signature into a signature and signing serialization\n * type.\n *\n * While a bitcoin-encoded signature only includes a single byte to encode the\n * signing serialization type, a 3-byte forkId can be appended to the signing\n * serialization to provide replay-protection between different forks. (See\n * Bitcoin Cash's Replay Protected Sighash spec for details.)\n *\n * @param encodedSignature - a signature that passes\n * {@link isValidSignatureEncodingBchTransaction}\n */\nexport const decodeBitcoinSignature = (encodedSignature) => ({\n    signature: encodedSignature.slice(0, -1),\n    signingSerializationType: encodedSignature.slice(-1),\n});\n//# sourceMappingURL=encoding.js.map","import { hash256, ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha1 as internalSha1, sha256 as internalSha256, } from '../../../crypto/crypto.js';\nimport { binToHex, formatError } from '../../../format/format.js';\nimport { combineOperations, incrementHashDigestIterations, lengthToHashDigestIterationCount, pushToStack, useOneStackItem, useOneVmNumber, useThreeStackItems, useTwoStackItems, } from './combinators.js';\nimport { ConsensusCommon, SigningSerializationTypesBch } from './consensus.js';\nimport { decodeBitcoinSignature, isValidSignatureEncodingBchTransaction, isValidSignatureEncodingDER, } from './encoding.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { opVerify } from './flow-control.js';\nimport { booleanToVmNumber, encodeAuthenticationInstructions, isValidPublicKeyEncoding, } from './instruction-sets-utils.js';\nimport { generateSigningSerializationBch } from './signing-serialization.js';\nexport const opRipemd160 = ({ ripemd160 } = {\n    ripemd160: internalRipemd160,\n}) => (state) => useOneStackItem(state, (nextState, [value]) => incrementHashDigestIterations(nextState, { messageLength: value.length, resultIsHashed: false }, (finalState) => pushToStack(finalState, [ripemd160.hash(value)])));\nexport const opSha1 = ({ sha1 } = { sha1: internalSha1 }) => (state) => useOneStackItem(state, (nextState, [value]) => incrementHashDigestIterations(nextState, { messageLength: value.length, resultIsHashed: false }, (finalState) => pushToStack(finalState, [sha1.hash(value)])));\nexport const opSha256 = ({ sha256 } = {\n    sha256: internalSha256,\n}) => (state) => useOneStackItem(state, (nextState, [value]) => incrementHashDigestIterations(nextState, { messageLength: value.length, resultIsHashed: false }, (finalState) => pushToStack(finalState, [sha256.hash(value)])));\nexport const opHash160 = ({ ripemd160, sha256, } = { ripemd160: internalRipemd160, sha256: internalSha256 }) => (state) => useOneStackItem(state, (nextState, [value]) => incrementHashDigestIterations(nextState, { messageLength: value.length, resultIsHashed: true }, (finalState) => pushToStack(finalState, [ripemd160.hash(sha256.hash(value))])));\nexport const opHash256 = ({ sha256 } = {\n    sha256: internalSha256,\n}) => (state) => useOneStackItem(state, (nextState, [value]) => incrementHashDigestIterations(nextState, { messageLength: value.length, resultIsHashed: true }, (finalState) => pushToStack(finalState, [hash256(value, sha256)])));\nexport const opCodeSeparator = (state) => {\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.lastCodeSeparator = state.ip;\n    return state;\n};\nexport const opCheckSig = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => (s) => \n// eslint-disable-next-line complexity\nuseTwoStackItems(s, (state, [bitcoinEncodedSignature, publicKey]) => {\n    if (!isValidPublicKeyEncoding(publicKey)) {\n        return applyError(state, AuthenticationErrorCommon.invalidPublicKeyEncoding);\n    }\n    if (!isValidSignatureEncodingBchTransaction(bitcoinEncodedSignature, SigningSerializationTypesBch)) {\n        return applyError(state, AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization): ${binToHex(bitcoinEncodedSignature)}`);\n    }\n    if (bitcoinEncodedSignature.length === 0) {\n        return pushToStack(state, [booleanToVmNumber(false)]);\n    }\n    const coveredBytecode = encodeAuthenticationInstructions(state.instructions.slice(state.lastCodeSeparator + 1));\n    const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n    const serialization = generateSigningSerializationBch(state.program, { coveredBytecode, signingSerializationType }, sha256);\n    const digest = hash256(serialization, sha256);\n    /* eslint-disable functional/no-expression-statements, functional/immutable-data */\n    state.metrics.signatureCheckCount += 1;\n    const doubleHashed = 1;\n    state.metrics.hashDigestIterations +=\n        doubleHashed + lengthToHashDigestIterationCount(serialization.length);\n    state.signedMessages.push({ digest, serialization });\n    /* eslint-enable functional/no-expression-statements, functional/immutable-data */\n    const useSchnorr = signature.length === ConsensusCommon.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return success\n        ? pushToStack(state, [booleanToVmNumber(success)])\n        : applyError(state, AuthenticationErrorCommon.nonNullSignatureFailure, `Algorithm used: ${useSchnorr ? 'Schnorr' : 'ECDSA'}.`);\n});\n/**\n * Return the number of `1` bits in the number `n`.\n * @param n - the number\n */\nexport const countBits = (n) => n.toString(2 /* Multisig.binary */).replace(/0/gu, '').length;\nexport var BitfieldDecodeError;\n(function (BitfieldDecodeError) {\n    BitfieldDecodeError[\"invalidBitfieldSize\"] = \"BitfieldDecode error: bitfield exceeds maximum length (32 bits).\";\n    BitfieldDecodeError[\"bitsSetBeyondExpectedRange\"] = \"BitfieldDecode error: the decoded bitfield includes bits set beyond the expected range.\";\n})(BitfieldDecodeError || (BitfieldDecodeError = {}));\n/**\n * Decode a non-null `OP_CHECKMULTISIG` bitfield (A.K.A. `CheckBits`)\n * representing the positions of public keys against which the provided\n * signatures must be verified.\n * @param bin - the stack item from which to decode the bitfield\n * @param expectedBitLength - the number of bits expected\n */\nexport const decodeBitfield = (bin, expectedBitLength) => {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    const expectedBitfieldLength = Math.floor((expectedBitLength + 7) / 8);\n    if (bin.length !== expectedBitfieldLength) {\n        return formatError(BitfieldDecodeError.invalidBitfieldSize, `Bitfield length: ${bin.length}, expected length: ${expectedBitfieldLength}.`);\n    }\n    // eslint-disable-next-line functional/no-let\n    let bitfield = 0n;\n    // eslint-disable-next-line functional/no-loop-statements, functional/no-let, no-plusplus\n    for (let i = 0; i < expectedBitfieldLength; i++) {\n        // Decode the bitfield as little endian.\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-magic-numbers\n        bitfield |= BigInt(bin[i]) << BigInt(8 * i);\n    }\n    // eslint-disable-next-line no-bitwise\n    const mask = (1n << BigInt(expectedBitLength)) - 1n;\n    // eslint-disable-next-line no-bitwise\n    if ((bitfield & mask) !== bitfield) {\n        return formatError(BitfieldDecodeError.bitsSetBeyondExpectedRange, `Bitfield: ${bitfield}, expected bit length: ${expectedBitLength}.`);\n    }\n    return bitfield;\n};\nexport const opCheckMultiSig = ({ secp256k1, sha256, enforceOperationLimit, } = {\n    enforceOperationLimit: true,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n}) => (s) => \n// eslint-disable-next-line complexity\nuseOneVmNumber(s, (state, publicKeysValue) => {\n    const potentialPublicKeys = Number(publicKeysValue);\n    if (potentialPublicKeys < 0) {\n        return applyError(state, AuthenticationErrorCommon.invalidNaturalNumber, `Indicated public key count: ${potentialPublicKeys}.`);\n    }\n    if (potentialPublicKeys > 20 /* Multisig.maximumPublicKeys */) {\n        return applyError(state, AuthenticationErrorCommon.exceedsMaximumMultisigPublicKeyCount, `Indicated public key count: ${potentialPublicKeys}.`);\n    }\n    const publicKeys = \n    // eslint-disable-next-line functional/immutable-data\n    potentialPublicKeys > 0 ? state.stack.splice(-potentialPublicKeys) : [];\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.operationCount += potentialPublicKeys;\n    if (enforceOperationLimit &&\n        state.operationCount > ConsensusCommon.maximumOperationCount) {\n        return applyError(state, AuthenticationErrorCommon.exceededMaximumOperationCount);\n    }\n    return useOneVmNumber(state, (nextState, approvingKeys) => {\n        const requiredApprovingPublicKeys = Number(approvingKeys);\n        if (requiredApprovingPublicKeys < 0) {\n            return applyError(nextState, AuthenticationErrorCommon.invalidNaturalNumber, `Indicated signature count: ${requiredApprovingPublicKeys}.`);\n        }\n        if (requiredApprovingPublicKeys > potentialPublicKeys) {\n            return applyError(nextState, AuthenticationErrorCommon.insufficientPublicKeys, `Indicated signature count: ${requiredApprovingPublicKeys}.`);\n        }\n        const signatures = requiredApprovingPublicKeys > 0\n            ? // eslint-disable-next-line functional/immutable-data\n                nextState.stack.splice(-requiredApprovingPublicKeys)\n            : [];\n        return useOneStackItem(nextState, \n        // eslint-disable-next-line complexity\n        (finalState, [dummyValue]) => {\n            const coveredBytecode = signatures.length > 0\n                ? encodeAuthenticationInstructions(finalState.instructions.slice(state.lastCodeSeparator + 1))\n                : Uint8Array.of();\n            if (dummyValue.length !== 0) {\n                // Schnorr-mode multisig\n                const checkBits = decodeBitfield(dummyValue, publicKeys.length);\n                if (typeof checkBits === 'string') {\n                    return applyError(finalState, AuthenticationErrorCommon.invalidCheckBitsValue, checkBits);\n                }\n                const bitCount = countBits(checkBits);\n                if (bitCount !== signatures.length) {\n                    return applyError(finalState, AuthenticationErrorCommon.invalidCheckBitsSignatureCount, `CheckBits signatures configured: ${bitCount}; signatures required: ${signatures.length}.`);\n                }\n                // eslint-disable-next-line functional/no-let\n                let iKey = 0;\n                // eslint-disable-next-line functional/no-loop-statements, functional/no-let, no-plusplus\n                for (let iSig = 0; iSig < signatures.length; iSig++, iKey++) {\n                    // eslint-disable-next-line no-bitwise\n                    if (checkBits >> BigInt(iKey) === 0n) {\n                        return applyError(finalState, 'Expected to be unreachable: unexpected end of bitfield.');\n                    }\n                    // eslint-disable-next-line functional/no-loop-statements, no-bitwise\n                    while (((checkBits >> BigInt(iKey)) & 1n) === 0n) {\n                        // eslint-disable-next-line functional/no-expression-statements, no-plusplus\n                        iKey++;\n                    }\n                    if (iKey >= publicKeys.length) {\n                        return applyError(finalState, 'Expected to be unreachable: more set bits than available public keys.');\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const bitcoinEncodedSignature = signatures[iSig];\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const publicKey = publicKeys[iKey];\n                    if (!isValidPublicKeyEncoding(publicKey)) {\n                        return applyError(finalState, AuthenticationErrorCommon.invalidPublicKeyEncoding, `Provided public key: ${binToHex(publicKey)}`);\n                    }\n                    if (!isValidSignatureEncodingBchTransaction(bitcoinEncodedSignature, SigningSerializationTypesBch)) {\n                        return applyError(finalState, AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization type): ${binToHex(bitcoinEncodedSignature)}`);\n                    }\n                    const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n                    const serialization = generateSigningSerializationBch(state.program, { coveredBytecode, signingSerializationType }, sha256);\n                    const digest = hash256(serialization, sha256);\n                    /* eslint-disable functional/no-expression-statements, functional/immutable-data */\n                    finalState.metrics.signatureCheckCount += 1;\n                    const doubleHashed = 1;\n                    finalState.metrics.hashDigestIterations +=\n                        doubleHashed +\n                            lengthToHashDigestIterationCount(serialization.length);\n                    finalState.signedMessages.push({ digest, serialization });\n                    /* eslint-enable functional/no-expression-statements, functional/immutable-data */\n                    if (signature.length !== ConsensusCommon.schnorrSignatureLength) {\n                        return applyError(finalState, AuthenticationErrorCommon.nonSchnorrSizedSignatureInSchnorrMultiSig, `Provided signature: ${binToHex(signature)}`);\n                    }\n                    const success = secp256k1.verifySignatureSchnorr(signature, publicKey, digest);\n                    if (!success) {\n                        return applyError(finalState, AuthenticationErrorCommon.nonNullSignatureFailure, `Algorithm used: 'Schnorr'. CheckBits: ${checkBits.toString(2 /* Multisig.binary */)}.`);\n                    }\n                }\n                // eslint-disable-next-line no-bitwise\n                if (checkBits >> BigInt(iKey) !== 0n) {\n                    return applyError(finalState, 'Expected to be unreachable: unexpected bits set after processing all signatures.');\n                }\n                return pushToStack(finalState, [booleanToVmNumber(true)]);\n            }\n            // Legacy ECDSA multisig\n            let approvingPublicKeys = 0; // eslint-disable-line functional/no-let\n            let remainingSignatures = signatures.length; // eslint-disable-line functional/no-let\n            let remainingPublicKeys = publicKeys.length; // eslint-disable-line functional/no-let\n            // eslint-disable-next-line functional/no-loop-statements\n            while (remainingSignatures > 0 &&\n                remainingPublicKeys > 0 &&\n                approvingPublicKeys + remainingPublicKeys >=\n                    remainingSignatures &&\n                approvingPublicKeys !== requiredApprovingPublicKeys) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const publicKey = publicKeys[remainingPublicKeys - 1];\n                const bitcoinEncodedSignature = \n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                signatures[remainingSignatures - 1];\n                if (!isValidPublicKeyEncoding(publicKey)) {\n                    return applyError(finalState, AuthenticationErrorCommon.invalidPublicKeyEncoding, `Provided public key: ${binToHex(publicKey)}`);\n                }\n                if (!isValidSignatureEncodingBchTransaction(bitcoinEncodedSignature, SigningSerializationTypesBch)) {\n                    return applyError(finalState, AuthenticationErrorCommon.invalidSignatureEncoding, `Transaction signature (including signing serialization type): ${binToHex(bitcoinEncodedSignature)}`);\n                }\n                if (bitcoinEncodedSignature.length === 0) {\n                    // eslint-disable-next-line functional/no-expression-statements\n                    remainingSignatures -= 1;\n                    // eslint-disable-next-line no-continue\n                    continue;\n                }\n                const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n                const serialization = generateSigningSerializationBch(state.program, { coveredBytecode, signingSerializationType }, sha256);\n                const digest = hash256(serialization, sha256);\n                /* eslint-disable functional/no-expression-statements, functional/immutable-data */\n                const doubleHashed = 1;\n                finalState.metrics.hashDigestIterations +=\n                    doubleHashed +\n                        lengthToHashDigestIterationCount(serialization.length);\n                finalState.signedMessages.push({ digest, serialization });\n                /* eslint-enable functional/no-expression-statements, functional/immutable-data */\n                if (signature.length === ConsensusCommon.schnorrSignatureLength) {\n                    return applyError(finalState, AuthenticationErrorCommon.schnorrSizedSignatureInEcdsaMultiSig, `Provided signature: ${binToHex(signature)}`);\n                }\n                const signed = secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n                // eslint-disable-next-line functional/no-conditional-statements\n                if (signed) {\n                    approvingPublicKeys += 1; // eslint-disable-line functional/no-expression-statements\n                    remainingSignatures -= 1; // eslint-disable-line functional/no-expression-statements\n                }\n                remainingPublicKeys -= 1; // eslint-disable-line functional/no-expression-statements\n            }\n            const success = approvingPublicKeys === requiredApprovingPublicKeys;\n            const allSignaturesAreNull = signatures.every((signature) => signature.length === 0);\n            if (!allSignaturesAreNull) {\n                // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n                finalState.metrics.signatureCheckCount += publicKeys.length;\n                if (!success) {\n                    return applyError(finalState, AuthenticationErrorCommon.nonNullSignatureFailure);\n                }\n            }\n            return pushToStack(finalState, [booleanToVmNumber(success)]);\n        });\n    });\n});\nexport const opCheckSigVerify = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => combineOperations(opCheckSig({ secp256k1, sha256 }), opVerify);\nexport const opCheckMultiSigVerify = ({ enforceOperationLimit, secp256k1, sha256, }) => combineOperations(opCheckMultiSig({ enforceOperationLimit, secp256k1, sha256 }), opVerify);\n/**\n * Validate the encoding of a raw signature – a signature without a signing\n * serialization type byte (A.K.A. \"sighash\" byte).\n *\n * @param signature - the raw signature\n */\nexport const isValidSignatureEncodingBchRaw = (signature) => signature.length === 0 ||\n    signature.length === ConsensusCommon.schnorrSignatureLength ||\n    isValidSignatureEncodingDER(signature);\nexport const opCheckDataSig = ({ secp256k1, sha256, }) => (state) => \n// eslint-disable-next-line complexity\nuseThreeStackItems(state, (nextState, [signature, message, publicKey]) => {\n    if (!isValidSignatureEncodingBchRaw(signature)) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidSignatureEncoding, `Data signature: ${binToHex(signature)}`);\n    }\n    if (!isValidPublicKeyEncoding(publicKey)) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidPublicKeyEncoding, `Provided public key: ${binToHex(publicKey)}`);\n    }\n    if (signature.length === 0) {\n        return pushToStack(state, [booleanToVmNumber(false)]);\n    }\n    const digest = sha256.hash(message);\n    /* eslint-disable functional/no-expression-statements, functional/immutable-data */\n    nextState.metrics.signatureCheckCount += 1;\n    nextState.metrics.hashDigestIterations +=\n        lengthToHashDigestIterationCount(message.length);\n    nextState.signedMessages.push({ digest, message });\n    /* eslint-enable functional/no-expression-statements, functional/immutable-data */\n    const useSchnorr = signature.length === ConsensusCommon.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return success\n        ? pushToStack(nextState, [booleanToVmNumber(success)])\n        : applyError(nextState, AuthenticationErrorCommon.nonNullSignatureFailure);\n});\nexport const opCheckDataSigVerify = ({ secp256k1, sha256, } = { secp256k1: internalSecp256k1, sha256: internalSha256 }) => combineOperations(opCheckDataSig({ secp256k1, sha256 }), opVerify);\nexport const opReverseBytes = (state) => useOneStackItem(state, (nextState, [item]) => pushToStack(nextState, [item.slice().reverse()]));\n//# sourceMappingURL=crypto.js.map","import { flattenBinArray } from '../../../format/format.js';\nimport { pushToStack, pushToStackChecked, useOneStackItem, useOneVmNumber, useTwoStackItems, } from './combinators.js';\nimport { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { bigIntToVmNumber } from './instruction-sets-utils.js';\nexport const createOpCat = ({ maximumStackItemLength = ConsensusCommon.maximumStackItemLength, } = {}) => (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStackChecked(nextState, flattenBinArray([a, b]), {\n    maximumStackItemLength,\n}));\nexport const opCat = createOpCat();\nexport const opSplit = (state) => useOneVmNumber(state, (nextState, value) => {\n    const index = Number(value);\n    return useOneStackItem(nextState, (finalState, [item]) => index < 0 || index > item.length\n        ? applyError(finalState, AuthenticationErrorCommon.invalidSplitIndex, `stack item length: ${item.length}; requested split index: ${index}.`)\n        : pushToStack(finalState, [item.slice(0, index), item.slice(index)]));\n});\n/**\n * Pad a minimally-encoded VM number for `OP_NUM2BIN`.\n */\nexport const padMinimallyEncodedVmNumber = (vmNumber, length) => {\n    if (vmNumber.length === length)\n        return vmNumber;\n    // eslint-disable-next-line functional/no-let\n    let signBit = 0 /* Constants.positiveSign */;\n    // eslint-disable-next-line functional/no-conditional-statements\n    if (vmNumber.length > 0) {\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n        signBit = vmNumber[vmNumber.length - 1] & 128 /* Constants.negativeSign */;\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise, @typescript-eslint/no-non-null-assertion\n        vmNumber[vmNumber.length - 1] &= 128 /* Constants.negativeSign */ - 1;\n    }\n    const result = Array.from(vmNumber);\n    // eslint-disable-next-line functional/no-loop-statements\n    while (result.length < length - 1) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        result.push(0);\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    result.push(signBit);\n    return Uint8Array.from(result);\n};\nexport const createOpNum2Bin = ({ maximumStackItemLength = ConsensusCommon.maximumStackItemLength, } = {}) => (state) => useOneVmNumber(state, (nextState, value) => {\n    const targetLength = Number(value);\n    return targetLength > maximumStackItemLength\n        ? applyError(nextState, AuthenticationErrorCommon.exceededMaximumStackItemLength, `Maximum stack item length: ${maximumStackItemLength} bytes. Item length: ${targetLength} bytes.`)\n        : useOneVmNumber(nextState, (finalState, [target]) => {\n            const minimallyEncoded = bigIntToVmNumber(target);\n            return minimallyEncoded.length > targetLength\n                ? applyError(finalState, AuthenticationErrorCommon.insufficientLength, `Minimum necessary byte length: ${minimallyEncoded.length}. Requested byte length: ${targetLength}.`)\n                : pushToStack(finalState, [\n                    padMinimallyEncodedVmNumber(minimallyEncoded, targetLength),\n                ]);\n        }, {\n            maximumVmNumberByteLength: maximumStackItemLength,\n            requireMinimalEncoding: false,\n        });\n});\nexport const opNum2Bin = createOpNum2Bin();\nexport const createOpBin2Num = ({ maximumStackItemLength = ConsensusCommon.maximumStackItemLength, maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => (state) => useOneVmNumber(state, (nextState, [target]) => {\n    const minimallyEncoded = bigIntToVmNumber(target);\n    return minimallyEncoded.length > maximumVmNumberByteLength\n        ? applyError(nextState, AuthenticationErrorCommon.exceededMaximumVmNumberByteLength, `Maximum VM number byte length: ${maximumVmNumberByteLength}; required byte length: ${minimallyEncoded.length}.`)\n        : pushToStack(nextState, [minimallyEncoded]);\n}, {\n    maximumVmNumberByteLength: maximumStackItemLength,\n    requireMinimalEncoding: false,\n});\nexport const opBin2Num = createOpBin2Num();\n//# sourceMappingURL=format.js.map","import { int32UnsignedToSigned } from '../../../format/format.js';\nimport { pushToStack, pushToStackChecked, pushToStackVmNumber, useOneVmNumber, } from './combinators.js';\nimport { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { encodeAuthenticationInstructions } from './instruction-sets-utils.js';\nexport const opInputIndex = (state) => pushToStackVmNumber(state, BigInt(state.program.inputIndex));\nexport const createOpActiveBytecode = ({ maximumStackItemLength = ConsensusCommon.maximumStackItemLength, } = {}) => (state) => pushToStackChecked(state, encodeAuthenticationInstructions(state.instructions.slice(state.lastCodeSeparator + 1)), { maximumStackItemLength });\nexport const opActiveBytecode = createOpActiveBytecode();\nexport const opTxVersion = (state) => pushToStackVmNumber(state, BigInt(int32UnsignedToSigned(state.program.transaction.version)));\nexport const opTxInputCount = (state) => pushToStackVmNumber(state, BigInt(state.program.transaction.inputs.length));\nexport const opTxOutputCount = (state) => pushToStackVmNumber(state, BigInt(state.program.transaction.outputs.length));\nexport const opTxLocktime = (state) => pushToStackVmNumber(state, BigInt(state.program.transaction.locktime));\nexport const useTransactionUtxo = (state, operation) => useOneVmNumber(state, (nextState, [index]) => {\n    const utxo = nextState.program.sourceOutputs[Number(index)];\n    if (utxo === undefined) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidTransactionUtxoIndex, `Transaction UTXO count: ${nextState.program.sourceOutputs.length}; requested index: ${index}.`);\n    }\n    return operation(state, [utxo]);\n});\nexport const opUtxoValue = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushToStackVmNumber(nextState, utxo.valueSatoshis));\nexport const createOpUtxoBytecode = ({ maximumStackItemLength = ConsensusCommon.maximumStackItemLength, } = {}) => (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushToStackChecked(nextState, utxo.lockingBytecode.slice(), {\n    maximumStackItemLength,\n}));\nexport const opUtxoBytecode = createOpUtxoBytecode();\nexport const useTransactionInput = (state, operation) => useOneVmNumber(state, (nextState, [index]) => {\n    const input = nextState.program.transaction.inputs[Number(index)];\n    if (input === undefined) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidTransactionInputIndex, `Transaction input count: ${nextState.program.transaction.inputs.length}; requested index: ${index}.`);\n    }\n    return operation(state, [input]);\n});\nexport const opOutpointTxHash = (state) => useTransactionInput(state, (nextState, [input]) => pushToStack(nextState, [input.outpointTransactionHash.slice().reverse()]));\nexport const opOutpointIndex = (state) => useTransactionInput(state, (nextState, [input]) => pushToStackVmNumber(nextState, BigInt(input.outpointIndex)));\nexport const createOpInputBytecode = ({ maximumStackItemLength = ConsensusCommon.maximumStackItemLength, } = {}) => (state) => useTransactionInput(state, (nextState, [input]) => pushToStackChecked(nextState, input.unlockingBytecode.slice(), {\n    maximumStackItemLength,\n}));\nexport const opInputBytecode = createOpInputBytecode();\nexport const opInputSequenceNumber = (state) => useTransactionInput(state, (nextState, [input]) => pushToStackVmNumber(nextState, BigInt(input.sequenceNumber)));\nexport const useTransactionOutput = (state, operation) => useOneVmNumber(state, (nextState, [index]) => {\n    const input = nextState.program.transaction.outputs[Number(index)];\n    if (input === undefined) {\n        return applyError(nextState, AuthenticationErrorCommon.invalidTransactionOutputIndex, `Transaction output count: ${nextState.program.transaction.outputs.length}; requested index: ${index}.`);\n    }\n    return operation(state, [input]);\n});\nexport const opOutputValue = (state) => useTransactionOutput(state, (nextState, [output]) => pushToStackVmNumber(nextState, output.valueSatoshis));\nexport const createOpOutputBytecode = ({ maximumStackItemLength = ConsensusCommon.maximumStackItemLength, } = {}) => (state) => useTransactionOutput(state, (nextState, [output]) => pushToStackChecked(nextState, output.lockingBytecode.slice(), {\n    maximumStackItemLength,\n}));\nexport const opOutputBytecode = createOpOutputBytecode();\n//# sourceMappingURL=inspection.js.map","import { applyError, AuthenticationErrorCommon } from './errors.js';\nexport const opNop = (state) => state;\nexport const opNopDisallowed = (state) => applyError(state, AuthenticationErrorCommon.calledUpgradableNop);\n/**\n * \"Disabled\" operations are explicitly forbidden from occurring anywhere in VM\n * bytecode, even within an unexecuted branch.\n */\nexport const disabledOperation = (state) => applyError(state, AuthenticationErrorCommon.unknownOpcode);\n//# sourceMappingURL=nop.js.map","import { numberToBinUint16LE, numberToBinUint32LE, } from '../../../format/format.js';\nimport { executionIsActive, pushToStack } from './combinators.js';\nimport { ConsensusCommon } from './consensus.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { bigIntToVmNumber } from './instruction-sets-utils.js';\n/**\n * Returns the minimal bytecode required to push the provided `data` to the\n * stack.\n *\n * @remarks\n * This method conservatively encodes a `Uint8Array` as a data push. For VM\n * Numbers that can be pushed using a single opcode (-1 through 16), the\n * equivalent bytecode value is returned. Other `data` values will be prefixed\n * with the proper opcode and push length bytes (if necessary) to create the\n * minimal push instruction.\n *\n * Note, while some single-byte VM Number pushes will be minimally-encoded by\n * this method, all larger inputs will be encoded as-is (it cannot be assumed\n * that inputs are intended to be used as VM Numbers). To encode the push of a\n * VM Number, minimally-encode the number before passing it to this\n * method, e.g.:\n * `encodeDataPush(bigIntToVmNumber(decodeVmNumber(nonMinimalNumber)))`.\n *\n * The maximum `bytecode` length that can be encoded for a push in the Bitcoin\n * system is `4294967295` (~4GB). This method assumes a smaller input – if\n * `bytecode` has the potential to be longer, it should be checked (and the\n * error handled) prior to calling this method.\n *\n * @param data - the Uint8Array to push to the stack\n */\n// eslint-disable-next-line complexity\nexport const encodeDataPush = (data) => data.length <= 75 /* PushOperationConstants.maximumPushByteOperationSize */\n    ? data.length === 0\n        ? Uint8Array.of(0)\n        : data.length === 1\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                data[0] !== 0 && data[0] <= 16 /* PushOperationConstants.pushNumberOpcodes */\n                    ? Uint8Array.of(\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    data[0] + 80 /* PushOperationConstants.pushNumberOpcodesOffset */)\n                    : data[0] === 129 /* PushOperationConstants.negativeOne */\n                        ? Uint8Array.of(79 /* PushOperationConstants.OP_1NEGATE */)\n                        : Uint8Array.from([1, ...data])\n            : Uint8Array.from([data.length, ...data])\n    : data.length <= 255 /* PushOperationConstants.maximumPushData1Size */\n        ? Uint8Array.from([\n            76 /* PushOperationConstants.OP_PUSHDATA_1 */,\n            data.length,\n            ...data,\n        ])\n        : data.length <= 65535 /* PushOperationConstants.maximumPushData2Size */\n            ? Uint8Array.from([\n                77 /* PushOperationConstants.OP_PUSHDATA_2 */,\n                ...numberToBinUint16LE(data.length),\n                ...data,\n            ])\n            : Uint8Array.from([\n                78 /* PushOperationConstants.OP_PUSHDATA_4 */,\n                ...numberToBinUint32LE(data.length),\n                ...data,\n            ]);\n/**\n * Returns true if the provided `data` is minimally-encoded by the provided\n * `opcode`.\n * @param opcode - the opcode used to push `data`\n * @param data - the contents of the push\n */\n// eslint-disable-next-line complexity\nexport const isMinimalDataPush = (opcode, data) => {\n    if (data.length === 0) {\n        return opcode === 0 /* PushOperationConstants.OP_0 */;\n    }\n    if (data.length === 1) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const byte = data[0];\n        if (byte >= 1 && byte <= 16 /* PushOperationConstants.pushNumberOpcodes */) {\n            return opcode === byte + 80 /* PushOperationConstants.pushNumberOpcodesOffset */;\n        }\n        if (byte === 129 /* PushOperationConstants.negativeOne */) {\n            return opcode === 79 /* PushOperationConstants.OP_1NEGATE */;\n        }\n    }\n    if (data.length <= 75 /* PushOperationConstants.maximumPushByteOperationSize */) {\n        return opcode === data.length;\n    }\n    if (data.length <= 255 /* PushOperationConstants.maximumPushData1Size */) {\n        return opcode === 76 /* PushOperationConstants.OP_PUSHDATA_1 */;\n    }\n    if (data.length <= 65535 /* PushOperationConstants.maximumPushData2Size */) {\n        return opcode === 77 /* PushOperationConstants.OP_PUSHDATA_2 */;\n    }\n    if (data.length <= 4294967295 /* PushOperationConstants.maximumPushData4Size */) {\n        return opcode === 78 /* PushOperationConstants.OP_PUSHDATA_4 */;\n    }\n    return false;\n};\nexport const pushOperation = ({ maximumStackItemLength = ConsensusCommon.maximumStackItemLength, } = {}) => (state) => {\n    const instruction = state.instructions[state.ip];\n    return instruction.data.length > maximumStackItemLength\n        ? applyError(state, AuthenticationErrorCommon.exceededMaximumStackItemLength, `Maximum stack item length: ${maximumStackItemLength} bytes. Item length: ${instruction.data.length} bytes.`)\n        : executionIsActive(state)\n            ? isMinimalDataPush(instruction.opcode, instruction.data)\n                ? pushToStack(state, [instruction.data])\n                : applyError(state, AuthenticationErrorCommon.nonMinimalPush)\n            : state;\n};\n/**\n * @param number - the number that is pushed to the stack by this operation.\n * @returns an operation that pushes a number to the stack.\n */\nexport const pushNumberOperation = (number) => {\n    const value = bigIntToVmNumber(BigInt(number));\n    return (state) => pushToStack(state, [value]);\n};\n//# sourceMappingURL=push.js.map","import { pushToStack, useFourStackItems, useOneStackItem, useOneVmNumber, useSixStackItems, useThreeStackItems, useTwoStackItems, } from './combinators.js';\nimport { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { bigIntToVmNumber, stackItemIsTruthy, } from './instruction-sets-utils.js';\nexport const opToAltStack = (state) => useOneStackItem(state, (nextState, [item]) => {\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    nextState.alternateStack.push(item);\n    return nextState;\n});\nexport const opFromAltStack = (state) => {\n    // eslint-disable-next-line functional/immutable-data\n    const item = state.alternateStack.pop();\n    if (item === undefined) {\n        return applyError(state, AuthenticationErrorCommon.emptyAlternateStack);\n    }\n    return pushToStack(state, [item]);\n};\nexport const op2Drop = (state) => useTwoStackItems(state, (nextState) => nextState);\nexport const op2Dup = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStack(nextState, [a, b, a.slice(), b.slice()], {\n    pushedBytes: a.length + b.length,\n}));\nexport const op3Dup = (state) => useThreeStackItems(state, (nextState, [a, b, c]) => pushToStack(nextState, [a, b, c, a.slice(), b.slice(), c.slice()], {\n    pushedBytes: a.length + b.length + c.length,\n}));\nexport const op2Over = (state) => useFourStackItems(state, (nextState, [a, b, c, d]) => pushToStack(nextState, [a, b, c, d, a.slice(), b.slice()], {\n    pushedBytes: a.length + b.length,\n}));\nexport const op2Rot = (state) => useSixStackItems(state, (nextState, [a, b, c, d, e, f]) => pushToStack(nextState, [c, d, e, f, a, b], {\n    pushedBytes: a.length + b.length,\n}));\nexport const op2Swap = (state) => useFourStackItems(state, (nextState, [a, b, c, d]) => pushToStack(nextState, [c, d, a, b], {\n    pushedBytes: 0,\n}));\nexport const opIfDup = (state) => useOneStackItem(state, (nextState, [item]) => stackItemIsTruthy(item)\n    ? pushToStack(nextState, [item, item.slice()], {\n        pushedBytes: item.length,\n    })\n    : pushToStack(nextState, [item], {\n        pushedBytes: 0,\n    }));\nexport const opDepth = (state) => pushToStack(state, [bigIntToVmNumber(BigInt(state.stack.length))]);\nexport const opDrop = (state) => useOneStackItem(state, (nextState) => nextState);\nexport const opDup = (state) => useOneStackItem(state, (nextState, [item]) => pushToStack(nextState, [item, item.slice()], {\n    pushedBytes: item.length,\n}));\nexport const opNip = (state) => useTwoStackItems(state, (nextState, [, b]) => pushToStack(nextState, [b], { pushedBytes: 0 }));\nexport const opOver = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStack(nextState, [a, b, a.slice()], {\n    pushedBytes: a.length,\n}));\nexport const opPick = (state) => useOneVmNumber(state, (nextState, [depth]) => {\n    const item = nextState.stack[nextState.stack.length - 1 - Number(depth)];\n    if (item === undefined) {\n        return applyError(state, AuthenticationErrorCommon.invalidStackIndex, `Current stack depth: ${nextState.stack.length}; requested depth: ${depth}.`);\n    }\n    return pushToStack(nextState, [item.slice()]);\n});\nexport const opRoll = (state) => useOneVmNumber(state, (nextState, [depthBigInt]) => {\n    const depth = Number(depthBigInt);\n    const index = nextState.stack.length - 1 - depth;\n    if (index < 0 || index > nextState.stack.length - 1) {\n        return applyError(state, AuthenticationErrorCommon.invalidStackIndex, `Current stack depth: ${nextState.stack.length}; requested depth: ${depth}.`);\n    }\n    // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-non-null-assertion\n    const item = nextState.stack.splice(index, 1)[0];\n    return pushToStack(nextState, [item], { pushedBytes: item.length + depth });\n});\nexport const opRot = (state) => useThreeStackItems(state, (nextState, [a, b, c]) => pushToStack(nextState, [b, c, a], {\n    pushedBytes: 0,\n}));\nexport const opSwap = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStack(nextState, [b, a], {\n    pushedBytes: 0,\n}));\nexport const opTuck = (state) => useTwoStackItems(state, (nextState, [a, b]) => pushToStack(nextState, [b.slice(), a, b], {\n    pushedBytes: b.length,\n}));\nexport const opSize = (state) => useOneStackItem(state, (nextState, [item]) => {\n    const size = bigIntToVmNumber(BigInt(item.length));\n    return pushToStack(nextState, [item, size], {\n        pushedBytes: size.length,\n    });\n});\n//# sourceMappingURL=stack.js.map","import { applyError, AuthenticationErrorCommon } from './errors.js';\nimport { isVmNumberError, vmNumberToBigInt } from './instruction-sets-utils.js';\nexport const useLocktime = (state, operation) => {\n    const item = state.stack[state.stack.length - 1];\n    if (item === undefined) {\n        return applyError(state, AuthenticationErrorCommon.emptyStack);\n    }\n    const decodedLocktime = vmNumberToBigInt(item, {\n        maximumVmNumberByteLength: 5 /* Constants.locktimeVmNumberByteLength */,\n        requireMinimalEncoding: true,\n    });\n    if (isVmNumberError(decodedLocktime)) {\n        return applyError(state, AuthenticationErrorCommon.invalidVmNumber, decodedLocktime);\n    }\n    const locktime = Number(decodedLocktime);\n    if (locktime < 0) {\n        return applyError(state, AuthenticationErrorCommon.negativeLocktime, `Locktime: ${locktime}.`);\n    }\n    return operation(state, locktime);\n};\nconst locktimeTypesAreCompatible = (locktime, requiredLocktime) => (locktime < 500000000 /* Constants.locktimeThreshold */ &&\n    requiredLocktime < 500000000 /* Constants.locktimeThreshold */) ||\n    (locktime >= 500000000 /* Constants.locktimeThreshold */ &&\n        requiredLocktime >= 500000000 /* Constants.locktimeThreshold */);\nexport const opCheckLockTimeVerify = (state) => useLocktime(state, (nextState, requiredLocktime) => {\n    if (!locktimeTypesAreCompatible(nextState.program.transaction.locktime, requiredLocktime)) {\n        return applyError(nextState, AuthenticationErrorCommon.incompatibleLocktimeType, `Transaction locktime: ${nextState.program.transaction.locktime}; required locktime: ${requiredLocktime}.`);\n    }\n    if (requiredLocktime > nextState.program.transaction.locktime) {\n        return applyError(nextState, AuthenticationErrorCommon.unsatisfiedLocktime, `Transaction locktime: ${nextState.program.transaction.locktime}; required locktime: ${requiredLocktime}.`);\n    }\n    const { sequenceNumber } = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    nextState.program.transaction.inputs[nextState.program.inputIndex];\n    if (sequenceNumber === 4294967295 /* Constants.locktimeDisablingSequenceNumber */) {\n        return applyError(nextState, AuthenticationErrorCommon.locktimeDisabled, `Sequence number: ${sequenceNumber}.`);\n    }\n    return nextState;\n});\n// eslint-disable-next-line no-bitwise\nconst includesFlag = (value, flag) => (value & flag) !== 0;\nexport const opCheckSequenceVerify = (state) => useLocktime(state, \n// eslint-disable-next-line complexity\n(nextState, requiredSequence) => {\n    const { sequenceNumber } = \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    nextState.program.transaction.inputs[nextState.program.inputIndex];\n    const sequenceLocktimeDisabled = includesFlag(requiredSequence, 2147483648 /* Constants.sequenceLocktimeDisableFlag */);\n    if (sequenceLocktimeDisabled) {\n        return nextState;\n    }\n    if (nextState.program.transaction.version <\n        2 /* Constants.sequenceLocktimeTransactionVersionMinimum */) {\n        return applyError(nextState, AuthenticationErrorCommon.checkSequenceUnavailable, `Transaction version: ${nextState.program.transaction.version}.`);\n    }\n    if (includesFlag(sequenceNumber, 2147483648 /* Constants.sequenceLocktimeDisableFlag */)) {\n        return applyError(nextState, AuthenticationErrorCommon.unmatchedSequenceDisable, `Sequence number: ${sequenceNumber}.`);\n    }\n    if (includesFlag(requiredSequence, 4194304 /* Constants.sequenceLocktimeTypeFlag */) !==\n        includesFlag(sequenceNumber, 4194304 /* Constants.sequenceLocktimeTypeFlag */)) {\n        return applyError(nextState, AuthenticationErrorCommon.incompatibleSequenceType, `Sequence number: ${sequenceNumber}; required sequence number: ${requiredSequence}.`);\n    }\n    if (\n    // eslint-disable-next-line no-bitwise\n    (requiredSequence & 65535 /* Constants.sequenceLocktimeMask */) >\n        // eslint-disable-next-line no-bitwise\n        (sequenceNumber & 65535 /* Constants.sequenceLocktimeMask */)) {\n        return applyError(nextState, AuthenticationErrorCommon.unsatisfiedSequenceNumber, `Sequence number: ${sequenceNumber}; required sequence number: ${requiredSequence}.`);\n    }\n    return nextState;\n});\n//# sourceMappingURL=time.js.map","/**\n * Consensus settings for the `BCH_2023_05` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const ConsensusBch2023 = {\n    baseInstructionCost: 100,\n    /**\n     * The constant added to the unlocking bytecode length to determine a\n     * contract's density control length (for operation cost and hashing budgets).\n     */\n    densityControlBaseLength: 41,\n    hashDigestIterationCostConsensus: 64,\n    hashDigestIterationCostStandard: 192,\n    hashDigestIterationsPerByteNonstandard: 3.5,\n    hashDigestIterationsPerByteStandard: 0.5,\n    /**\n     * A.K.A. `MAX_SCRIPT_SIZE`\n     */\n    maximumBytecodeLength: 10000,\n    /**\n     * A.K.A. `MAX_CONSENSUS_VERSION`\n     */\n    maximumConsensusVersion: 2,\n    maximumControlStackDepth: 100,\n    /**\n     * A.K.A. `MAX_OP_RETURN_RELAY`, `nMaxDatacarrierBytes`\n     */\n    maximumDataCarrierBytes: 223,\n    maximumFungibleTokenAmount: '9223372036854775807',\n    /**\n     * A.K.A. `MAX_OPS_PER_SCRIPT`\n     */\n    maximumOperationCount: 201,\n    /**\n     * A.K.A. `MAX_STACK_SIZE`\n     */\n    maximumStackDepth: 1000,\n    /**\n     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`\n     */\n    maximumStackItemLength: 520,\n    /**\n     * When set to `-1`, only BCH_2023_05 standard patterns are accepted.\n     */\n    maximumStandardLockingBytecodeLength: -1,\n    /**\n     * A.K.A. `MAX_STANDARD_TX_SIZE`\n     */\n    maximumStandardTransactionSize: 100_000,\n    /**\n     * A.K.A. `MAX_TX_IN_SCRIPT_SIG_SIZE`\n     */\n    maximumStandardUnlockingBytecodeLength: 1650,\n    maximumTokenCommitmentLength: 40,\n    /**\n     * A.K.A. `MAX_TX_SIZE`\n     */\n    maximumTransactionLengthBytes: 1_000_000,\n    /**\n     * A.K.A. `MAX_TX_SIGCHECKS`\n     */\n    maximumTransactionSignatureChecks: 3_000,\n    /**\n     * A.K.A. `nMaxNumSize`\n     */\n    maximumVmNumberByteLength: 8,\n    /**\n     * A.K.A. `MIN_CONSENSUS_VERSION`\n     */\n    minimumConsensusVersion: 1,\n    /**\n     * Transactions smaller than 65 bytes are forbidden to prevent exploits of the\n     * transaction Merkle tree design.\n     *\n     * A.K.A. `MIN_TX_SIZE`\n     */\n    minimumTransactionLengthBytes: 65,\n    operationCostBudgetPerByte: 800,\n    schnorrSignatureLength: 64,\n    signatureCheckCost: 26000,\n};\n/**\n * Calculate the maximum signature check count (A.K.A. \"SigChecks\") as defined\n * by the `BCH_2020_05` upgrade.\n */\nexport const maximumSignatureCheckCount = (unlockingBytecodeLength) => \n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nMath.floor((unlockingBytecodeLength + 60) / 43);\n//# sourceMappingURL=bch-2023-consensus.js.map","import { AuthenticationErrorCommon } from '../../common/errors.js';\n/**\n * Errors for the `BCH_2023_05` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const AuthenticationErrorBch2023 = AuthenticationErrorCommon;\n//# sourceMappingURL=bch-2023-errors.js.map","import { binToHex, flattenBinArray, formatError, } from '../../../../format/format.js';\nimport { AuthenticationErrorCommon, pushToStack, pushToStackChecked, pushToStackVmNumber, useTransactionOutput, useTransactionUtxo, } from '../../common/common.js';\nimport { ConsensusBch2023 } from './bch-2023-consensus.js';\n/**\n * Given a list of transaction inputs, extract a hex-encoded list of all\n * {@link Input.outpointTransactionHash}es from inputs that spend output `0` of\n * that transaction (i.e. where {@link Input.outpointIndex} is `0`).\n * @param inputs - a list of transaction inputs\n * @returns a hex-encoded list of {@link Input.outpointTransactionHash}es\n */\nexport const extractGenesisCategories = (inputs) => inputs.reduce((agg, input) => input.outpointIndex === 0\n    ? [...agg, binToHex(input.outpointTransactionHash)]\n    : agg, []);\n/**\n * Given the resolved list of a transaction's source outputs – the Unspent\n * Transaction Outputs (UTXOs) spent by the transaction, extract all token data\n * for token-aware validation. See CHIP-2022-02-CashTokens for details.\n * @param sourceOutputs - a list of resolved source outputs (UTXOs)\n * @returns an object containing `availableImmutableTokens`,\n * `availableMutableTokensByCategory`, `availableSumsByCategory`, and\n * `inputMintingCategories`. See CHIP-2022-02-CashTokens for details.\n */\nexport const extractSourceOutputTokenData = (sourceOutputs) => sourceOutputs.reduce(\n// eslint-disable-next-line complexity\n(agg, sourceOutput) => {\n    if (sourceOutput.token === undefined)\n        return agg;\n    const categoryHex = binToHex(sourceOutput.token.category);\n    return {\n        availableImmutableTokens: [\n            ...agg.availableImmutableTokens,\n            ...(sourceOutput.token.nft?.capability === 'none'\n                ? [\n                    {\n                        categoryHex: binToHex(sourceOutput.token.category),\n                        commitmentHex: binToHex(sourceOutput.token.nft.commitment),\n                    },\n                ]\n                : []),\n        ],\n        availableMutableTokensByCategory: sourceOutput.token.nft?.capability === 'mutable'\n            ? {\n                ...agg.availableMutableTokensByCategory,\n                [categoryHex]: (agg.availableMutableTokensByCategory[categoryHex] ?? 0) + 1,\n            }\n            : agg.availableMutableTokensByCategory,\n        availableSumsByCategory: {\n            ...agg.availableSumsByCategory,\n            [categoryHex]: (agg.availableSumsByCategory[categoryHex] ?? 0n) +\n                sourceOutput.token.amount,\n        },\n        inputMintingCategories: [\n            ...agg.inputMintingCategories,\n            ...(sourceOutput.token.nft?.capability === 'minting'\n                ? [binToHex(sourceOutput.token.category)]\n                : []),\n        ],\n    };\n}, {\n    availableImmutableTokens: [],\n    availableMutableTokensByCategory: {},\n    availableSumsByCategory: {},\n    inputMintingCategories: [],\n});\n/**\n * Given a transaction's outputs, extract all token data for token-aware\n * validation. See CHIP-2022-02-CashTokens for details.\n * @param outputs - a list of transaction outputs\n * @returns an object containing `outputImmutableTokens`,\n * `outputMintingCategories`, `outputMutableTokensByCategory`, and\n * `outputSumsByCategory`. See CHIP-2022-02-CashTokens for details.\n */\nexport const extractTransactionOutputTokenData = (outputs) => outputs.reduce(\n// eslint-disable-next-line complexity\n(agg, output) => {\n    if (output.token === undefined)\n        return agg;\n    const categoryHex = binToHex(output.token.category);\n    return {\n        outputImmutableTokens: [\n            ...agg.outputImmutableTokens,\n            ...(output.token.nft?.capability === 'none'\n                ? [\n                    {\n                        categoryHex: binToHex(output.token.category),\n                        commitmentHex: binToHex(output.token.nft.commitment),\n                    },\n                ]\n                : []),\n        ],\n        outputMintingCategories: [\n            ...agg.outputMintingCategories,\n            ...(output.token.nft?.capability === 'minting'\n                ? [binToHex(output.token.category)]\n                : []),\n        ],\n        outputMutableTokensByCategory: output.token.nft?.capability === 'mutable'\n            ? {\n                ...agg.outputMutableTokensByCategory,\n                [categoryHex]: (agg.outputMutableTokensByCategory[categoryHex] ?? 0) + 1,\n            }\n            : agg.outputMutableTokensByCategory,\n        outputSumsByCategory: {\n            ...agg.outputSumsByCategory,\n            [categoryHex]: (agg.outputSumsByCategory[categoryHex] ?? 0n) + output.token.amount,\n        },\n    };\n}, {\n    outputImmutableTokens: [],\n    outputMintingCategories: [],\n    outputMutableTokensByCategory: {},\n    outputSumsByCategory: {},\n});\n/**\n * Given a transaction and its resolved source outputs – the Unspent Transaction\n * Outputs (UTXOs) it spends – verify that the transaction passes token-aware\n * validation.\n * @param transaction - the transaction to verify\n * @param sourceOutputs - the resolved list of the transaction's source outputs\n * @returns `true` on success, or an error message (string) on failure.\n */\n// eslint-disable-next-line complexity\nexport const verifyTransactionTokens = (transaction, sourceOutputs, { maximumTokenCommitmentLength }) => {\n    const excessiveCommitment = [...sourceOutputs, ...transaction.outputs].find((output) => output.token?.nft?.commitment !== undefined &&\n        output.token.nft.commitment.length > maximumTokenCommitmentLength);\n    if (excessiveCommitment !== undefined) {\n        return formatError(AuthenticationErrorCommon.tokenValidationExcessiveCommitmentLength, `A token commitment exceeds the consensus limit of ${maximumTokenCommitmentLength} bytes. Excessive token commitment length: ${\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        excessiveCommitment.token.nft.commitment.length}`);\n    }\n    const genesisCategories = extractGenesisCategories(transaction.inputs);\n    const { availableSumsByCategory, availableMutableTokensByCategory, inputMintingCategories, availableImmutableTokens, } = extractSourceOutputTokenData(sourceOutputs);\n    const { outputSumsByCategory, outputMutableTokensByCategory, outputMintingCategories, outputImmutableTokens, } = extractTransactionOutputTokenData(transaction.outputs);\n    const availableMintingCategories = [\n        ...genesisCategories,\n        ...inputMintingCategories,\n    ];\n    const missingMintingCategory = outputMintingCategories.find((category) => !availableMintingCategories.includes(category));\n    if (missingMintingCategory !== undefined) {\n        return formatError(AuthenticationErrorCommon.tokenValidationInvalidMintingToken, `Invalid output minting token category: ${missingMintingCategory}`);\n    }\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const [categoryHex, sum] of Object.entries(outputSumsByCategory)) {\n        if (sum > BigInt(ConsensusBch2023.maximumFungibleTokenAmount)) {\n            return formatError(AuthenticationErrorCommon.tokenValidationExcessiveAmount, `Category: ${categoryHex}, total amount: ${sum.toString()}. Consensus maximum amount: ${ConsensusBch2023.maximumFungibleTokenAmount}`);\n        }\n        const availableSum = availableSumsByCategory[categoryHex];\n        if (availableSum === undefined &&\n            sum > 0 &&\n            !genesisCategories.includes(categoryHex)) {\n            return formatError(AuthenticationErrorCommon.tokenValidationInvalidFungibleMint, `Category: ${categoryHex}, tokens created: ${sum}`);\n        }\n        if (availableSum !== undefined && sum > availableSum) {\n            return formatError(AuthenticationErrorCommon.tokenValidationOutputsExceedInputs, `Category: ${categoryHex}, input amount: ${availableSum}, output amount: ${sum}`);\n        }\n    }\n    const remainingMutableTokens = Object.entries(outputMutableTokensByCategory).reduce((agg, [categoryHex, sum]) => {\n        if (availableMintingCategories.includes(categoryHex)) {\n            return agg;\n        }\n        return { ...agg, [categoryHex]: (agg[categoryHex] ?? 0) - sum };\n    }, availableMutableTokensByCategory);\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const [categoryHex, sum] of Object.entries(remainingMutableTokens)) {\n        if (sum < 0) {\n            return formatError(AuthenticationErrorCommon.tokenValidationExcessiveMutableTokens, `Category: ${categoryHex}, excess mutable tokens: ${0 - sum}`);\n        }\n    }\n    const { unmatchedImmutableTokens } = outputImmutableTokens.reduce((agg, token) => {\n        const { categoryHex, commitmentHex } = token;\n        if (availableMintingCategories.includes(categoryHex)) {\n            return agg;\n        }\n        const firstMatch = availableImmutableTokens.findIndex((available) => available.categoryHex === categoryHex &&\n            available.commitmentHex === commitmentHex);\n        if (firstMatch === -1) {\n            return {\n                availableImmutableTokens: agg.availableImmutableTokens,\n                unmatchedImmutableTokens: [...agg.unmatchedImmutableTokens, token],\n            };\n        }\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        agg.availableImmutableTokens.splice(firstMatch, 1);\n        return agg;\n    }, {\n        availableImmutableTokens,\n        unmatchedImmutableTokens: [],\n    });\n    const requiredMutableTokens = unmatchedImmutableTokens.reduce((agg, token) => ({\n        ...agg,\n        [token.categoryHex]: (agg[token.categoryHex] ?? 0) + 1,\n    }), {});\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const [categoryHex, required] of Object.entries(requiredMutableTokens)) {\n        const available = remainingMutableTokens[categoryHex] ?? 0;\n        if (available < required) {\n            return formatError(AuthenticationErrorCommon.tokenValidationExcessiveImmutableTokens, `Category ${categoryHex}, available mutable tokens: ${available}, new immutable tokens: ${required}`);\n        }\n    }\n    return true;\n};\nexport const pushTokenExtendedCategory = (state, utxo) => {\n    const { token } = utxo;\n    if (token === undefined) {\n        return pushToStackVmNumber(state, 0n);\n    }\n    const capabilityByte = token.nft?.capability === 'minting'\n        ? [2 /* Constants.mintingCapabilityByte */]\n        : token.nft?.capability === 'mutable'\n            ? [1 /* Constants.mutableCapabilityByte */]\n            : [];\n    const extendedCategory = flattenBinArray([\n        token.category.slice().reverse(),\n        Uint8Array.from(capabilityByte),\n    ]);\n    return pushToStack(state, [extendedCategory]);\n};\nexport const pushTokenCommitment = (state, utxo) => {\n    const { token } = utxo;\n    if (token?.nft === undefined) {\n        return pushToStackVmNumber(state, 0n);\n    }\n    return pushToStackChecked(state, token.nft.commitment);\n};\nexport const pushTokenAmount = (state, utxo) => {\n    const { token } = utxo;\n    if (token === undefined) {\n        return pushToStackVmNumber(state, 0n);\n    }\n    return pushToStackVmNumber(state, token.amount);\n};\nexport const opUtxoTokenCategory = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushTokenExtendedCategory(nextState, utxo));\nexport const opUtxoTokenCommitment = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushTokenCommitment(nextState, utxo));\nexport const opUtxoTokenAmount = (state) => useTransactionUtxo(state, (nextState, [utxo]) => pushTokenAmount(nextState, utxo));\nexport const opOutputTokenCategory = (state) => useTransactionOutput(state, (nextState, [output]) => pushTokenExtendedCategory(nextState, output));\nexport const opOutputTokenCommitment = (state) => useTransactionOutput(state, (nextState, [output]) => pushTokenCommitment(nextState, output));\nexport const opOutputTokenAmount = (state) => useTransactionOutput(state, (nextState, [output]) => pushTokenAmount(nextState, output));\n//# sourceMappingURL=bch-2023-tokens.js.map","/* eslint-disable max-lines */\nimport { isPayToScriptHash20, isPayToScriptHash32, } from '../../../../address/address.js';\nimport { ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha1 as internalSha1, sha256 as internalSha256, } from '../../../../crypto/crypto.js';\nimport { binToHex, formatError } from '../../../../format/format.js';\nimport { encodeTransactionBch } from '../../../../message/message.js';\nimport { applyError, AuthenticationErrorCommon, authenticationInstructionsAreMalformed, conditionallyEvaluate, createOp0NotEqual, createOp1Add, createOp1Sub, createOpAbs, createOpActiveBytecode, createOpAdd, createOpBin2Num, createOpBoolAnd, createOpBoolOr, createOpCat, createOpDiv, createOpGreaterThan, createOpGreaterThanOrEqual, createOpInputBytecode, createOpLessThan, createOpLessThanOrEqual, createOpMax, createOpMin, createOpMod, createOpMul, createOpNegate, createOpNot, createOpNum2Bin, createOpNumEqual, createOpNumEqualVerify, createOpNumNotEqual, createOpOutputBytecode, createOpSub, createOpUtxoBytecode, createOpWithin, decodeAuthenticationInstructions, disabledOperation, disassembleAuthenticationInstructionMalformed, getDustThreshold, incrementOperationCount, isArbitraryDataOutput, isDustOutput, isPushOnly, isSimpleMultisig, isStandardOutputBytecode2023, isStandardUtxoBytecode2023, isWitnessProgram, mapOverOperations, op2Drop, op2Dup, op2Over, op2Rot, op2Swap, op3Dup, opAnd, opCheckDataSig, opCheckDataSigVerify, opCheckLockTimeVerify, opCheckMultiSig, opCheckMultiSigVerify, opCheckSequenceVerify, opCheckSig, opCheckSigVerify, opCodeSeparator, opDepth, opDrop, opDup, opElse, opEndIf, opEqual, opEqualVerify, opFromAltStack, opHash160, opHash256, opIf, opIfDup, opInputIndex, opInputSequenceNumber, opNip, opNop, opNopDisallowed, opNotIf, opOr, opOutpointIndex, opOutpointTxHash, opOutputValue, opOver, opPick, opReturn, opReverseBytes, opRipemd160, opRoll, opRot, opSha1, opSha256, opSize, opSplit, opSwap, opToAltStack, opTuck, opTxInputCount, opTxLocktime, opTxOutputCount, opTxVersion, opUtxoValue, opVerify, opXor, pushNumberOperation, pushOperation, reservedOperation, stackItemIsTruthy, undefinedOperation, } from '../../common/common.js';\nimport { ConsensusBch2023, maximumSignatureCheckCount, } from './bch-2023-consensus.js';\nimport { OpcodesBch2023 } from './bch-2023-opcodes.js';\nimport { opOutputTokenAmount, opOutputTokenCategory, opOutputTokenCommitment, opUtxoTokenAmount, opUtxoTokenCategory, opUtxoTokenCommitment, verifyTransactionTokens, } from './bch-2023-tokens.js';\nconst satoshisPerCoin = 100_000_000;\nconst maxCoins = 21_000_000;\nconst maxMoney = maxCoins * satoshisPerCoin;\n/**\n * create an instance of the BCH 2023 virtual machine instruction set.\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nexport const createInstructionSetBch2023 = (standard = true, { consensus = ConsensusBch2023, ripemd160, secp256k1, sha1, sha256, } = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha1: internalSha1,\n    sha256: internalSha256,\n}) => {\n    const conditionallyPush = pushOperation(consensus);\n    return {\n        continue: (state) => state.error === undefined && state.ip < state.instructions.length,\n        // eslint-disable-next-line complexity\n        evaluate: (program, { stateEvaluate, stateInitialize, stateOverride }) => {\n            const { unlockingBytecode } = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            program.transaction.inputs[program.inputIndex];\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const { lockingBytecode } = program.sourceOutputs[program.inputIndex];\n            const unlockingInstructions = decodeAuthenticationInstructions(unlockingBytecode);\n            const lockingInstructions = decodeAuthenticationInstructions(lockingBytecode);\n            const initialState = {\n                ...stateInitialize(program),\n                ...stateOverride,\n                ...{\n                    instructions: unlockingInstructions,\n                    program,\n                    stack: [],\n                },\n            };\n            if (unlockingBytecode.length > consensus.maximumBytecodeLength) {\n                return applyError(initialState, AuthenticationErrorCommon.exceededMaximumBytecodeLengthUnlocking, `Maximum bytecode length: ${consensus.maximumBytecodeLength} bytes. Unlocking bytecode length: ${unlockingBytecode.length} bytes.`);\n            }\n            if (authenticationInstructionsAreMalformed(unlockingInstructions)) {\n                return applyError(initialState, AuthenticationErrorCommon.malformedUnlockingBytecode, `Malformed instruction: ${disassembleAuthenticationInstructionMalformed(OpcodesBch2023, unlockingInstructions[unlockingInstructions.length - 1])}.`);\n            }\n            if (!isPushOnly(unlockingBytecode)) {\n                return applyError(initialState, AuthenticationErrorCommon.requiresPushOnly);\n            }\n            if (lockingBytecode.length > consensus.maximumBytecodeLength) {\n                return applyError(initialState, AuthenticationErrorCommon.exceededMaximumBytecodeLengthLocking, `Maximum bytecode length: ${consensus.maximumBytecodeLength} bytes. Locking bytecode length: ${lockingBytecode.length} bytes.`);\n            }\n            if (authenticationInstructionsAreMalformed(lockingInstructions)) {\n                return applyError(initialState, AuthenticationErrorCommon.malformedLockingBytecode, `Malformed instruction: ${disassembleAuthenticationInstructionMalformed(OpcodesBch2023, lockingInstructions[lockingInstructions.length - 1])}.`);\n            }\n            const unlockingResult = stateEvaluate(initialState);\n            if (unlockingResult.error !== undefined) {\n                return unlockingResult;\n            }\n            if (unlockingResult.controlStack.length !== 0) {\n                return applyError(unlockingResult, AuthenticationErrorCommon.nonEmptyControlStackUnlockingBytecode, `Remaining control stack depth: ${unlockingResult.controlStack.length}.`);\n            }\n            const lockingResult = stateEvaluate({\n                ...stateInitialize(program),\n                ...stateOverride,\n                ...{\n                    instructions: lockingInstructions,\n                    metrics: unlockingResult.metrics,\n                    program,\n                    stack: unlockingResult.stack,\n                },\n            });\n            if (lockingResult.controlStack.length !== 0) {\n                return applyError(lockingResult, AuthenticationErrorCommon.nonEmptyControlStackLockingBytecode, `Remaining control stack depth: ${lockingResult.controlStack.length}.`);\n            }\n            const p2sh20 = isPayToScriptHash20(lockingBytecode);\n            const p2sh32 = isPayToScriptHash32(lockingBytecode);\n            if (!p2sh20 && !p2sh32) {\n                if (lockingResult.stack.length !== 1) {\n                    return applyError(lockingResult, AuthenticationErrorCommon.requiresCleanStackLockingBytecode, `Remaining stack depth: ${lockingResult.stack.length}.`);\n                }\n                return lockingResult;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const top = lockingResult.stack[lockingResult.stack.length - 1];\n            if (!stackItemIsTruthy(top)) {\n                return applyError(lockingResult, AuthenticationErrorCommon.unmatchedP2shRedeemBytecode, `Top stack item: \"${binToHex(top)}\".`);\n            }\n            const p2shStack = structuredClone(unlockingResult.stack);\n            // eslint-disable-next-line functional/immutable-data\n            const p2shScript = p2shStack.pop() ?? Uint8Array.of();\n            if (p2sh20 && p2shStack.length === 0 && isWitnessProgram(p2shScript)) {\n                return lockingResult;\n            }\n            const p2shInstructions = decodeAuthenticationInstructions(p2shScript);\n            const p2shResult = authenticationInstructionsAreMalformed(p2shInstructions)\n                ? {\n                    ...lockingResult,\n                    error: AuthenticationErrorCommon.malformedP2shBytecode,\n                }\n                : stateEvaluate({\n                    ...stateInitialize(program),\n                    ...stateOverride,\n                    ...{\n                        instructions: p2shInstructions,\n                        metrics: lockingResult.metrics,\n                        program,\n                        stack: p2shStack,\n                    },\n                });\n            if (p2shResult.controlStack.length !== 0) {\n                return applyError(p2shResult, AuthenticationErrorCommon.nonEmptyControlStackRedeemBytecode, `Remaining control stack depth: ${p2shResult.controlStack.length}.`);\n            }\n            if (p2shResult.stack.length !== 1) {\n                return applyError(p2shResult, AuthenticationErrorCommon.requiresCleanStackRedeemBytecode, `Remaining stack depth: ${p2shResult.stack.length}.`);\n            }\n            return p2shResult;\n        },\n        every: (state) => {\n            const { unlockingBytecode } = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            state.program.transaction.inputs[state.program.inputIndex];\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            state.metrics.maximumSignatureCheckCount = maximumSignatureCheckCount(unlockingBytecode.length);\n            if (standard &&\n                state.metrics.signatureCheckCount >\n                    state.metrics.maximumSignatureCheckCount) {\n                return applyError(state, AuthenticationErrorCommon.exceededMaximumSignatureCheckCount, `Maximum signature check count: ${state.metrics.maximumSignatureCheckCount}; signature check count following operation: ${state.metrics.signatureCheckCount}.`);\n            }\n            if (state.stack.length + state.alternateStack.length >\n                consensus.maximumStackDepth) {\n                return applyError(state, AuthenticationErrorCommon.exceededMaximumStackDepth, `Maximum stack depth: ${consensus.maximumStackDepth}.`);\n            }\n            if (state.operationCount > consensus.maximumOperationCount) {\n                return applyError(state, AuthenticationErrorCommon.exceededMaximumOperationCount);\n            }\n            return state;\n        },\n        initialize: (program) => {\n            const { unlockingBytecode } = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            program.transaction.inputs[program.inputIndex];\n            const densityControlLength = consensus.densityControlBaseLength + unlockingBytecode.length;\n            const maximumIterationsPerByte = standard\n                ? consensus.hashDigestIterationsPerByteStandard\n                : consensus.hashDigestIterationsPerByteNonstandard;\n            return {\n                alternateStack: [],\n                controlStack: [],\n                functionTable: [],\n                ip: 0,\n                lastCodeSeparator: -1,\n                metrics: {\n                    arithmeticCost: 0,\n                    definedFunctions: 0,\n                    densityControlLength,\n                    evaluatedInstructionCount: 0,\n                    hashDigestIterations: 0,\n                    maximumHashDigestIterations: Math.floor(maximumIterationsPerByte * densityControlLength),\n                    maximumOperationCost: Math.floor(densityControlLength * consensus.operationCostBudgetPerByte),\n                    maximumSignatureCheckCount: maximumSignatureCheckCount(unlockingBytecode.length),\n                    operationCost: 0,\n                    signatureCheckCount: 0,\n                    stackPushedBytes: 0,\n                },\n                operationCount: 0,\n                signedMessages: [],\n            };\n        },\n        operations: {\n            [OpcodesBch2023.OP_0]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_1]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_2]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_3]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_4]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_5]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_6]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_7]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_8]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_9]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_10]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_11]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_12]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_13]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_14]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_15]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_16]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_17]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_18]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_19]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_20]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_21]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_22]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_23]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_24]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_25]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_26]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_27]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_28]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_29]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_30]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_31]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_32]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_33]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_34]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_35]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_36]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_37]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_38]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_39]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_40]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_41]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_42]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_43]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_44]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_45]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_46]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_47]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_48]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_49]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_50]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_51]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_52]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_53]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_54]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_55]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_56]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_57]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_58]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_59]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_60]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_61]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_62]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_63]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_64]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_65]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_66]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_67]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_68]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_69]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_70]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_71]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_72]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_73]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_74]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHBYTES_75]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHDATA_1]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHDATA_2]: conditionallyPush,\n            [OpcodesBch2023.OP_PUSHDATA_4]: conditionallyPush,\n            [OpcodesBch2023.OP_1NEGATE]: conditionallyEvaluate(pushNumberOperation(-1)),\n            [OpcodesBch2023.OP_RESERVED]: conditionallyEvaluate(reservedOperation),\n            [OpcodesBch2023.OP_1]: conditionallyEvaluate(pushNumberOperation(1)),\n            /* eslint-disable @typescript-eslint/no-magic-numbers */\n            [OpcodesBch2023.OP_2]: conditionallyEvaluate(pushNumberOperation(2)),\n            [OpcodesBch2023.OP_3]: conditionallyEvaluate(pushNumberOperation(3)),\n            [OpcodesBch2023.OP_4]: conditionallyEvaluate(pushNumberOperation(4)),\n            [OpcodesBch2023.OP_5]: conditionallyEvaluate(pushNumberOperation(5)),\n            [OpcodesBch2023.OP_6]: conditionallyEvaluate(pushNumberOperation(6)),\n            [OpcodesBch2023.OP_7]: conditionallyEvaluate(pushNumberOperation(7)),\n            [OpcodesBch2023.OP_8]: conditionallyEvaluate(pushNumberOperation(8)),\n            [OpcodesBch2023.OP_9]: conditionallyEvaluate(pushNumberOperation(9)),\n            [OpcodesBch2023.OP_10]: conditionallyEvaluate(pushNumberOperation(10)),\n            [OpcodesBch2023.OP_11]: conditionallyEvaluate(pushNumberOperation(11)),\n            [OpcodesBch2023.OP_12]: conditionallyEvaluate(pushNumberOperation(12)),\n            [OpcodesBch2023.OP_13]: conditionallyEvaluate(pushNumberOperation(13)),\n            [OpcodesBch2023.OP_14]: conditionallyEvaluate(pushNumberOperation(14)),\n            [OpcodesBch2023.OP_15]: conditionallyEvaluate(pushNumberOperation(15)),\n            [OpcodesBch2023.OP_16]: conditionallyEvaluate(pushNumberOperation(16)),\n            /* eslint-enable @typescript-eslint/no-magic-numbers */\n            ...mapOverOperations([incrementOperationCount], {\n                [OpcodesBch2023.OP_NOP]: conditionallyEvaluate(opNop),\n                [OpcodesBch2023.OP_VER]: conditionallyEvaluate(reservedOperation),\n                [OpcodesBch2023.OP_IF]: opIf,\n                [OpcodesBch2023.OP_NOTIF]: opNotIf,\n                [OpcodesBch2023.OP_VERIF]: reservedOperation,\n                [OpcodesBch2023.OP_VERNOTIF]: reservedOperation,\n                [OpcodesBch2023.OP_ELSE]: opElse,\n                [OpcodesBch2023.OP_ENDIF]: opEndIf,\n                [OpcodesBch2023.OP_VERIFY]: conditionallyEvaluate(opVerify),\n                [OpcodesBch2023.OP_RETURN]: conditionallyEvaluate(opReturn),\n                [OpcodesBch2023.OP_TOALTSTACK]: conditionallyEvaluate(opToAltStack),\n                [OpcodesBch2023.OP_FROMALTSTACK]: conditionallyEvaluate(opFromAltStack),\n                [OpcodesBch2023.OP_2DROP]: conditionallyEvaluate(op2Drop),\n                [OpcodesBch2023.OP_2DUP]: conditionallyEvaluate(op2Dup),\n                [OpcodesBch2023.OP_3DUP]: conditionallyEvaluate(op3Dup),\n                [OpcodesBch2023.OP_2OVER]: conditionallyEvaluate(op2Over),\n                [OpcodesBch2023.OP_2ROT]: conditionallyEvaluate(op2Rot),\n                [OpcodesBch2023.OP_2SWAP]: conditionallyEvaluate(op2Swap),\n                [OpcodesBch2023.OP_IFDUP]: conditionallyEvaluate(opIfDup),\n                [OpcodesBch2023.OP_DEPTH]: conditionallyEvaluate(opDepth),\n                [OpcodesBch2023.OP_DROP]: conditionallyEvaluate(opDrop),\n                [OpcodesBch2023.OP_DUP]: conditionallyEvaluate(opDup),\n                [OpcodesBch2023.OP_NIP]: conditionallyEvaluate(opNip),\n                [OpcodesBch2023.OP_OVER]: conditionallyEvaluate(opOver),\n                [OpcodesBch2023.OP_PICK]: conditionallyEvaluate(opPick),\n                [OpcodesBch2023.OP_ROLL]: conditionallyEvaluate(opRoll),\n                [OpcodesBch2023.OP_ROT]: conditionallyEvaluate(opRot),\n                [OpcodesBch2023.OP_SWAP]: conditionallyEvaluate(opSwap),\n                [OpcodesBch2023.OP_TUCK]: conditionallyEvaluate(opTuck),\n                [OpcodesBch2023.OP_CAT]: conditionallyEvaluate(createOpCat(consensus)),\n                [OpcodesBch2023.OP_SPLIT]: conditionallyEvaluate(opSplit),\n                [OpcodesBch2023.OP_NUM2BIN]: conditionallyEvaluate(createOpNum2Bin(consensus)),\n                [OpcodesBch2023.OP_BIN2NUM]: conditionallyEvaluate(createOpBin2Num(consensus)),\n                [OpcodesBch2023.OP_SIZE]: conditionallyEvaluate(opSize),\n                [OpcodesBch2023.OP_INVERT]: disabledOperation,\n                [OpcodesBch2023.OP_AND]: conditionallyEvaluate(opAnd),\n                [OpcodesBch2023.OP_OR]: conditionallyEvaluate(opOr),\n                [OpcodesBch2023.OP_XOR]: conditionallyEvaluate(opXor),\n                [OpcodesBch2023.OP_EQUAL]: conditionallyEvaluate(opEqual),\n                [OpcodesBch2023.OP_EQUALVERIFY]: conditionallyEvaluate(opEqualVerify),\n                [OpcodesBch2023.OP_RESERVED1]: conditionallyEvaluate(reservedOperation),\n                [OpcodesBch2023.OP_RESERVED2]: conditionallyEvaluate(reservedOperation),\n                [OpcodesBch2023.OP_1ADD]: conditionallyEvaluate(createOp1Add(consensus)),\n                [OpcodesBch2023.OP_1SUB]: conditionallyEvaluate(createOp1Sub(consensus)),\n                [OpcodesBch2023.OP_2MUL]: disabledOperation,\n                [OpcodesBch2023.OP_2DIV]: disabledOperation,\n                [OpcodesBch2023.OP_NEGATE]: conditionallyEvaluate(createOpNegate(consensus)),\n                [OpcodesBch2023.OP_ABS]: conditionallyEvaluate(createOpAbs(consensus)),\n                [OpcodesBch2023.OP_NOT]: conditionallyEvaluate(createOpNot(consensus)),\n                [OpcodesBch2023.OP_0NOTEQUAL]: conditionallyEvaluate(createOp0NotEqual(consensus)),\n                [OpcodesBch2023.OP_ADD]: conditionallyEvaluate(createOpAdd(consensus)),\n                [OpcodesBch2023.OP_SUB]: conditionallyEvaluate(createOpSub(consensus)),\n                [OpcodesBch2023.OP_MUL]: conditionallyEvaluate(createOpMul(consensus)),\n                [OpcodesBch2023.OP_DIV]: conditionallyEvaluate(createOpDiv(consensus)),\n                [OpcodesBch2023.OP_MOD]: conditionallyEvaluate(createOpMod(consensus)),\n                [OpcodesBch2023.OP_LSHIFT]: disabledOperation,\n                [OpcodesBch2023.OP_RSHIFT]: disabledOperation,\n                [OpcodesBch2023.OP_BOOLAND]: conditionallyEvaluate(createOpBoolAnd(consensus)),\n                [OpcodesBch2023.OP_BOOLOR]: conditionallyEvaluate(createOpBoolOr(consensus)),\n                [OpcodesBch2023.OP_NUMEQUAL]: conditionallyEvaluate(createOpNumEqual(consensus)),\n                [OpcodesBch2023.OP_NUMEQUALVERIFY]: conditionallyEvaluate(createOpNumEqualVerify(consensus)),\n                [OpcodesBch2023.OP_NUMNOTEQUAL]: conditionallyEvaluate(createOpNumNotEqual(consensus)),\n                [OpcodesBch2023.OP_LESSTHAN]: conditionallyEvaluate(createOpLessThan(consensus)),\n                [OpcodesBch2023.OP_GREATERTHAN]: conditionallyEvaluate(createOpGreaterThan(consensus)),\n                [OpcodesBch2023.OP_LESSTHANOREQUAL]: conditionallyEvaluate(createOpLessThanOrEqual(consensus)),\n                [OpcodesBch2023.OP_GREATERTHANOREQUAL]: conditionallyEvaluate(createOpGreaterThanOrEqual(consensus)),\n                [OpcodesBch2023.OP_MIN]: conditionallyEvaluate(createOpMin(consensus)),\n                [OpcodesBch2023.OP_MAX]: conditionallyEvaluate(createOpMax(consensus)),\n                [OpcodesBch2023.OP_WITHIN]: conditionallyEvaluate(createOpWithin(consensus)),\n                [OpcodesBch2023.OP_RIPEMD160]: conditionallyEvaluate(opRipemd160({ ripemd160 })),\n                [OpcodesBch2023.OP_SHA1]: conditionallyEvaluate(opSha1({ sha1 })),\n                [OpcodesBch2023.OP_SHA256]: conditionallyEvaluate(opSha256({ sha256 })),\n                [OpcodesBch2023.OP_HASH160]: conditionallyEvaluate(opHash160({ ripemd160, sha256 })),\n                [OpcodesBch2023.OP_HASH256]: conditionallyEvaluate(opHash256({ sha256 })),\n                [OpcodesBch2023.OP_CODESEPARATOR]: conditionallyEvaluate(opCodeSeparator),\n                [OpcodesBch2023.OP_CHECKSIG]: conditionallyEvaluate(opCheckSig({ secp256k1, sha256 })),\n                [OpcodesBch2023.OP_CHECKSIGVERIFY]: conditionallyEvaluate(opCheckSigVerify({ secp256k1, sha256 })),\n                [OpcodesBch2023.OP_CHECKMULTISIG]: conditionallyEvaluate(opCheckMultiSig({\n                    enforceOperationLimit: true,\n                    secp256k1,\n                    sha256,\n                })),\n                [OpcodesBch2023.OP_CHECKMULTISIGVERIFY]: conditionallyEvaluate(opCheckMultiSigVerify({\n                    enforceOperationLimit: true,\n                    secp256k1,\n                    sha256,\n                })),\n                ...(standard\n                    ? {\n                        [OpcodesBch2023.OP_NOP1]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBch2023.OP_CHECKLOCKTIMEVERIFY]: conditionallyEvaluate(opCheckLockTimeVerify),\n                        [OpcodesBch2023.OP_CHECKSEQUENCEVERIFY]: conditionallyEvaluate(opCheckSequenceVerify),\n                        [OpcodesBch2023.OP_NOP4]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBch2023.OP_NOP5]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBch2023.OP_NOP6]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBch2023.OP_NOP7]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBch2023.OP_NOP8]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBch2023.OP_NOP9]: conditionallyEvaluate(opNopDisallowed),\n                        [OpcodesBch2023.OP_NOP10]: conditionallyEvaluate(opNopDisallowed),\n                    }\n                    : {\n                        [OpcodesBch2023.OP_NOP1]: conditionallyEvaluate(opNop),\n                        [OpcodesBch2023.OP_CHECKLOCKTIMEVERIFY]: conditionallyEvaluate(opCheckLockTimeVerify),\n                        [OpcodesBch2023.OP_CHECKSEQUENCEVERIFY]: conditionallyEvaluate(opCheckSequenceVerify),\n                        [OpcodesBch2023.OP_NOP4]: conditionallyEvaluate(opNop),\n                        [OpcodesBch2023.OP_NOP5]: conditionallyEvaluate(opNop),\n                        [OpcodesBch2023.OP_NOP6]: conditionallyEvaluate(opNop),\n                        [OpcodesBch2023.OP_NOP7]: conditionallyEvaluate(opNop),\n                        [OpcodesBch2023.OP_NOP8]: conditionallyEvaluate(opNop),\n                        [OpcodesBch2023.OP_NOP9]: conditionallyEvaluate(opNop),\n                        [OpcodesBch2023.OP_NOP10]: conditionallyEvaluate(opNop),\n                    }),\n                [OpcodesBch2023.OP_CHECKDATASIG]: conditionallyEvaluate(opCheckDataSig({ secp256k1, sha256 })),\n                [OpcodesBch2023.OP_CHECKDATASIGVERIFY]: conditionallyEvaluate(opCheckDataSigVerify({ secp256k1, sha256 })),\n                [OpcodesBch2023.OP_REVERSEBYTES]: conditionallyEvaluate(opReverseBytes),\n                [OpcodesBch2023.OP_INPUTINDEX]: conditionallyEvaluate(opInputIndex),\n                [OpcodesBch2023.OP_ACTIVEBYTECODE]: conditionallyEvaluate(createOpActiveBytecode(consensus)),\n                [OpcodesBch2023.OP_TXVERSION]: conditionallyEvaluate(opTxVersion),\n                [OpcodesBch2023.OP_TXINPUTCOUNT]: conditionallyEvaluate(opTxInputCount),\n                [OpcodesBch2023.OP_TXOUTPUTCOUNT]: conditionallyEvaluate(opTxOutputCount),\n                [OpcodesBch2023.OP_TXLOCKTIME]: conditionallyEvaluate(opTxLocktime),\n                [OpcodesBch2023.OP_UTXOVALUE]: conditionallyEvaluate(opUtxoValue),\n                [OpcodesBch2023.OP_UTXOBYTECODE]: conditionallyEvaluate(createOpUtxoBytecode(consensus)),\n                [OpcodesBch2023.OP_OUTPOINTTXHASH]: conditionallyEvaluate(opOutpointTxHash),\n                [OpcodesBch2023.OP_OUTPOINTINDEX]: conditionallyEvaluate(opOutpointIndex),\n                [OpcodesBch2023.OP_INPUTBYTECODE]: conditionallyEvaluate(createOpInputBytecode(consensus)),\n                [OpcodesBch2023.OP_INPUTSEQUENCENUMBER]: conditionallyEvaluate(opInputSequenceNumber),\n                [OpcodesBch2023.OP_OUTPUTVALUE]: conditionallyEvaluate(opOutputValue),\n                [OpcodesBch2023.OP_OUTPUTBYTECODE]: conditionallyEvaluate(createOpOutputBytecode(consensus)),\n                [OpcodesBch2023.OP_UTXOTOKENCATEGORY]: conditionallyEvaluate(opUtxoTokenCategory),\n                [OpcodesBch2023.OP_UTXOTOKENCOMMITMENT]: conditionallyEvaluate(opUtxoTokenCommitment),\n                [OpcodesBch2023.OP_UTXOTOKENAMOUNT]: conditionallyEvaluate(opUtxoTokenAmount),\n                [OpcodesBch2023.OP_OUTPUTTOKENCATEGORY]: conditionallyEvaluate(opOutputTokenCategory),\n                [OpcodesBch2023.OP_OUTPUTTOKENCOMMITMENT]: conditionallyEvaluate(opOutputTokenCommitment),\n                [OpcodesBch2023.OP_OUTPUTTOKENAMOUNT]: conditionallyEvaluate(opOutputTokenAmount),\n            }),\n        },\n        success: (state) => {\n            if (state.error !== undefined) {\n                return state.error;\n            }\n            const top = state.stack[state.stack.length - 1];\n            if (top === undefined || !stackItemIsTruthy(top)) {\n                return formatError(AuthenticationErrorCommon.unsuccessfulEvaluation, top === undefined\n                    ? `Stack is empty.`\n                    : `Top stack item: \"${binToHex(top)}\".`);\n            }\n            return true;\n        },\n        undefined: undefinedOperation,\n        // eslint-disable-next-line complexity\n        verify: ({ sourceOutputs, transaction }, { evaluate, success }) => {\n            if (transaction.inputs.length === 0) {\n                return formatError(AuthenticationErrorCommon.verifyFailedNoInputs);\n            }\n            if (transaction.outputs.length === 0) {\n                return formatError(AuthenticationErrorCommon.verifyFailedNoOutputs);\n            }\n            if (transaction.inputs.length !== sourceOutputs.length) {\n                return formatError(AuthenticationErrorCommon.verifyFailedMismatchedSourceOutputs, `Transaction input count: ${transaction.inputs.length}; source outputs count: ${sourceOutputs.length}.`);\n            }\n            const transactionLengthBytes = encodeTransactionBch(transaction).length;\n            if (transactionLengthBytes < consensus.minimumTransactionLengthBytes) {\n                return formatError(AuthenticationErrorCommon.verifyFailedInsufficientLength, `The transaction is ${transactionLengthBytes} bytes, but transactions must be no smaller than ${consensus.minimumTransactionLengthBytes} bytes to prevent an exploit of the transaction Merkle tree design.`);\n            }\n            if (transactionLengthBytes > consensus.maximumTransactionLengthBytes) {\n                return formatError(AuthenticationErrorCommon.verifyFailedExcessiveLength, `Transaction exceeds maximum byte length: the transaction is ${transactionLengthBytes} bytes, but the maximum transaction size is ${consensus.maximumTransactionLengthBytes} bytes.`);\n            }\n            const inputValue = sourceOutputs.reduce((sum, utxo) => sum + utxo.valueSatoshis, 0n);\n            const outputValue = transaction.outputs.reduce((sum, output) => sum + output.valueSatoshis, 0n);\n            if (inputValue > maxMoney) {\n                return formatError(AuthenticationErrorCommon.verifyFailedInputsExceedMaxMoney, `Maximum supply in satoshis: ${maxMoney}, cumulative input value: ${inputValue}.`);\n            }\n            if (outputValue > maxMoney) {\n                return formatError(AuthenticationErrorCommon.verifyFailedOutputsExceedMaxMoney, `Maximum supply in satoshis: ${maxMoney}, cumulative output value: ${outputValue}.`);\n            }\n            if (outputValue > inputValue) {\n                return formatError(AuthenticationErrorCommon.verifyFailedOutputsExceedInputs, `Cumulative input value: ${inputValue}, cumulative output value: ${outputValue}.`);\n            }\n            const outpointList = transaction.inputs.map((input) => `outpointTransactionHash: ${binToHex(input.outpointTransactionHash)}, outpointIndex: ${input.outpointIndex}`);\n            const firstDuplicate = outpointList.find((outpoint, index) => outpointList.lastIndexOf(outpoint) !== index);\n            /**\n             * This check isn't strictly necessary to perform in the VM (assuming the\n             * provider of `sourceOutputs` is checking for double spends), but it's\n             * included here for debugging purposes.\n             */\n            if (firstDuplicate !== undefined) {\n                return formatError(AuthenticationErrorCommon.verifyFailedDuplicateSourceOutputs, firstDuplicate);\n            }\n            if (transaction.version < consensus.minimumConsensusVersion ||\n                transaction.version > consensus.maximumConsensusVersion) {\n                return formatError(AuthenticationErrorCommon.verifyFailedInvalidVersion, `Encoded version number: ${transaction.version}.`);\n            }\n            if (standard) {\n                if (transactionLengthBytes > consensus.maximumStandardTransactionSize) {\n                    return formatError(AuthenticationErrorCommon.verifyStandardFailedExcessiveLength, `This transaction is ${transactionLengthBytes} bytes, but the maximum standard transaction size is ${consensus.maximumStandardTransactionSize} bytes.`);\n                }\n                // eslint-disable-next-line functional/no-loop-statements\n                for (const [index, output] of sourceOutputs.entries()) {\n                    if (consensus.maximumStandardLockingBytecodeLength === -1) {\n                        if (!isStandardUtxoBytecode2023(output.lockingBytecode)) {\n                            return formatError(AuthenticationErrorCommon.verifyStandardFailedNonstandardSourceOutput, `Source output ${index} is non-standard: locking bytecode does not match a standard pattern: P2PKH, P2PK, P2SH, P2MS, or arbitrary data (OP_RETURN).`);\n                        }\n                    }\n                    else if (output.lockingBytecode.length >\n                        consensus.maximumStandardLockingBytecodeLength &&\n                        isSimpleMultisig(output.lockingBytecode) === false) {\n                        return formatError(AuthenticationErrorCommon.verifyStandardFailedNonstandardSourceOutput, `Source output ${index} is non-standard: locking bytecode length of ${output.lockingBytecode.length} exceeds the maximum standard locking bytecode length of ${consensus.maximumStandardLockingBytecodeLength}.`);\n                    }\n                }\n                // eslint-disable-next-line functional/no-let\n                let totalArbitraryDataBytes = 0;\n                // eslint-disable-next-line functional/no-loop-statements\n                for (const [index, output] of transaction.outputs.entries()) {\n                    const dataCarrier = isArbitraryDataOutput(output.lockingBytecode);\n                    // eslint-disable-next-line functional/no-conditional-statements\n                    if (dataCarrier) {\n                        // eslint-disable-next-line functional/no-expression-statements\n                        totalArbitraryDataBytes += output.lockingBytecode.length + 1;\n                    }\n                    const p2sIsStandard = consensus.maximumStandardLockingBytecodeLength !== -1;\n                    if (!p2sIsStandard &&\n                        !isStandardOutputBytecode2023(output.lockingBytecode)) {\n                        return formatError(AuthenticationErrorCommon.verifyStandardFailedNonstandardOutput, `Transaction output ${index} is non-standard: locking bytecode does not match a standard pattern: P2PKH, P2PK, P2SH, P2MS, or arbitrary data (OP_RETURN).`);\n                    }\n                    if (p2sIsStandard &&\n                        output.lockingBytecode.length >\n                            consensus.maximumStandardLockingBytecodeLength &&\n                        !dataCarrier) {\n                        return formatError(AuthenticationErrorCommon.verifyStandardFailedNonstandardOutput, `Transaction output ${index} is non-standard: locking bytecode length of ${output.lockingBytecode.length} exceeds the maximum standard locking bytecode length of ${consensus.maximumStandardLockingBytecodeLength} and does not match the standard arbitrary data pattern (OP_RETURN).`);\n                    }\n                    if (isDustOutput(output)) {\n                        return formatError(AuthenticationErrorCommon.verifyStandardFailedDustOutput, `Transaction output ${index} must have a value of at least ${getDustThreshold(output)} satoshis. Current value: ${output.valueSatoshis}`);\n                    }\n                }\n                if (totalArbitraryDataBytes > consensus.maximumDataCarrierBytes) {\n                    return formatError(AuthenticationErrorCommon.verifyStandardFailedExcessiveDataCarrierBytes, `Standard transactions may carry no more than ${consensus.maximumDataCarrierBytes} bytes in arbitrary data outputs; this transaction includes ${totalArbitraryDataBytes} bytes of arbitrary data.`);\n                }\n                // eslint-disable-next-line functional/no-loop-statements\n                for (const [index, input] of transaction.inputs.entries()) {\n                    if (input.unlockingBytecode.length >\n                        consensus.maximumStandardUnlockingBytecodeLength) {\n                        return formatError(AuthenticationErrorCommon.verifyStandardFailedExcessiveUnlockingBytecodeLength, `The maximum standard unlocking bytecode length is ${consensus.maximumStandardUnlockingBytecodeLength} bytes, but the unlocking bytecode at input index ${index} is ${input.unlockingBytecode.length} bytes.`);\n                    }\n                    if (!isPushOnly(input.unlockingBytecode)) {\n                        return formatError(AuthenticationErrorCommon.verifyStandardFailedNonPushUnlockingBytecode, `The unlocking bytecode at input index ${index} contains non-push operations.`);\n                    }\n                }\n            }\n            const tokenValidationResult = verifyTransactionTokens(transaction, sourceOutputs, {\n                maximumTokenCommitmentLength: consensus.maximumTokenCommitmentLength,\n            });\n            if (tokenValidationResult !== true) {\n                return tokenValidationResult;\n            }\n            // eslint-disable-next-line functional/no-let\n            let cumulativeSigChecks = 0;\n            // eslint-disable-next-line functional/no-loop-statements\n            for (const inputIndex of transaction.inputs.keys()) {\n                const state = evaluate({ inputIndex, sourceOutputs, transaction });\n                // eslint-disable-next-line functional/no-expression-statements\n                cumulativeSigChecks += state.metrics.signatureCheckCount;\n                if (cumulativeSigChecks > consensus.maximumTransactionSignatureChecks) {\n                    return formatError(AuthenticationErrorCommon.verifyFailedExcessiveSigChecks, `Transaction exceeded the per-transaction maximum of ${consensus.maximumTransactionSignatureChecks} signature checks while evaluating input index ${inputIndex} of ${transaction.inputs.length}.`);\n                }\n                const result = success(state);\n                if (typeof result === 'string') {\n                    return `Unable to verify transaction: error in evaluating input index ${inputIndex}: ${result}`;\n                }\n            }\n            return true;\n        },\n    };\n};\nexport const createInstructionSetBch = createInstructionSetBch2023;\n//# sourceMappingURL=bch-2023-instruction-set.js.map","import { range } from '../format/format.js';\n/**\n * Partially clone a `ProgramState`, avoiding duplication of components that are\n * never expected to change (improving performance and memory footprint). Note,\n * this could make mutation-related bugs in VMs harder to track down (mutations\n * in later operations can create confusion in the \"history\" returned by\n * `vm.debug`), but the performance and memory benefits are worth the added\n * development and testing effort.\n * @param state - the state to clone\n * @param referenceOnlyKeys - keys which should be copied entirely by reference\n * @param shallowCloneArrayKeys - keys to arrays which should be shallow cloned\n */\nexport const partiallyCloneProgramState = (state, referenceOnlyKeys = ['instructions', 'program'], shallowCloneArrayKeys = [\n    'alternateStack',\n    'controlStack',\n    'signedMessages',\n    'stack',\n]) => Object.fromEntries(Object.entries(state).map(([key, value]) => referenceOnlyKeys.includes(key)\n    ? [key, value]\n    : shallowCloneArrayKeys.includes(key)\n        ? [key, value.slice()]\n        : [key, structuredClone(value)]));\n/**\n * Given a `ProgramState`, clone and return a {@link MaskedProgramState} from\n * which `instructions` and `program` are excluded.\n * @param state - the `ProgramState` to mask\n */\nexport const maskStaticProgramState = (state) => {\n    const maskedState = partiallyCloneProgramState(state);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    delete maskedState.instructions;\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    delete maskedState.program;\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    maskedState.instruction = state.instructions[state.ip];\n    return maskedState;\n};\n/**\n * Create an {@link AuthenticationVirtualMachine} to evaluate authentication\n * programs constructed from operations in the `instructionSet`.\n * @param instructionSet - an {@link InstructionSet}\n */\nexport const createVirtualMachine = (instructionSet) => {\n    const availableOpcodes = 256;\n    const operators = range(availableOpcodes).map((codepoint) => instructionSet.operations[codepoint] ?? instructionSet.undefined);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getCodepoint = (state) => state.instructions[state.ip];\n    const afterInstruction = (state) => {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        state.ip += 1;\n        return state;\n    };\n    const afterOperation = (state) => {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        state.metrics.evaluatedInstructionCount += 1;\n        return state;\n    };\n    const getOperation = (state) => \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    operators[getCodepoint(state).opcode];\n    const noOp = ((state) => state);\n    const stateEvery = instructionSet.every ?? noOp;\n    const stateStepMutate = (state) => {\n        const operator = getOperation(state);\n        return afterInstruction(stateEvery(afterOperation(operator(state))));\n    };\n    const stateContinue = instructionSet.continue;\n    /**\n     * When we get real tail call optimization, this can be replaced\n     * with recursion.\n     */\n    const untilComplete = (state, stepFunction) => {\n        // eslint-disable-next-line functional/no-loop-statements\n        while (stateContinue(state)) {\n            // eslint-disable-next-line functional/no-expression-statements, no-param-reassign\n            state = stepFunction(state);\n        }\n        return state;\n    };\n    const initialize = instructionSet.initialize ??\n        ((_program) => ({ metrics: { evaluatedInstructionCount: 0 } }));\n    const stateClone = partiallyCloneProgramState;\n    const { success } = instructionSet;\n    const stateEvaluate = (state) => untilComplete(stateClone(state), stateStepMutate);\n    const stateDebugStep = (state) => {\n        const operator = getOperation(state);\n        return afterInstruction(stateEvery(afterOperation(operator(stateClone(state)))));\n    };\n    const stateDebug = (state) => {\n        const trace = [];\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        trace.push(state);\n        // eslint-disable-next-line functional/no-expression-statements\n        untilComplete(state, (currentState) => {\n            const nextState = stateDebugStep(currentState);\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            trace.push(nextState);\n            return nextState;\n        });\n        return trace;\n    };\n    const stateStep = (state) => stateStepMutate(stateClone(state));\n    const evaluate = (program, { stateOverride } = {}) => instructionSet.evaluate(program, {\n        stateEvaluate,\n        stateInitialize: initialize,\n        stateOverride,\n    });\n    const debug = (program, { stateOverride, maskProgramState = false, } = {}) => {\n        const results = [];\n        const proxyDebug = (state) => {\n            const debugResult = stateDebug(state);\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            results.push(...debugResult);\n            return debugResult[debugResult.length - 1] ?? state;\n        };\n        const finalResult = instructionSet.evaluate(program, {\n            stateEvaluate: proxyDebug,\n            stateInitialize: initialize,\n            stateOverride,\n        });\n        const trace = [...results, finalResult];\n        return (maskProgramState ? trace.map(maskStaticProgramState) : trace);\n    };\n    const verify = (resolvedTransaction) => instructionSet.verify(resolvedTransaction, {\n        evaluate,\n        initialize,\n        success,\n    });\n    return {\n        debug,\n        evaluate,\n        stateClone,\n        stateContinue,\n        stateDebug,\n        stateEvaluate,\n        stateInitialize: initialize,\n        stateStep,\n        stateStepMutate,\n        stateSuccess: success,\n        verify,\n    };\n};\nexport const createAuthenticationVirtualMachine = createVirtualMachine;\n//# sourceMappingURL=virtual-machine.js.map","import { AuthenticationErrorBch2023 } from '../2023/bch-2023-errors.js';\nexport var AuthenticationErrorBch2025Additions;\n(function (AuthenticationErrorBch2025Additions) {\n    AuthenticationErrorBch2025Additions[\"excessiveHashing\"] = \"Program attempted a hashing operation that would exceed the hashing density limit.\";\n    AuthenticationErrorBch2025Additions[\"excessiveOperationCost\"] = \"Program attempted an operation that would exceed the operation cost density limit.\";\n})(AuthenticationErrorBch2025Additions || (AuthenticationErrorBch2025Additions = {}));\n/**\n * Errors for the `BCH_SPEC` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const AuthenticationErrorBch2025 = {\n    ...AuthenticationErrorBch2023,\n    ...AuthenticationErrorBch2025Additions,\n};\n//# sourceMappingURL=bch-2025-errors.js.map","import { AuthenticationErrorBch2025 } from '../2025/bch-2025-errors.js';\nexport var AuthenticationErrorBch2026Additions;\n(function (AuthenticationErrorBch2026Additions) {\n    AuthenticationErrorBch2026Additions[\"unexpectedUntil\"] = \"Encountered an OP_UNTIL that is not preceded by a matching OP_BEGIN.\";\n    AuthenticationErrorBch2026Additions[\"unexpectedUntilMissingEndIf\"] = \"Encountered an OP_UNTIL before the previous OP_IF was closed by an OP_ENDIF.\";\n    AuthenticationErrorBch2026Additions[\"excessiveLooping\"] = \"Program attempted an OP_UNTIL operation that would exceed the limit of repeated bytes.\";\n    AuthenticationErrorBch2026Additions[\"functionIdentifierInvalid\"] = \"Program attempted to OP_DEFINE an invalid function identifier.\";\n    AuthenticationErrorBch2026Additions[\"functionIdentifierPreviouslyDefined\"] = \"Program attempted to OP_DEFINE a previously-defined function identifier.\";\n    AuthenticationErrorBch2026Additions[\"functionIdentifierUndefined\"] = \"Program attempted to OP_INVOKE an undefined function identifier.\";\n    AuthenticationErrorBch2026Additions[\"malformedFunction\"] = \"Program attempted to OP_INVOKE malformed bytecode.\";\n    AuthenticationErrorBch2026Additions[\"invalidShiftBitCount\"] = \"Program attempted a bitwise shift with an invalid bit count.\";\n})(AuthenticationErrorBch2026Additions || (AuthenticationErrorBch2026Additions = {}));\n/**\n * Errors for the `BCH_SPEC` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const AuthenticationErrorBch2026 = {\n    ...AuthenticationErrorBch2025,\n    ...AuthenticationErrorBch2026Additions,\n};\n//# sourceMappingURL=bch-2026-errors.js.map","import { AuthenticationErrorBch2026 } from '../2026/bch-2026-errors.js';\nexport var AuthenticationErrorBchSpecAdditions;\n(function (AuthenticationErrorBchSpecAdditions) {\n    AuthenticationErrorBchSpecAdditions[\"excessiveOperationCostOpPow\"] = \"Program attempted an OP_POW operation that would have exceed the operation cost density limit.\";\n    AuthenticationErrorBchSpecAdditions[\"malformedEval\"] = \"Program attempted to OP_EVAL malformed bytecode.\";\n})(AuthenticationErrorBchSpecAdditions || (AuthenticationErrorBchSpecAdditions = {}));\n/**\n * Errors for the `BCH_SPEC` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const AuthenticationErrorBchSpec = {\n    ...AuthenticationErrorBch2026,\n    ...AuthenticationErrorBchSpecAdditions,\n};\n//# sourceMappingURL=bch-spec-errors.js.map","import { ConsensusBch2023 } from '../2023/bch-2023-consensus.js';\n/**\n * Consensus setting overrides for the `BCH_2025_05` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const ConsensusBch2025Overrides = {\n    maximumStackItemLength: 10_000,\n    maximumVmNumberByteLength: 10_000,\n};\nconst base = 2n;\nconst maxLength = BigInt(ConsensusBch2025Overrides.maximumVmNumberByteLength);\nconst bytes = 8n;\nconst signed = 2n;\nconst maxVmNumber = base ** (maxLength * bytes) - 1n / signed;\nexport const bigIntRange = { maxVmNumber, minVmNumber: -maxVmNumber };\n/**\n * Consensus settings for the `BCH_2025_05` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const ConsensusBch2025 = {\n    ...ConsensusBch2023,\n    ...ConsensusBch2025Overrides,\n};\nexport const measureOperationCost = (metrics, { baseInstructionCost = ConsensusBch2025.baseInstructionCost, hashDigestIterationCost = ConsensusBch2025.hashDigestIterationCostStandard, signatureCheckCost = ConsensusBch2025.signatureCheckCost, } = {}) => metrics.evaluatedInstructionCount * baseInstructionCost +\n    metrics.signatureCheckCount * signatureCheckCost +\n    metrics.hashDigestIterations * hashDigestIterationCost +\n    metrics.arithmeticCost +\n    metrics.stackPushedBytes;\n//# sourceMappingURL=bch-2025-consensus.js.map","import { ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha1 as internalSha1, sha256 as internalSha256, } from '../../../../crypto/crypto.js';\nimport { applyError, conditionallyEvaluate, incrementOperationCount, mapOverOperations, opCheckMultiSig, opCheckMultiSigVerify, } from '../../common/common.js';\nimport { createInstructionSetBch2023 } from '../2023/bch-2023-instruction-set.js';\nimport { OpcodesBch2023 } from '../2023/bch-2023-opcodes.js';\nimport { ConsensusBch2025, measureOperationCost, } from './bch-2025-consensus.js';\nimport { AuthenticationErrorBch2025 } from './bch-2025-errors.js';\n/**\n * Initialize a virtual machine using the `BCH_2025_05` instruction set.\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nexport const createInstructionSetBch2025 = (standard = true, { consensus = ConsensusBch2025, ripemd160, secp256k1, sha1, sha256, } = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha1: internalSha1,\n    sha256: internalSha256,\n}) => {\n    const instructionSet = createInstructionSetBch2023(standard, {\n        consensus,\n        ripemd160,\n        secp256k1,\n        sha1,\n        sha256,\n    });\n    return {\n        ...instructionSet,\n        // eslint-disable-next-line complexity\n        every: (state) => {\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            state.metrics.operationCost = measureOperationCost(state.metrics, {\n                baseInstructionCost: consensus.baseInstructionCost,\n                hashDigestIterationCost: standard\n                    ? consensus.hashDigestIterationCostStandard\n                    : consensus.hashDigestIterationCostConsensus,\n                signatureCheckCost: consensus.signatureCheckCost,\n            });\n            if (state.metrics.operationCost > state.metrics.maximumOperationCost) {\n                return applyError(state, AuthenticationErrorBch2025.excessiveOperationCost, `Maximum operation cost: ${state.metrics.maximumOperationCost} (density control length: ${state.metrics.densityControlLength}); operation cost following operation: ${state.metrics.operationCost}.`);\n            }\n            if (state.metrics.hashDigestIterations >\n                state.metrics.maximumHashDigestIterations) {\n                return applyError(state, AuthenticationErrorBch2025.excessiveHashing, `Maximum hash digest iterations: ${state.metrics.maximumHashDigestIterations} (density control length: ${state.metrics.densityControlLength}); hash digest iterations following operation: ${state.metrics.hashDigestIterations}.`);\n            }\n            if (state.stack.length + state.alternateStack.length >\n                consensus.maximumStackDepth) {\n                return applyError(state, AuthenticationErrorBch2025.exceededMaximumStackDepth, `Maximum stack depth: ${consensus.maximumStackDepth} items.`);\n            }\n            if (state.controlStack.length > consensus.maximumControlStackDepth) {\n                return applyError(state, AuthenticationErrorBch2025.exceededMaximumControlStackDepth, `Maximum control stack depth: ${consensus.maximumControlStackDepth}.`);\n            }\n            if (standard &&\n                state.metrics.signatureCheckCount >\n                    state.metrics.maximumSignatureCheckCount) {\n                return applyError(state, AuthenticationErrorBch2025.exceededMaximumSignatureCheckCount, `Maximum signature check count: ${state.metrics.maximumSignatureCheckCount}; signature check count following operation: ${state.metrics.signatureCheckCount}.`);\n            }\n            return state;\n        },\n        operations: {\n            ...instructionSet.operations,\n            ...mapOverOperations(\n            /**\n             * Note that tracking operation count is no longer required following\n             * the `BCH_2025_05` upgrade; this implementation continues to track it\n             * correctly for research and debugging.\n             */\n            [incrementOperationCount, conditionallyEvaluate], {\n                [OpcodesBch2023.OP_CHECKMULTISIG]: opCheckMultiSig({\n                    enforceOperationLimit: false,\n                    secp256k1,\n                    sha256,\n                }),\n                [OpcodesBch2023.OP_CHECKMULTISIGVERIFY]: opCheckMultiSigVerify({\n                    enforceOperationLimit: false,\n                    secp256k1,\n                    sha256,\n                }),\n            }),\n        },\n    };\n};\n//# sourceMappingURL=bch-2025-instruction-set.js.map","import { applyError, executionIsActive, pushToControlStack, stackItemIsTruthy, useOneStackItem, } from '../../common/common.js';\nimport { AuthenticationErrorBch2026 } from './bch-2026-errors.js';\nexport const opBegin = (state) => executionIsActive(state)\n    ? pushToControlStack(state, state.ip)\n    : pushToControlStack(state, -1 /* Constants.markInactiveOpBegin */);\nexport const opUntil = (state) => {\n    const controlValue = state.controlStack[state.controlStack.length - 1];\n    if (typeof controlValue !== 'number') {\n        return applyError(state, AuthenticationErrorBch2026.unexpectedUntil);\n    }\n    if (!executionIsActive(state)) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        state.controlStack.pop();\n        return controlValue === -1 /* Constants.markInactiveOpBegin */\n            ? state\n            : applyError(state, AuthenticationErrorBch2026.unexpectedUntilMissingEndIf);\n    }\n    return useOneStackItem(state, (nextState, [item]) => {\n        if (stackItemIsTruthy(item)) {\n            // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n            state.controlStack.pop();\n            return nextState;\n        }\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        nextState.ip = controlValue;\n        return nextState;\n    });\n};\n//# sourceMappingURL=bch-2026-loops.js.map","import { ConsensusBch2025 } from '../2025/bch-2025-consensus.js';\n/**\n * Consensus setting overrides for the `BCH_SPEC` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const ConsensusBch2026Overrides = {\n    baseInstructionCost: 100,\n    maximumFunctionIdentifier: 999,\n    maximumStandardLockingBytecodeLength: 201,\n    maximumStandardUnlockingBytecodeLength: 10000,\n    maximumTokenCommitmentLength: 128,\n    minimumFunctionIdentifier: 0,\n};\n/**\n * Consensus settings for the `BCH_SPEC` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const ConsensusBch2026 = {\n    ...ConsensusBch2025,\n    ...ConsensusBch2026Overrides,\n};\n//# sourceMappingURL=bch-2026-consensus.js.map","import { applyError, pushToStack, pushToStackVmNumber, pushToStackVmNumberChecked, useOneStackItem, useOneVmNumber, } from '../../common/common.js';\nimport { ConsensusBch2026 } from './bch-2026-consensus.js';\nimport { AuthenticationErrorBch2026 } from './bch-2026-errors.js';\nexport const opInvert = (state) => useOneStackItem(state, (nextState, [a]) => \n// eslint-disable-next-line no-bitwise\npushToStack(nextState, [a.map((v) => v ^ 255 /* Constants.allBits */)]));\nconst useOneShiftBitCount = (state, shiftOperation) => useOneVmNumber(state, (nextState, [bitCount]) => {\n    if (bitCount < 0n) {\n        return applyError(nextState, AuthenticationErrorBch2026.invalidShiftBitCount, `Bit count must be greater than or equal to 0. Provided bit count: ${bitCount}.`);\n    }\n    return shiftOperation(nextState, [bitCount]);\n});\nexport const createOpLShiftNum = ({ maximumStackItemLength = ConsensusBch2026.maximumStackItemLength } = {}) => (state) => {\n    const fastFailBitCount = maximumStackItemLength * 8 /* Constants.bitsPerByte */;\n    return useOneShiftBitCount(state, (nextState, [bitCount]) => useOneVmNumber(nextState, (finalState, [numericValue]) => {\n        if (numericValue === 0n) {\n            return pushToStackVmNumber(finalState, 0n);\n        }\n        if (bitCount > fastFailBitCount) {\n            return applyError(nextState, AuthenticationErrorBch2026.invalidShiftBitCount, `Abandoned excessive OP_LSHIFTNUM. Provided bit count: ${bitCount}.`);\n        }\n        return pushToStackVmNumberChecked(finalState, \n        // eslint-disable-next-line no-bitwise\n        numericValue << bitCount, {\n            hasEncodingCost: true,\n            maximumVmNumberByteLength: maximumStackItemLength,\n        });\n    }));\n};\nexport const createOpRShiftNum = ({ maximumStackItemLength = ConsensusBch2026.maximumStackItemLength } = {}) => (state) => useOneShiftBitCount(state, (nextState, [bitCount]) => {\n    const nextStackItemLength = nextState.stack[nextState.stack.length - 1]?.length ?? 0;\n    const numericValueBits = nextStackItemLength * 8 /* Constants.bitsPerByte */;\n    const fastReturnIfValid = bitCount > numericValueBits;\n    return useOneVmNumber(nextState, (finalState, [numericValue]) => {\n        if (numericValue === 0n) {\n            return pushToStackVmNumber(finalState, 0n);\n        }\n        if (fastReturnIfValid) {\n            const isNegative = numericValue < 0;\n            return pushToStackVmNumber(finalState, isNegative ? -1n : 0n);\n        }\n        return pushToStackVmNumberChecked(finalState, \n        // eslint-disable-next-line no-bitwise\n        numericValue >> bitCount, {\n            hasEncodingCost: true,\n            maximumVmNumberByteLength: maximumStackItemLength,\n        });\n    });\n});\n// eslint-disable-next-line functional/no-return-void\nconst copyWholeBytes = (src, dst, byteShift, left) => {\n    if (byteShift >= src.length)\n        return;\n    if (left) {\n        // eslint-disable-next-line functional/no-expression-statements\n        dst.set(src.subarray(byteShift), 0);\n        return;\n    }\n    // eslint-disable-next-line functional/no-expression-statements\n    dst.set(src.subarray(0, src.length - byteShift), byteShift);\n};\nconst residualLeftShift = (buf, bitShift) => {\n    // eslint-disable-next-line functional/no-let\n    let carry = 0;\n    // eslint-disable-next-line functional/no-loop-statements, functional/no-let, no-plusplus\n    for (let i = buf.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const v = buf[i];\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data, no-bitwise\n        buf[i] = ((v << bitShift) | carry) & 255 /* Constants.allBits */;\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise\n        carry = v >> (8 /* Constants.bitsPerByte */ - bitShift);\n    }\n    return buf;\n};\nconst residualRightShift = (buf, bitShift) => {\n    // eslint-disable-next-line functional/no-let\n    let carry = 0;\n    // eslint-disable-next-line functional/no-loop-statements, functional/no-let, no-plusplus\n    for (let i = 0; i < buf.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const v = buf[i];\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data, no-bitwise\n        buf[i] = ((v >> bitShift) | carry) & 255 /* Constants.allBits */;\n        // eslint-disable-next-line functional/no-expression-statements, no-bitwise\n        carry = (v << (8 /* Constants.bitsPerByte */ - bitShift)) & 255 /* Constants.allBits */;\n    }\n    return buf;\n};\nconst shiftFixed = (src, bitCount, isLeftShift) => {\n    const s = Number(bitCount);\n    if (!s || !src.length)\n        return src.slice();\n    const len = src.length;\n    const dst = new Uint8Array(len);\n    const byteShift = Math.floor(s / 8 /* Constants.bitsPerByte */);\n    const bitShift = s % 8 /* Constants.bitsPerByte */;\n    // eslint-disable-next-line functional/no-expression-statements\n    copyWholeBytes(src, dst, byteShift, isLeftShift);\n    if (!bitShift)\n        return dst;\n    return isLeftShift\n        ? residualLeftShift(dst, bitShift)\n        : residualRightShift(dst, bitShift);\n};\n/**\n * Perform a fixed-length, logical left shift of `bin` by the `bitCount`,\n * equivalent to `OP_LSHIFTBIN` in the Bitcoin Cash VM.\n * @param bin - the Uint8Array to shift.\n * @param bitCount - the count of bits by which to shift `bin`.\n */\nexport const binaryShiftLeft = (bin, bitCount) => shiftFixed(bin, bitCount, true);\n/**\n * Perform a fixed-length, logical right shift of `bin` by the `bitCount`,\n * equivalent to `OP_RSHIFTBIN` in the Bitcoin Cash VM.\n * @param bin - the Uint8Array to shift.\n * @param bitCount - the count of bits by which to shift `bin`.\n */\nexport const binaryShiftRight = (bin, bitCount) => shiftFixed(bin, bitCount, false);\nexport const opLShiftBin = (state) => useOneShiftBitCount(state, (nextState, [bitCount]) => useOneStackItem(nextState, (finalState, [bin]) => pushToStack(finalState, [binaryShiftLeft(bin, bitCount)])));\nexport const opRShiftBin = (state) => useOneShiftBitCount(state, (nextState, [bitCount]) => useOneStackItem(nextState, (finalState, [bin]) => pushToStack(finalState, [binaryShiftRight(bin, bitCount)])));\n//# sourceMappingURL=bch-2026-bitwise.js.map","import { binToHex } from '../../../../format/format.js';\nimport { applyError, authenticationInstructionsAreMalformed, decodeAuthenticationInstructions, disassembleAuthenticationInstructionMalformed, pushToControlStack, useOneStackItem, useOneVmNumber, } from '../../common/common.js';\nimport { ConsensusBch2026 } from './bch-2026-consensus.js';\nimport { AuthenticationErrorBch2026 } from './bch-2026-errors.js';\nimport { OpcodesBch2026 } from './bch-2026-opcodes.js';\nexport const createOpDefine = ({ maximumFunctionIdentifier = ConsensusBch2026.maximumFunctionIdentifier, minimumFunctionIdentifier = ConsensusBch2026.minimumFunctionIdentifier, } = {}) => (state) => useOneVmNumber(state, (nextState, [providedInteger]) => {\n    const functionIdentifier = Number(providedInteger);\n    if (functionIdentifier < minimumFunctionIdentifier ||\n        functionIdentifier > maximumFunctionIdentifier) {\n        return applyError(nextState, AuthenticationErrorBch2026.functionIdentifierInvalid, `Function identifier (${functionIdentifier}) is outside of the valid range: ${minimumFunctionIdentifier} to ${maximumFunctionIdentifier} (inclusive).`);\n    }\n    if (nextState.functionTable[functionIdentifier] !== undefined) {\n        return applyError(nextState, AuthenticationErrorBch2026.functionIdentifierPreviouslyDefined, `Function identifier: ${functionIdentifier}. Existing contents: ${binToHex(nextState.functionTable[functionIdentifier])}.`);\n    }\n    return useOneStackItem(nextState, (finalState, [functionBody]) => {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        finalState.functionTable[functionIdentifier] = functionBody;\n        return finalState;\n    });\n});\nexport const opInvoke = (state) => useOneVmNumber(state, (nextState, [providedInteger]) => {\n    const functionTableIndex = Number(providedInteger);\n    const functionBody = nextState.functionTable[functionTableIndex];\n    if (functionBody === undefined) {\n        return applyError(nextState, AuthenticationErrorBch2026.functionIdentifierUndefined, `Function identifier: ${functionTableIndex}.`);\n    }\n    const newInstructions = decodeAuthenticationInstructions(functionBody);\n    if (authenticationInstructionsAreMalformed(newInstructions)) {\n        return applyError(nextState, AuthenticationErrorBch2026.malformedFunction, `Malformed instruction: ${disassembleAuthenticationInstructionMalformed(OpcodesBch2026, newInstructions[newInstructions.length - 1])}.`);\n    }\n    const manuallyAdvance = 1;\n    const finalState = pushToControlStack(nextState, {\n        instructions: nextState.instructions,\n        ip: nextState.ip + manuallyAdvance,\n    });\n    finalState.ip = 0 - manuallyAdvance; // eslint-disable-line functional/no-expression-statements, functional/immutable-data\n    finalState.instructions = newInstructions; // eslint-disable-line functional/no-expression-statements, functional/immutable-data\n    return finalState;\n});\n//# sourceMappingURL=bch-2026-functions.js.map","import { ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha1 as internalSha1, sha256 as internalSha256, } from '../../../../crypto/crypto.js';\nimport { conditionallyEvaluate } from '../../common/common.js';\nimport { createInstructionSetBch2025 } from '../2025/bch-2025-instruction-set.js';\nimport { opBegin, opUntil } from '../2026/bch-2026-loops.js';\nimport { createOpLShiftNum, createOpRShiftNum, opInvert, opLShiftBin, opRShiftBin, } from './bch-2026-bitwise.js';\nimport { ConsensusBch2026 } from './bch-2026-consensus.js';\nimport { createOpDefine, opInvoke } from './bch-2026-functions.js';\nimport { OpcodesBch2026 } from './bch-2026-opcodes.js';\n/**\n * * Initialize a virtual machine using the `BCH_2026_05` instruction set.\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nexport const createInstructionSetBch2026 = (standard = true, { consensus = ConsensusBch2026, ripemd160, secp256k1, sha1, sha256, } = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha1: internalSha1,\n    sha256: internalSha256,\n}) => {\n    const instructionSet = createInstructionSetBch2025(standard, {\n        consensus,\n        ripemd160,\n        secp256k1,\n        sha1,\n        sha256,\n    });\n    return {\n        ...instructionSet,\n        /* eslint-disable functional/no-loop-statements, functional/immutable-data, functional/no-expression-statements */\n        continue: (state) => {\n            if (state.error !== undefined)\n                return false;\n            while (state.ip >= state.instructions.length &&\n                state.controlStack.length > 0 &&\n                typeof state.controlStack[state.controlStack.length - 1] === 'object') {\n                const { instructions, ip } = state.controlStack.pop();\n                state.ip = ip;\n                state.instructions = instructions;\n            }\n            return state.ip < state.instructions.length;\n        },\n        /* eslint-enable functional/no-loop-statements, functional/immutable-data, functional/no-expression-statements */\n        operations: {\n            ...instructionSet.operations,\n            [OpcodesBch2026.OP_BEGIN]: opBegin,\n            [OpcodesBch2026.OP_UNTIL]: opUntil,\n            [OpcodesBch2026.OP_INVERT]: conditionallyEvaluate(opInvert),\n            [OpcodesBch2026.OP_DEFINE]: conditionallyEvaluate(createOpDefine(consensus)),\n            [OpcodesBch2026.OP_INVOKE]: conditionallyEvaluate(opInvoke),\n            [OpcodesBch2026.OP_LSHIFTNUM]: conditionallyEvaluate(createOpLShiftNum(consensus)),\n            [OpcodesBch2026.OP_RSHIFTNUM]: conditionallyEvaluate(createOpRShiftNum(consensus)),\n            [OpcodesBch2026.OP_LSHIFTBIN]: conditionallyEvaluate(opLShiftBin),\n            [OpcodesBch2026.OP_RSHIFTBIN]: conditionallyEvaluate(opRShiftBin),\n        },\n    };\n};\n//# sourceMappingURL=bch-2026-instruction-set.js.map","import { ConsensusBch2026 } from '../2026/bch-2026-consensus.js';\n/**\n * Consensus setting overrides for the `BCH_SPEC` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const ConsensusBchSpecOverrides = {\n    /**\n     * Because BCH_SPEC is used to compile CashAssembly internal evaluations,\n     * setting a per-input overhead value equal to the current (BCH_2025)\n     * `maximumBytecodeLength` ensures that any reasonable internal evaluation can\n     * be compiled without exceeding operation cost limits.\n     */\n    densityControlBaseLength: 10_000,\n    maximumBytecodeLength: 100_000,\n    maximumStackItemLength: 100_000,\n    maximumStandardUnlockingBytecodeLength: 100_000,\n    maximumVmNumberByteLength: 100_000,\n};\n/**\n * Consensus settings for the `BCH_SPEC` instruction set.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const ConsensusBchSpec = {\n    ...ConsensusBch2026,\n    ...ConsensusBchSpecOverrides,\n};\n//# sourceMappingURL=bch-spec-consensus.js.map","import { applyError, authenticationInstructionsAreMalformed, decodeAuthenticationInstructions, disassembleAuthenticationInstructionMalformed, executionIsActive, pushToControlStack, useOneStackItem, } from '../../common/common.js';\nimport { AuthenticationErrorBchSpec } from './bch-spec-errors.js';\nimport { OpcodesBchSpec } from './bch-spec-opcodes.js';\nexport const opEval = (state) => {\n    if (executionIsActive(state)) {\n        return useOneStackItem(state, (nextState, [item]) => {\n            const newInstructions = decodeAuthenticationInstructions(item);\n            if (authenticationInstructionsAreMalformed(newInstructions)) {\n                return applyError(nextState, AuthenticationErrorBchSpec.malformedEval, `Malformed instruction: ${disassembleAuthenticationInstructionMalformed(OpcodesBchSpec, newInstructions[newInstructions.length - 1])}.`);\n            }\n            const manuallyAdvance = 1;\n            const finalState = pushToControlStack(nextState, {\n                instructions: nextState.instructions,\n                ip: nextState.ip + manuallyAdvance,\n            });\n            finalState.ip = 0 - manuallyAdvance; // eslint-disable-line functional/no-expression-statements, functional/immutable-data\n            finalState.instructions = newInstructions; // eslint-disable-line functional/no-expression-statements, functional/immutable-data\n            return finalState;\n        });\n    }\n    return state;\n};\n//# sourceMappingURL=bch-spec-eval.js.map","import { applyError, ConsensusCommon, numericOperationBinary, vmNumberToBigInt, } from '../../common/common.js';\nimport { AuthenticationErrorBchSpec } from './bch-spec-errors.js';\nexport const createOpPow = ({ maximumVmNumberByteLength = ConsensusCommon.maximumVmNumberByteLength, } = {}) => (state) => {\n    const [base, maybeExponent] = state.stack.slice(-2 /* Constants.lastTwoItems */);\n    const baseLength = base?.length ?? 0;\n    const exponent = maybeExponent ?? new Uint8Array(0);\n    const exponentValue = vmNumberToBigInt(exponent, {\n        maximumVmNumberByteLength: 8,\n    });\n    if (typeof exponentValue !== 'bigint') {\n        return applyError(state, AuthenticationErrorBchSpec.invalidVmNumber, `Attempted an OP_POW operation with an invalid exponent. ${exponentValue}`);\n    }\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n    state.metrics.arithmeticCost +=\n        baseLength * baseLength * 8 /* Constants.bitsPerByte */ * Number(exponentValue);\n    if (state.metrics.operationCost + state.metrics.arithmeticCost >\n        state.metrics.maximumOperationCost) {\n        return applyError(state, AuthenticationErrorBchSpec.excessiveOperationCostOpPow, `Maximum operation cost: ${state.metrics.maximumOperationCost} (density control length: ${state.metrics.densityControlLength}); minimum operation cost following operation: ${state.metrics.operationCost} (excludes costs following rejected OP_POW).`);\n    }\n    return numericOperationBinary(([a, b]) => a ** b, {\n        hasEncodingCost: true,\n        maximumVmNumberByteLength,\n    })(state);\n};\nexport const opPow = createOpPow();\n//# sourceMappingURL=bch-spec-pow.js.map","import { ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha1 as internalSha1, sha256 as internalSha256, } from '../../../../crypto/crypto.js';\nimport { conditionallyEvaluate, incrementOperationCount, } from '../../common/common.js';\nimport { createInstructionSetBch2026 } from '../2026/bch-2026-instruction-set.js';\nimport { ConsensusBchSpec } from './bch-spec-consensus.js';\nimport { opEval } from './bch-spec-eval.js';\nimport { OpcodesBchSpec } from './bch-spec-opcodes.js';\nimport { createOpPow } from './bch-spec-pow.js';\n/**\n * create an instance of the `BCH_SPEC` virtual machine instruction set, an\n * informal, speculative instruction set that implements a variety of future\n * Bitcoin Cash Improvement Proposals (CHIPs).\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nexport const createInstructionSetBchSpec = (standard = true, { consensus = ConsensusBchSpec, ripemd160, secp256k1, sha1, sha256, } = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha1: internalSha1,\n    sha256: internalSha256,\n}) => {\n    const instructionSet = createInstructionSetBch2026(standard, {\n        consensus,\n        ripemd160,\n        secp256k1,\n        sha1,\n        sha256,\n    });\n    const stackSize = (stack) => stack.reduce((sum, item) => sum + item.length, 0);\n    return {\n        ...instructionSet,\n        every: (state) => {\n            const nextState = instructionSet.every?.(state) ?? state;\n            /**\n             * For benchmarking/research purposes only, not required by the protocol.\n             */\n            const memoryUsage = stackSize(nextState.stack) + stackSize(nextState.alternateStack);\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (nextState.metrics.maxMemoryUsage < memoryUsage) {\n                // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n                nextState.metrics.maxMemoryUsage = memoryUsage;\n            }\n            return nextState;\n        },\n        operations: {\n            ...instructionSet.operations,\n            [OpcodesBchSpec.OP_EVAL]: opEval,\n            [OpcodesBchSpec.OP_POW]: incrementOperationCount(conditionallyEvaluate(createOpPow(consensus))),\n        },\n    };\n};\n//# sourceMappingURL=bch-spec-instruction-set.js.map","import { createVirtualMachine } from '../../../virtual-machine.js';\nimport { createInstructionSetBchSpec } from './bch-spec-instruction-set.js';\n/**\n * Initialize a virtual machine using the BCH `SPEC` instruction set, an\n * informal, speculative instruction set that implements a variety of future\n * Bitcoin Cash Improvement Proposals (CHIPs).\n *\n * @param standard - If `true`, the additional `isStandard` validations will be\n * enabled. Transactions that fail these rules are often called \"non-standard\"\n * and can technically be included by miners in valid blocks, but most network\n * nodes will refuse to relay them. (Default: `true`)\n */\nexport const createVirtualMachineBchSpec = (standard = true) => createVirtualMachine(createInstructionSetBchSpec(standard));\n//# sourceMappingURL=bch-spec-vm.js.map","import { OpcodeDescriptionsBchSpec, OpcodesBchSpec } from './bch/bch.js';\nexport * from './xec/xec.js';\nexport * from './bch/bch.js';\nexport * from './btc/btc.js';\nexport * from './common/common.js';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Opcodes = OpcodesBchSpec;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const OpcodeDescriptions = OpcodeDescriptionsBchSpec;\n//# sourceMappingURL=instruction-sets.js.map","/* eslint-disable max-lines */\nimport { hmacSha512, ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha256 as internalSha256, sha512 as internalSha512, } from '../crypto/crypto.js';\nimport { base58ToBin, bigIntToBinUint256BEClamped, binsAreEqual, binToBase58, binToBigIntUint256BE, binToHex, flattenBinArray, formatError, numberToBinUint32BE, utf8ToBin, } from '../format/format.js';\n/**\n * Verify that a private key is valid for the Secp256k1 curve. Returns `true`\n * for success, or `false` on failure.\n *\n * Private keys are 256-bit numbers encoded as a 32-byte, big-endian Uint8Array.\n * Nearly every 256-bit number is a valid secp256k1 private key. Specifically,\n * any 256-bit number greater than `0x01` and less than\n * `0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141`\n * is a valid private key. This range is part of the definition of the\n * secp256k1 elliptic curve parameters.\n *\n * This method does not require a `Secp256k1` implementation.\n *\n * @param privateKey - The private key to validate.\n */\nexport const validateSecp256k1PrivateKey = (privateKey) => {\n    if (privateKey.length !== 32 /* Secp256k1Constants.privateKeyLength */ ||\n        privateKey.every((value) => value === 0)) {\n        return false;\n    }\n    /**\n     * The largest possible Secp256k1 private key – equal to the order of the\n     * Secp256k1 curve minus one.\n     */\n    // prettier-ignore\n    const maximumSecp256k1PrivateKey = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 186, 174, 220, 230, 175, 72, 160, 59, 191, 210, 94, 140, 208, 54, 65, 64]; // eslint-disable-line @typescript-eslint/no-magic-numbers\n    const firstDifference = privateKey.findIndex((value, i) => value !== maximumSecp256k1PrivateKey[i]);\n    if (firstDifference === -1 ||\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        privateKey[firstDifference] < maximumSecp256k1PrivateKey[firstDifference]) {\n        return true;\n    }\n    return false;\n};\n/**\n * An error in the derivation of child HD public or private nodes.\n */\nexport var HdNodeDerivationError;\n(function (HdNodeDerivationError) {\n    HdNodeDerivationError[\"childIndexExceedsMaximum\"] = \"HD node derivation error: child index exceeds maximum (4294967295).\";\n    HdNodeDerivationError[\"requiresZeroDepthNode\"] = \"HD node derivation error: absolute derivation requires an HD node with a depth of 0.\";\n    HdNodeDerivationError[\"hardenedDerivationRequiresPrivateNode\"] = \"HD node derivation error: derivation for hardened child indexes (indexes greater than or equal to 2147483648) requires an HD private node.\";\n    HdNodeDerivationError[\"invalidAbsoluteDerivationPath\"] = \"HD node derivation error: invalid absolute derivation path; path must begin with \\\"m\\\" or \\\"M\\\" and contain only positive child index numbers, separated by forward slashes (\\\"/\\\"), with zero or one apostrophe (\\\"'\\\") after each child index number.\";\n    HdNodeDerivationError[\"invalidRelativeDerivationPath\"] = \"HD node derivation error: invalid relative derivation path; path must contain only positive child index numbers, separated by forward slashes (\\\"/\\\"), with zero or one apostrophe (\\\"'\\\") after each child index number.\";\n    HdNodeDerivationError[\"invalidDerivedKey\"] = \"HD node derivation error: an astronomically rare HMAC-SHA512 result produced an invalid Secp256k1 key.\";\n    HdNodeDerivationError[\"invalidPrivateDerivationPrefix\"] = \"HD node derivation error: private derivation paths must begin with \\\"m\\\".\";\n    HdNodeDerivationError[\"invalidPublicDerivationPrefix\"] = \"HD node derivation error: public derivation paths must begin with \\\"M\\\".\";\n})(HdNodeDerivationError || (HdNodeDerivationError = {}));\n/**\n * An error in the decoding of an HD public or private key.\n */\nexport var HdKeyDecodingError;\n(function (HdKeyDecodingError) {\n    HdKeyDecodingError[\"incorrectLength\"] = \"HD key decoding error: length is incorrect (must encode 82 bytes).\";\n    HdKeyDecodingError[\"invalidChecksum\"] = \"HD key decoding error: checksum is invalid.\";\n    HdKeyDecodingError[\"invalidPublicKey\"] = \"HD key decoding error: the public key for this HD public node is not a valid Secp256k1 public key.\";\n    HdKeyDecodingError[\"invalidPrivateKey\"] = \"HD key decoding error: the key for this HD private node is not a valid Secp256k1 private key.\";\n    HdKeyDecodingError[\"missingPrivateKeyPaddingByte\"] = \"HD key decoding error: version indicates a private key, but the key data is missing a padding byte.\";\n    HdKeyDecodingError[\"privateKeyExpected\"] = \"HD key decoding error: expected an HD private key, but encountered an HD public key.\";\n    HdKeyDecodingError[\"publicKeyExpected\"] = \"HD key decoding error: expected an HD public key, but encountered an HD private key.\";\n    HdKeyDecodingError[\"unknownCharacter\"] = \"HD key decoding error: key includes a non-base58 character.\";\n    HdKeyDecodingError[\"unknownVersion\"] = \"HD key decoding error: key uses an unknown version.\";\n    HdKeyDecodingError[\"zeroDepthWithNonZeroChildIndex\"] = \"HD key decoding error: key encodes a depth of zero with a non-zero child index.\";\n    HdKeyDecodingError[\"zeroDepthWithNonZeroParentFingerprint\"] = \"HD key decoding error: key encodes a depth of zero with a non-zero parent fingerprint.\";\n})(HdKeyDecodingError || (HdKeyDecodingError = {}));\n/**\n * An error in the encoding of an HD public or private key.\n */\nexport var HdKeyEncodingError;\n(function (HdKeyEncodingError) {\n    HdKeyEncodingError[\"invalidChainCodeLength\"] = \"HD key encoding error: invalid chain code length. Chain code must be 32 bytes.\";\n    HdKeyEncodingError[\"invalidChildDepth\"] = \"HD key encoding error: invalid child depth. Child depth must be between 0 and 255 (inclusive).\";\n    HdKeyEncodingError[\"invalidChildIndex\"] = \"HD key encoding error: invalid child index. Child index must be between 0 and 4294967295 (inclusive).\";\n    HdKeyEncodingError[\"invalidParentFingerprintLength\"] = \"HD key encoding error: invalid parent fingerprint length. Parent fingerprint must be 4 bytes.\";\n    HdKeyEncodingError[\"invalidPrivateKeyLength\"] = \"HD key encoding error: invalid private key length. Secp256k1 private keys must be 32 bytes.\";\n    HdKeyEncodingError[\"invalidPublicKeyLength\"] = \"HD key encoding error: invalid public key length. Public key must be 33 bytes (compressed).\";\n    HdKeyEncodingError[\"invalidPublicKey\"] = \"HD key encoding error: the public key for this HD public node is not a valid Secp256k1 public key.\";\n    HdKeyEncodingError[\"zeroDepthWithNonZeroChildIndex\"] = \"HD key encoding error: attempted to encode a zero depth key with a non-zero child index.\";\n    HdKeyEncodingError[\"zeroDepthWithNonZeroParentFingerprint\"] = \"HD key encoding error: attempted to encode a zero depth key with a non-zero parent fingerprint.\";\n})(HdKeyEncodingError || (HdKeyEncodingError = {}));\nconst emptyParentFingerprint = Uint8Array.from([0, 0, 0, 0]);\n/**\n * The HMAC SHA-512 key used by BIP32, \"Bitcoin seed\"\n * (`utf8ToBin('Bitcoin seed')`)\n */\nexport const bip32HmacSha512Key = utf8ToBin('Bitcoin seed');\n/**\n * Derive an {@link HdPrivateNode} from the provided seed following the BIP32\n * specification. A seed should include between 16 bytes and 64 bytes of\n * entropy (recommended: 32 bytes).\n *\n * @param seed - the entropy from which to derive the {@link HdPrivateNode}\n */\nexport const deriveHdPrivateNodeFromSeed = (seed, { assumeValidity, crypto = { sha512: internalSha512 }, hmacSha512Key = bip32HmacSha512Key, throwErrors = true, } = {}) => {\n    const mac = hmacSha512(hmacSha512Key, seed, crypto.sha512);\n    const privateKey = mac.slice(0, 32 /* Bip32Constants.halfHmacSha512Length */);\n    const chainCode = mac.slice(32 /* Bip32Constants.halfHmacSha512Length */);\n    const depth = 0;\n    const childIndex = 0;\n    const parentFingerprint = emptyParentFingerprint.slice();\n    const valid = assumeValidity ?? validateSecp256k1PrivateKey(privateKey);\n    if (throwErrors && !valid)\n        // eslint-disable-next-line functional/no-throw-statements\n        throw new Error(HdNodeDerivationError.invalidDerivedKey);\n    return (valid\n        ? { chainCode, childIndex, depth, parentFingerprint, privateKey }\n        : {\n            chainCode,\n            childIndex,\n            depth,\n            invalidMaterial: privateKey,\n            parentFingerprint,\n        });\n};\n/**\n * Derive the public identifier for a given {@link HdPrivateNode}. This is used\n * to uniquely identify HD nodes in software. The first 4 bytes of this\n * identifier are considered its \"fingerprint\".\n *\n * @param hdPrivateNode - The {@link HdPrivateNode} from which to derive the\n * public identifier.\n */\nexport const deriveHdPrivateNodeIdentifier = (hdPrivateNode, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n}, } = {}) => {\n    const publicKey = crypto.secp256k1.derivePublicKeyCompressed(hdPrivateNode.privateKey);\n    if (typeof publicKey === 'string')\n        return publicKey;\n    return crypto.ripemd160.hash(crypto.sha256.hash(publicKey));\n};\n/**\n * Derive the public identifier for a given {@link HdPublicNodeValid}. This is\n * used to uniquely identify HD nodes in software. The first 4 bytes of this\n * identifier are considered its fingerprint.\n *\n * @param node - The {@link HdPublicNodeValid} from which to derive the\n * public identifier.\n */\nexport const deriveHdPublicNodeIdentifier = (node, { crypto = { ripemd160: internalRipemd160, sha256: internalSha256 }, } = {}) => crypto.ripemd160.hash(crypto.sha256.hash(node.publicKey));\n/**\n * The 4-byte version indicating the network and type of an {@link HdPrivateKey}\n * or {@link HdPublicKey}.\n */\nexport var HdKeyVersion;\n(function (HdKeyVersion) {\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the main network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `xprv`.\n     *\n     * Hex: `0x0488ade4`\n     */\n    HdKeyVersion[HdKeyVersion[\"mainnetPrivateKey\"] = 76066276] = \"mainnetPrivateKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the main network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `xpub`.\n     *\n     * Hex: `0x0488b21e`\n     */\n    HdKeyVersion[HdKeyVersion[\"mainnetPublicKey\"] = 76067358] = \"mainnetPublicKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the test network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `tprv`.\n     *\n     * Hex: `0x04358394`\n     */\n    HdKeyVersion[HdKeyVersion[\"testnetPrivateKey\"] = 70615956] = \"testnetPrivateKey\";\n    /**\n     * Version indicating the HD key is an {@link HdPrivateKey} intended for use\n     * on the test network. Base58 encoding at the expected length of an HD key\n     * results in a prefix of `tpub`.\n     *\n     * Hex: `0x043587cf`\n     */\n    HdKeyVersion[HdKeyVersion[\"testnetPublicKey\"] = 70617039] = \"testnetPublicKey\";\n})(HdKeyVersion || (HdKeyVersion = {}));\nexport const hdKeyVersionIsPublicKey = (version) => version === HdKeyVersion.mainnetPublicKey ||\n    version === HdKeyVersion.testnetPublicKey;\nexport const hdKeyVersionIsPrivateKey = (version) => version === HdKeyVersion.mainnetPrivateKey ||\n    version === HdKeyVersion.testnetPrivateKey;\n/**\n * Decode a string following the HD key format as defined by BIP32, returning a\n * `node` and a `version`. Decoding errors are returned as strings.\n *\n * This is a less strict variant of {@link decodeHdKey}; most applications\n * should instead use {@link decodeHdKey}, or if the type of the key is known,\n * either {@link decodeHdPrivateKey} or {@link decodeHdPublicKey}.\n *\n * @param hdKey - A BIP32 HD private key or HD public key.\n */\n// eslint-disable-next-line complexity\nexport const decodeHdKeyUnchecked = (hdKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const decoded = base58ToBin(hdKey);\n    if (typeof decoded === 'string')\n        return formatError(HdKeyDecodingError.unknownCharacter, decoded);\n    if (decoded.length !== 82 /* Bip32Constants.hdKeyLength */)\n        return formatError(HdKeyDecodingError.incorrectLength, `Length: ${decoded.length}.`);\n    const payload = decoded.slice(0, 78 /* Bip32Constants.hdKeyChecksumIndex */);\n    const checksumBits = decoded.slice(78 /* Bip32Constants.hdKeyChecksumIndex */);\n    const checksum = crypto.sha256.hash(crypto.sha256.hash(payload));\n    if (!checksumBits.every((value, i) => value === checksum[i])) {\n        return formatError(HdKeyDecodingError.invalidChecksum, `Encoded: ${binToHex(checksumBits)}; computed: ${binToHex(checksum.slice(0, 4 /* Bip32Constants.hdKeyChecksumLength */))}.`);\n    }\n    const depthIndex = 4;\n    const fingerprintIndex = 5;\n    const childIndexIndex = 9;\n    const chainCodeIndex = 13;\n    const keyDataIndex = 45;\n    const view = new DataView(decoded.buffer, decoded.byteOffset, decoded.byteLength);\n    const version = view.getUint32(0, false);\n    const depth = view.getUint8(depthIndex);\n    const parentFingerprint = decoded.slice(fingerprintIndex, childIndexIndex);\n    const childIndex = view.getUint32(childIndexIndex, false);\n    const chainCode = decoded.slice(chainCodeIndex, keyDataIndex);\n    const keyData = decoded.slice(keyDataIndex, 78 /* Bip32Constants.hdKeyChecksumIndex */);\n    const isPrivateKey = hdKeyVersionIsPrivateKey(version);\n    if (isPrivateKey && keyData[0] !== 0x00) {\n        return HdKeyDecodingError.missingPrivateKeyPaddingByte;\n    }\n    if (isPrivateKey) {\n        const privateKey = keyData.slice(1);\n        const valid = validateSecp256k1PrivateKey(privateKey);\n        return {\n            node: valid\n                ? {\n                    chainCode,\n                    childIndex,\n                    depth,\n                    parentFingerprint,\n                    privateKey,\n                }\n                : {\n                    chainCode,\n                    childIndex,\n                    depth,\n                    invalidMaterial: privateKey,\n                    parentFingerprint,\n                },\n            version,\n        };\n    }\n    const isPublicKey = hdKeyVersionIsPublicKey(version);\n    if (!isPublicKey) {\n        return formatError(HdKeyDecodingError.unknownVersion, `Version: ${version}`);\n    }\n    const publicKey = keyData;\n    const valid = crypto.secp256k1.validatePublicKey(publicKey);\n    return {\n        node: valid\n            ? {\n                chainCode,\n                childIndex,\n                depth,\n                parentFingerprint,\n                publicKey,\n            }\n            : {\n                chainCode,\n                childIndex,\n                depth,\n                invalidMaterial: publicKey,\n                parentFingerprint,\n            },\n        version,\n    };\n};\n/**\n * Decode an HD key as defined by BIP32, returning a `node` and a `network`.\n * Decoding errors are returned as strings.\n *\n * If the type of the key is known, use {@link decodeHdPrivateKey} or\n * {@link decodeHdPublicKey}. For a variant with less strict validation,\n * use {@link decodeHdKeyUnchecked}.\n *\n * @param hdKey - A BIP32 HD private key or HD public key.\n */\n// eslint-disable-next-line complexity\nexport const decodeHdKey = (hdKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const decoded = decodeHdKeyUnchecked(hdKey, { crypto });\n    if (typeof decoded === 'string')\n        return decoded;\n    const { node, version } = decoded;\n    if (node.depth === 0) {\n        if (node.childIndex !== 0) {\n            return formatError(HdKeyDecodingError.zeroDepthWithNonZeroChildIndex, `Child index: ${node.childIndex}.`);\n        }\n        if (!binsAreEqual(node.parentFingerprint, emptyParentFingerprint)) {\n            return formatError(HdKeyDecodingError.zeroDepthWithNonZeroParentFingerprint, `Parent fingerprint: ${node.parentFingerprint.join(',')}.`);\n        }\n    }\n    const isPublicKey = hdKeyVersionIsPublicKey(version);\n    if ('invalidMaterial' in node) {\n        return isPublicKey\n            ? formatError(HdKeyDecodingError.invalidPublicKey, `Invalid public key: ${binToHex(node.invalidMaterial)}.`)\n            : formatError(HdKeyDecodingError.invalidPrivateKey);\n    }\n    const network = version === HdKeyVersion.mainnetPrivateKey ||\n        version === HdKeyVersion.mainnetPublicKey\n        ? 'mainnet'\n        : 'testnet';\n    return { network, node };\n};\n/**\n * Decode an HD private key as defined by BIP32.\n *\n * This method is similar to {@link decodeHdKey} but ensures that the result is\n * a valid HD private node. Decoding error messages are returned as strings.\n *\n * @param hdPrivateKey - A BIP32 HD private key.\n */\nexport const decodeHdPrivateKey = (hdPrivateKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const decoded = decodeHdKey(hdPrivateKey, { crypto });\n    if (typeof decoded === 'string')\n        return decoded;\n    const { network, node } = decoded;\n    if ('publicKey' in node) {\n        return HdKeyDecodingError.privateKeyExpected;\n    }\n    return { network, node };\n};\n/**\n * Decode an HD public key as defined by BIP32.\n *\n * This method is similar to {@link decodeHdKey} but ensures that the result is\n * a valid HD public node. Decoding error messages are returned as strings.\n *\n * @param hdPublicKey - A BIP32 HD public key.\n */\nexport const decodeHdPublicKey = (hdPublicKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const decoded = decodeHdKey(hdPublicKey, { crypto });\n    if (typeof decoded === 'string')\n        return decoded;\n    const { network, node } = decoded;\n    if ('privateKey' in node) {\n        return HdKeyDecodingError.publicKeyExpected;\n    }\n    return { network, node };\n};\n/**\n * Decode the provided HD private key and compute its identifier. Error messages\n * are returned as a string.\n */\nexport const hdPrivateKeyToIdentifier = (hdPrivateKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const privateKeyParams = decodeHdPrivateKey(hdPrivateKey, { crypto });\n    if (typeof privateKeyParams === 'string') {\n        return privateKeyParams;\n    }\n    return deriveHdPrivateNodeIdentifier(privateKeyParams.node);\n};\n/**\n * Decode the provided HD public key and compute its identifier. Error messages\n * are returned as a string.\n */\nexport const hdPublicKeyToIdentifier = (hdPublicKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, } = {}) => {\n    const publicKeyParams = decodeHdPublicKey(hdPublicKey, { crypto });\n    if (typeof publicKeyParams === 'string') {\n        return publicKeyParams;\n    }\n    return deriveHdPublicNodeIdentifier(publicKeyParams.node);\n};\n/**\n * Encode the metadata portion of an HD key payload.\n */\n// eslint-disable-next-line complexity\nexport const encodeHdKeyPayloadMetadata = ({ version, keyParameters, throwErrors = true, }) => {\n    if (keyParameters.node.depth === 0) {\n        if (keyParameters.node.childIndex !== 0) {\n            return formatError(HdKeyEncodingError.zeroDepthWithNonZeroChildIndex, `Child index: ${keyParameters.node.childIndex}.`, throwErrors);\n        }\n        if (!binsAreEqual(keyParameters.node.parentFingerprint, emptyParentFingerprint)) {\n            return formatError(HdKeyEncodingError.zeroDepthWithNonZeroParentFingerprint, `Parent fingerprint: ${keyParameters.node.parentFingerprint.join(',')}.`, throwErrors);\n        }\n    }\n    if (keyParameters.node.chainCode.length !== 32 /* Bip32Constants.halfHmacSha512Length */) {\n        return formatError(HdKeyEncodingError.invalidChainCodeLength, `Chain code length: ${keyParameters.node.chainCode.length}.`, throwErrors);\n    }\n    if (keyParameters.node.parentFingerprint.length !==\n        4 /* Bip32Constants.parentFingerprintLength */) {\n        return formatError(HdKeyEncodingError.invalidParentFingerprintLength, `Parent fingerprint length: ${keyParameters.node.parentFingerprint.length}.`, throwErrors);\n    }\n    if (keyParameters.node.depth < 0 ||\n        keyParameters.node.depth > 255 /* Bip32Constants.maximumEncodingDepth */) {\n        return formatError(HdKeyEncodingError.invalidChildDepth, `Depth: ${keyParameters.node.depth}.`, throwErrors);\n    }\n    const depth = Uint8Array.of(keyParameters.node.depth);\n    if (keyParameters.node.childIndex < 0 ||\n        keyParameters.node.childIndex > 4294967295 /* Bip32Constants.maximumChildIndex */) {\n        return formatError(HdKeyEncodingError.invalidChildIndex, `Child index: ${keyParameters.node.childIndex}.`, throwErrors);\n    }\n    const childIndex = numberToBinUint32BE(keyParameters.node.childIndex);\n    const payload = flattenBinArray([\n        version,\n        depth,\n        keyParameters.node.parentFingerprint,\n        childIndex,\n        keyParameters.node.chainCode,\n    ]);\n    return payload;\n};\n/**\n * Encode an HD private key (as defined by BIP32) payload (without the checksum)\n * given a valid {@link HdPrivateNode} and network.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * @param keyParameters - A valid HD private node and the network for which to\n * encode the key.\n */\nexport const encodeHdPrivateKeyPayload = (keyParameters, { throwErrors = true, } = {}) => {\n    const version = numberToBinUint32BE(keyParameters.network === 'mainnet'\n        ? HdKeyVersion.mainnetPrivateKey\n        : HdKeyVersion.testnetPrivateKey);\n    if (keyParameters.node.privateKey.length !== 32 /* Bip32Constants.halfHmacSha512Length */) {\n        return formatError(HdKeyEncodingError.invalidPrivateKeyLength, `Private key length: ${keyParameters.node.privateKey.length}.`, throwErrors);\n    }\n    const metadata = encodeHdKeyPayloadMetadata({\n        keyParameters,\n        throwErrors,\n        version,\n    });\n    if (typeof metadata === 'string') {\n        return metadata;\n    }\n    const isPrivateKey = Uint8Array.of(0x00);\n    const payload = flattenBinArray([\n        metadata,\n        isPrivateKey,\n        keyParameters.node.privateKey,\n    ]);\n    return payload;\n};\n/**\n * Encode an HD public key (as defined by BIP32) payload (without the checksum)\n * given a valid {@link HdPublicNodeValid} and network.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * @param keyParameters - A valid HD public node and the network for which to\n * encode the key.\n */\nexport const encodeHdPublicKeyPayload = (keyParameters, { throwErrors = true, } = {}) => {\n    const version = numberToBinUint32BE(keyParameters.network === 'mainnet'\n        ? HdKeyVersion.mainnetPublicKey\n        : HdKeyVersion.testnetPublicKey);\n    if (keyParameters.node.publicKey.length !== 33 /* Bip32Constants.publicKeyLength */) {\n        return formatError(HdKeyEncodingError.invalidPublicKeyLength, `Public key length: ${keyParameters.node.publicKey.length}.`, throwErrors);\n    }\n    const metadata = encodeHdKeyPayloadMetadata({\n        keyParameters,\n        throwErrors,\n        version,\n    });\n    if (typeof metadata === 'string') {\n        return metadata;\n    }\n    const payload = flattenBinArray([metadata, keyParameters.node.publicKey]);\n    return payload;\n};\n/**\n * Encode an HD public or private key (as defined by BIP32) payload with\n * a checksum.\n *\n * @param payload - the HD public or private key payload to encode\n */\nexport const encodeHdKeyPayloadWithChecksum = (payload, { crypto = { sha256: internalSha256 }, } = {}) => {\n    const checksumLength = 4;\n    const checksum = crypto.sha256\n        .hash(crypto.sha256.hash(payload))\n        .slice(0, checksumLength);\n    return binToBase58(flattenBinArray([payload, checksum]));\n};\n/**\n * Encode an HD private key (as defined by BIP32) given a valid\n * {@link HdPrivateNode} and network.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * @param keyParameters - A valid HD private node and the network for which to\n * encode the key.\n */\nexport const encodeHdPrivateKey = (keyParameters, { crypto = { sha256: internalSha256 }, throwErrors = true, } = {}) => {\n    const payload = encodeHdPrivateKeyPayload(keyParameters, { throwErrors });\n    return typeof payload === 'string'\n        ? payload\n        : { hdPrivateKey: encodeHdKeyPayloadWithChecksum(payload, { crypto }) };\n};\n/**\n * Encode an HD public key (as defined by BIP32) given a valid\n * {@link HdPublicNodeValid} and network.\n *\n * Note that this function defaults to throwing encoding errors. To handle\n * errors in a type-safe way, set `throwErrors` to `false`.\n *\n * @param keyParameters - An HD public node and the network for which to encode\n * the key.\n */\nexport const encodeHdPublicKey = (keyParameters, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, throwErrors = true, } = {}) => {\n    if (!crypto.secp256k1.validatePublicKey(keyParameters.node.publicKey)) {\n        return formatError(HdKeyEncodingError.invalidPublicKey, `Invalid public key: \"${binToHex(keyParameters.node.publicKey)}\".`, throwErrors);\n    }\n    const payload = encodeHdPublicKeyPayload(keyParameters, { throwErrors });\n    return typeof payload === 'string'\n        ? payload\n        : { hdPublicKey: encodeHdKeyPayloadWithChecksum(payload, { crypto }) };\n};\n/**\n * Derive the HD public node of an HD private node.\n *\n * Though private keys cannot be derived from HD public keys, sharing HD public\n * keys still carries risk. Along with allowing an attacker to associate wallet\n * addresses together (breaking privacy), should an attacker gain knowledge of a\n * single child private key, **it's possible to derive all parent HD private\n * keys**. See {@link crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode} for\n * details.\n *\n * To derive an HD public key from an encoded HD private key,\n * use {@link deriveHdPublicKey}.\n *\n * @param node - A valid HD private node.\n */\nexport const deriveHdPublicNode = (node, { crypto = { secp256k1: internalSecp256k1 }, } = {}) => ({\n    chainCode: node.chainCode,\n    childIndex: node.childIndex,\n    depth: node.depth,\n    parentFingerprint: node.parentFingerprint,\n    ...(node.parentIdentifier === undefined\n        ? {}\n        : { parentIdentifier: node.parentIdentifier }),\n    publicKey: crypto.secp256k1.derivePublicKeyCompressed(node.privateKey),\n});\n/**\n * Derive the HD public key of an HD private key.\n *\n * Though private keys cannot be derived from HD public keys, sharing HD public\n * keys still carries risk. Along with allowing an attacker to associate wallet\n * addresses together (breaking privacy), should an attacker gain knowledge of a\n * single child private key, **it's possible to derive all parent HD private\n * keys**. See {@link crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode} for\n * details.\n *\n * To derive the HD public node of an already-decoded HD private node,\n * use {@link deriveHdPublicNode}.\n *\n * Note that this function defaults to throwing errors. To handle errors in a\n * type-safe way, set `throwErrors` to `false`.\n *\n * @param hdPrivateKey - A BIP32 HD private key.\n */\nexport const deriveHdPublicKey = (privateKey, { crypto = { secp256k1: internalSecp256k1, sha256: internalSha256 }, throwErrors = true, } = {}) => {\n    const decoded = decodeHdPrivateKey(privateKey, { crypto });\n    if (typeof decoded === 'string') {\n        return formatError(decoded, undefined, throwErrors);\n    }\n    const node = deriveHdPublicNode(decoded.node, { crypto });\n    return encodeHdPublicKey({ network: decoded.network, node }, { crypto, throwErrors });\n};\n/**\n * Derive a child HD private node from an HD private node.\n *\n * To derive a child HD public node, use {@link deriveHdPublicNode} on the\n * result of this method. If the child uses a non-hardened index, it's also\n * possible to use {@link deriveHdPublicNodeChild}.\n *\n * Note that this function defaults to throwing errors. To handle errors in a\n * type-safe way, set `throwErrors` to `false`.\n *\n * This function has a less than 1 in 2^127 probability of producing\n * an invalid result (where the resulting private key is not a valid Secp256k1\n * private key, see {@link validateSecp256k1PrivateKey}). While this scenario is\n * unlikely to ever occur without a weakness in HMAC-SHA512, the\n * `returnInvalidNodes` parameter can be set to `true` to return the resulting\n * {@link HdPrivateNodeInvalid} rather than an error (defaults to `false`).\n *\n * @param node - The valid HD private node from which to derive the child node.\n * @param index - The index at which to derive the child node - indexes greater\n * than or equal to the hardened index offset (`0x80000000`/`2147483648`) are\n * derived using the \"hardened\" derivation algorithm.\n */\n// eslint-disable-next-line complexity\nexport const deriveHdPrivateNodeChild = (node, index, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n    sha512: internalSha512,\n}, throwErrors = true, returnInvalidNodes = false, } = {}) => {\n    const maximumIndex = 0xffffffff;\n    if (index > maximumIndex) {\n        return formatError(HdNodeDerivationError.childIndexExceedsMaximum, `Child index: ${index}.`, throwErrors);\n    }\n    const parentIdentifier = deriveHdPrivateNodeIdentifier(node, { crypto });\n    const parentFingerprint = parentIdentifier.slice(0, 4 /* Bip32Constants.parentFingerprintLength */);\n    const depth = node.depth + 1;\n    const hardenedIndexOffset = 0x80000000;\n    const useHardenedAlgorithm = index >= hardenedIndexOffset;\n    const keyMaterial = useHardenedAlgorithm\n        ? node.privateKey\n        : crypto.secp256k1.derivePublicKeyCompressed(node.privateKey);\n    const serialization = Uint8Array.from([\n        ...(useHardenedAlgorithm ? [0x00] : []),\n        ...keyMaterial,\n        ...numberToBinUint32BE(index),\n    ]);\n    const derivation = hmacSha512(node.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = derivation.slice(0, tweakValueLength);\n    const nextChainCode = derivation.slice(tweakValueLength);\n    const nextPrivateKey = crypto.secp256k1.addTweakPrivateKey(node.privateKey, tweakValue);\n    if (typeof nextPrivateKey === 'string') {\n        const error = formatError(HdNodeDerivationError.invalidDerivedKey, `Invalid child index: ${index}.`, throwErrors);\n        if (returnInvalidNodes) {\n            return {\n                chainCode: nextChainCode,\n                childIndex: index,\n                depth,\n                invalidMaterial: tweakValue,\n                parentFingerprint,\n                parentIdentifier,\n            };\n        }\n        return error;\n    }\n    return {\n        chainCode: nextChainCode,\n        childIndex: index,\n        depth,\n        parentFingerprint,\n        parentIdentifier,\n        privateKey: nextPrivateKey,\n    };\n};\n/**\n * Derive a non-hardened, child HD public node from an HD public node.\n *\n * Because hardened derivation also requires knowledge of the parent private\n * node, it's not possible to use an HD public node to derive a hardened child\n * HD public node. (See {@link deriveHdPath} or {@link deriveHdPublicNode}.)\n *\n * Though private keys cannot be derived from HD public keys, sharing HD public\n * keys still carries risk. Along with allowing an attacker to associate wallet\n * addresses together (breaking privacy), should an attacker gain knowledge of a\n * single child private key, **it's possible to derive all parent HD private\n * keys**. See {@link crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode}\n * for details.\n *\n * This function has a less than 1 in 2^127 probability of producing\n * an invalid result (where the resulting public key is not a valid Secp256k1\n * public key). While this scenario is unlikely to ever occur without a weakness\n * in HMAC-SHA512, the `returnInvalidNodes` parameter can be set to `true` to\n * return the resulting {@link HdPrivateNodeInvalid} rather than an error\n * (defaults to `false`).\n *\n * @param node - The valid HD public node from which to derive the child\n * public node.\n * @param index - The index at which to derive the child node.\n */\nexport const deriveHdPublicNodeChild = (node, index, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n    sha512: internalSha512,\n}, returnInvalidNodes = false, throwErrors = true, } = {}) => {\n    const hardenedIndexOffset = 0x80000000;\n    if (index >= hardenedIndexOffset) {\n        return formatError(HdNodeDerivationError.hardenedDerivationRequiresPrivateNode, `Requested index: ${index}.`, throwErrors);\n    }\n    const parentIdentifier = deriveHdPublicNodeIdentifier(node, { crypto });\n    const parentFingerprint = parentIdentifier.slice(0, 4 /* Bip32Constants.parentFingerprintLength */);\n    const depth = node.depth + 1;\n    const serialization = Uint8Array.from([\n        ...node.publicKey,\n        ...numberToBinUint32BE(index),\n    ]);\n    const derivation = hmacSha512(node.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = derivation.slice(0, tweakValueLength);\n    const nextChainCode = derivation.slice(tweakValueLength);\n    const nextPublicKey = crypto.secp256k1.addTweakPublicKeyCompressed(node.publicKey, tweakValue);\n    if (typeof nextPublicKey === 'string') {\n        const error = formatError(HdNodeDerivationError.invalidDerivedKey, `Invalid child index: ${index}.`, throwErrors);\n        if (returnInvalidNodes) {\n            return {\n                chainCode: nextChainCode,\n                childIndex: index,\n                depth,\n                invalidMaterial: tweakValue,\n                parentFingerprint,\n                parentIdentifier,\n            };\n        }\n        return error;\n    }\n    return {\n        chainCode: nextChainCode,\n        childIndex: index,\n        depth,\n        parentFingerprint,\n        parentIdentifier,\n        publicKey: nextPublicKey,\n    };\n};\n/**\n * Derive a child HD node from a parent node given a relative derivation path.\n * The resulting node is the same type as the parent node – private nodes return\n * private nodes, public nodes return public nodes. (To prevent implementation\n * errors, this function will not internally derive a public node from any\n * private node; for public derivation, use {@link deriveHdPublicNode} at the\n * desired BIP32 account level and provide the HD public key to this function.)\n *\n * Where possible, consider instead using {@link deriveHdPath} to reduce the\n * likelihood of implementation errors.\n *\n * By default, this function throws an `Error` rather than returning the error\n * as string when the provided path is invalid or cannot be derived from the\n * provided HD node (e.g. the path requests an excessive child index, a hardened\n * path is requested from a public node, or an astronomically rare HMAC-SHA512\n * result produces and invalid node).\n *\n * While the throwing behavior is reasonable for the common case of deriving\n * known, fixed paths (e.g. the BCH account as standardized by SLIP44 at\n * `m/44'/145'/0'`), **it is recommended that `throwErrors` be set to `false`\n * for use cases where dynamic or user-specified paths might be derived**. In\n * these cases, deliberate error handling is recommended, e.g. saving any data\n * and safely shutting down, displaying troubleshooting information to the\n * user, etc.\n *\n * The derivation path uses the notation specified in BIP32; see\n * {@link deriveHdPath} for details.\n *\n * @param node - The HD node from which to begin the derivation – for private\n * derivation, an {@link HdPrivateNodeValid}; for public derivation,\n * an {@link HdPublicNodeValid}.\n * @param path - The relative BIP32 derivation path, e.g. `1'/2` or `3/4/5`.\n */\nexport const deriveHdPathRelative = (node, path, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n    sha512: internalSha512,\n}, throwErrors = true, } = {}) => {\n    if (path === '') {\n        return node;\n    }\n    const validRelativeDerivationPath = /^(?:[0-9]+'?)(?:\\/[0-9]+'?)*$/u;\n    if (!validRelativeDerivationPath.test(path)) {\n        return formatError(HdNodeDerivationError.invalidRelativeDerivationPath, `Invalid path: \"${path}\".`, throwErrors);\n    }\n    const parsed = path.split('/');\n    const isPrivateDerivation = 'privateKey' in node;\n    const base = 10;\n    const hardenedIndexOffset = 0x80000000;\n    const indexes = parsed.map((index) => index.endsWith(\"'\")\n        ? parseInt(index.slice(0, -1), base) + hardenedIndexOffset\n        : parseInt(index, base));\n    return (isPrivateDerivation\n        ? indexes.reduce((result, nextIndex) => typeof result === 'string'\n            ? result\n            : deriveHdPrivateNodeChild(result, nextIndex, {\n                crypto,\n                throwErrors,\n            }), node)\n        : indexes.reduce((result, nextIndex) => typeof result === 'string'\n            ? result\n            : deriveHdPublicNodeChild(result, nextIndex, {\n                crypto,\n                throwErrors,\n            }), node));\n};\n/**\n * Derive a child HD node from a master node given an absolute derivation path.\n * The resulting node is the same type as the parent node – private nodes return\n * private nodes, public nodes return public nodes. (To prevent implementation\n * errors, this function will not internally derive a public node from any\n * private node; for public derivation, use {@link deriveHdPublicNode} at the\n * desired BIP32 account level and provide the HD public key to this function.)\n *\n * The derivation path uses the notation specified in BIP32: the first character\n * must be either `m` for private derivation or `M` for public derivation,\n * followed by sets of `/` and a number representing the child index used in the\n * derivation at that depth. Hardened derivation is represented by a trailing\n * `'`, and may only appear in private derivation paths (hardened derivation\n * requires knowledge of the private key). Hardened child indexes are\n * represented with the hardened index offset (`2147483648`) subtracted.\n *\n * For example, `m/0/1'/2` uses private derivation (`m`), with child indexes in\n * the following order:\n *\n * `derivePrivate(derivePrivate(derivePrivate(node, 0), 2147483648 + 1), 2)`\n *\n * Likewise, `M/3/4/5` uses public derivation (`M`), with child indexes in the\n * following order:\n *\n * `derivePublic(derivePublic(derivePublic(node, 3), 4), 5)`\n *\n * Because hardened derivation requires a private node, paths that specify\n * public derivation (`M`) using hardened derivation (`'`) will return an error.\n * To derive the public node associated with a child private node that requires\n * hardened derivation, begin with private derivation, then provide the result\n * to {@link deriveHdPublicNode} or {@link deriveHdPathRelative}.\n *\n * By default, this function throws an `Error` rather than returning the error\n * as string when the provided path is invalid or cannot be derived from the\n * provided HD node (e.g. the path requests an excessive child index, a hardened\n * path is requested from a public node, or an astronomically rare HMAC-SHA512\n * result produces and invalid node).\n *\n * While the throwing behavior is reasonable for the common case of deriving\n * known, fixed paths (e.g. the BCH account as standardized by SLIP44 at\n * `m/44'/145'/0'`), **it is recommended that `throwErrors` be set to `false`\n * for use cases where dynamic or user-specified paths might be derived**. In\n * these cases, deliberate error handling is recommended, e.g. saving any data\n * and safely shutting down, displaying troubleshooting information to the\n * user, etc.\n *\n * @param node - The HD node from which to begin the derivation – for paths\n * beginning with `m`, an {@link HdPrivateNodeValid}; for paths beginning with\n * `M`, an {@link HdPublicNodeValid}.\n * @param path - The BIP32 derivation path, e.g. `m/0/1'/2` or `M/3/4/5`.\n */\n// eslint-disable-next-line complexity\nexport const deriveHdPath = (node, path, { crypto = {\n    ripemd160: internalRipemd160,\n    secp256k1: internalSecp256k1,\n    sha256: internalSha256,\n    sha512: internalSha512,\n}, throwErrors = true, } = {}) => {\n    if (node.depth !== 0) {\n        return formatError(HdNodeDerivationError.requiresZeroDepthNode, `Depth of provided HD node: ${node.depth}.`, throwErrors);\n    }\n    const validDerivationPath = /^[mM](?:\\/[0-9]+'?)*$/u;\n    if (!validDerivationPath.test(path)) {\n        return formatError(HdNodeDerivationError.invalidAbsoluteDerivationPath, `Invalid path: \"${path}\".`, throwErrors);\n    }\n    const parsed = path.split('/');\n    const isPrivateDerivation = 'privateKey' in node;\n    if (isPrivateDerivation && parsed[0] !== 'm') {\n        return formatError(HdNodeDerivationError.invalidPrivateDerivationPrefix, `Invalid path: \"${path}\".`, throwErrors);\n    }\n    if (!isPrivateDerivation && parsed[0] !== 'M') {\n        return formatError(HdNodeDerivationError.invalidPublicDerivationPrefix, `Invalid path: \"${path}\".`, throwErrors);\n    }\n    if (parsed.length === 1) {\n        return node;\n    }\n    const relativePath = parsed.slice(1).join('/');\n    return deriveHdPathRelative(node, relativePath, {\n        crypto,\n        throwErrors,\n    });\n};\nexport var HdNodeCrackingError;\n(function (HdNodeCrackingError) {\n    HdNodeCrackingError[\"cannotCrackHardenedDerivation\"] = \"HD node cracking error: cannot crack an HD parent node using hardened child node.\";\n})(HdNodeCrackingError || (HdNodeCrackingError = {}));\n/**\n * Derive the HD private node from a HD public node, given any non-hardened\n * child private node.\n *\n * This exploits the \"non-hardened\" BIP32 derivation algorithm. Because\n * non-hardened derivation only requires knowledge of the \"chain code\" (rather\n * than requiring knowledge of the parent private key) it's possible to\n * calculate the value by which the parent private key is \"tweaked\" to arrive at\n * the child private key. Since we have the child private key, we simply\n * subtract this \"tweaked\" amount to get back to the parent private key.\n *\n * The BIP32 \"hardened\" derivation algorithm is designed to address this\n * weakness. Using hardened derivation, child private nodes can be shared\n * without risk of leaking the parent private node, but this comes at the cost\n * of public node derivation. Given only a parent public node, it is not\n * possible to derive hardened child public keys, so applications must choose\n * between support for HD public node derivation or support for sharing child\n * private nodes.\n *\n * @param parentPublicNode - the parent HD public node for which to derive a\n * private node.\n * @param childPrivateNode - Any non-hardened child private node of the parent\n * node (only the `privateKey` and the `childIndex` are required).\n */\nexport const crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode = (parentPublicNode, childPrivateNode, { crypto = { sha512: internalSha512 }, } = {}) => {\n    const hardenedIndexOffset = 0x80000000;\n    if (childPrivateNode.childIndex >= hardenedIndexOffset) {\n        return HdNodeCrackingError.cannotCrackHardenedDerivation;\n    }\n    const serialization = Uint8Array.from([\n        ...parentPublicNode.publicKey,\n        ...numberToBinUint32BE(childPrivateNode.childIndex),\n    ]);\n    const derivation = hmacSha512(parentPublicNode.chainCode, serialization, crypto.sha512);\n    const tweakValueLength = 32;\n    const tweakValue = binToBigIntUint256BE(derivation.slice(0, tweakValueLength));\n    const childPrivateValue = binToBigIntUint256BE(childPrivateNode.privateKey);\n    const secp256k1OrderN = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\n    const trueMod = (n, m) => ((n % m) + m) % m;\n    const parentPrivateValue = trueMod(childPrivateValue - tweakValue, secp256k1OrderN);\n    const privateKey = bigIntToBinUint256BEClamped(parentPrivateValue);\n    return {\n        chainCode: parentPublicNode.chainCode,\n        childIndex: parentPublicNode.childIndex,\n        depth: parentPublicNode.depth,\n        parentFingerprint: parentPublicNode.parentFingerprint,\n        ...(parentPublicNode.parentIdentifier === undefined\n            ? {}\n            : { parentIdentifier: parentPublicNode.parentIdentifier }),\n        privateKey,\n    };\n};\n//# sourceMappingURL=hd-key.js.map","import { sha256 as internalSha256 } from '../crypto/crypto.js';\nimport { binsAreEqual, formatError } from '../format/format.js';\nimport { deriveHdPrivateNodeFromSeed, validateSecp256k1PrivateKey, } from './hd-key.js';\nexport var EntropyGenerationError;\n(function (EntropyGenerationError) {\n    EntropyGenerationError[\"duplicateResults\"] = \"Entropy generation error: the \\\"getRandomValues\\\" function provided by this JavaScript environment returned duplicate results across two evaluations; entropy generation was halted for safety.\";\n    EntropyGenerationError[\"insufficientEntropy\"] = \"Entropy generation error: the provided list of events contains insufficient entropy.\";\n})(EntropyGenerationError || (EntropyGenerationError = {}));\n/**\n * Generate a Uint8Array of the specified length containing a\n * cryptographically-random series of bytes. See {@link generateRandomBytes} for\n * a safer alternative.\n *\n * @param length - the length of the Uint8Array to generate\n * @param cryptoInstance - an instance of the `Crypto` object with the\n * `getRandomValues` function (defaults to the `crypto` global property).\n */\nexport const generateRandomBytesUnchecked = (length, cryptoInstance = crypto) => cryptoInstance.getRandomValues(new Uint8Array(length));\n/**\n * Generate a Uint8Array of the specified length containing a\n * cryptographically-random series of bytes.\n *\n * For safety, this function first verifies that the provided `generate`\n * function produces unique results across two evaluations; by default, this\n * verifies that the `crypto.getRandomValues` function provided by the\n * JavaScript environment appears to be producing random values.\n *\n * While this validation can't prevent a compromised environment from producing\n * attacker-known entropy, it may help to prevent software defects in unusual\n * environments (e.g. React Native) from impacting end-user security.\n *\n * An `Error` is thrown if this validation fails, otherwise, the `Uint8Array`\n * produced by the first evaluation is returned.\n *\n * @param length - the length of the Uint8Array to generate\n * @param generate - a function used to generate the random bytes, defaults\n * to {@link generateRandomBytesUnchecked}.\n */\nexport const generateRandomBytes = (length, generate = generateRandomBytesUnchecked) => {\n    const firstRun = generate(length);\n    const secondRun = generate(length);\n    if (firstRun === secondRun || binsAreEqual(firstRun, secondRun))\n        return formatError(EntropyGenerationError.duplicateResults, `First result: [${String(firstRun)}]; second result: [${String(secondRun)}].`, true);\n    return firstRun;\n};\n/**\n * Securely generate a 32-byte, cryptographically random seed (Uint8Array) for\n * use in Hierarchical Deterministic (HD) Key derivation\n * (see {@link deriveHdPrivateNodeFromSeed}).\n *\n * To generate a single Secp256k1 private key, use {@link generatePrivateKey}.\n */\nexport const generateRandomSeed = () => generateRandomBytes(32 /* KeyUtilConstants.privateKeyLength */);\n/**\n * Securely generate a valid Secp256k1 private key.\n *\n * By default, this function uses `crypto.getRandomValues` to produce\n * sufficiently-random key material, but another source of randomness may also\n * be provided.\n *\n * To generate an HD Key, use {@link generateHdPrivateKey}.\n *\n * @param secureRandom - a method that returns a securely-random 32-byte\n * Uint8Array\n */\nexport const generatePrivateKey = (secureRandom = generateRandomSeed) => {\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let maybeKey;\n    // eslint-disable-next-line functional/no-loop-statements\n    do {\n        // eslint-disable-next-line functional/no-expression-statements\n        maybeKey = secureRandom();\n    } while (!validateSecp256k1PrivateKey(maybeKey));\n    return maybeKey;\n};\n/**\n * Securely generate a valid {@link HdPrivateNode}, returning both the source\n * seed and the {@link HdPrivateNodeValid}.\n *\n * By default, this function uses `crypto.getRandomValues` to produce\n * sufficiently-random key material, but another source of randomness may also\n * be provided.\n *\n * To generate a single Secp256k1 private key, use {@link generatePrivateKey}.\n */\nexport const generateHdPrivateNode = (secureRandom = generateRandomSeed) => {\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let seed;\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let hdPrivateNode;\n    // eslint-disable-next-line functional/no-loop-statements\n    do {\n        // eslint-disable-next-line functional/no-expression-statements\n        seed = secureRandom();\n        // eslint-disable-next-line functional/no-expression-statements\n        hdPrivateNode = deriveHdPrivateNodeFromSeed(seed);\n    } while ('invalidMaterial' in hdPrivateNode);\n    return {\n        hdPrivateNode,\n        seed,\n    };\n};\n/*\n * TODO: export const generateLibauthSecretKey = (secureRandom = generateRandomSeed) => {\n *   const { seed } = generateHdPrivateNode(secureRandom);\n *   return encodeLibauthSecretKey({ seed });\n * };\n */\n/**\n * Given the number of equally-likely results per event, return the Shannon\n * entropy of the event in bits.\n *\n * @param possibleResults - the number of equally-likely results per event;\n * e.g. for a coin, `2`, for dice, the number of faces (for a standard die, `6`)\n */\nexport const shannonEntropyPerEvent = (possibleResults) => Math.log2(possibleResults);\n/**\n * Given the number of equally-likely results per event, return the number of\n * events required to achieve the required bits of Shannon entropy.\n * entropy of the event in bits.\n *\n * For example, to compute the number of standard, 6-sided dice rolls required\n * to generate a private key (with the recommended 128-bit entropy minimum),\n * `minimumEventsPerEntropyBits(6)`.\n *\n * @param possibleResults - the number of equally-likely results per event;\n * e.g. for a coin, `2`, for dice, the number of faces (for a standard die, `6`)\n * @param requiredEntropyBits - the number of bits of entropy required. Defaults\n * to `128`, the recommended value for all private key generation.\n */\nexport const minimumEventsPerEntropyBits = (possibleResults, requiredEntropyBits = 128 /* KeyUtilConstants.privateKeyRequiredEntropyBits */) => Math.ceil(requiredEntropyBits / shannonEntropyPerEvent(possibleResults));\n/**\n * Generate deterministic entropy by seeding SHA-256 with a list of random\n * events like coin flips or dice rolls. For coin flips, use `0` (\"heads\") and\n * `1` (\"tails\"); for dice, use the visible number.\n *\n * **Warning: this function's validation assumes that the provided events\n * are truly random (\"unbiased\").** If the events are biased, e.g. by a weighted\n * dice or a human attempting to type random numbers, the entropy of this\n * function's result will be degraded. Using insufficiently random results will\n * compromise the security of systems relying on the result, making it possible\n * for an attacker to, e.g. guess secret keys and steal funds.\n *\n * This method of entropy generation is designed to be easily auditable: the\n * list of results are simply concatenated (without any spaces or separating\n * characters), and the UTF8 encoding of the resulting string of digits is\n * hashed with SHA-256.\n *\n * For example, if a 20-sided dice (D20) is rolled 3 times with results 13, 4,\n * and 10, the UTF8 encoding of `13410` (`0x3133343130`) is hashed with SHA-256,\n * producing a result of\n * `6dd4f2758287be9f38e0e93c71146c76e90f83f0b8c9b49760fc0b594494607b`. This can\n * be verified in most command line environments with the command:\n * `echo -n 13410 | sha256sum`.\n *\n * Note that this function is compatible with Coldcard's deterministic key\n * generation workflow when used with six-sided dice (D6).\n *\n * @param possibleResults - the number of equally-likely results per event;\n * e.g. for a coin, `2`, for dice, the number of faces (for a standard die, `6`)\n * @param events - an array of numbers encoding the random events; for coin\n * flips, use `0` (\"heads\") and `1` (\"tails\"); for dice, use the exposed number\n * (e.g. `1` through `6` for 6-sided dice)\n * @param requiredEntropyBits - the number of bits of entropy required. Defaults\n * to `128`, the recommended value for all private key generation.\n * @param crypto - an optional object containing an implementation of sha256\n * to use\n */\nexport const generateDeterministicEntropy = (possibleResults, events, { crypto = { sha256: internalSha256 }, requiredEntropyBits = 128 /* KeyUtilConstants.privateKeyRequiredEntropyBits */, } = {}) => {\n    const minimumEventCount = minimumEventsPerEntropyBits(possibleResults, requiredEntropyBits);\n    if (possibleResults === 0 || events.length < minimumEventCount) {\n        return formatError(EntropyGenerationError.insufficientEntropy, `With ${possibleResults} possible results per event, a minimum of ${minimumEventCount} events are required to obtain sufficient entropy. Events provided: ${events.length}.`);\n    }\n    const concatenatedDigits = [...events.join('')].map((digit) => Number(digit) + 48 /* KeyUtilConstants.utf8NumbersOffset */);\n    const source = Uint8Array.from(concatenatedDigits);\n    return crypto.sha256.hash(source);\n};\n// TODO: export const generateLibauthSecretKeyFromCoinFlips = () => {}\n// TODO: export const generateLibauthSecretKeyFromDiceRolls = () => {}\n//# sourceMappingURL=key-utils.js.map","import { Base58AddressFormatVersion, decodeBase58AddressFormat, encodeBase58AddressFormat, } from '../address/address.js';\nimport { sha256 as internalSha256 } from '../crypto/crypto.js';\nexport var WalletImportFormatError;\n(function (WalletImportFormatError) {\n    WalletImportFormatError[\"incorrectLength\"] = \"The WIF private key payload is not the correct length.\";\n})(WalletImportFormatError || (WalletImportFormatError = {}));\n/**\n * Encode a private key using Wallet Import Format (WIF).\n *\n * WIF encodes the 32-byte private key, a 4-byte checksum, and a `type`\n * indicating the intended usage for the private key. See\n * {@link WalletImportFormatType} for details.\n *\n * @remarks\n * WIF-encoding uses the Base58Address format with version\n * {@link Base58AddressFormatVersion.wif} (`128`/`0x80`) or\n * {@link Base58AddressFormatVersion.wifTestnet} (`239`/`0xef`), respectively.\n *\n * To indicate that the private key is intended for use in a P2PKH address using\n * the compressed form of its derived public key, a `0x01` is appended to the\n * payload prior to encoding. For the uncompressed construction, the extra byte\n * is omitted.\n *\n * For the reverse, see {@link decodePrivateKeyWif}.\n *\n * @param privateKey - a 32-byte Secp256k1 ECDSA private key\n * @param type - the intended usage of the private key (e.g. `mainnet` or\n * `testnet`)\n * @param sha256 - an implementation of sha256\n */\nexport const encodePrivateKeyWif = (privateKey, type, sha256 = internalSha256) => {\n    const compressedByte = 0x01;\n    const mainnet = type === 'mainnet' || type === 'mainnetUncompressed';\n    const compressed = type === 'mainnet' || type === 'testnet';\n    const payload = compressed\n        ? Uint8Array.from([...privateKey, compressedByte])\n        : privateKey;\n    return encodeBase58AddressFormat(mainnet\n        ? Base58AddressFormatVersion.wif\n        : Base58AddressFormatVersion.wifTestnet, payload, sha256);\n};\n/**\n * Decode a private key using Wallet Import Format (WIF). See\n * {@link encodePrivateKeyWif} for details.\n *\n * For the reverse, use {@link encodePrivateKeyWif}.\n *\n * @param wifKey - the private key to decode (in Wallet Import Format)\n * @param sha256 - an implementation of sha256\n */\n// eslint-disable-next-line complexity\nexport const decodePrivateKeyWif = (wifKey, sha256 = internalSha256) => {\n    const compressedPayloadLength = 33;\n    const decoded = decodeBase58AddressFormat(wifKey, sha256);\n    if (typeof decoded === 'string')\n        return decoded;\n    const mainnet = decoded.version === Base58AddressFormatVersion.wif;\n    const compressed = decoded.payload.length === compressedPayloadLength;\n    const privateKey = compressed\n        ? decoded.payload.slice(0, -1)\n        : decoded.payload;\n    const type = mainnet\n        ? compressed\n            ? 'mainnet'\n            : 'mainnetUncompressed'\n        : compressed\n            ? 'testnet'\n            : 'testnetUncompressed';\n    return { privateKey, type };\n};\n//# sourceMappingURL=wallet-import-format.js.map","export var IdentifierResolutionType;\n(function (IdentifierResolutionType) {\n    IdentifierResolutionType[\"opcode\"] = \"opcode\";\n    IdentifierResolutionType[\"variable\"] = \"variable\";\n    IdentifierResolutionType[\"script\"] = \"script\";\n})(IdentifierResolutionType || (IdentifierResolutionType = {}));\nexport var IdentifierResolutionErrorType;\n(function (IdentifierResolutionErrorType) {\n    IdentifierResolutionErrorType[\"unknown\"] = \"unknown\";\n    IdentifierResolutionErrorType[\"variable\"] = \"variable\";\n    IdentifierResolutionErrorType[\"script\"] = \"script\";\n})(IdentifierResolutionErrorType || (IdentifierResolutionErrorType = {}));\n//# sourceMappingURL=language-types.js.map","/* eslint-disable max-lines */\nimport { binToHex, flattenBinArray } from '../format/format.js';\nimport { authenticationInstructionIsMalformed, decodeAuthenticationInstructions, encodeAuthenticationInstructionMalformed, executionIsActive, OpcodesBch, vmNumberToBigInt, } from '../vm/vm.js';\nconst pluckStartPosition = (range) => ({\n    startColumn: range.startColumn,\n    startLineNumber: range.startLineNumber,\n});\nconst pluckEndPosition = (range) => ({\n    endColumn: range.endColumn,\n    endLineNumber: range.endLineNumber,\n});\n/**\n * Combine an array of `Range`s into a single larger `Range`.\n *\n * @param ranges - an array of `Range`s\n * @param parentRange - the range to assume if `ranges` is an empty array\n */\nexport const mergeRanges = (ranges, parentRange = {\n    endColumn: 0,\n    endLineNumber: 0,\n    startColumn: 0,\n    startLineNumber: 0,\n}) => {\n    const minimumRangesToMerge = 2;\n    const unsortedMerged = ranges.length < minimumRangesToMerge\n        ? ranges.length === 1\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                ranges[0]\n            : parentRange\n        : ranges.reduce(\n        // eslint-disable-next-line complexity\n        (merged, range) => ({\n            ...(range.endLineNumber > merged.endLineNumber\n                ? pluckEndPosition(range)\n                : range.endLineNumber === merged.endLineNumber &&\n                    range.endColumn > merged.endColumn\n                    ? pluckEndPosition(range)\n                    : pluckEndPosition(merged)),\n            ...(range.startLineNumber < merged.startLineNumber\n                ? pluckStartPosition(range)\n                : range.startLineNumber === merged.startLineNumber &&\n                    range.startColumn < merged.startColumn\n                    ? pluckStartPosition(range)\n                    : pluckStartPosition(merged)),\n        }), \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        ranges[0]);\n    return {\n        ...pluckEndPosition(unsortedMerged),\n        ...pluckStartPosition(unsortedMerged),\n    };\n};\n/**\n * Returns `true` if the `outerRange` fully contains the `innerRange`, otherwise,\n * `false`.\n *\n * @param outerRange - the bounds of the outer range\n * @param innerRange - the inner range to test\n * @param exclusive - disallow the `innerRange` from overlapping the\n * `outerRange` (such that the outer start and end columns may not be equal) –\n * defaults to `true`\n */\n// eslint-disable-next-line complexity\nexport const containsRange = (outerRange, innerRange, exclusive = true) => {\n    const startsAfter = outerRange.startLineNumber < innerRange.startLineNumber\n        ? true\n        : outerRange.startLineNumber === innerRange.startLineNumber\n            ? exclusive\n                ? outerRange.startColumn < innerRange.startColumn\n                : outerRange.startColumn <= innerRange.startColumn\n            : false;\n    const endsBefore = outerRange.endLineNumber > innerRange.endLineNumber\n        ? true\n        : outerRange.endLineNumber === innerRange.endLineNumber\n            ? exclusive\n                ? outerRange.endColumn > innerRange.endColumn\n                : outerRange.endColumn >= innerRange.endColumn\n            : false;\n    return startsAfter && endsBefore;\n};\n/**\n * Returns `true` if the provided ranges are exactly equivalent.\n * @param a - the first range\n * @param b - the second range\n */\nexport const rangesAreEqual = (a, b) => a.startLineNumber === b.startLineNumber &&\n    a.startColumn === b.startColumn &&\n    a.endLineNumber === b.endLineNumber &&\n    a.endColumn === b.endColumn;\n/**\n * Extract a list of the errors that occurred while resolving a script.\n *\n * @param resolvedScript - the result of {@link resolveScript} from which to\n * extract errors\n */\nexport const getResolutionErrors = (resolvedScript) => resolvedScript.reduce((errors, segment) => {\n    switch (segment.type) {\n        case 'error':\n            return [\n                ...errors,\n                {\n                    error: segment.value,\n                    ...(segment.missingIdentifier === undefined\n                        ? {}\n                        : {\n                            missingIdentifier: segment.missingIdentifier,\n                            owningEntity: segment.owningEntity,\n                        }),\n                    range: segment.range,\n                },\n            ];\n        case 'push':\n        case 'evaluation':\n            return [...errors, ...getResolutionErrors(segment.value)];\n        default:\n            return errors;\n    }\n}, []);\n/**\n * Verify that every error in the provided array can be resolved by providing\n * additional variables in the compilation data (rather than deeper issues, like\n * problems with the wallet template or wallet implementation).\n *\n * Note, errors are only recoverable if the \"entity ownership\" of each missing\n * identifier is known (specified in `CompilationData`'s `entityOwnership`).\n *\n * @param errors - an array of compilation errors\n */\nexport const allErrorsAreRecoverable = (errors) => errors.every((error) => 'missingIdentifier' in error && 'owningEntity' in error);\n/**\n * Get an array of all resolutions used in a {@link ResolvedScript}.\n * @param resolvedScript - the resolved script to search\n */\nexport const extractBytecodeResolutions = (resolvedScript) => \n// eslint-disable-next-line complexity\nresolvedScript.reduce((all, segment) => {\n    switch (segment.type) {\n        case 'push':\n        case 'evaluation':\n            return [...all, ...extractBytecodeResolutions(segment.value)];\n        case 'bytecode':\n            if ('variable' in segment) {\n                return [\n                    ...all,\n                    {\n                        bytecode: segment.value,\n                        text: segment.variable,\n                        type: 'variable',\n                    },\n                ];\n            }\n            if ('script' in segment) {\n                return [\n                    ...all,\n                    ...extractBytecodeResolutions(segment.source.resolve),\n                    {\n                        bytecode: segment.value,\n                        text: segment.script,\n                        type: 'script',\n                    },\n                ];\n            }\n            if ('opcode' in segment) {\n                return [\n                    ...all,\n                    {\n                        bytecode: segment.value,\n                        text: segment.opcode,\n                        type: 'opcode',\n                    },\n                ];\n            }\n            return [\n                ...all,\n                {\n                    bytecode: segment.value,\n                    text: segment.literal,\n                    type: segment.literalType,\n                },\n            ];\n        default:\n            return all;\n    }\n}, []);\n/**\n * Extract an object mapping the variable identifiers used in a\n * {@link ResolvedScript} to their resolved bytecode.\n *\n * @param resolvedScript - the resolved script to search\n */\nexport const extractResolvedVariableBytecodeMap = (resolvedScript) => extractBytecodeResolutions(resolvedScript).reduce((all, resolution) => resolution.type === 'variable'\n    ? { ...all, [resolution.text]: resolution.bytecode }\n    : all, {});\n/**\n * Format a list of {@link CompilationError}s into a single string, with an\n * error start position following each error. E.g. for line 1, column 2:\n * `The error message. [1, 2]`\n *\n * Errors are separated with the `separator`, which defaults to `; `, e.g.:\n * `The first error message. [1, 2]; The second error message. [3, 4]`\n *\n * @param errors - an array of compilation errors\n * @param separator - the characters with which to join the formatted errors.\n */\nexport const stringifyErrors = (errors, separator = '; ') => errors\n    .map((error) => `[${error.range.startLineNumber}, ${error.range.startColumn}] ${error.error}`)\n    .join(separator);\n/**\n * Extract a set of \"evaluation samples\" from the result of a CashAssembly\n * compilation and a matching debug trace (from `vm.debug`), pairing program\n * states with the source ranges that produced them – like a \"source map\" for\n * complete evaluations. This is useful for omniscient debuggers like\n * Bitauth IDE.\n *\n * Returns an array of samples and an array of unmatched program states\n * remaining if `nodes` doesn't contain enough instructions to consume all\n * program states provided in `trace`. Returned samples are ordered by the\n * ending position (line and column) of their range.\n *\n * If all program states are consumed before the available nodes are exhausted,\n * the remaining nodes are ignored (the produced samples end at the last\n * instruction for which a program state exists). This usually occurs when an\n * error halts evaluation before the end of the script. (Note: if this occurs,\n * the final trace state will not be used, as it is expected to be the\n * duplicated final result produced by `vm.debug`, and should not be matched\n * with the next instruction. The returned `unmatchedStates` will have a length\n * of `0`.)\n *\n * This method allows for samples to be extracted from a single evaluation;\n * most applications should use\n * {@link extractEvaluationSamplesRecursive} instead.\n *\n * @remarks\n * This method incrementally concatenates the reduced bytecode from each node,\n * parsing the result into evaluation samples.\n *\n * Each node can contain only a portion of an instruction (like a long push\n * operation), or it can contain multiple instructions (like a long hex literal\n * representing a string of bytecode or an evaluation that is not wrapped by a\n * push).\n *\n * If a node contains only a portion of an instruction, the bytecode from\n * additional nodes are concatenated (and ranges merged) until an instruction\n * can be created. If any bytecode remains after a sample has been created, the\n * next sample begins in the same range. (For this reason, it's possible that\n * samples overlap.)\n *\n * If a node contains more than one instruction, the intermediate states\n * produced before the final state for that sample are saved to the sample's\n * `intermediateStates` array.\n *\n * If the program states in `trace` are exhausted before the final instruction\n * in a sample (usually caused by an evaluation error), the last instruction\n * with a matching program state is used for the sample (with its program\n * state), and the unmatched instructions are ignored. (This allows the \"last\n * known state\" to be displayed for the sample that caused evaluation to halt.)\n *\n * ---\n *\n * For example, the following script demonstrates many of these cases:\n *\n * `0x00 0x01 0xab01 0xcd9300 $(OP_3 <0x00> OP_SWAP OP_CAT) 0x010203`\n *\n * Which compiles to `0x0001ab01cd93000003010203`, disassembled:\n *\n * `OP_0 OP_PUSHBYTES_1 0xab OP_PUSHBYTES_1 0xcd OP_ADD OP_0 OP_0 OP_PUSHBYTES_3 0x010203`\n *\n * In the script, there are 6 top-level nodes (identified below within `[]`):\n *\n * `[0x00] [0x01] [0xab01] [0xcd9300] [$(OP_3 <0x00> OP_SWAP OP_CAT)] [0x010203]`\n *\n * These nodes together encode 7 instructions, some within a single node, and\n * some split between several nodes. Below we substitute the evaluation for its\n * result `0x0003` to group instructions by `[]`:\n *\n * `[0x00] [0x01 0xab][01 0xcd][93][00] [0x00][03 0x010203]`\n *\n * The \"resolution\" of samples is limited to the range of single nodes: nodes\n * cannot always be introspected to determine where contained instructions begin\n * and end. For example, it is ambiguous which portions of the evaluation are\n * responsible for the initial `0x00` and which are responsible for the `0x03`.\n *\n * For this reason, the range of each sample is limited to the range(s) of one\n * or more adjacent nodes. Samples may overlap in the range of a node that is\n * responsible for both ending a previous sample and beginning a new sample.\n * (Though, only 2 samples can overlap. If a node is responsible for more than 2\n * instructions, the second sample includes `internalStates` for instructions\n * that occur before the end of the second sample.)\n *\n * In this case, there are 6 samples identified below within `[]`, where each\n * `[` is closed by the closest following `]` (no nesting):\n *\n * `[0x00] [0x01 [0xab01] [0xcd9300]] [[$(OP_3 <0x00> OP_SWAP OP_CAT)] 0x010203]`\n *\n * The ranges for each sample (in terms of nodes) are as follows:\n * - Sample 1: node 1\n * - Sample 2: node 2 + node 3\n * - Sample 3: node 3 + node 4\n * - Sample 4: node 4\n * - Sample 5: node 5\n * - Sample 6: node 5 + node 6\n *\n * Note that the following samples overlap:\n * - Sample 2 and Sample 3\n * - Sample 3 and Sample 4\n * - Sample 5 and Sample 6\n *\n * Finally, note that Sample 4 will have one internal state produced by the\n * `OP_ADD` instruction. Sample 4 then ends with the `OP_0` (`0x00`) instruction\n * at the end of the `0xcd9300` node.\n *\n * ---\n *\n * Note, this implementation relies on the expectation that `trace` begins with\n * the initial program state, contains a single program state per instruction,\n * and ends with the final program state (as produced by `vm.debug`). It also\n * expects the `bytecode` provided by nodes to be parsable by\n * {@link decodeAuthenticationInstructions}.\n */\n// eslint-disable-next-line complexity\nexport const extractEvaluationSamples = ({ evaluationRange, ipOffset = 0, nodes, trace, }) => {\n    const labeledStackItems = [];\n    const traceWithoutFinalState = trace.length > 1 ? trace.slice(0, -1) : trace.slice();\n    if (traceWithoutFinalState.length === 0) {\n        return {\n            labeledStackItems,\n            samples: [],\n            unmatchedStates: [],\n        };\n    }\n    const samples = [\n        {\n            evaluationRange,\n            internalStates: [],\n            range: {\n                endColumn: evaluationRange.startColumn,\n                endLineNumber: evaluationRange.startLineNumber,\n                startColumn: evaluationRange.startColumn,\n                startLineNumber: evaluationRange.startLineNumber,\n            },\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            state: traceWithoutFinalState[0],\n        },\n    ];\n    const stateByIp = traceWithoutFinalState.reduce((byIp, state) => {\n        const adjustedIp = state.ip - ipOffset;\n        const atIndex = byIp[adjustedIp] ?? [];\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        atIndex.push(state);\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        byIp[adjustedIp] = atIndex;\n        return byIp;\n    }, []);\n    // eslint-disable-next-line functional/no-let\n    let nextState = 1;\n    // eslint-disable-next-line functional/no-let\n    let nextNode = 0;\n    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations\n    let incomplete;\n    // eslint-disable-next-line functional/no-loop-statements\n    while (nextState < stateByIp.length && nextNode < nodes.length) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const currentNode = nodes[nextNode];\n        const { mergedBytecode, mergedRange } = incomplete === undefined\n            ? {\n                mergedBytecode: currentNode.bytecode,\n                mergedRange: currentNode.range,\n            }\n            : {\n                mergedBytecode: flattenBinArray([\n                    incomplete.bytecode,\n                    currentNode.bytecode,\n                ]),\n                mergedRange: mergeRanges([incomplete.range, currentNode.range]),\n            };\n        const decoded = decodeAuthenticationInstructions(mergedBytecode);\n        const [zeroth] = decoded;\n        const hasNonMalformedInstructions = zeroth !== undefined && !('malformed' in zeroth);\n        if ('comment' in currentNode) {\n            const sourceSample = samples.length - 1;\n            const lastSampleStack = samples[sourceSample]?.state.stack;\n            const match = /\\[\\[(?<hint>[\\s\\S]*?)\\]\\]/u.exec(currentNode.comment);\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (lastSampleStack && match) {\n                const { hint } = match.groups;\n                const labels = hint\n                    .split(',')\n                    .map((label) => label.trim())\n                    .reverse();\n                // eslint-disable-next-line functional/no-expression-statements, functional/no-return-void\n                labels.forEach((label, itemDepth) => {\n                    const stackItem = lastSampleStack[lastSampleStack.length - (1 + itemDepth)];\n                    /**\n                     * Labels for excessive depths are silently ignored. This can happen\n                     * frequently when a program is being modified, and the label may\n                     * become useful again moments later.\n                     */\n                    if (stackItem === undefined)\n                        return;\n                    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statements\n                    labeledStackItems.push({\n                        itemDepth,\n                        label,\n                        sourceSample,\n                        value: binToHex(stackItem),\n                    });\n                });\n            }\n        }\n        if (hasNonMalformedInstructions) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const lastInstruction = decoded[decoded.length - 1];\n            const validInstructions = authenticationInstructionIsMalformed(lastInstruction)\n                ? decoded.slice(0, decoded.length - 1)\n                : decoded;\n            const firstUnmatchedStateIndex = nextState + validInstructions.length;\n            const matchingIps = stateByIp.slice(nextState, firstUnmatchedStateIndex);\n            const pairedStates = validInstructions.map((instruction, index) => ({\n                instruction,\n                iterations: matchingIps[index]?.slice(1),\n                state: matchingIps[index]?.[0],\n            }));\n            /**\n             * Guaranteed to have a defined `state` (or the loop would have exited).\n             */\n            const firstPairedState = pairedStates[0];\n            const closesCurrentlyOpenSample = incomplete !== undefined;\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (closesCurrentlyOpenSample) {\n                // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n                samples.push({\n                    evaluationRange,\n                    instruction: firstPairedState.instruction,\n                    internalStates: [],\n                    iterations: firstPairedState.iterations,\n                    range: mergedRange,\n                    state: firstPairedState.state,\n                });\n            }\n            const firstUndefinedStateIndex = pairedStates.findIndex(({ state }) => state === undefined);\n            const sampleHasError = firstUndefinedStateIndex !== -1;\n            const sampleClosingIndex = sampleHasError\n                ? firstUndefinedStateIndex - 1\n                : pairedStates.length - 1;\n            const closesASecondSample = !closesCurrentlyOpenSample || sampleClosingIndex > 0;\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (closesASecondSample) {\n                const finalState = pairedStates[sampleClosingIndex];\n                const secondSamplePairsBegin = closesCurrentlyOpenSample ? 1 : 0;\n                const internalStates = pairedStates.slice(secondSamplePairsBegin, sampleClosingIndex);\n                // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n                samples.push({\n                    evaluationRange,\n                    instruction: finalState.instruction,\n                    internalStates,\n                    iterations: finalState.iterations,\n                    range: currentNode.range,\n                    state: finalState.state,\n                });\n            }\n            // eslint-disable-next-line functional/no-expression-statements\n            nextState = firstUnmatchedStateIndex;\n            // eslint-disable-next-line functional/no-conditional-statements\n            if (authenticationInstructionIsMalformed(lastInstruction)) {\n                // eslint-disable-next-line functional/no-expression-statements\n                incomplete = {\n                    bytecode: encodeAuthenticationInstructionMalformed(lastInstruction),\n                    range: currentNode.range,\n                };\n                // eslint-disable-next-line functional/no-conditional-statements\n            }\n            else {\n                // eslint-disable-next-line functional/no-expression-statements\n                incomplete = undefined;\n            }\n            // eslint-disable-next-line functional/no-conditional-statements\n        }\n        else {\n            const lastInstruction = decoded[decoded.length - 1];\n            // eslint-disable-next-line functional/no-expression-statements\n            incomplete =\n                lastInstruction === undefined\n                    ? undefined\n                    : {\n                        bytecode: encodeAuthenticationInstructionMalformed(lastInstruction),\n                        range: mergedRange,\n                    };\n        }\n        // eslint-disable-next-line functional/no-expression-statements\n        nextNode += 1;\n    }\n    /**\n     * Because we ran out of `trace` states before all `nodes` were matched, we\n     * know an error occurred which halted evaluation. This error is indicated in\n     * the result by returning an empty array of `unmatchedStates`. Successful\n     * evaluations will always return at least one unmatched state: the final\n     * \"evaluation result\" state produced by `vm.debug`.\n     */\n    const errorOccurred = nextNode < nodes.length;\n    const unmatchedStates = errorOccurred\n        ? []\n        : trace.slice(nextState);\n    return {\n        labeledStackItems,\n        samples,\n        unmatchedStates,\n    };\n};\n/**\n * Similar to {@link extractEvaluationSamples}, but recursively extracts samples\n * from evaluations within the provided array of nodes.\n *\n * Because CashAssembly evaluations are fully self-contained, there should never\n * be unmatched states from evaluations within a script reduction trace tree.\n * (For this reason, this method does not return the `unmatchedStates` from\n * nested evaluations.)\n *\n * Returned samples are ordered by the ending position (line and column) of\n * their range. Samples from CashAssembly evaluations that occur within an\n * outer evaluation appear before their parent sample (which uses their result).\n */\nexport const extractEvaluationSamplesRecursive = ({ \n/**\n * The range of the script node that was evaluated to produce the `trace`\n */\nevaluationRange, \n/**\n * An array of reduced nodes to parse\n */\nnodes, \n/**\n * The `vm.debug` result to map to these nodes\n */\ntrace, \n/**\n * The value to subtract from every `ip` when mapping the top-level trace to\n * nodes. This is useful in cases where sections of a trace must be mapped to\n * independent scripts, e.g. Bitauth IDE's \"tested\" + \"test-check\" scripts.\n */\nipOffset = 0, }) => {\n    const statesNotProducedByFunctionInvocation = (state) => !state.controlStack.some((item) => typeof item === 'object');\n    const extractEvaluations = (node, depth = 1) => {\n        if ('push' in node) {\n            return node.push.script.reduce((all, childNode) => [...all, ...extractEvaluations(childNode, depth)], []);\n        }\n        if ('source' in node) {\n            const childSamples = node.source.script.reduce((all, childNode) => [\n                ...all,\n                ...extractEvaluations(childNode, depth + 1),\n            ], []);\n            const traceWithoutUnlockingPhase = node.trace\n                .slice(1)\n                .filter(statesNotProducedByFunctionInvocation);\n            const evaluationBeginToken = '$(';\n            const evaluationEndToken = ')';\n            const extracted = extractEvaluationSamples({\n                evaluationRange: {\n                    endColumn: node.range.endColumn - evaluationEndToken.length,\n                    endLineNumber: node.range.endLineNumber,\n                    startColumn: node.range.startColumn + evaluationBeginToken.length,\n                    startLineNumber: node.range.startLineNumber,\n                },\n                nodes: node.source.script,\n                trace: traceWithoutUnlockingPhase,\n            });\n            return [...extracted.samples, ...childSamples];\n        }\n        return [];\n    };\n    const { samples, unmatchedStates, labeledStackItems } = extractEvaluationSamples({\n        evaluationRange,\n        ipOffset,\n        nodes,\n        trace: trace.filter(statesNotProducedByFunctionInvocation),\n    });\n    const childSamples = nodes.reduce((all, node) => [...all, ...extractEvaluations(node)], []);\n    const endingOrderedSamples = [...samples, ...childSamples].sort((a, b) => {\n        const linesOrdered = a.range.endLineNumber - b.range.endLineNumber;\n        return linesOrdered === 0\n            ? a.range.endColumn - b.range.endColumn\n            : linesOrdered;\n    });\n    return {\n        labeledStackItems,\n        samples: endingOrderedSamples,\n        unmatchedStates,\n    };\n};\n/**\n * Extract an array of ranges that were unused by an evaluation. This is useful\n * in development tooling for fading out or hiding code that is unimportant to\n * the current evaluation being tested.\n *\n * @remarks\n * Only ranges that are guaranteed to be unimportant to an evaluation are\n * returned by this method. These ranges are extracted from samples that:\n * - are preceded by a sample that ends with execution disabled (e.g. an\n * unsuccessful `OP_IF`)\n * - end with execution disabled, and\n * - contain no `internalStates` that enable execution.\n *\n * Note, internal states that temporarily re-enable and then disable execution\n * again can still have an effect on the parent evaluation, so this method\n * conservatively excludes such samples. For example, the hex literal\n * `0x675167`, which encodes `OP_ELSE OP_1 OP_ELSE`, could begin and end with\n * states in which execution is disabled, yet a `1` is pushed to the stack\n * during the sample's evaluation. (Samples like this are unusual, and can\n * almost always be reformatted to clearly separate the executed and unexecuted\n * instructions.)\n *\n * @param samples - an array of samples ordered by the ending position (line and\n * column) of their range.\n * @param evaluationBegins - the line and column at which the initial sample's\n * evaluation range begins (where the preceding state is assumed to be\n * executing), defaults to `1,1`\n */\nexport const extractUnexecutedRanges = (samples, evaluationBegins = '1,1') => {\n    const reduced = samples.reduce((all, sample) => {\n        const { precedingStateSkipsByEvaluation, unexecutedRanges } = all;\n        const currentEvaluationStartLineAndColumn = `${sample.evaluationRange.startLineNumber},${sample.evaluationRange.startColumn}`;\n        const precedingStateSkips = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        precedingStateSkipsByEvaluation[currentEvaluationStartLineAndColumn];\n        const endsWithSkip = !executionIsActive(sample.state);\n        const sampleHasNoExecutedInstructions = endsWithSkip &&\n            sample.internalStates.every((group) => !executionIsActive(group.state));\n        if (precedingStateSkips && sampleHasNoExecutedInstructions) {\n            return {\n                precedingStateSkipsByEvaluation: {\n                    ...precedingStateSkipsByEvaluation,\n                    [currentEvaluationStartLineAndColumn]: true,\n                },\n                unexecutedRanges: [...unexecutedRanges, sample.range],\n            };\n        }\n        return {\n            precedingStateSkipsByEvaluation: {\n                ...precedingStateSkipsByEvaluation,\n                [currentEvaluationStartLineAndColumn]: endsWithSkip,\n            },\n            unexecutedRanges,\n        };\n    }, {\n        precedingStateSkipsByEvaluation: {\n            [evaluationBegins]: false,\n        },\n        unexecutedRanges: [],\n    });\n    const canHaveContainedRanges = 2;\n    const containedRangesExcluded = reduced.unexecutedRanges.length < canHaveContainedRanges\n        ? reduced.unexecutedRanges\n        : reduced.unexecutedRanges.slice(0, -1).reduceRight((all, range) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            if (containsRange(all[0], range)) {\n                return all;\n            }\n            return [range, ...all];\n        }, \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        [reduced.unexecutedRanges[reduced.unexecutedRanges.length - 1]]);\n    return containedRangesExcluded;\n};\nconst oneBelowHash160 = 19;\n/**\n * Given a stack, return a summary of the stack's contents, encoding valid VM\n * numbers as numbers, and all other stack items as hex literals.\n *\n * @param stack - a stack of Uint8Array values\n */\nexport const summarizeStack = (stack) => stack.map((item) => {\n    const asNumber = vmNumberToBigInt(item, {\n        maximumVmNumberByteLength: oneBelowHash160,\n    });\n    return `0x${binToHex(item)}${typeof asNumber === 'string' ? '' : `(${asNumber.toString()})`}`;\n});\n/**\n * Given a debug trace (produced by {@link AuthenticationVirtualMachine.debug}),\n * return an array summarizing each step of the trace. Note, debug traces\n * include the full program state at the beginning of each evaluation step; the\n * summary produced by this method instead shows the resulting stacks after each\n * evaluation step.\n */\nexport const summarizeDebugTrace = (trace) => trace.reduce(\n// eslint-disable-next-line @typescript-eslint/max-params\n(steps, state, stateIndex, states) => {\n    const nextState = states[stateIndex + 1];\n    return nextState === undefined\n        ? steps\n        : [\n            ...steps,\n            {\n                alternateStack: summarizeStack(nextState.alternateStack),\n                ...(nextState.error === undefined\n                    ? {}\n                    : { error: nextState.error }),\n                execute: state.controlStack.every((item) => item !== false),\n                instruction: 'instruction' in state\n                    ? state.instruction\n                    : state.instructions[state.ip],\n                ip: state.ip,\n                stack: summarizeStack(nextState.stack),\n            },\n        ];\n}, []);\nconst reasonablePaddingForInstructionSetBch = 23;\nconst reasonableLineCountForInstructionSetBch = 30;\n/**\n * Return a string with the result of {@link summarizeDebugTrace} including one\n * step per line.\n *\n * @param summary - a summary produced by {@link summarizeDebugTrace}\n */\nexport const stringifyDebugTraceSummary = (summary, { opcodes = OpcodesBch, padInstruction = reasonablePaddingForInstructionSetBch, printLineCount = reasonableLineCountForInstructionSetBch, } = {}) => `${summary.length > printLineCount\n    ? `[${summary.length - printLineCount} steps truncated]\\n`\n    : ''}${summary\n    .slice(-printLineCount)\n    .map(\n// eslint-disable-next-line complexity\n(line) => `${(line.instruction === undefined\n    ? '=>'\n    : `${line.ip}. ${line.execute ? '' : '(skip)'}${opcodes[line.instruction.opcode] ??\n        `OP_UNKNOWN${line.instruction.opcode}`}:`).padEnd(padInstruction)} ${typeof line.error === 'string'\n    ? line.error\n    : `${line.stack.join(' ')}${line.alternateStack.length === 0\n        ? ''\n        : `| alt: ${line.alternateStack.join(' ')}`}`}`)\n    .join('\\n')}`;\n//# sourceMappingURL=language-utils.js.map","/**\n * This file is derived from https://github.com/jneen/parsimmon and\n * https://github.com/DefinitelyTyped/DefinitelyTyped.\n */\n/* eslint-disable @typescript-eslint/unified-signatures, functional/prefer-property-signatures, functional/no-throw-statements, functional/no-conditional-statements, @typescript-eslint/no-this-alias, consistent-this, @typescript-eslint/ban-ts-comment, prefer-spread, func-names, @typescript-eslint/init-declarations, new-cap, guard-for-in, no-plusplus, functional/no-let, functional/no-loop-statements, @typescript-eslint/prefer-for-of, functional/immutable-data, @typescript-eslint/no-use-before-define, @typescript-eslint/strict-boolean-expressions, no-param-reassign, functional/no-expression-statements, functional/no-this-expressions, @typescript-eslint/no-explicit-any, func-style, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-return, @typescript-eslint/naming-convention, @typescript-eslint/method-signature-style, @typescript-eslint/no-confusing-void-expression, prefer-arrow-callback, functional/no-return-void, @typescript-eslint/no-unsafe-argument, functional/functional-parameters */\n// cspell: ignore accum\nfunction Parsimmon(action) {\n    // @ts-expect-error\n    if (!(this instanceof Parsimmon)) {\n        // @ts-expect-error\n        return new Parsimmon(action);\n    }\n    // @ts-expect-error\n    this._ = action;\n}\nconst _ = Parsimmon.prototype;\n// -*- Helpers -*-\nfunction makeSuccess(index, value) {\n    return {\n        expected: [],\n        furthest: -1,\n        index,\n        status: true,\n        value,\n    };\n}\nfunction makeFailure(index, expected) {\n    expected = [expected];\n    return {\n        expected,\n        furthest: index,\n        index: -1,\n        status: false,\n        value: null,\n    };\n}\nfunction mergeReplies(result, last) {\n    if (!last) {\n        return result;\n    }\n    if (result.furthest > last.furthest) {\n        return result;\n    }\n    const expected = result.furthest === last.furthest\n        ? union(result.expected, last.expected)\n        : last.expected;\n    return {\n        expected,\n        furthest: last.furthest,\n        index: result.index,\n        status: result.status,\n        value: result.value,\n    };\n}\nfunction makeLineColumnIndex(input, i) {\n    const lines = input.slice(0, i).split('\\n');\n    /*\n     * Note that unlike the character offset, the line and column offsets are\n     * 1-based.\n     */\n    const lineWeAreUpTo = lines.length;\n    const columnWeAreUpTo = lines[lines.length - 1].length + 1;\n    return {\n        column: columnWeAreUpTo,\n        line: lineWeAreUpTo,\n        offset: i,\n    };\n}\n// Returns the sorted set union of two arrays of strings\nfunction union(xs, ys) {\n    const obj = {};\n    for (let i = 0; i < xs.length; i++) {\n        // @ts-expect-error\n        obj[xs[i]] = true;\n    }\n    for (let j = 0; j < ys.length; j++) {\n        // @ts-expect-error\n        obj[ys[j]] = true;\n    }\n    const keys = [];\n    for (const k in obj) {\n        keys.push(k);\n    }\n    keys.sort();\n    return keys;\n}\n// -*- Error Formatting -*-\nfunction flags(re) {\n    const s = String(re);\n    return s.slice(s.lastIndexOf('/') + 1);\n}\nfunction anchoredRegexp(re) {\n    return RegExp(`^(?:${re.source})`, flags(re));\n}\n// -*- Combinators -*-\nfunction seq(...params) {\n    const parsers = [].slice.call(params);\n    const numParsers = parsers.length;\n    return Parsimmon(function (input, i) {\n        let result;\n        const accum = new Array(numParsers);\n        for (let j = 0; j < numParsers; j += 1) {\n            result = mergeReplies(parsers[j]._(input, i), result);\n            if (!result.status) {\n                return result;\n            }\n            accum[j] = result.value;\n            i = result.index;\n        }\n        return mergeReplies(makeSuccess(i, accum), result);\n    });\n}\nfunction seqMap(...params) {\n    const args = [].slice.call(params);\n    const mapper = args.pop();\n    return seq.apply(null, args).map(function (results) {\n        // @ts-expect-error\n        return mapper.apply(null, results);\n    });\n}\nfunction createLanguage(parsers) {\n    const language = {};\n    for (const key in parsers) {\n        (function (rule) {\n            const func = function () {\n                // @ts-expect-error\n                return parsers[rule](language);\n            };\n            // @ts-expect-error\n            language[rule] = lazy(func);\n        })(key);\n    }\n    return language;\n}\nfunction alt(...params) {\n    const parsers = [].slice.call(params);\n    return Parsimmon(function (input, i) {\n        let result;\n        for (let j = 0; j < parsers.length; j += 1) {\n            result = mergeReplies(parsers[j]._(input, i), result);\n            if (result.status) {\n                return result;\n            }\n        }\n        return result;\n    });\n}\nfunction sepBy(parser, separator) {\n    return sepBy1(parser, separator).or(succeed([]));\n}\nfunction sepBy1(parser, separator) {\n    const pairs = separator.then(parser).many();\n    return seqMap(parser, pairs, function (r, rs) {\n        return [r].concat(rs);\n    });\n}\n// -*- Core Parsing Methods -*-\n_.parse = function (input) {\n    const result = this.skip(eof)._(input, 0);\n    if (result.status) {\n        return {\n            status: true,\n            value: result.value,\n        };\n    }\n    return {\n        expected: result.expected,\n        index: makeLineColumnIndex(input, result.furthest),\n        status: false,\n    };\n};\n// -*- Other Methods -*-\n_.or = function (alternative) {\n    return alt(this, alternative);\n};\n_.then = function (next) {\n    return seq(this, next).map(function (results) {\n        return results[1];\n    });\n};\n_.many = function () {\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const accum = [];\n        let result;\n        for (;;) {\n            result = mergeReplies(self._(input, i), result);\n            if (result.status) {\n                /* c8 ignore next 6 */\n                if (i === result.index) {\n                    throw new Error('infinite loop detected in .many() parser --- calling .many() on ' +\n                        'a parser that can accept zero characters is usually the cause');\n                }\n                i = result.index;\n                accum.push(result.value);\n            }\n            else {\n                return mergeReplies(makeSuccess(i, accum), result);\n            }\n        }\n    });\n};\n_.map = function (fn) {\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const result = self._(input, i);\n        if (!result.status) {\n            return result;\n        }\n        return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\n    });\n};\n_.skip = function (next) {\n    return seq(this, next).map(function (results) {\n        return results[0];\n    });\n};\n_.node = function (name) {\n    return seqMap(index, this, index, function (start, value, end) {\n        return {\n            end,\n            name,\n            start,\n            value,\n        };\n    });\n};\n_.sepBy = function (separator) {\n    return sepBy(this, separator);\n};\n_.desc = function (expected) {\n    expected = [expected];\n    const self = this;\n    return Parsimmon(function (input, i) {\n        const reply = self._(input, i);\n        if (!reply.status) {\n            reply.expected = expected;\n        }\n        return reply;\n    });\n};\n// -*- Constructors -*-\nfunction string(str) {\n    const expected = `'${str}'`;\n    return Parsimmon(function (input, i) {\n        const j = i + str.length;\n        const head = input.slice(i, j);\n        if (head === str) {\n            return makeSuccess(j, head);\n        }\n        return makeFailure(i, expected);\n    });\n}\nfunction regexp(re, group = 0) {\n    const anchored = anchoredRegexp(re);\n    const expected = String(re);\n    return Parsimmon(function (input, i) {\n        const match = anchored.exec(input.slice(i));\n        if (match) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const fullMatch = match[0];\n            const groupMatch = match[group];\n            return makeSuccess(i + fullMatch.length, groupMatch);\n        }\n        return makeFailure(i, expected);\n    });\n}\nfunction succeed(value) {\n    return Parsimmon(function (__, i) {\n        return makeSuccess(i, value);\n    });\n}\nfunction lazy(f) {\n    const parser = Parsimmon(function (input, i) {\n        parser._ = f()._;\n        return parser._(input, i);\n    });\n    return parser;\n}\n// -*- Base Parsers -*-\nconst index = Parsimmon(function (input, i) {\n    return makeSuccess(i, makeLineColumnIndex(input, i));\n});\nconst eof = Parsimmon(function (input, i) {\n    if (i < input.length) {\n        return makeFailure(i, 'EOF');\n    }\n    return makeSuccess(i, null);\n});\nconst optWhitespace = regexp(/\\s*/u).desc('optional whitespace');\nconst whitespace = regexp(/\\s+/u).desc('whitespace');\nexport const P = {\n    alt,\n    createLanguage,\n    index,\n    lazy,\n    makeFailure,\n    makeSuccess,\n    of: succeed,\n    optWhitespace,\n    regexp,\n    sepBy,\n    sepBy1,\n    seq,\n    seqMap,\n    string,\n    succeed,\n    whitespace,\n};\n//# sourceMappingURL=parsimmon.js.map","import { lossyNormalize } from '../format/format.js';\nimport { P } from './parsimmon.js';\n/* eslint-disable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\nconst cashAssemblyParser = P.createLanguage({\n    script: (r) => P.seqMap(P.optWhitespace, r.expression.sepBy(P.optWhitespace), P.optWhitespace, (_, expressions) => expressions).node('Script'),\n    expression: (r) => P.alt(r.comment, r.push, r.evaluation, r.utf8, r.binary, r.hex, r.bigint, r.identifier),\n    comment: (r) => P.alt(r.singleLineComment, r.multiLineComment).node('Comment'),\n    singleLineComment: () => P.seqMap(P.string('//').desc(\"the start of a single-line comment ('//')\"), P.regexp(/[^\\n]*/u), (__, comment) => comment.trim()),\n    multiLineComment: () => P.seqMap(P.string('/*').desc(\"the start of a multi-line comment ('/*')\"), P.regexp(/[\\s\\S]*?\\*\\//u).desc(\"the end of this multi-line comment ('*/')\"), (__, comment) => comment.slice(0, -'*/'.length).trim()),\n    push: (r) => P.seqMap(P.string('<').desc(\"the start of a push statement ('<')\"), r.script, P.string('>').desc(\"the end of this push statement ('>')\"), (_, push) => push).node('Push'),\n    evaluation: (r) => P.seqMap(P.string('$').desc(\"the start of an evaluation ('$')\"), P.string('(').desc(\"the opening parenthesis of this evaluation ('(')\"), r.script, P.string(')').desc(\"the closing parenthesis of this evaluation (')')\"), (_, __, evaluation) => evaluation).node('Evaluation'),\n    identifier: () => P.regexp(/[a-zA-Z_][.a-zA-Z0-9_-]*/u)\n        .desc('a valid identifier')\n        .node('Identifier'),\n    utf8: () => P.alt(P.seqMap(P.string('\"').desc('a double quote (\")'), P.regexp(/[^\"]*/u), P.string('\"').desc('a closing double quote (\")'), (__, literal) => literal), P.seqMap(P.string(\"'\").desc(\"a single quote (')\"), P.regexp(/[^']*/u), P.string(\"'\").desc(\"a closing single quote (')\"), (__, literal) => literal)).node('UTF8Literal'),\n    hex: () => P.seqMap(P.string('0x').desc(\"a hex literal ('0x...')\"), P.regexp(/[0-9a-f]_*(?:_*[0-9a-f]_*[0-9a-f]_*)*[0-9a-f]/iu).desc('a valid hexadecimal string'), (__, literal) => literal).node('HexLiteral'),\n    binary: () => P.seqMap(P.string('0b').desc(\"a binary literal ('0b...')\"), P.regexp(/[01]+(?:[01_]*[01]+)*/iu).desc('a string of binary digits'), (__, literal) => literal).node('BinaryLiteral'),\n    bigint: () => P.regexp(/-?[0-9]+(?:[0-9_]*[0-9]+)*/u)\n        .desc('an integer literal')\n        .node('BigIntLiteral'),\n});\n/* eslint-enable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */\nexport const parseScript = (script) => cashAssemblyParser.script.parse(lossyNormalize(script));\n//# sourceMappingURL=parse.js.map","import { flattenBinArray } from '../format/format.js';\nimport { encodeDataPush } from '../vm/vm.js';\nimport { mergeRanges } from './language-utils.js';\nconst emptyReductionTraceNode = (range) => ({\n    bytecode: Uint8Array.of(),\n    range,\n});\n/**\n * Perform the standard verification of CashAssembly evaluation results. This\n * ensures that evaluations complete as expected: if an error occurs while\n * computing an evaluation, script compilation should fail.\n *\n * Three requirements are enforced:\n * - the evaluation may not produce an `error`\n * - the resulting stack must contain exactly 1 item\n * - the resulting execution stack must be empty (no missing `OP_ENDIF`s)\n *\n * This differs from the virtual machine's built-in `vm.verify` in that it is\n * often more lenient, for example, evaluations can succeed with a non-truthy\n * value on top of the stack.\n *\n * @param state - the final program state to verify\n */\nexport const verifyCashAssemblyEvaluationState = (state) => {\n    if (state.error !== undefined) {\n        return state.error;\n    }\n    if (state.controlStack.length !== 0) {\n        return `The CashAssembly internal evaluation completed with a non-empty control stack.`;\n    }\n    if (state.stack.length !== 1) {\n        return `The CashAssembly internal evaluation completed with an unexpected number of items on the stack (must be exactly 1).`;\n    }\n    return true;\n};\n/**\n * Reduce a resolved script, returning the resulting bytecode and a trace of the\n * reduction process.\n *\n * This method will return an error if provided a {@link resolvedScript} with\n * resolution errors. To check for resolution errors, use\n * {@link getResolutionErrors}.\n *\n * @param resolvedScript - the {@link CompiledScript} to reduce\n * @param vm - the {@link AuthenticationVirtualMachine} to use for evaluations\n * @param createEvaluationProgram - a method which accepts the compiled bytecode\n * of an evaluation and returns the authentication program used to evaluate it\n */\nexport const reduceScript = (resolvedScript, vm, createEvaluationProgram) => {\n    const script = resolvedScript.map((segment) => {\n        switch (segment.type) {\n            case 'bytecode':\n                return { bytecode: segment.value, range: segment.range };\n            case 'push': {\n                const push = reduceScript(segment.value, vm, createEvaluationProgram);\n                const bytecode = encodeDataPush(push.bytecode);\n                return {\n                    bytecode,\n                    ...(push.errors === undefined ? undefined : { errors: push.errors }),\n                    push,\n                    range: segment.range,\n                };\n            }\n            case 'evaluation': {\n                if (typeof vm === 'undefined' ||\n                    typeof createEvaluationProgram === 'undefined') {\n                    return {\n                        errors: [\n                            {\n                                error: 'Both a VM and a createAuthenticationProgram method are required to reduce evaluations.',\n                                range: segment.range,\n                            },\n                        ],\n                        ...emptyReductionTraceNode(segment.range),\n                    };\n                }\n                const reductionTrace = reduceScript(segment.value, vm, createEvaluationProgram);\n                if (reductionTrace.errors !== undefined) {\n                    return {\n                        ...emptyReductionTraceNode(segment.range),\n                        errors: reductionTrace.errors,\n                        source: reductionTrace,\n                        trace: [],\n                    };\n                }\n                const trace = vm.debug(createEvaluationProgram(reductionTrace.bytecode));\n                /**\n                 * `vm.debug` should always return at least one state.\n                 */\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const lastState = trace[trace.length - 1];\n                const result = verifyCashAssemblyEvaluationState(lastState);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const bytecode = lastState.stack[lastState.stack.length - 1];\n                return {\n                    ...(typeof result === 'string'\n                        ? {\n                            bytecode: Uint8Array.of(),\n                            errors: [\n                                {\n                                    error: `Failed to reduce evaluation: ${result}`,\n                                    range: segment.range,\n                                },\n                            ],\n                        }\n                        : {\n                            bytecode,\n                        }),\n                    range: segment.range,\n                    source: reductionTrace,\n                    trace,\n                };\n            }\n            case 'comment':\n                return {\n                    ...emptyReductionTraceNode(segment.range),\n                    comment: segment.value,\n                };\n            case 'error':\n                return {\n                    errors: [\n                        {\n                            error: `Tried to reduce a CashAssembly script with resolution errors: ${segment.value}`,\n                            range: segment.range,\n                        },\n                    ],\n                    ...emptyReductionTraceNode(segment.range),\n                };\n            default:\n                // eslint-disable-next-line functional/no-throw-statements, @typescript-eslint/no-throw-literal\n                throw new Error(`\"${segment.type}\" is not a known segment type.`);\n        }\n    });\n    const reduction = script.reduce((all, segment) => ({\n        bytecode: [...all.bytecode, segment.bytecode],\n        ranges: [...all.ranges, segment.range],\n        ...(all.errors !== undefined || segment.errors !== undefined\n            ? {\n                errors: [...(all.errors ?? []), ...(segment.errors ?? [])],\n            }\n            : undefined),\n    }), { bytecode: [], ranges: [] });\n    return {\n        ...(reduction.errors === undefined\n            ? undefined\n            : { errors: reduction.errors }),\n        bytecode: flattenBinArray(reduction.bytecode),\n        range: mergeRanges(reduction.ranges, \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        resolvedScript.length === 0 ? undefined : resolvedScript[0].range),\n        script,\n    };\n};\n//# sourceMappingURL=reduce.js.map","import { binStringToBin, hexToBin, utf8ToBin } from '../format/format.js';\nimport { decodeHdPrivateKey, decodeHdPublicKey, validateSecp256k1PrivateKey, } from '../key/key.js';\nimport { bigIntToVmNumber } from '../vm/vm.js';\nimport { IdentifierResolutionErrorType, IdentifierResolutionType, } from './language-types.js';\nimport { getResolutionErrors, stringifyErrors } from './language-utils.js';\nimport { parseScript } from './parse.js';\nimport { reduceScript } from './reduce.js';\nconst pluckRange = (node) => ({\n    endColumn: node.end.column,\n    endLineNumber: node.end.line,\n    startColumn: node.start.column,\n    startLineNumber: node.start.line,\n});\nconst removeNumericSeparators = (numericLiteral) => numericLiteral.replace(/_/gu, '');\nexport const resolveScriptSegment = (segment, resolveIdentifiers) => {\n    // eslint-disable-next-line complexity\n    const resolved = segment.value.map((child) => {\n        const range = pluckRange(child);\n        switch (child.name) {\n            case 'Identifier': {\n                const identifier = child.value;\n                const result = resolveIdentifiers(identifier);\n                const ret = result.status\n                    ? {\n                        range,\n                        type: 'bytecode',\n                        value: result.bytecode,\n                        ...(result.type === IdentifierResolutionType.opcode\n                            ? {\n                                opcode: identifier,\n                            }\n                            : result.type === IdentifierResolutionType.variable\n                                ? {\n                                    ...('debug' in result ? { debug: result.debug } : {}),\n                                    ...('signature' in result\n                                        ? { signature: result.signature }\n                                        : {}),\n                                    variable: identifier,\n                                }\n                                : // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                                    result.type === IdentifierResolutionType.script\n                                        ? { script: identifier, source: result.source }\n                                        : { unknown: identifier }),\n                    }\n                    : {\n                        ...('debug' in result ? { debug: result.debug } : {}),\n                        ...('recoverable' in result && result.recoverable\n                            ? {\n                                missingIdentifier: identifier,\n                                owningEntity: result.entityOwnership,\n                            }\n                            : {}),\n                        range,\n                        type: 'error',\n                        value: result.error,\n                    };\n                return ret;\n            }\n            case 'Push':\n                return {\n                    range,\n                    type: 'push',\n                    value: resolveScriptSegment(child.value, resolveIdentifiers),\n                };\n            case 'Evaluation':\n                return {\n                    range,\n                    type: 'evaluation',\n                    value: resolveScriptSegment(child.value, resolveIdentifiers),\n                };\n            case 'BigIntLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'BigIntLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: bigIntToVmNumber(BigInt(removeNumericSeparators(child.value))),\n                };\n            case 'BinaryLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'BinaryLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: binStringToBin(removeNumericSeparators(child.value)),\n                };\n            case 'HexLiteral':\n                return {\n                    literal: child.value,\n                    literalType: 'HexLiteral',\n                    range,\n                    type: 'bytecode',\n                    value: hexToBin(removeNumericSeparators(child.value)),\n                };\n            case 'UTF8Literal':\n                return {\n                    literal: child.value,\n                    literalType: 'UTF8Literal',\n                    range,\n                    type: 'bytecode',\n                    value: utf8ToBin(child.value),\n                };\n            case 'Comment':\n                return {\n                    range,\n                    type: 'comment',\n                    value: child.value,\n                };\n            default:\n                return {\n                    range,\n                    type: 'error',\n                    value: `Unrecognized segment: ${child.name}`,\n                };\n        }\n    });\n    return resolved.length === 0\n        ? [{ range: pluckRange(segment), type: 'comment', value: '' }]\n        : resolved;\n};\nexport var BuiltInVariables;\n(function (BuiltInVariables) {\n    BuiltInVariables[\"currentBlockTime\"] = \"current_block_time\";\n    BuiltInVariables[\"currentBlockHeight\"] = \"current_block_height\";\n    BuiltInVariables[\"signingSerialization\"] = \"signing_serialization\";\n})(BuiltInVariables || (BuiltInVariables = {}));\nconst attemptCompilerOperation = ({ data, configuration, identifier, matchingOperations, operationExample = 'operation_identifier', operationId, variableId, variableType, }) => {\n    if (matchingOperations === undefined) {\n        return {\n            error: `The \"${variableId}\" variable type can not be resolved because the \"${variableType}\" operation has not been included in this compiler's configuration.`,\n            status: 'error',\n        };\n    }\n    if (typeof matchingOperations === 'function') {\n        const operation = matchingOperations;\n        return operation(identifier, data, configuration);\n    }\n    if (operationId === undefined) {\n        return {\n            error: `This \"${variableId}\" variable could not be resolved because this compiler's \"${variableType}\" operations require an operation identifier, e.g. '${variableId}.${operationExample}'.`,\n            status: 'error',\n        };\n    }\n    const operation = matchingOperations[operationId];\n    if (operation === undefined) {\n        return {\n            error: `The identifier \"${identifier}\" could not be resolved because the \"${variableId}.${operationId}\" operation is not available to this compiler.`,\n            status: 'error',\n        };\n    }\n    return operation(identifier, data, configuration);\n};\n/**\n * If the identifier can be successfully resolved as a variable, the result is\n * returned as a Uint8Array. If the identifier references a known variable, but\n * an error occurs in resolving it, the error is returned as a string.\n * Otherwise, the identifier is not recognized as a variable, and this method\n * simply returns `false`.\n *\n * @param identifier - The full identifier used to describe this operation, e.g.\n * `owner.schnorr_signature.all_outputs`.\n * @param data - The {@link CompilationData} provided to the compiler\n * @param configuration - The {@link CompilerConfiguration} provided to\n * the compiler\n */\nexport const resolveVariableIdentifier = ({ data, configuration, identifier, }) => {\n    const [variableId, operationId] = identifier.split('.');\n    switch (variableId) {\n        case BuiltInVariables.currentBlockHeight:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.currentBlockHeight,\n                operationId,\n                variableId,\n                variableType: 'currentBlockHeight',\n            });\n        case BuiltInVariables.currentBlockTime:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.currentBlockTime,\n                operationId,\n                variableId,\n                variableType: 'currentBlockTime',\n            });\n        case BuiltInVariables.signingSerialization:\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                matchingOperations: configuration.operations?.signingSerialization,\n                operationExample: 'version',\n                operationId,\n                variableId,\n                variableType: 'signingSerialization',\n            });\n        default: {\n            const expectedVariable = configuration.variables?.[variableId];\n            if (expectedVariable === undefined) {\n                return { status: 'skip' };\n            }\n            return attemptCompilerOperation({\n                configuration,\n                data,\n                identifier,\n                operationId,\n                variableId,\n                ...{\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    AddressData: {\n                        matchingOperations: configuration.operations?.addressData,\n                        variableType: 'addressData',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    HdKey: {\n                        matchingOperations: configuration.operations?.hdKey,\n                        operationExample: 'public_key',\n                        variableType: 'hdKey',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    Key: {\n                        matchingOperations: configuration.operations?.key,\n                        operationExample: 'public_key',\n                        variableType: 'key',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    WalletData: {\n                        matchingOperations: configuration.operations?.walletData,\n                        variableType: 'walletData',\n                    },\n                }[expectedVariable.type],\n            });\n        }\n    }\n};\n/**\n * A text-formatting method to pretty-print the list of expected inputs\n * (`Encountered unexpected input while parsing script. Expected ...`). If\n * present, the `EOF` expectation is always moved to the end of the list.\n * @param expectedArray - the alphabetized list of expected inputs produced by\n * `parseScript`\n */\nexport const describeExpectedInput = (expectedArray) => {\n    /**\n     * The constant used by the parser to denote the end of the input\n     */\n    const EOF = 'EOF';\n    const newArray = expectedArray.filter((value) => value !== EOF);\n    // eslint-disable-next-line functional/no-conditional-statements\n    if (newArray.length !== expectedArray.length) {\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        newArray.push('the end of the script');\n    }\n    const withoutLastElement = newArray.slice(0, newArray.length - 1);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const lastElement = newArray[newArray.length - 1];\n    const arrayRequiresCommas = 3;\n    const arrayRequiresOr = 2;\n    return `Encountered unexpected input while parsing script. Expected ${newArray.length >= arrayRequiresCommas\n        ? withoutLastElement.join(', ').concat(`, or ${lastElement}`)\n        : newArray.length === arrayRequiresOr\n            ? newArray.join(' or ')\n            : lastElement}.`;\n};\nexport const createEmptyRange = () => ({\n    endColumn: 0,\n    endLineNumber: 0,\n    startColumn: 0,\n    startLineNumber: 0,\n});\n/**\n * Validate all compilation data (i.e. validate all public and private keys),\n * returning an array of validation errors. If no validity issues are detected,\n * an empty array is returned.\n *\n * The function ensures that compilation fails whenever invalid compilation data\n * is provided, regardless of whether or not the offending public or private key\n * material is used. This is intended to surface software defects (particularly\n * in the software used by counterparties) as early as possible.\n */\nexport const validateCompilationData = ({ configuration, data, }) => [\n    ...(data.bytecode === undefined\n        ? []\n        : Object.entries(data.bytecode)\n            .filter(([identifier]) => identifier.endsWith('.public_key'))\n            .reduce((all, [identifier, publicKey]) => all.concat(configuration.secp256k1?.validatePublicKey(publicKey) === true\n            ? []\n            : [\n                configuration.secp256k1 === undefined\n                    ? {\n                        error: `Could not validate compilation data: the public key provided for \"${identifier}\" could not be validated because the \"secp256k1\" property was not provided in the compiler configuration.`,\n                        range: createEmptyRange(),\n                    }\n                    : {\n                        error: `Invalid compilation data detected: the public key provided for \"${identifier}\" is not a valid Secp256k1 public key.`,\n                        range: createEmptyRange(),\n                    },\n            ]), [])),\n    ...(data.keys?.privateKeys === undefined\n        ? []\n        : Object.entries(data.keys.privateKeys).reduce((all, [variableId, privateKey]) => all.concat(validateSecp256k1PrivateKey(privateKey)\n            ? []\n            : [\n                {\n                    error: `Invalid compilation data detected: the private key provided for the \"${variableId}\" variable is not a valid Secp256k1 private key.`,\n                    range: createEmptyRange(),\n                },\n            ]), [])),\n    ...(data.hdKeys?.hdPrivateKeys === undefined\n        ? []\n        : Object.entries(data.hdKeys.hdPrivateKeys).reduce((all, [entityId, hdPrivateKey]) => {\n            const decoded = decodeHdPrivateKey(hdPrivateKey);\n            return all.concat(typeof decoded === 'string'\n                ? [\n                    {\n                        error: `Invalid compilation data detected: the HD private key provided for the \"${entityId}\" entity is not a valid HD private key. ${decoded}`,\n                        range: createEmptyRange(),\n                    },\n                ]\n                : []);\n        }, [])),\n    ...(data.hdKeys?.hdPublicKeys === undefined\n        ? []\n        : Object.entries(data.hdKeys.hdPublicKeys).reduce((all, [entityId, hdPublicKey]) => {\n            const decoded = decodeHdPublicKey(hdPublicKey);\n            return all.concat(typeof decoded === 'string'\n                ? [\n                    {\n                        error: `Invalid compilation data detected: the HD public key provided for the \"${entityId}\" entity is not a valid HD public key. ${decoded}`,\n                        range: createEmptyRange(),\n                    },\n                ]\n                : []);\n        }, [])),\n];\n/**\n * This method is generally for internal use. The {@link compileScript} method\n * is the recommended API for direct compilation.\n */\nexport const compileScriptRaw = ({ data, configuration, scriptId, }) => {\n    const script = configuration.scripts[scriptId];\n    if (script === undefined) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `No script with an ID of \"${scriptId}\" was provided in the compiler configuration.`,\n                    range: createEmptyRange(),\n                },\n            ],\n            success: false,\n        };\n    }\n    if (configuration.sourceScriptIds?.includes(scriptId) === true) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `A circular dependency was encountered: script \"${scriptId}\" relies on itself to be generated. (Source scripts: ${configuration.sourceScriptIds.join(' → ')})`,\n                    range: createEmptyRange(),\n                },\n            ],\n            success: false,\n        };\n    }\n    const sourceScriptIds = configuration.sourceScriptIds === undefined\n        ? [scriptId]\n        : [...configuration.sourceScriptIds, scriptId];\n    const dataErrors = validateCompilationData({ configuration, data });\n    if (dataErrors.length !== 0) {\n        return {\n            errorType: 'parse',\n            errors: dataErrors,\n            success: false,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return compileScriptContents({\n        configuration: { ...configuration, sourceScriptIds },\n        data,\n        script,\n    });\n};\n/**\n * Compile an internal script identifier.\n *\n * @remarks\n * If the identifier can be successfully resolved as a script, the script is\n * compiled and returned as a {@link CompilationResultSuccess}. If an error\n * occurs in compiling it, the error is returned as a string.\n *\n * Otherwise, the identifier is not recognized as a script, and this method\n * simply returns `false`.\n */\nexport const resolveScriptIdentifier = ({ data, configuration, identifier, }) => {\n    if (configuration.scripts[identifier] === undefined) {\n        return false;\n    }\n    const result = compileScriptRaw({\n        configuration,\n        data,\n        scriptId: identifier,\n    });\n    if (result.success) {\n        return result;\n    }\n    return `Compilation error in resolved script \"${identifier}\": ${stringifyErrors(result.errors)}`;\n};\n/**\n * Return an {@link IdentifierResolutionFunction} for use in\n * {@link resolveScriptSegment}.\n *\n * @param scriptId - the `id` of the script for which the resulting\n * `IdentifierResolutionFunction` will be used.\n */\nexport const createIdentifierResolver = ({ data, configuration, }) => \n// eslint-disable-next-line complexity\n(identifier) => {\n    const opcodeResult = configuration.opcodes?.[identifier];\n    if (opcodeResult !== undefined) {\n        return {\n            bytecode: opcodeResult,\n            status: true,\n            type: IdentifierResolutionType.opcode,\n        };\n    }\n    const variableResult = resolveVariableIdentifier({\n        configuration,\n        data,\n        identifier,\n    });\n    if (variableResult.status !== 'skip') {\n        return variableResult.status === 'error'\n            ? {\n                ...('debug' in variableResult\n                    ? { debug: variableResult.debug }\n                    : {}),\n                error: variableResult.error,\n                ...(configuration.entityOwnership === undefined\n                    ? {}\n                    : {\n                        entityOwnership: \n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        configuration.entityOwnership[identifier.split('.')[0]],\n                    }),\n                recoverable: 'recoverable' in variableResult,\n                status: false,\n                type: IdentifierResolutionErrorType.variable,\n            }\n            : {\n                ...('debug' in variableResult\n                    ? { debug: variableResult.debug }\n                    : {}),\n                bytecode: variableResult.bytecode,\n                ...('signature' in variableResult\n                    ? {\n                        signature: variableResult.signature,\n                    }\n                    : {}),\n                status: true,\n                type: IdentifierResolutionType.variable,\n            };\n    }\n    const scriptResult = resolveScriptIdentifier({\n        configuration,\n        data,\n        identifier,\n    });\n    if (scriptResult !== false) {\n        return typeof scriptResult === 'string'\n            ? {\n                error: scriptResult,\n                scriptId: identifier,\n                status: false,\n                type: IdentifierResolutionErrorType.script,\n            }\n            : {\n                bytecode: scriptResult.bytecode,\n                source: scriptResult,\n                status: true,\n                type: IdentifierResolutionType.script,\n            };\n    }\n    return {\n        error: `Unknown identifier \"${identifier}\".`,\n        status: false,\n        type: IdentifierResolutionErrorType.unknown,\n    };\n};\n/**\n * This method is generally for internal use. The {@link compileScript} method\n * is the recommended API for direct compilation.\n */\nexport const compileScriptContents = ({ data, configuration, script, }) => {\n    const parseResult = parseScript(script);\n    if (!parseResult.status) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: describeExpectedInput(parseResult.expected),\n                    range: {\n                        endColumn: parseResult.index.column,\n                        endLineNumber: parseResult.index.line,\n                        startColumn: parseResult.index.column,\n                        startLineNumber: parseResult.index.line,\n                    },\n                },\n            ],\n            success: false,\n        };\n    }\n    const resolver = createIdentifierResolver({ configuration, data });\n    const resolvedScript = resolveScriptSegment(parseResult.value, resolver);\n    const resolutionErrors = getResolutionErrors(resolvedScript);\n    if (resolutionErrors.length !== 0) {\n        return {\n            errorType: 'resolve',\n            errors: resolutionErrors,\n            parse: parseResult.value,\n            resolve: resolvedScript,\n            success: false,\n        };\n    }\n    const reduction = reduceScript(resolvedScript, configuration.vm, configuration.createAuthenticationProgram);\n    return {\n        ...(reduction.errors === undefined\n            ? { bytecode: reduction.bytecode, success: true }\n            : { errorType: 'reduce', errors: reduction.errors, success: false }),\n        parse: parseResult.value,\n        reduce: reduction,\n        resolve: resolvedScript,\n    };\n};\n//# sourceMappingURL=resolve.js.map","import { compileScriptRaw, createEmptyRange } from './resolve.js';\n/**\n * Parse, resolve, and reduce the selected script using the provided `data` and\n * `configuration`.\n *\n * Note, locktime validation only occurs if `compilationContext` is provided in\n * the configuration.\n */\n// eslint-disable-next-line complexity\nexport const compileScript = (scriptId, data, configuration) => {\n    const locktimeDisablingSequenceNumber = 0xffffffff;\n    const lockTimeTypeBecomesTimestamp = 500000000;\n    if (data.compilationContext?.transaction.locktime !== undefined) {\n        if (configuration.unlockingScriptTimeLockTypes?.[scriptId] === 'height' &&\n            data.compilationContext.transaction.locktime >=\n                lockTimeTypeBecomesTimestamp) {\n            return {\n                errorType: 'parse',\n                errors: [\n                    {\n                        error: `The script \"${scriptId}\" requires a height-based locktime (less than 500,000,000), but this transaction uses a timestamp-based locktime (\"${data.compilationContext.transaction.locktime}\").`,\n                        range: createEmptyRange(),\n                    },\n                ],\n                success: false,\n            };\n        }\n        if (configuration.unlockingScriptTimeLockTypes?.[scriptId] === 'timestamp' &&\n            data.compilationContext.transaction.locktime <\n                lockTimeTypeBecomesTimestamp) {\n            return {\n                errorType: 'parse',\n                errors: [\n                    {\n                        error: `The script \"${scriptId}\" requires a timestamp-based locktime (greater than or equal to 500,000,000), but this transaction uses a height-based locktime (\"${data.compilationContext.transaction.locktime}\").`,\n                        range: createEmptyRange(),\n                    },\n                ],\n                success: false,\n            };\n        }\n    }\n    if (data.compilationContext?.transaction.inputs[data.compilationContext.inputIndex]?.sequenceNumber !== undefined &&\n        configuration.unlockingScriptTimeLockTypes?.[scriptId] !== undefined &&\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].sequenceNumber === locktimeDisablingSequenceNumber) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `The script \"${scriptId}\" requires a locktime, but this input's sequence number is set to disable transaction locktime (0xffffffff). This will cause the OP_CHECKLOCKTIMEVERIFY operation to error when the transaction is verified. To be valid, this input must use a sequence number that does not disable locktime.`,\n                    range: createEmptyRange(),\n                },\n            ],\n            success: false,\n        };\n    }\n    const rawResult = compileScriptRaw({\n        configuration,\n        data,\n        scriptId,\n    });\n    if (!rawResult.success) {\n        return rawResult;\n    }\n    const unlocks = configuration.unlockingScripts?.[scriptId];\n    const unlockingScriptType = unlocks === undefined\n        ? undefined\n        : configuration.lockingScriptTypes?.[unlocks];\n    const isP2shUnlock = unlockingScriptType === 'p2sh20' || unlockingScriptType === 'p2sh32';\n    const lockingScriptType = configuration.lockingScriptTypes?.[scriptId];\n    const isP2shLock = lockingScriptType === 'p2sh20' || lockingScriptType === 'p2sh32';\n    if (isP2shLock) {\n        const transformedResult = compileScriptRaw({\n            configuration: {\n                ...configuration,\n                scripts: {\n                    p2sh20Locking: 'OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL',\n                    p2sh32Locking: 'OP_HASH256 <$(<lockingBytecode> OP_HASH256)> OP_EQUAL',\n                },\n                variables: { lockingBytecode: { type: 'AddressData' } },\n            },\n            data: { bytecode: { lockingBytecode: rawResult.bytecode } },\n            scriptId: lockingScriptType === 'p2sh20' ? 'p2sh20Locking' : 'p2sh32Locking',\n        });\n        if (!transformedResult.success) {\n            return transformedResult;\n        }\n        return {\n            ...rawResult,\n            bytecode: transformedResult.bytecode,\n            transformed: lockingScriptType === 'p2sh20' ? 'p2sh20-locking' : 'p2sh32-locking',\n        };\n    }\n    if (isP2shUnlock) {\n        const lockingBytecodeResult = compileScriptRaw({\n            configuration,\n            data,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            scriptId: unlocks,\n        });\n        if (!lockingBytecodeResult.success) {\n            return lockingBytecodeResult;\n        }\n        const transformedResult = compileScriptRaw({\n            configuration: {\n                ...configuration,\n                scripts: {\n                    p2shUnlocking: 'unlockingBytecode <lockingBytecode>',\n                },\n                variables: {\n                    lockingBytecode: { type: 'AddressData' },\n                    unlockingBytecode: { type: 'AddressData' },\n                },\n            },\n            data: {\n                bytecode: {\n                    lockingBytecode: lockingBytecodeResult.bytecode,\n                    unlockingBytecode: rawResult.bytecode,\n                },\n            },\n            scriptId: 'p2shUnlocking',\n        });\n        return {\n            ...rawResult,\n            bytecode: transformedResult.bytecode,\n            transformed: unlockingScriptType === 'p2sh20'\n                ? 'p2sh20-unlocking'\n                : 'p2sh32-unlocking',\n        };\n    }\n    return rawResult;\n};\n//# sourceMappingURL=compile.js.map","/* eslint-disable @typescript-eslint/no-duplicate-enum-values */\nexport var CompilerDefaults;\n(function (CompilerDefaults) {\n    /**\n     * The `addressIndex` used by the default scenario `data`.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioAddressIndex\"] = 0] = \"defaultScenarioAddressIndex\";\n    /**\n     * The value used for `[\"slot\"]` and `[\"copy\"]` locking or unlocking bytecode\n     * when generating a scenario and no `unlockingScriptId` is provided.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-mixed-enums\n    CompilerDefaults[\"defaultScenarioBytecode\"] = \"\";\n    /**\n     *\n     * The value of `currentBlockHeight` in the default wallet template\n     * scenario. This is the height of the second mined block after the genesis\n     * block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`.\n     *\n     * This default value was chosen to be low enough to simplify the debugging of\n     * block height offsets while remaining differentiated from `0` and `1`, which\n     * are used both as boolean return values and for control flow.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioCurrentBlockHeight\"] = 2] = \"defaultScenarioCurrentBlockHeight\";\n    /**\n     * The value of `currentBlockTime` in the default wallet template\n     * scenario. This is the Median Time-Past block time (BIP113) of block `2`\n     * (the block used in\n     * {@link CompilerDefaults.defaultScenarioCurrentBlockHeight}).\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioCurrentBlockTime\"] = 1231469665] = \"defaultScenarioCurrentBlockTime\";\n    /**\n     * The default `outpointTransactionHash` of inputs in scenarios.\n     */\n    CompilerDefaults[\"defaultScenarioInputOutpointTransactionHash\"] = \"0000000000000000000000000000000000000000000000000000000000000001\";\n    /**\n     * The default `category` of tokens in scenarios.\n     */\n    CompilerDefaults[\"defaultScenarioOutputTokenCategory\"] = \"0000000000000000000000000000000000000000000000000000000000000002\";\n    /**\n     * The default `sequenceNumber` of inputs in scenarios.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioInputSequenceNumber\"] = 0] = \"defaultScenarioInputSequenceNumber\";\n    /**\n     * The default `lockingBytecode` value for scenario outputs,\n     * `OP_RETURN <\"libauth\">` (hex: `6a076c696261757468`).\n     */\n    CompilerDefaults[\"defaultScenarioOutputLockingBytecode\"] = \"6a076c696261757468\";\n    /**\n     * The default `valueSatoshis` of outputs in scenarios.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioOutputValueSatoshis\"] = 0] = \"defaultScenarioOutputValueSatoshis\";\n    /**\n     * The value of `transaction.locktime` in the default wallet template\n     * scenario.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioTransactionLocktime\"] = 0] = \"defaultScenarioTransactionLocktime\";\n    /**\n     * The value of `transaction.version` in the default wallet template\n     * scenario. Transaction version `2` enables `OP_CHECKSEQUENCEVERIFY` as\n     * described in BIP68, BIP112, and BIP113.\n     */\n    CompilerDefaults[CompilerDefaults[\"defaultScenarioTransactionVersion\"] = 2] = \"defaultScenarioTransactionVersion\";\n    /**\n     *s\n     * If unset, each `HdKey` uses this `addressOffset`.\n     */\n    CompilerDefaults[CompilerDefaults[\"hdKeyAddressOffset\"] = 0] = \"hdKeyAddressOffset\";\n    /**\n     * If unset, each `HdKey` uses this `hdPublicKeyDerivationPath`.\n     */\n    CompilerDefaults[\"hdKeyHdPublicKeyDerivationPath\"] = \"\";\n    /**\n     * If unset, each `HdKey` uses this `privateDerivationPath`.\n     */\n    CompilerDefaults[\"hdKeyPrivateDerivationPath\"] = \"i\";\n    /**\n     * The prefix used to refer to other scenario bytecode scripts from within a\n     * bytecode script. See {@link WalletTemplateScenarioData.bytecode}\n     * for details.\n     */\n    CompilerDefaults[\"scenarioBytecodeScriptPrefix\"] = \"_scenario.\";\n})(CompilerDefaults || (CompilerDefaults = {}));\n//# sourceMappingURL=compiler-defaults.js.map","import { assertSuccess } from '../format/format.js';\nimport { decodeHdPrivateKey, deriveHdPath, deriveHdPathRelative, } from '../key/key.js';\nimport { resolveScriptIdentifier } from '../language/language.js';\nimport { CompilerDefaults } from './compiler-defaults.js';\n/**\n * Attempt a series of compiler operations, skipping to the next operation if\n * the current operation returns a {@link CompilerOperationSkip} (indicating it\n * failed and can be skipped). The `finalOperation` may not be skipped, and must\n * either return {@link CompilerOperationSuccess} or\n * {@link CompilerOperationError}.\n *\n * @param operations - an array of skippable operations to try\n * @param finalOperation - a final, un-skippable operation\n */\nexport const attemptCompilerOperations = (operations, finalOperation) => (identifier, data, configuration) => {\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const operation of operations) {\n        const result = operation(identifier, data, configuration);\n        if (result.status !== 'skip')\n            return result;\n    }\n    return finalOperation(identifier, data, configuration);\n};\n/**\n * Modify a compiler operation to verify that certain properties exist in the\n * {@link CompilationData} and {@link CompilerConfiguration} before executing\n * the provided operation. If the properties don't exist, an error message\n * is returned.\n *\n * This is useful for eliminating repetitive existence checks.\n */\nexport const compilerOperationRequires = ({ \n/**\n * If `true`, the accepted operation may return `false`, and any missing\n * properties will cause the returned operation to return `false` (meaning\n * the operation should be skipped)\n */\ncanBeSkipped, \n/**\n * An array of the top-level properties required in the\n * {@link CompilationData}.\n */\ndataProperties, \n/**\n * An array of the top-level properties required in the\n * {@link CompilerConfiguration}\n */\nconfigurationProperties, \n/**\n * The operation to run if all required properties exist\n */\noperation, }) => \n// eslint-disable-next-line complexity\n(identifier, data, configuration) => {\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const property of configurationProperties) {\n        if (configuration[property] === undefined)\n            return (canBeSkipped\n                ? { status: 'skip' }\n                : {\n                    error: `Cannot resolve \"${identifier}\" - the \"${property}\" property was not provided in the compiler configuration.`,\n                    status: 'error',\n                });\n    }\n    // eslint-disable-next-line functional/no-loop-statements\n    for (const property of dataProperties) {\n        if (data[property] ===\n            undefined)\n            return (canBeSkipped\n                ? { status: 'skip' }\n                : {\n                    error: `Cannot resolve \"${identifier}\" - the \"${property}\" property was not provided in the compilation data.`,\n                    status: 'error',\n                });\n    }\n    return operation(identifier, data, configuration);\n};\nexport const compilerOperationAttemptBytecodeResolution = compilerOperationRequires({\n    canBeSkipped: true,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return { status: 'skip' };\n    },\n});\n// eslint-disable-next-line complexity\nexport const compilerOperationHelperDeriveHdPrivateNode = ({ addressIndex, entityId, entityHdPrivateKey, configuration, hdKey, identifier, }) => {\n    const addressOffset = hdKey.addressOffset ?? CompilerDefaults.hdKeyAddressOffset;\n    const privateDerivationPath = hdKey.privateDerivationPath ?? CompilerDefaults.hdKeyPrivateDerivationPath;\n    const i = addressIndex + addressOffset;\n    const validPrivatePathWithIndex = /^(?:m|i|[0-9]+)'?(?:\\/(?:[0-9]+|i)'?)*$/u;\n    if (!validPrivatePathWithIndex.test(privateDerivationPath)) {\n        return {\n            error: `Could not generate \"${identifier}\" - the path \"${privateDerivationPath}\" is not a valid \"privateDerivationPath\".`,\n            status: 'error',\n        };\n    }\n    /**\n     * Provided keys are already verified by `validateCompilationData`.\n     */\n    const masterContents = assertSuccess(decodeHdPrivateKey(entityHdPrivateKey, {\n        crypto: configuration,\n    }));\n    const instancePath = privateDerivationPath.replace('i', i.toString());\n    const usesAbsoluteDerivation = instancePath.includes('m');\n    const instanceNode = (usesAbsoluteDerivation ? deriveHdPath : deriveHdPathRelative)(masterContents.node, instancePath, {\n        crypto: configuration,\n        throwErrors: false,\n    });\n    if (typeof instanceNode === 'string') {\n        return {\n            error: `Could not generate \"${identifier}\" - the path \"${instancePath}\" could not be derived for entity \"${entityId}\": ${instanceNode}`,\n            status: 'error',\n        };\n    }\n    return {\n        bytecode: instanceNode.privateKey,\n        status: 'success',\n    };\n};\nexport const compilerOperationHelperUnknownEntity = (identifier, variableId) => ({\n    error: `Identifier \"${identifier}\" refers to an HdKey, but the \"entityOwnership\" for \"${variableId}\" is not available in this compiler configuration.`,\n    status: 'error',\n});\nexport const compilerOperationHelperAddressIndex = (identifier) => ({\n    error: `Identifier \"${identifier}\" refers to an HdKey, but \"hdKeys.addressIndex\" was not provided in the compilation data.`,\n    status: 'error',\n});\nexport const compilerOperationHelperDeriveHdKeyPrivate = ({ configuration, hdKeys, identifier, }) => {\n    const { addressIndex, hdPrivateKeys } = hdKeys;\n    const [variableId] = identifier.split('.');\n    const entityId = configuration.entityOwnership[variableId];\n    if (entityId === undefined) {\n        return compilerOperationHelperUnknownEntity(identifier, variableId);\n    }\n    if (addressIndex === undefined) {\n        return compilerOperationHelperAddressIndex(identifier);\n    }\n    const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];\n    if (entityHdPrivateKey === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" refers to an HdKey owned by \"${entityId}\", but an HD private key for this entity (or an existing signature) was not provided in the compilation data.`,\n            recoverable: true,\n            status: 'error',\n        };\n    }\n    /**\n     * Guaranteed to be an `HdKey` if this method is reached in the compiler.\n     */\n    const hdKey = configuration.variables[variableId];\n    return compilerOperationHelperDeriveHdPrivateNode({\n        addressIndex,\n        configuration,\n        entityHdPrivateKey,\n        entityId,\n        hdKey,\n        identifier,\n    });\n};\n/**\n * Returns `false` if the target script ID doesn't exist in the compiler\n * configuration (allows for the caller to generate the error message).\n *\n * If the compilation produced errors, returns a\n * {@link CompilerOperationErrorFatal}.\n *\n * If the compilation was successful, returns the compiled bytecode as a\n * `Uint8Array`.\n */\nexport const compilerOperationHelperCompileScript = ({ targetScriptId, data, configuration, }) => {\n    const signingTarget = configuration.scripts[targetScriptId];\n    const compiledTarget = resolveScriptIdentifier({\n        configuration,\n        data,\n        identifier: targetScriptId,\n    });\n    if (signingTarget === undefined || compiledTarget === false) {\n        return false;\n    }\n    if (typeof compiledTarget === 'string') {\n        return {\n            error: compiledTarget,\n            status: 'error',\n        };\n    }\n    return compiledTarget.bytecode;\n};\n/**\n * Returns either the properly generated `coveredBytecode` or a\n * {@link CompilerOperationErrorFatal}.\n */\nexport const compilerOperationHelperGenerateCoveredBytecode = ({ data, configuration, identifier, sourceScriptIds, unlockingScripts, }) => {\n    const currentScriptId = sourceScriptIds[sourceScriptIds.length - 1];\n    if (currentScriptId === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization, but \"coveredBytecode\" cannot be determined because the compiler configuration's \"sourceScriptIds\" is empty.`,\n            status: 'error',\n        };\n    }\n    const targetLockingScriptId = unlockingScripts[currentScriptId];\n    if (targetLockingScriptId === undefined) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization, but \"coveredBytecode\" cannot be determined because \"${currentScriptId}\" is not present in the compiler configuration's \"unlockingScripts\".`,\n            status: 'error',\n        };\n    }\n    const result = compilerOperationHelperCompileScript({\n        configuration,\n        data,\n        targetScriptId: targetLockingScriptId,\n    });\n    if (result === false) {\n        return {\n            error: `Identifier \"${identifier}\" requires a signing serialization that covers an unknown locking script, \"${targetLockingScriptId}\".`,\n            status: 'error',\n        };\n    }\n    return result;\n};\n//# sourceMappingURL=compiler-operation-helpers.js.map","import { assertSuccess, bigIntToCompactUint, numberToBinUint32LE, valueSatoshisToBin, } from '../format/format.js';\nimport { decodeHdPublicKey, deriveHdPathRelative } from '../key/key.js';\nimport { encodeTransactionInputSequenceNumbersForSigning, encodeTransactionOutpoints, encodeTransactionOutputsForSigning, } from '../message/message.js';\nimport { bigIntToVmNumber, generateSigningSerializationComponentsBch, } from '../vm/vm.js';\nimport { CompilerDefaults } from './compiler-defaults.js';\nimport { attemptCompilerOperations, compilerOperationAttemptBytecodeResolution, compilerOperationHelperAddressIndex, compilerOperationHelperDeriveHdPrivateNode, compilerOperationHelperGenerateCoveredBytecode, compilerOperationHelperUnknownEntity, compilerOperationRequires, } from './compiler-operation-helpers.js';\nexport const compilerOperationAddressData = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to an AddressData, but \"${identifier}\" was not provided in the CompilationData \"bytecode\".`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n});\nexport const compilerOperationWalletData = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['bytecode'],\n    operation: (identifier, data) => {\n        const bytecode = data.bytecode[identifier];\n        if (bytecode !== undefined) {\n            return { bytecode, status: 'success' };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to a WalletData, but \"${identifier}\" was not provided in the CompilationData \"bytecode\".`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n});\nexport const compilerOperationCurrentBlockTime = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['currentBlockTime'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(data.currentBlockTime),\n        status: 'success',\n    }),\n});\nexport const compilerOperationCurrentBlockHeight = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['currentBlockHeight'],\n    operation: (_, data) => ({\n        bytecode: bigIntToVmNumber(BigInt(data.currentBlockHeight)),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationCorrespondingOutput = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => {\n        const { correspondingOutput } = generateSigningSerializationComponentsBch(data.compilationContext);\n        return correspondingOutput === undefined\n            ? { bytecode: Uint8Array.of(), status: 'success' }\n            : {\n                bytecode: correspondingOutput,\n                status: 'success',\n            };\n    },\n});\nexport const compilerOperationSigningSerializationCorrespondingOutputHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => {\n        const { correspondingOutput } = generateSigningSerializationComponentsBch(data.compilationContext);\n        return correspondingOutput === undefined\n            ? { bytecode: Uint8Array.of(), status: 'success' }\n            : {\n                bytecode: configuration.sha256.hash(configuration.sha256.hash(correspondingOutput)),\n                status: 'success',\n            };\n    },\n});\nconst compilerOperationHelperSigningSerializationCoveredBytecode = (returnLength) => compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sourceScriptIds', 'unlockingScripts'],\n    dataProperties: ['compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { unlockingScripts, sourceScriptIds } = configuration;\n        const result = compilerOperationHelperGenerateCoveredBytecode({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return {\n            bytecode: returnLength\n                ? bigIntToCompactUint(BigInt(result.length))\n                : result,\n            status: 'success',\n        };\n    },\n});\nexport const compilerOperationSigningSerializationCoveredBytecode = compilerOperationHelperSigningSerializationCoveredBytecode(false);\nexport const compilerOperationSigningSerializationCoveredBytecodeLength = compilerOperationHelperSigningSerializationCoveredBytecode(true);\nexport const compilerOperationSigningSerializationLocktime = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(data.compilationContext.transaction.locktime),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationOutpointIndex = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].outpointIndex),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationOutpointTransactionHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].outpointTransactionHash,\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationOutputValue = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: valueSatoshisToBin(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.sourceOutputs[data.compilationContext.inputIndex].valueSatoshis),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationSequenceNumber = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.transaction.inputs[data.compilationContext.inputIndex].sequenceNumber),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionOutpoints = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: encodeTransactionOutpoints(data.compilationContext.transaction.inputs),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionOutpointsHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash(encodeTransactionOutpoints(data.compilationContext.transaction.inputs))),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionOutputs = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: encodeTransactionOutputsForSigning(data.compilationContext.transaction.outputs),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionOutputsHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash(encodeTransactionOutputsForSigning(data.compilationContext.transaction.outputs))),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionSequenceNumbers = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: encodeTransactionInputSequenceNumbersForSigning(data.compilationContext.transaction.inputs),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationTransactionSequenceNumbersHash = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256'],\n    dataProperties: ['compilationContext'],\n    operation: (_, data, configuration) => ({\n        bytecode: configuration.sha256.hash(configuration.sha256.hash(encodeTransactionInputSequenceNumbersForSigning(data.compilationContext.transaction.inputs))),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSigningSerializationVersion = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: numberToBinUint32LE(data.compilationContext.transaction.version),\n        status: 'success',\n    }),\n});\nexport const compilerOperationKeyPublicKeyCommon = attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['secp256k1'],\n    dataProperties: ['keys'],\n    operation: (identifier, data, configuration) => {\n        const { keys } = data;\n        const { secp256k1 } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        if (privateKeys?.[variableId] !== undefined) {\n            return {\n                bytecode: secp256k1.derivePublicKeyCompressed(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                privateKeys[variableId]),\n                status: 'success',\n            };\n        }\n        return {\n            error: `Identifier \"${identifier}\" refers to a public key, but no public or private keys for \"${variableId}\" were provided in the compilation data.`,\n            recoverable: true,\n            status: 'error',\n        };\n    },\n}));\nexport const compilerOperationHdKeyPublicKeyCommon = attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n    ],\n    dataProperties: ['hdKeys'],\n    operation: \n    // eslint-disable-next-line complexity\n    (identifier, data, configuration) => {\n        const { hdKeys } = data;\n        const { hdPrivateKeys, addressIndex, hdPublicKeys } = hdKeys;\n        const [variableId] = identifier.split('.');\n        const entityId = configuration.entityOwnership[variableId];\n        if (entityId === undefined) {\n            return compilerOperationHelperUnknownEntity(identifier, variableId);\n        }\n        if (addressIndex === undefined) {\n            return compilerOperationHelperAddressIndex(identifier);\n        }\n        const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];\n        /**\n         * Guaranteed to be an `HdKey` if this method is reached in the compiler.\n         */\n        const hdKey = configuration.variables[variableId];\n        if (entityHdPrivateKey !== undefined) {\n            const privateResult = compilerOperationHelperDeriveHdPrivateNode({\n                addressIndex,\n                configuration,\n                entityHdPrivateKey,\n                entityId,\n                hdKey,\n                identifier,\n            });\n            if (privateResult.status === 'error')\n                return privateResult;\n            return {\n                bytecode: configuration.secp256k1.derivePublicKeyCompressed(privateResult.bytecode),\n                status: 'success',\n            };\n        }\n        const entityHdPublicKey = hdPublicKeys === undefined ? undefined : hdPublicKeys[entityId];\n        if (entityHdPublicKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to an HdKey owned by \"${entityId}\", but an HD private key or HD public key for this entity was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        const addressOffset = hdKey.addressOffset ?? CompilerDefaults.hdKeyAddressOffset;\n        const privateDerivationPath = hdKey.privateDerivationPath ??\n            CompilerDefaults.hdKeyPrivateDerivationPath;\n        const hdPublicKeyDerivationPath = hdKey.hdPublicKeyDerivationPath ??\n            CompilerDefaults.hdKeyHdPublicKeyDerivationPath;\n        const publicDerivationPath = hdKey.publicDerivationPath ?? privateDerivationPath.replace('m/', '');\n        const validHdPublicKeyDerivationPath = /^(?:m|[0-9]+)'?(?:\\/(?:[0-9]+'?))*$/u;\n        if (hdPublicKeyDerivationPath !== '' &&\n            !validHdPublicKeyDerivationPath.test(hdPublicKeyDerivationPath)) {\n            return {\n                error: `Could not generate \"${identifier}\" - \"hdPublicKeyDerivationPath\" (\"${hdPublicKeyDerivationPath}\") must be a fixed (no \"i\" characters), valid absolute derivation path.`,\n                status: 'error',\n            };\n        }\n        const expected = hdPublicKeyDerivationPath === ''\n            ? publicDerivationPath\n            : `${hdPublicKeyDerivationPath}/${publicDerivationPath}`;\n        if (privateDerivationPath !== expected) {\n            return {\n                error: `Could not generate \"${identifier}\" - \"privateDerivationPath\" (\"${privateDerivationPath}\") is expected to be the combination of \"hdPublicKeyDerivationPath\" and \"publicDerivationPath\": \"${expected}\".`,\n                status: 'error',\n            };\n        }\n        /**\n         * Provided keys are already verified by `validateCompilationData`.\n         */\n        const masterContents = assertSuccess(decodeHdPublicKey(entityHdPublicKey, {\n            crypto: configuration,\n        }));\n        const i = addressIndex + addressOffset;\n        const instancePath = publicDerivationPath.replace('i', i.toString());\n        const expectedDepth = hdPublicKeyDerivationPath.split('/').length - 1;\n        if (hdPublicKeyDerivationPath !== '' &&\n            masterContents.node.depth !== expectedDepth) {\n            return {\n                error: `Could not generate \"${identifier}\" - the HD public key derivation path (\"${hdPublicKeyDerivationPath}\") indicates an expected depth of ${expectedDepth}, but the provided HD public key has a depth of ${masterContents.node.depth}.`,\n                status: 'error',\n            };\n        }\n        const instanceNode = deriveHdPathRelative(masterContents.node, instancePath, { crypto: configuration, throwErrors: false });\n        if (typeof instanceNode === 'string') {\n            return {\n                error: `Could not generate \"${identifier}\" - the path \"${instancePath}\" could not be derived for entity \"${entityId}\": ${instanceNode}`,\n                status: 'error',\n            };\n        }\n        return { bytecode: instanceNode.publicKey, status: 'success' };\n    },\n}));\n/* eslint-disable camelcase, @typescript-eslint/naming-convention */\nexport const compilerOperationsCommon = {\n    addressData: compilerOperationAddressData,\n    currentBlockHeight: compilerOperationCurrentBlockHeight,\n    currentBlockTime: compilerOperationCurrentBlockTime,\n    hdKey: {\n        public_key: compilerOperationHdKeyPublicKeyCommon,\n    },\n    key: {\n        public_key: compilerOperationKeyPublicKeyCommon,\n    },\n    signingSerialization: {\n        corresponding_output: compilerOperationSigningSerializationCorrespondingOutput,\n        corresponding_output_hash: compilerOperationSigningSerializationCorrespondingOutputHash,\n        covered_bytecode: compilerOperationSigningSerializationCoveredBytecode,\n        covered_bytecode_length: compilerOperationSigningSerializationCoveredBytecodeLength,\n        locktime: compilerOperationSigningSerializationLocktime,\n        outpoint_index: compilerOperationSigningSerializationOutpointIndex,\n        outpoint_transaction_hash: compilerOperationSigningSerializationOutpointTransactionHash,\n        output_value: compilerOperationSigningSerializationOutputValue,\n        sequence_number: compilerOperationSigningSerializationSequenceNumber,\n        transaction_outpoints: compilerOperationSigningSerializationTransactionOutpoints,\n        transaction_outpoints_hash: compilerOperationSigningSerializationTransactionOutpointsHash,\n        transaction_outputs: compilerOperationSigningSerializationTransactionOutputs,\n        transaction_outputs_hash: compilerOperationSigningSerializationTransactionOutputsHash,\n        transaction_sequence_numbers: compilerOperationSigningSerializationTransactionSequenceNumbers,\n        transaction_sequence_numbers_hash: compilerOperationSigningSerializationTransactionSequenceNumbersHash,\n        version: compilerOperationSigningSerializationVersion,\n    },\n    walletData: compilerOperationWalletData,\n};\n/* eslint-enable camelcase, @typescript-eslint/naming-convention */\n//# sourceMappingURL=compiler-operations.js.map","/* eslint-disable max-lines */\nimport { bigIntToBinUint256BEClamped, binToHex, binToValueSatoshis, hexToBin, } from '../format/format.js';\nimport { deriveHdPrivateNodeFromSeed, encodeHdPrivateKey } from '../key/key.js';\nimport { compileScriptRaw, stringifyErrors } from '../language/language.js';\nimport { CompilerDefaults } from './compiler-defaults.js';\n/**\n * Given a compiler configuration, generate the default scenario that is\n * extended by all the configuration's scenarios.\n *\n * For details on default scenario generation, see\n * {@link WalletTemplateScenario.extends}.\n *\n * @param configuration - the compiler configuration from which to generate the\n * default scenario\n */\n// eslint-disable-next-line complexity\nexport const generateDefaultScenarioDefinition = (configuration) => {\n    const { variables, entityOwnership } = configuration;\n    const keyVariableIds = variables === undefined\n        ? []\n        : Object.entries(variables)\n            .filter((entry) => entry[1].type === 'Key')\n            .map(([id]) => id);\n    const entityIds = entityOwnership === undefined\n        ? []\n        : Object.keys(Object.values(entityOwnership).reduce((all, entityId) => ({ ...all, [entityId]: true }), {}));\n    const valueMap = [...keyVariableIds, ...entityIds]\n        .sort((idA, idB) => idA.localeCompare(idB, 'en'))\n        .reduce((all, id, index) => ({\n        ...all,\n        [id]: bigIntToBinUint256BEClamped(BigInt(index + 1)),\n    }), {});\n    const privateKeys = variables === undefined\n        ? undefined\n        : Object.entries(variables).reduce((all, [variableId, variable]) => variable.type === 'Key'\n            ? {\n                ...all,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                [variableId]: binToHex(valueMap[variableId]),\n            }\n            : all, {});\n    const defaultScenario = {\n        data: {\n            currentBlockHeight: CompilerDefaults.defaultScenarioCurrentBlockHeight,\n            currentBlockTime: CompilerDefaults.defaultScenarioCurrentBlockTime,\n            ...(privateKeys === undefined || Object.keys(privateKeys).length === 0\n                ? {}\n                : { keys: { privateKeys } }),\n        },\n        sourceOutputs: [{ lockingBytecode: ['slot'] }],\n        transaction: {\n            inputs: [{ unlockingBytecode: ['slot'] }],\n            locktime: CompilerDefaults.defaultScenarioTransactionLocktime,\n            outputs: [\n                {\n                    lockingBytecode: CompilerDefaults.defaultScenarioOutputLockingBytecode,\n                },\n            ],\n            version: CompilerDefaults.defaultScenarioTransactionVersion,\n        },\n    };\n    const hasHdKeys = variables === undefined\n        ? false\n        : Object.values(variables).findIndex((variable) => variable.type === 'HdKey') !== -1;\n    if (!hasHdKeys) {\n        return defaultScenario;\n    }\n    const { sha256, sha512 } = configuration;\n    if (sha256 === undefined) {\n        return 'An implementations of \"sha256\" is required to generate defaults for HD keys, but the \"sha256\" property is not included in this compiler configuration.';\n    }\n    if (sha512 === undefined) {\n        return 'An implementations of \"sha512\" is required to generate defaults for HD keys, but the \"sha512\" property is not included in this compiler configuration.';\n    }\n    const crypto = { sha256, sha512 };\n    const hdPrivateKeys = entityIds.reduce((all, entityId) => {\n        /**\n         * The first 5,000,000,000 seeds have been tested, scenarios are\n         * unlikely to exceed this number of entities.\n         */\n        const assumeValidity = true;\n        const masterNode = deriveHdPrivateNodeFromSeed(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        valueMap[entityId], { assumeValidity, crypto });\n        const { hdPrivateKey } = encodeHdPrivateKey({ network: 'mainnet', node: masterNode }, { crypto });\n        return { ...all, [entityId]: hdPrivateKey };\n    }, {});\n    return {\n        ...defaultScenario,\n        data: {\n            ...defaultScenario.data,\n            hdKeys: {\n                addressIndex: CompilerDefaults.defaultScenarioAddressIndex,\n                hdPrivateKeys,\n            },\n        },\n    };\n};\n/**\n * Extend the `data` property of a scenario definition with values from a parent\n * scenario definition. Returns the extended value for `data`.\n *\n * @param parentData - the scenario `data` that is extended by the child\n * scenario\n * @param childData - the scenario `data` that may override values from the\n * parent scenario\n */\n// eslint-disable-next-line complexity\nexport const extendScenarioDefinitionData = (parentData, childData) => ({\n    ...parentData,\n    ...childData,\n    ...(parentData.bytecode === undefined && childData.bytecode === undefined\n        ? {}\n        : {\n            bytecode: {\n                ...parentData.bytecode,\n                ...childData.bytecode,\n            },\n        }),\n    ...(parentData.hdKeys === undefined && childData.hdKeys === undefined\n        ? {}\n        : {\n            hdKeys: {\n                ...parentData.hdKeys,\n                ...childData.hdKeys,\n                ...(parentData.hdKeys?.hdPrivateKeys === undefined &&\n                    childData.hdKeys?.hdPrivateKeys === undefined\n                    ? {}\n                    : {\n                        hdPrivateKeys: {\n                            ...parentData.hdKeys?.hdPrivateKeys,\n                            ...childData.hdKeys?.hdPrivateKeys,\n                        },\n                    }),\n                ...(parentData.hdKeys?.hdPublicKeys === undefined &&\n                    childData.hdKeys?.hdPublicKeys === undefined\n                    ? {}\n                    : {\n                        hdPublicKeys: {\n                            ...parentData.hdKeys?.hdPublicKeys,\n                            ...childData.hdKeys?.hdPublicKeys,\n                        },\n                    }),\n            },\n        }),\n    ...(parentData.keys === undefined && childData.keys === undefined\n        ? {}\n        : {\n            keys: {\n                privateKeys: {\n                    ...parentData.keys?.privateKeys,\n                    ...childData.keys?.privateKeys,\n                },\n            },\n        }),\n});\n/**\n * Extend a child scenario definition with values from a parent scenario\n * definition. Returns the extended values for `data`, `transaction`, and\n * `value`.\n *\n * @param parentScenario - the scenario that is extended by the child scenario\n * @param childScenario - the scenario that may override values from the parent\n * scenario\n */\n// eslint-disable-next-line complexity\nexport const extendScenarioDefinition = (parentScenario, childScenario) => ({\n    ...(parentScenario.data === undefined && childScenario.data === undefined\n        ? {}\n        : {\n            data: extendScenarioDefinitionData(parentScenario.data ?? {}, childScenario.data ?? {}),\n        }),\n    ...(parentScenario.transaction === undefined &&\n        childScenario.transaction === undefined\n        ? {}\n        : {\n            transaction: {\n                ...parentScenario.transaction,\n                ...childScenario.transaction,\n            },\n        }),\n    ...(parentScenario.sourceOutputs === undefined &&\n        childScenario.sourceOutputs === undefined\n        ? {}\n        : {\n            sourceOutputs: childScenario.sourceOutputs ?? parentScenario.sourceOutputs,\n        }),\n});\n/**\n * Generate the full scenario that is extended by the provided scenario\n * identifier. Scenarios for which `extends` is `undefined` extend the default\n * scenario for the provided compiler configuration.\n */\n// eslint-disable-next-line complexity\nexport const generateExtendedScenario = ({ configuration, scenarioId, sourceScenarioIds = [], }) => {\n    if (scenarioId === undefined) {\n        return generateDefaultScenarioDefinition(configuration);\n    }\n    if (sourceScenarioIds.includes(scenarioId)) {\n        return `Cannot extend scenario \"${scenarioId}\": scenario \"${scenarioId}\" extends itself. Scenario inheritance path: ${sourceScenarioIds.join(' → ')}`;\n    }\n    const scenario = configuration.scenarios?.[scenarioId];\n    if (scenario === undefined) {\n        return `Cannot extend scenario \"${scenarioId}\": a scenario with the identifier ${scenarioId} is not included in this compiler configuration.`;\n    }\n    const parentScenario = scenario.extends === undefined\n        ? generateDefaultScenarioDefinition(configuration)\n        : generateExtendedScenario({\n            configuration,\n            scenarioId: scenario.extends,\n            sourceScenarioIds: [...sourceScenarioIds, scenarioId],\n        });\n    if (typeof parentScenario === 'string') {\n        return parentScenario;\n    }\n    return extendScenarioDefinition(parentScenario, scenario);\n};\n/**\n * Derive standard {@link CompilationData} properties from an extended scenario\n * definition.\n *\n * @param definition - a scenario definition that has been extended by the\n * default scenario definition\n */\n// eslint-disable-next-line complexity\nexport const extendedScenarioDefinitionToCompilationData = (definition) => ({\n    ...(definition.data.currentBlockHeight === undefined\n        ? {}\n        : {\n            currentBlockHeight: definition.data.currentBlockHeight,\n        }),\n    ...(definition.data.currentBlockTime === undefined\n        ? {}\n        : {\n            currentBlockTime: definition.data.currentBlockTime,\n        }),\n    ...(definition.data.hdKeys === undefined\n        ? {}\n        : {\n            hdKeys: {\n                ...(definition.data.hdKeys.addressIndex === undefined\n                    ? {}\n                    : {\n                        addressIndex: definition.data.hdKeys.addressIndex,\n                    }),\n                ...(definition.data.hdKeys.hdPrivateKeys !== undefined &&\n                    Object.keys(definition.data.hdKeys.hdPrivateKeys).length > 0\n                    ? {\n                        hdPrivateKeys: definition.data.hdKeys.hdPrivateKeys,\n                    }\n                    : {}),\n                ...(definition.data.hdKeys.hdPublicKeys === undefined\n                    ? {}\n                    : {\n                        hdPublicKeys: definition.data.hdKeys.hdPublicKeys,\n                    }),\n            },\n        }),\n    ...(definition.data.keys?.privateKeys !== undefined &&\n        Object.keys(definition.data.keys.privateKeys).length > 0\n        ? {\n            keys: {\n                privateKeys: Object.entries(definition.data.keys.privateKeys).reduce((all, [id, hex]) => ({ ...all, [id]: hexToBin(hex) }), {}),\n            },\n        }\n        : {}),\n});\n/**\n * Extend a {@link CompilationData} object with the compiled result of the\n * bytecode scripts provided by an {@link WalletTemplateScenarioData}.\n */\nexport const extendCompilationDataWithScenarioBytecode = ({ compilationData, configuration, scenarioDataBytecodeScripts, }) => {\n    const prefixBytecodeScriptId = (id) => `${CompilerDefaults.scenarioBytecodeScriptPrefix}${id}`;\n    const bytecodeScripts = Object.entries(scenarioDataBytecodeScripts).reduce((all, [id, script]) => ({\n        ...all,\n        [prefixBytecodeScriptId(id)]: script,\n    }), {});\n    const bytecodeScriptExtendedConfiguration = {\n        ...configuration,\n        scripts: {\n            ...configuration.scripts,\n            ...bytecodeScripts,\n        },\n    };\n    const bytecodeCompilations = Object.keys(scenarioDataBytecodeScripts).map((id) => {\n        const result = compileScriptRaw({\n            configuration: bytecodeScriptExtendedConfiguration,\n            data: compilationData,\n            scriptId: prefixBytecodeScriptId(id),\n        });\n        if (result.success) {\n            return {\n                bytecode: result.bytecode,\n                id,\n            };\n        }\n        return {\n            errors: result.errors,\n            id,\n        };\n    });\n    const failedResults = bytecodeCompilations.filter((result) => 'errors' in result);\n    if (failedResults.length > 0) {\n        return failedResults\n            .map((result) => `Compilation error while generating bytecode for \"${result.id}\": ${stringifyErrors(result.errors)}`)\n            .join('; ');\n    }\n    const compiledBytecode = bytecodeCompilations.reduce((all, result) => ({ ...all, [result.id]: result.bytecode }), {});\n    return {\n        ...(Object.keys(compiledBytecode).length > 0\n            ? { bytecode: compiledBytecode }\n            : {}),\n        ...compilationData,\n    };\n};\n/**\n * Compile a {@link WalletTemplateScenarioOutput.valueSatoshis},\n * returning the `Uint8Array` result.\n */\nexport const compileWalletTemplateScenarioValueSatoshis = (valueSatoshisDefinition = CompilerDefaults.defaultScenarioOutputValueSatoshis) => typeof valueSatoshisDefinition === 'string'\n    ? binToValueSatoshis(hexToBin(valueSatoshisDefinition))\n    : BigInt(valueSatoshisDefinition);\n/**\n * Compile an {@link WalletTemplateScenarioBytecode} definition for an\n * {@link WalletTemplateScenario}, returning either a\n * simple `Uint8Array` result or a full CashAssembly {@link CompilationResult}.\n */\n// eslint-disable-next-line complexity\nexport const compileWalletTemplateScenarioBytecode = ({ bytecodeDefinition, compilationContext, configuration, defaultOverride, extendedScenario, generateBytecode, lockingOrUnlockingScriptIdUnderTest, }) => {\n    if (typeof bytecodeDefinition === 'string') {\n        return hexToBin(bytecodeDefinition);\n    }\n    const scriptId = bytecodeDefinition.script === undefined ||\n        Array.isArray(bytecodeDefinition.script)\n        ? lockingOrUnlockingScriptIdUnderTest\n        : bytecodeDefinition.script;\n    /**\n     * The script ID to compile. If `undefined`, we are attempting to \"copy\" the\n     * script ID in a scenario generation that does not define a locking or\n     * unlocking script under test (e.g. the scenario is only used for debugging\n     * values in an editor) - in these cases, simply return an empty `Uint8Array`.\n     */\n    if (scriptId === undefined) {\n        return hexToBin('');\n    }\n    const overrides = bytecodeDefinition.overrides ?? defaultOverride;\n    const overriddenDataDefinition = extendScenarioDefinitionData(extendedScenario.data, overrides);\n    const data = extendCompilationDataWithScenarioBytecode({\n        compilationData: extendedScenarioDefinitionToCompilationData({\n            data: overriddenDataDefinition,\n        }),\n        configuration,\n        scenarioDataBytecodeScripts: overriddenDataDefinition.bytecode ?? {},\n    });\n    if (typeof data === 'string') {\n        const error = `Could not compile scenario \"data.bytecode\": ${data}`;\n        return { errors: [{ error }], success: false };\n    }\n    return generateBytecode({\n        data: { ...data, compilationContext },\n        debug: true,\n        scriptId,\n    });\n};\n/**\n * Compile a {@link WalletTemplateScenarioOutput.token},\n * returning the {@link Output.token} result.\n */\n// eslint-disable-next-line complexity\nexport const compileScenarioOutputTokenData = (output) => output.token === undefined\n    ? {}\n    : {\n        token: {\n            amount: BigInt(output.token.amount ?? 0),\n            // TODO: doesn't verify length\n            category: hexToBin(output.token.category ??\n                CompilerDefaults.defaultScenarioOutputTokenCategory),\n            ...(output.token.nft === undefined\n                ? {}\n                : {\n                    nft: {\n                        capability: output.token.nft.capability ?? 'none',\n                        commitment: hexToBin(output.token.nft.commitment ?? ''),\n                    },\n                }),\n        },\n    };\n/**\n * Generate a scenario given a compiler configuration. If neither `scenarioId`\n * or `unlockingScriptId` are provided, the default scenario for the compiler\n * configuration will be generated.\n *\n * Returns either the full `CompilationData` for the selected scenario or an\n * error message (as a `string`).\n *\n * Note, this method should typically not be used directly, use\n * {@link Compiler.generateScenario} instead.\n */\n// eslint-disable-next-line complexity\nexport const generateScenarioBch = ({ configuration, generateBytecode, scenarioId, unlockingScriptId, lockingScriptId: providedLockingScriptId, }, debug) => {\n    const { scenarioDefinition, scenarioName } = scenarioId === undefined\n        ? { scenarioDefinition: {}, scenarioName: `the default scenario` }\n        : {\n            scenarioDefinition: configuration.scenarios?.[scenarioId],\n            scenarioName: `scenario \"${scenarioId}\"`,\n        };\n    if (scenarioDefinition === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return `Cannot generate ${scenarioName}: a scenario definition with the identifier ${scenarioId} is not included in this compiler configuration.`;\n    }\n    const parentScenario = generateExtendedScenario({ configuration, scenarioId });\n    if (typeof parentScenario === 'string') {\n        return `Cannot generate ${scenarioName}: ${parentScenario}`;\n    }\n    const extendedScenario = extendScenarioDefinition(parentScenario, scenarioDefinition);\n    const partialCompilationData = extendedScenarioDefinitionToCompilationData(extendedScenario);\n    const fullCompilationData = extendCompilationDataWithScenarioBytecode({\n        compilationData: partialCompilationData,\n        configuration,\n        scenarioDataBytecodeScripts: extendedScenario.data.bytecode ?? {},\n    });\n    if (typeof fullCompilationData === 'string') {\n        return `Cannot generate ${scenarioName}. ${fullCompilationData}`;\n    }\n    if (extendedScenario.transaction.inputs.length !==\n        extendedScenario.sourceOutputs.length) {\n        return `Cannot generate ${scenarioName}: could not match source outputs with inputs - \"sourceOutputs\" must be the same length as \"transaction.inputs\".`;\n    }\n    const testedInputs = extendedScenario.transaction.inputs.filter((input) => Array.isArray(input.unlockingBytecode));\n    if (testedInputs.length !== 1) {\n        return `Cannot generate ${scenarioName}: the specific input under test in this scenario is ambiguous - \"transaction.inputs\" must include exactly one input that has \"unlockingBytecode\" set to [\"slot\"].`;\n    }\n    const testedInputIndex = extendedScenario.transaction.inputs.findIndex((input) => Array.isArray(input.unlockingBytecode));\n    const testedSourceOutputs = extendedScenario.sourceOutputs.filter((output) => Array.isArray(output.lockingBytecode));\n    if (testedSourceOutputs.length !== 1) {\n        return `Cannot generate ${scenarioName}: the source output unlocked by the input under test in this scenario is ambiguous - \"sourceOutputs\" must include exactly one output that has \"lockingBytecode\" set to [\"slot\"].`;\n    }\n    if (!Array.isArray(extendedScenario.sourceOutputs[testedInputIndex]?.lockingBytecode)) {\n        return `Cannot generate ${scenarioName}: the source output unlocked by the input under test in this scenario is ambiguous - the [\"slot\"] in \"transaction.inputs\" and \"sourceOutputs\" must be at the same index.`;\n    }\n    if (unlockingScriptId !== undefined &&\n        providedLockingScriptId !== undefined) {\n        return `Cannot generate ${scenarioName}: a scenario cannot be generated with both unlocking and locking script IDs defined. If an unlocking script is provided, the associated locking script ID must be read from the template.`;\n    }\n    const lockingScriptId = providedLockingScriptId ??\n        (unlockingScriptId === undefined\n            ? undefined\n            : configuration.unlockingScripts?.[unlockingScriptId]);\n    if (unlockingScriptId !== undefined && lockingScriptId === undefined) {\n        return `Cannot generate ${scenarioName} using unlocking script \"${unlockingScriptId}\": the locking script unlocked by \"${unlockingScriptId}\" is not provided in this compiler configuration.`;\n    }\n    const sourceOutputCompilations = extendedScenario.sourceOutputs.map((sourceOutput, index) => {\n        const slot = Array.isArray(sourceOutput.lockingBytecode);\n        const bytecodeDefinition = slot\n            ? lockingScriptId === undefined\n                ? CompilerDefaults.defaultScenarioBytecode\n                : { script: lockingScriptId }\n            : sourceOutput.lockingBytecode ?? {};\n        const defaultOverride = {};\n        return {\n            compiled: {\n                lockingBytecode: compileWalletTemplateScenarioBytecode({\n                    bytecodeDefinition,\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: lockingScriptId,\n                }),\n                valueSatoshis: compileWalletTemplateScenarioValueSatoshis(sourceOutput.valueSatoshis),\n                ...compileScenarioOutputTokenData(sourceOutput),\n            },\n            index,\n            slot,\n            type: 'source output',\n        };\n    });\n    const lockingCompilation = sourceOutputCompilations.find((compilation) => compilation.slot)?.compiled.lockingBytecode;\n    const transactionOutputCompilations = extendedScenario.transaction.outputs.map((transactionOutput, index) => {\n        const defaultOverride = { hdKeys: { addressIndex: 1 } };\n        return {\n            compiled: {\n                lockingBytecode: compileWalletTemplateScenarioBytecode({\n                    bytecodeDefinition: transactionOutput.lockingBytecode ?? {},\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: lockingScriptId,\n                }),\n                valueSatoshis: compileWalletTemplateScenarioValueSatoshis(transactionOutput.valueSatoshis),\n                ...compileScenarioOutputTokenData(transactionOutput),\n            },\n            index,\n            type: 'transaction output',\n        };\n    });\n    const outputCompilationErrors = [\n        ...sourceOutputCompilations,\n        ...transactionOutputCompilations,\n    ].reduce((accumulated, result) => {\n        if ('errors' in result.compiled.lockingBytecode) {\n            return [\n                ...accumulated,\n                ...result.compiled.lockingBytecode.errors.map((errorObject) => `Failed compilation of ${result.type} at index ${result.index}: ${errorObject.error}`),\n            ];\n        }\n        return accumulated;\n    }, []);\n    if (outputCompilationErrors.length > 0) {\n        const error = `Cannot generate ${scenarioName}: ${outputCompilationErrors.join(' ')}`;\n        if (debug === true) {\n            return {\n                lockingCompilation,\n                scenario: error,\n            };\n        }\n        return error;\n    }\n    const sourceOutputCompilationsSuccess = sourceOutputCompilations;\n    const transactionOutputCompilationsSuccess = transactionOutputCompilations;\n    const extractOutput = (compilation) => {\n        const { lockingBytecode, valueSatoshis, token } = compilation.compiled;\n        return {\n            lockingBytecode: 'bytecode' in lockingBytecode\n                ? lockingBytecode.bytecode\n                : lockingBytecode,\n            valueSatoshis,\n            ...(token === undefined ? {} : { token }),\n        };\n    };\n    const sourceOutputs = sourceOutputCompilationsSuccess.map(extractOutput);\n    const outputs = transactionOutputCompilationsSuccess.map(extractOutput);\n    const inputsContext = extendedScenario.transaction.inputs.map((input, inputIndex) => ({\n        outpointIndex: input.outpointIndex ?? inputIndex,\n        // TODO: doesn't verify length\n        outpointTransactionHash: hexToBin(input.outpointTransactionHash ??\n            CompilerDefaults.defaultScenarioInputOutpointTransactionHash),\n        sequenceNumber: input.sequenceNumber ??\n            CompilerDefaults.defaultScenarioInputSequenceNumber,\n        unlockingBytecode: undefined,\n    }));\n    const transactionInputCompilations = extendedScenario.transaction.inputs.map((input, index) => {\n        const slot = Array.isArray(input.unlockingBytecode);\n        const bytecodeDefinition = Array.isArray(input.unlockingBytecode)\n            ? unlockingScriptId === undefined\n                ? CompilerDefaults.defaultScenarioBytecode\n                : { script: unlockingScriptId }\n            : input.unlockingBytecode ?? {};\n        const defaultOverride = {};\n        return {\n            compiled: {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                outpointIndex: inputsContext[index].outpointIndex,\n                outpointTransactionHash: \n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                inputsContext[index].outpointTransactionHash,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                sequenceNumber: inputsContext[index].sequenceNumber,\n                unlockingBytecode: compileWalletTemplateScenarioBytecode({\n                    bytecodeDefinition,\n                    compilationContext: {\n                        inputIndex: index,\n                        sourceOutputs,\n                        transaction: {\n                            inputs: inputsContext,\n                            locktime: extendedScenario.transaction.locktime,\n                            outputs,\n                            version: extendedScenario.transaction.version,\n                        },\n                    },\n                    configuration,\n                    defaultOverride,\n                    extendedScenario,\n                    generateBytecode,\n                    lockingOrUnlockingScriptIdUnderTest: unlockingScriptId,\n                }),\n            },\n            index,\n            slot,\n        };\n    });\n    const unlockingCompilation = transactionInputCompilations.find((compilation) => compilation.slot)?.compiled.unlockingBytecode;\n    const inputCompilationErrors = transactionInputCompilations.reduce((accumulated, result) => {\n        if ('errors' in result.compiled.unlockingBytecode) {\n            return [\n                ...accumulated,\n                ...result.compiled.unlockingBytecode.errors.map((errorObject) => `Failed compilation of input at index ${result.index}: ${errorObject.error}`),\n            ];\n        }\n        return accumulated;\n    }, []);\n    if (inputCompilationErrors.length > 0) {\n        const error = `Cannot generate ${scenarioName}: ${inputCompilationErrors.join(' ')}`;\n        if (debug === true) {\n            return {\n                lockingCompilation,\n                scenario: error,\n                unlockingCompilation,\n            };\n        }\n        return error;\n    }\n    const transactionInputCompilationsSuccess = transactionInputCompilations;\n    const inputs = transactionInputCompilationsSuccess.map((compilation) => {\n        const { outpointIndex, outpointTransactionHash, sequenceNumber, unlockingBytecode, } = compilation.compiled;\n        return {\n            outpointIndex,\n            outpointTransactionHash,\n            sequenceNumber,\n            unlockingBytecode: 'bytecode' in unlockingBytecode\n                ? unlockingBytecode.bytecode\n                : unlockingBytecode,\n        };\n    });\n    const scenario = {\n        data: fullCompilationData,\n        program: {\n            inputIndex: testedInputIndex,\n            sourceOutputs,\n            transaction: {\n                inputs,\n                locktime: extendedScenario.transaction.locktime,\n                outputs,\n                version: extendedScenario.transaction.version,\n            },\n        },\n    };\n    return (debug === true\n        ? { lockingCompilation, scenario, unlockingCompilation }\n        : scenario);\n};\n/**\n * @deprecated Alias of `generateScenarioBch` for backwards-compatibility.\n */\nexport const generateScenarioBCH = generateScenarioBch;\n//# sourceMappingURL=scenarios.js.map","import { ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha256 as internalSha256, sha512 as internalSha512, } from '../crypto/crypto.js';\nimport { flattenBinArray } from '../format/format.js';\nimport { compileScript } from '../language/language.js';\nimport { createVirtualMachineBchSpec, generateBytecodeMap, Opcodes, OpcodesBchSpec, OpcodesBtc, } from '../vm/vm.js';\nimport { compilerOperationsCommon } from './compiler-operations.js';\nimport { generateScenarioBch } from './scenarios.js';\n/**\n * Create a {@link Compiler.generateBytecode} method given a compiler\n * configuration.\n */\nexport const createCompilerGenerateBytecodeFunction = (compilerConfiguration) => ({ data, debug, scriptId, }) => {\n    const result = compileScript(scriptId, data, compilerConfiguration);\n    return (debug === true\n        ? result\n        : result.success\n            ? { bytecode: result.bytecode, success: true }\n            : {\n                errorType: result.errorType,\n                errors: result.errors,\n                success: false,\n            });\n};\n/**\n * Create a {@link Compiler} from the provided compiler configuration. This\n * method requires a full {@link CompilerConfiguration} and does not provide any\n * crypto or VM implementations.\n *\n * @param configuration - the configuration from which to create the compiler\n */\nexport const compilerConfigurationToCompilerBch = (configuration) => {\n    const generateBytecode = createCompilerGenerateBytecodeFunction(configuration);\n    return {\n        configuration,\n        generateBytecode,\n        generateScenario: ({ lockingScriptId, unlockingScriptId, scenarioId, debug, }) => generateScenarioBch({\n            configuration,\n            generateBytecode,\n            lockingScriptId,\n            scenarioId,\n            unlockingScriptId,\n        }, debug),\n    };\n};\n/**\n * @deprecated Alias of `compilerConfigurationToCompilerBch` for backwards-compatibility.\n */\nexport const compilerConfigurationToCompilerBCH = compilerConfigurationToCompilerBch;\nexport const compilerConfigurationToCompiler = compilerConfigurationToCompilerBch;\nconst nullHashLength = 32;\n/**\n * A common {@link createAuthenticationProgram} implementation for\n * most compilers.\n *\n * Accepts the compiled contents of an evaluation and produces a\n * {@link AuthenticationProgramCommon} that can be evaluated to produce the\n * resulting program state.\n *\n * The precise shape of the authentication program produced by this method is\n * critical to the determinism of CashAssembly evaluations for the compiler in\n * which it is used, it therefore must be standardized between compiler\n * implementations.\n *\n * @param evaluationBytecode - the compiled bytecode to incorporate in the\n * created authentication program\n */\nexport const createAuthenticationProgramEvaluationCommon = (evaluationBytecode) => ({\n    inputIndex: 0,\n    sourceOutputs: [\n        {\n            lockingBytecode: evaluationBytecode,\n            valueSatoshis: 0n,\n        },\n    ],\n    transaction: {\n        inputs: [\n            {\n                outpointIndex: 0,\n                outpointTransactionHash: new Uint8Array(nullHashLength),\n                sequenceNumber: 0,\n                unlockingBytecode: Uint8Array.of(),\n            },\n        ],\n        locktime: 0,\n        outputs: [\n            {\n                lockingBytecode: flattenBinArray([Uint8Array.of(Opcodes.OP_RETURN)]),\n                valueSatoshis: 0n,\n            },\n        ],\n        version: 0,\n    },\n});\n/**\n * Create a compiler using the default common compiler configuration. Because\n * this compiler has no access to a VM, it cannot compile evaluations.\n *\n * @param scriptsAndOverrides - a compiler configuration from which properties\n * will be used to override properties of the default common compiler\n * configuration – must include the `scripts` property\n */\nexport const createCompilerCommon = (scriptsAndOverrides) => compilerConfigurationToCompilerBch({\n    ...{\n        createAuthenticationProgram: createAuthenticationProgramEvaluationCommon,\n        opcodes: generateBytecodeMap(Opcodes),\n        operations: compilerOperationsCommon,\n        ripemd160: internalRipemd160,\n        secp256k1: internalSecp256k1,\n        sha256: internalSha256,\n        sha512: internalSha512,\n    },\n    ...scriptsAndOverrides,\n});\n/**\n * Perform a simplified compilation on a CashAssembly script containing only hex\n * literals, bigint literals, UTF8 literals, and push statements. Scripts may\n * not contain variables/operations, evaluations, or opcode identifiers (use hex\n * literals instead).\n *\n * This is useful for accepting complex user input in advanced interfaces,\n * especially for `AddressData` and `WalletData`.\n *\n * Returns the compiled bytecode as a `Uint8Array`, or throws an error message.\n *\n * @param script - a simple CashAssembly script containing no variables or\n * evaluations\n */\nexport const compileCashAssembly = (script) => {\n    const result = createCompilerCommon({\n        opcodes: {},\n        operations: {},\n        scripts: { script },\n    }).generateBytecode({ data: {}, scriptId: 'script' });\n    if (result.success) {\n        return result.bytecode;\n    }\n    return `CashAssembly compilation error:${result.errors.reduce((all, { error, range }) => `${all} [${range.startLineNumber}, ${range.startColumn}]: ${error}`, '')}`;\n};\nconst defaultVm = createVirtualMachineBchSpec();\n/**\n * Compile a CashAssembly script with detailed debugging information.\n *\n * If no VM override is provided, Libauth's default `BCH_SPEC` VM is used.\n *\n * @param script - the CashAssembly script to compile\n * @param scriptsAndOverrides - a compiler configuration from which properties\n * will be used to override properties of the default common compiler\n * configuration\n */\nexport const debugCashAssemblyCompilation = (script, scriptsAndOverrides = { scripts: {}, vm: defaultVm }) => {\n    const merged = {\n        ...scriptsAndOverrides,\n        scripts: {\n            script,\n            ...scriptsAndOverrides.scripts,\n        },\n        ...(scriptsAndOverrides.vm ? scriptsAndOverrides.vm : { vm: defaultVm }),\n    };\n    return createCompilerCommon(merged).generateScenario({\n        debug: true,\n        lockingScriptId: 'script',\n    });\n};\n/**\n * A simple, compile-and-evaluate utility for debugging CashAssembly scripts.\n * Returns the full compilation results, program trace, and verification result;\n * to return only the final program state following evaluation,\n * use {@link evaluateCashAssembly}.\n *\n * If no VM override is provided, Libauth's default `BCH_SPEC` VM is used.\n *\n * @param script - the CashAssembly script to debug\n * @param scriptsAndOverrides - a compiler configuration from which properties\n * will be used to override properties of the default common compiler\n * configuration\n */\nexport const debugCashAssembly = (script, scriptsAndOverrides = { scripts: {}, vm: defaultVm }) => {\n    const vm = scriptsAndOverrides.vm ?? defaultVm;\n    const result = debugCashAssemblyCompilation(script, { ...scriptsAndOverrides, vm });\n    if (typeof result === 'string')\n        return {\n            error: result,\n            success: false,\n        };\n    if (typeof result.scenario === 'string')\n        return {\n            error: result.scenario,\n            result,\n            success: false,\n        };\n    const trace = vm.debug(result.scenario.program);\n    const verify = vm.verify(result.scenario.program);\n    return { compilation: result, success: true, trace, verify };\n};\n/**\n * A simple, compile-and-evaluate utility for testing CashAssembly scripts.\n * Returns the final program state following evaluation; for full compilation\n * debugging and a program trace, use {@link debugCashAssembly}.\n *\n * If no VM override is provided, Libauth's default `BCH_SPEC` VM is used.\n *\n * @param script - the CashAssembly script to evaluate\n * @param scriptsAndOverrides - a compiler configuration from which properties\n * will be used to override properties of the default common compiler\n * configuration\n */\nexport const evaluateCashAssembly = (script, scriptsAndOverrides = { scripts: {}, vm: defaultVm }) => {\n    const vm = scriptsAndOverrides.vm ?? defaultVm;\n    const debug = debugCashAssembly(script, { ...scriptsAndOverrides, vm });\n    if (!debug.success)\n        return debug.error;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return debug.trace[debug.trace.length - 1];\n};\n/**\n * Re-assemble a string of disassembled bytecode\n * (see {@link disassembleBytecode}).\n *\n * @param opcodes - a mapping of opcodes to their respective Uint8Array\n * representation\n * @param disassembledBytecode - the disassembled bytecode to re-assemble\n */\nexport const assembleBytecode = (opcodes, disassembledBytecode) => {\n    const configuration = {\n        opcodes,\n        scripts: { asm: disassembledBytecode },\n    };\n    return createCompilerCommon(configuration).generateBytecode({ data: {}, scriptId: 'asm' });\n};\n/**\n * Re-assemble a string of disassembled BCH bytecode; see\n * {@link disassembleBytecodeBch}.\n *\n * Note, this method performs automatic minimization of push instructions.\n *\n * @param disassembledBytecode - the disassembled BCH bytecode to re-assemble\n */\nexport const assembleBytecodeBch = (disassembledBytecode) => assembleBytecode(generateBytecodeMap(OpcodesBchSpec), disassembledBytecode);\n/**\n * @deprecated Alias of `assembleBytecodeBch` for backwards-compatibility.\n */\nexport const assembleBytecodeBCH = assembleBytecodeBch;\n/**\n * A convenience method to compile CashAssembly (using\n * {@link assembleBytecodeBch}) to bytecode. If compilation fails, errors are\n * returned as a string.\n */\nexport const cashAssemblyToBin = (cashAssemblyScript) => {\n    const result = assembleBytecodeBch(cashAssemblyScript);\n    return result.success\n        ? result.bytecode\n        : `CashAssembly compilation ${result.errorType} error: ${result.errors\n            .map((err) => err.error)\n            .join(' ')}`;\n};\n/**\n * Re-assemble a string of disassembled BCH bytecode; see\n * {@link disassembleBytecodeBtc}.\n *\n * Note, this method performs automatic minimization of push instructions.\n *\n * @param disassembledBytecode - the disassembled BTC bytecode to re-assemble\n */\nexport const assembleBytecodeBtc = (disassembledBytecode) => assembleBytecode(generateBytecodeMap(OpcodesBtc), disassembledBytecode);\n/**\n * @deprecated Alias of `assembleBytecodeBtc` for backwards-compatibility.\n */\nexport const assembleBytecodeBTC = assembleBytecodeBtc;\n/**\n * Create a partial {@link CompilerConfiguration} from an\n * {@link WalletTemplate} by extracting and formatting the `scripts` and\n * `variables` properties.\n *\n * Note, if this {@link WalletTemplate} might be malformed, first\n * validate it with {@link importWalletTemplate}.\n *\n * @param template - the {@link WalletTemplate} from which to extract\n * the compiler configuration\n */\nexport const walletTemplateToCompilerConfiguration = (template) => {\n    /**\n     * Template scripts including virtualized test scripts.\n     */\n    const virtualizedScripts = Object.entries(template.scripts).reduce((all, [scriptId, script]) => {\n        if ('tests' in script) {\n            return {\n                ...all,\n                ...Object.entries(script.tests).reduce((tests, [testId, test]) => {\n                    const pushTestedScript = script.pushed === true;\n                    const checkScriptId = `${scriptId}.${testId}.check`;\n                    const virtualizedLockingScriptId = `${scriptId}.${testId}.lock`;\n                    const virtualizedUnlockingScriptId = `${scriptId}.${testId}.unlock`;\n                    return {\n                        ...tests,\n                        [checkScriptId]: { script: test.check },\n                        [virtualizedLockingScriptId]: {\n                            lockingType: 'p2sh20',\n                            script: pushTestedScript\n                                ? `<${scriptId}> ${checkScriptId}`\n                                : `${scriptId} ${checkScriptId}`,\n                        },\n                        [virtualizedUnlockingScriptId]: {\n                            script: test.setup ?? '',\n                            unlocks: virtualizedLockingScriptId,\n                        },\n                    };\n                }, {}),\n            };\n        }\n        return all;\n    }, {});\n    const allScripts = {\n        ...template.scripts,\n        ...virtualizedScripts,\n    };\n    const scripts = Object.entries(allScripts).reduce((all, [id, def]) => ({ ...all, [id]: def.script }), {});\n    const variables = Object.values(template.entities).reduce((all, entity) => ({ ...all, ...entity.variables }), {});\n    const entityOwnership = Object.entries(template.entities).reduce((all, [entityId, entity]) => ({\n        ...all,\n        ...Object.keys(entity.variables ?? {}).reduce((entityVariables, variableId) => ({\n            ...entityVariables,\n            [variableId]: entityId,\n        }), {}),\n    }), {});\n    const unlockingScripts = Object.entries(allScripts).reduce((all, [id, def]) => 'unlocks' in def && def.unlocks !== undefined\n        ? { ...all, [id]: def.unlocks }\n        : all, {});\n    const unlockingScriptTimeLockTypes = Object.entries(allScripts).reduce((all, [id, def]) => 'timeLockType' in def && def.timeLockType !== undefined\n        ? { ...all, [id]: def.timeLockType }\n        : all, {});\n    const lockingScriptTypes = Object.entries(allScripts).reduce((all, [id, def]) => 'lockingType' in def &&\n        def.lockingType !== undefined\n        ? { ...all, [id]: def.lockingType }\n        : all, {});\n    const scenarios = template.scenarios === undefined\n        ? undefined\n        : Object.entries(template.scenarios).reduce((all, [id, def]) => ({ ...all, [id]: def }), {});\n    return {\n        entityOwnership,\n        lockingScriptTypes,\n        ...(scenarios === undefined ? {} : { scenarios }),\n        scripts,\n        unlockingScriptTimeLockTypes,\n        unlockingScripts,\n        variables,\n    };\n};\n//# sourceMappingURL=compiler-utils.js.map","import { hash256, ripemd160 as internalRipemd160, secp256k1 as internalSecp256k1, sha256 as internalSha256, sha512 as internalSha512, } from '../../crypto/crypto.js';\nimport { encodeTokenPrefix } from '../../message/message.js';\nimport { createVirtualMachineBchSpec, generateBytecodeMap, generateSigningSerializationBch, OpcodesBchSpec, SigningSerializationFlag, SigningSerializationTypeBch, } from '../../vm/vm.js';\nimport { attemptCompilerOperations, compilerOperationAttemptBytecodeResolution, compilerOperationHelperCompileScript, compilerOperationHelperDeriveHdKeyPrivate, compilerOperationHelperGenerateCoveredBytecode, compilerOperationRequires, } from '../compiler-operation-helpers.js';\nimport { compilerOperationsCommon } from '../compiler-operations.js';\nimport { compilerConfigurationToCompilerBch, createAuthenticationProgramEvaluationCommon, walletTemplateToCompilerConfiguration, } from '../compiler-utils.js';\nexport var SigningSerializationAlgorithmIdentifier;\n(function (SigningSerializationAlgorithmIdentifier) {\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputs\"] = \"all_outputs\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsAllUtxos\"] = \"all_outputs_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsSingleInput\"] = \"all_outputs_single_input\";\n    /**\n     * A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"allOutputsSingleInputInvalidAllUtxos\"] = \"all_outputs_single_input_INVALID_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutput\"] = \"corresponding_output\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputAllUtxos\"] = \"corresponding_output_all_utxos\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputSingleInput\"] = \"corresponding_output_single_input\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"correspondingOutputSingleInputInvalidAllUtxos\"] = \"corresponding_output_single_input_INVALID_all_utxos\";\n    /**\n     * An alias for `all_outputs_all_utxos`\n     * (A.K.A. `SIGHASH_ALL|SIGHASH_UTXOS|SIGHASH_FORKID`),\n     * the most secure signing serialization algorithm.\n     *\n     * Note that as of 2022, `all_outputs` (A.K.A. `SIGHASH_ALL|SIGHASH_FORKID`)\n     * is more commonly used and is therefore a better choice for privacy in\n     * common, existing contract types.\n     */\n    SigningSerializationAlgorithmIdentifier[\"default\"] = \"default\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputs\"] = \"no_outputs\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_UTXOS|SIGHASH_FORKID`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsAllUtxos\"] = \"no_outputs_all_utxos\";\n    /**\n     * A.K.A `SIGHASH_NONE|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsSingleInput\"] = \"no_outputs_single_input\";\n    /**\n     * A.K.A. `SIGHASH_NONE|SIGHASH_UTXOS|SIGHASH_FORKID|ANYONECANPAY`\n     */\n    SigningSerializationAlgorithmIdentifier[\"noOutputsSingleInputInvalidAllUtxos\"] = \"no_outputs_single_input_INVALID_all_utxos\";\n})(SigningSerializationAlgorithmIdentifier || (SigningSerializationAlgorithmIdentifier = {}));\n// eslint-disable-next-line complexity\nconst getSigningSerializationType = (algorithmIdentifier, prefix = '') => {\n    switch (algorithmIdentifier) {\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputs}`:\n            return Uint8Array.of(SigningSerializationTypeBch.allOutputs);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsAllUtxos}`:\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.default}`:\n            return Uint8Array.of(SigningSerializationTypeBch.allOutputsAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsSingleInput}`:\n            return Uint8Array.of(SigningSerializationTypeBch.allOutputsSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            SigningSerializationFlag.allOutputs |\n                SigningSerializationFlag.singleInput |\n                SigningSerializationFlag.utxos |\n                SigningSerializationFlag.forkId);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutput}`:\n            return Uint8Array.of(SigningSerializationTypeBch.correspondingOutput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputAllUtxos}`:\n            return Uint8Array.of(SigningSerializationTypeBch.correspondingOutputAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputSingleInput}`:\n            return Uint8Array.of(SigningSerializationTypeBch.correspondingOutputSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            SigningSerializationFlag.correspondingOutput |\n                SigningSerializationFlag.singleInput |\n                SigningSerializationFlag.utxos |\n                SigningSerializationFlag.forkId);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputs}`:\n            return Uint8Array.of(SigningSerializationTypeBch.noOutputs);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsAllUtxos}`:\n            return Uint8Array.of(SigningSerializationTypeBch.noOutputsAllUtxos);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsSingleInput}`:\n            return Uint8Array.of(SigningSerializationTypeBch.noOutputsSingleInput);\n        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsSingleInputInvalidAllUtxos}`:\n            return Uint8Array.of(\n            // eslint-disable-next-line no-bitwise\n            SigningSerializationFlag.noOutputs |\n                SigningSerializationFlag.singleInput |\n                SigningSerializationFlag.utxos |\n                SigningSerializationFlag.forkId);\n        default:\n            return undefined;\n    }\n};\nexport const compilerOperationHelperComputeSignatureBch = ({ coveredBytecode, identifier, compilationContext, operationName, privateKey, sha256, sign, }) => {\n    const [, , algorithm, unknown] = identifier.split('.');\n    if (unknown !== undefined) {\n        return {\n            error: `Unknown component in \"${identifier}\" - the fragment \"${unknown}\" is not recognized.`,\n            status: 'error',\n        };\n    }\n    if (algorithm === undefined) {\n        return {\n            error: `Invalid signature identifier. Signatures must be of the form: \"[variable_id].${operationName}.[signing_serialization_type]\".`,\n            status: 'error',\n        };\n    }\n    const signingSerializationType = getSigningSerializationType(algorithm);\n    if (signingSerializationType === undefined) {\n        return {\n            error: `Unknown signing serialization algorithm, \"${algorithm}\".`,\n            status: 'error',\n        };\n    }\n    const serialization = generateSigningSerializationBch(compilationContext, { coveredBytecode, signingSerializationType }, sha256);\n    const digest = hash256(serialization, sha256);\n    const bitcoinEncodedSignature = Uint8Array.from([\n        ...sign(privateKey, digest),\n        ...signingSerializationType,\n    ]);\n    return {\n        bytecode: bitcoinEncodedSignature,\n        signature: { serialization },\n        status: 'success',\n    };\n};\nexport const compilerOperationHelperHdKeySignatureBch = ({ operationName, secp256k1Method, }) => attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n        'sourceScriptIds',\n        'unlockingScripts',\n    ],\n    dataProperties: ['hdKeys', 'compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { hdKeys, compilationContext } = data;\n        const { secp256k1, sha256, sourceScriptIds, unlockingScripts } = configuration;\n        const derivationResult = compilerOperationHelperDeriveHdKeyPrivate({\n            configuration,\n            hdKeys,\n            identifier,\n        });\n        if (derivationResult.status === 'error')\n            return derivationResult;\n        const result = compilerOperationHelperGenerateCoveredBytecode({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return compilerOperationHelperComputeSignatureBch({\n            compilationContext,\n            coveredBytecode: result,\n            identifier,\n            operationName,\n            privateKey: derivationResult.bytecode,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nexport const compilerOperationHdKeyEcdsaSignatureBch = compilerOperationHelperHdKeySignatureBch({\n    operationName: 'ecdsa_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nexport const compilerOperationHdKeySchnorrSignatureBch = compilerOperationHelperHdKeySignatureBch({\n    operationName: 'schnorr_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nexport const compilerOperationHelperKeySignatureBch = ({ operationName, secp256k1Method, }) => attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [\n        'sha256',\n        'secp256k1',\n        'unlockingScripts',\n        'sourceScriptIds',\n    ],\n    dataProperties: ['keys', 'compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const { keys, compilationContext } = data;\n        const { secp256k1, sha256, unlockingScripts, sourceScriptIds } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];\n        if (privateKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to a Key, but a private key for \"${variableId}\" (or an existing signature) was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        const result = compilerOperationHelperGenerateCoveredBytecode({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        return compilerOperationHelperComputeSignatureBch({\n            compilationContext,\n            coveredBytecode: result,\n            identifier,\n            operationName,\n            privateKey,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nexport const compilerOperationKeyEcdsaSignatureBch = compilerOperationHelperKeySignatureBch({\n    operationName: 'ecdsa_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nexport const compilerOperationKeySchnorrSignatureBch = compilerOperationHelperKeySignatureBch({\n    operationName: 'schnorr_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nexport const compilerOperationHelperComputeDataSignatureBch = ({ data, configuration, identifier, operationName, privateKey, sha256, sign, }) => {\n    const [, , scriptId, unknown] = identifier.split('.');\n    if (unknown !== undefined) {\n        return {\n            error: `Unknown component in \"${identifier}\" - the fragment \"${unknown}\" is not recognized.`,\n            status: 'error',\n        };\n    }\n    if (scriptId === undefined) {\n        return {\n            error: `Invalid data signature identifier. Data signatures must be of the form: \"[variable_id].${operationName}.[target_script_id]\".`,\n            status: 'error',\n        };\n    }\n    const result = compilerOperationHelperCompileScript({\n        configuration,\n        data,\n        targetScriptId: scriptId,\n    });\n    if (result === false) {\n        return {\n            error: `Data signature tried to sign an unknown target script, \"${scriptId}\".`,\n            status: 'error',\n        };\n    }\n    if ('error' in result) {\n        return result;\n    }\n    const digest = sha256.hash(result);\n    return {\n        bytecode: sign(privateKey, digest),\n        signature: { digest, message: result },\n        status: 'success',\n    };\n};\nexport const compilerOperationHelperKeyDataSignatureBch = ({ operationName, secp256k1Method, }) => attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256', 'secp256k1'],\n    dataProperties: ['keys'],\n    operation: (identifier, data, configuration) => {\n        const { keys } = data;\n        const { secp256k1, sha256 } = configuration;\n        const { privateKeys } = keys;\n        const [variableId] = identifier.split('.');\n        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];\n        if (privateKey === undefined) {\n            return {\n                error: `Identifier \"${identifier}\" refers to a Key, but a private key for \"${variableId}\" (or an existing signature) was not provided in the compilation data.`,\n                recoverable: true,\n                status: 'error',\n            };\n        }\n        return compilerOperationHelperComputeDataSignatureBch({\n            configuration,\n            data,\n            identifier,\n            operationName,\n            privateKey,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nexport const compilerOperationKeyEcdsaDataSignatureBch = compilerOperationHelperKeyDataSignatureBch({\n    operationName: 'ecdsa_data_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nexport const compilerOperationKeySchnorrDataSignatureBch = compilerOperationHelperKeyDataSignatureBch({\n    operationName: 'schnorr_data_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nexport const compilerOperationHelperHdKeyDataSignatureBch = ({ operationName, secp256k1Method, }) => attemptCompilerOperations([compilerOperationAttemptBytecodeResolution], compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [\n        'entityOwnership',\n        'ripemd160',\n        'secp256k1',\n        'sha256',\n        'sha512',\n        'variables',\n    ],\n    dataProperties: ['hdKeys'],\n    operation: (identifier, data, configuration) => {\n        const { hdKeys } = data;\n        const { secp256k1, sha256 } = configuration;\n        const derivationResult = compilerOperationHelperDeriveHdKeyPrivate({\n            configuration,\n            hdKeys,\n            identifier,\n        });\n        if (derivationResult.status === 'error')\n            return derivationResult;\n        return compilerOperationHelperComputeDataSignatureBch({\n            configuration,\n            data,\n            identifier,\n            operationName,\n            privateKey: derivationResult.bytecode,\n            sha256,\n            sign: secp256k1[secp256k1Method],\n        });\n    },\n}));\nexport const compilerOperationHdKeyEcdsaDataSignatureBch = compilerOperationHelperHdKeyDataSignatureBch({\n    operationName: 'ecdsa_data_signature',\n    secp256k1Method: 'signMessageHashDER',\n});\nexport const compilerOperationHdKeySchnorrDataSignatureBch = compilerOperationHelperHdKeyDataSignatureBch({\n    operationName: 'schnorr_data_signature',\n    secp256k1Method: 'signMessageHashSchnorr',\n});\nexport const compilerOperationSigningSerializationTokenPrefix = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: [],\n    dataProperties: ['compilationContext'],\n    operation: (_, data) => ({\n        bytecode: encodeTokenPrefix(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        data.compilationContext.sourceOutputs[data.compilationContext.inputIndex].token),\n        status: 'success',\n    }),\n});\nexport const compilerOperationSignatureRenamed = (identifier) => ({\n    error: `The \"signature\" compiler operation was renamed to \"ecdsa_signature\". Consider fixing this error by changing \"${identifier}\" to \"${identifier.replace('signature', 'schnorr_signature')}\" (schnorr signatures reduce transaction sizes and enable multi-party signature aggregation).`,\n    status: 'error',\n});\nexport const compilerOperationDataSignatureRenamed = (identifier) => ({\n    error: `The \"data_signature\" compiler operation was renamed to \"ecdsa_data_signature\". Consider fixing this error by changing \"${identifier}\" to \"${identifier.replace('data_signature', 'schnorr_data_signature')}\" (schnorr signatures reduce transaction sizes and enable multi-party signature aggregation).`,\n    status: 'error',\n});\nexport const compilerOperationSigningSerializationFullBch = compilerOperationRequires({\n    canBeSkipped: false,\n    configurationProperties: ['sha256', 'sourceScriptIds', 'unlockingScripts'],\n    dataProperties: ['compilationContext'],\n    operation: (identifier, data, configuration) => {\n        const [, algorithmOrComponent, unknownPart] = identifier.split('.');\n        if (algorithmOrComponent === undefined) {\n            return {\n                error: `Invalid signing serialization operation. Include the desired component or algorithm, e.g. \"signing_serialization.version\".`,\n                status: 'error',\n            };\n        }\n        if (unknownPart !== undefined) {\n            return {\n                error: `Unknown component in \"${identifier}\" - the fragment \"${unknownPart}\" is not recognized.`,\n                status: 'error',\n            };\n        }\n        const signingSerializationType = getSigningSerializationType(algorithmOrComponent, 'full_');\n        if (signingSerializationType === undefined) {\n            return {\n                error: `Unknown signing serialization algorithm, \"${algorithmOrComponent}\".`,\n                status: 'error',\n            };\n        }\n        const { sha256, sourceScriptIds, unlockingScripts } = configuration;\n        const result = compilerOperationHelperGenerateCoveredBytecode({\n            configuration,\n            data,\n            identifier,\n            sourceScriptIds,\n            unlockingScripts,\n        });\n        if ('error' in result) {\n            return result;\n        }\n        const { compilationContext } = data;\n        return {\n            bytecode: generateSigningSerializationBch(compilationContext, {\n                coveredBytecode: result,\n                signingSerializationType,\n            }, sha256),\n            status: 'success',\n        };\n    },\n});\n/* eslint-disable camelcase, @typescript-eslint/naming-convention */\nexport const compilerOperationsBch = {\n    ...compilerOperationsCommon,\n    hdKey: {\n        data_signature: compilerOperationDataSignatureRenamed,\n        ecdsa_data_signature: compilerOperationHdKeyEcdsaDataSignatureBch,\n        ecdsa_signature: compilerOperationHdKeyEcdsaSignatureBch,\n        public_key: compilerOperationsCommon.hdKey.public_key,\n        schnorr_data_signature: compilerOperationHdKeySchnorrDataSignatureBch,\n        schnorr_signature: compilerOperationHdKeySchnorrSignatureBch,\n        signature: compilerOperationSignatureRenamed,\n    },\n    key: {\n        data_signature: compilerOperationDataSignatureRenamed,\n        ecdsa_data_signature: compilerOperationKeyEcdsaDataSignatureBch,\n        ecdsa_signature: compilerOperationKeyEcdsaSignatureBch,\n        public_key: compilerOperationsCommon.key.public_key,\n        schnorr_data_signature: compilerOperationKeySchnorrDataSignatureBch,\n        schnorr_signature: compilerOperationKeySchnorrSignatureBch,\n        signature: compilerOperationSignatureRenamed,\n    },\n    signingSerialization: {\n        ...compilerOperationsCommon.signingSerialization,\n        full_all_outputs: compilerOperationSigningSerializationFullBch,\n        full_all_outputs_all_utxos: compilerOperationSigningSerializationFullBch,\n        full_all_outputs_single_input: compilerOperationSigningSerializationFullBch,\n        full_all_outputs_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBch,\n        full_corresponding_output: compilerOperationSigningSerializationFullBch,\n        full_corresponding_output_all_utxos: compilerOperationSigningSerializationFullBch,\n        full_corresponding_output_single_input: compilerOperationSigningSerializationFullBch,\n        full_corresponding_output_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBch,\n        full_default: compilerOperationSigningSerializationFullBch,\n        full_no_outputs: compilerOperationSigningSerializationFullBch,\n        full_no_outputs_all_utxos: compilerOperationSigningSerializationFullBch,\n        full_no_outputs_single_input: compilerOperationSigningSerializationFullBch,\n        full_no_outputs_single_input_INVALID_all_utxos: compilerOperationSigningSerializationFullBch,\n        token_prefix: compilerOperationSigningSerializationTokenPrefix,\n    },\n};\n/* eslint-enable camelcase, @typescript-eslint/naming-convention */\n/**\n * @deprecated Alias of `compilerOperationsBch` for backwards-compatibility.\n */\nexport const compilerOperationsBCH = compilerOperationsBch;\n/**\n * Create a compiler using the default BCH compiler configuration.\n *\n * Internally instantiates the necessary crypto and VM implementations – use\n * {@link compilerConfigurationToCompilerBch} for more control.\n *\n * @param configuration - a compiler configuration from which properties\n * will be used to override properties of the default BCH configuration – must\n * include the `scripts` property\n */\nexport const createCompilerBch = (configuration) => compilerConfigurationToCompilerBch({\n    ...{\n        createAuthenticationProgram: createAuthenticationProgramEvaluationCommon,\n        opcodes: generateBytecodeMap(OpcodesBchSpec),\n        operations: compilerOperationsBch,\n        ripemd160: internalRipemd160,\n        secp256k1: internalSecp256k1,\n        sha256: internalSha256,\n        sha512: internalSha512,\n        vm: configuration.vm ?? createVirtualMachineBchSpec(),\n    },\n    ...configuration,\n});\nexport const createCompiler = createCompilerBch;\n/**\n * @deprecated Alias of `createCompilerBch` for backwards-compatibility.\n */\nexport const createCompilerBCH = createCompilerBch;\n/**\n * Create a BCH `Compiler` from a `WalletTemplate` and an optional set\n * of overrides.\n * @param template - the `WalletTemplate` from which to create the BCH\n * compiler\n * @param overrides - a compiler configuration from which properties will be\n * used to override properties of the default BCH configuration\n */\nexport const walletTemplateToCompilerBch = (template, overrides) => createCompilerBch({\n    ...overrides,\n    ...walletTemplateToCompilerConfiguration(template),\n});\n/**\n * @deprecated Alias of `walletTemplateToCompilerBch` for backwards-compatibility.\n */\nexport const walletTemplateToCompilerBCH = walletTemplateToCompilerBch;\n//# sourceMappingURL=compiler-bch.js.map","/**\n * A standard single-factor wallet template that uses\n * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use\n * on the network.\n *\n * This P2PKH template uses BCH Schnorr signatures, reducing the size of\n * transactions.\n *\n * Note, this wallet template uses only a single `Key`. For HD key\n * support, see {@link walletTemplateP2pkhHd}.\n */\nexport const walletTemplateP2pkhNonHd = {\n    $schema: 'https://libauth.org/schemas/wallet-template-v0.schema.json',\n    description: 'A standard single-factor wallet template that uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\\n\\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions.',\n    entities: {\n        owner: {\n            description: 'The individual who can spend from this wallet.',\n            name: 'Owner',\n            scripts: ['lock', 'unlock'],\n            variables: {\n                key: {\n                    description: 'The private key that controls this wallet.',\n                    name: 'Key',\n                    type: 'Key',\n                },\n            },\n        },\n    },\n    name: 'Single Signature (P2PKH)',\n    scripts: {\n        lock: {\n            lockingType: 'standard',\n            name: 'P2PKH Lock',\n            script: 'OP_DUP\\nOP_HASH160 <$(<key.public_key> OP_HASH160\\n)> OP_EQUALVERIFY\\nOP_CHECKSIG',\n        },\n        unlock: {\n            name: 'Unlock',\n            script: '<key.schnorr_signature.all_outputs>\\n<key.public_key>',\n            unlocks: 'lock',\n        },\n    },\n    supported: [\n        'BCH_2020_05',\n        'BCH_2021_05',\n        'BCH_2022_05',\n        'BCH_2023_05',\n        'BCH_2024_05',\n        'BCH_2025_05',\n        'BCH_2026_05',\n        'BCH_SPEC',\n    ],\n};\n/**\n * A standard single-factor wallet template that uses\n * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use\n * on the network.\n *\n * This P2PKH template uses BCH Schnorr signatures, reducing the size of\n * transactions.\n *\n * Because the template uses a Hierarchical Deterministic (HD) key, it also\n * supports watch-only clients.\n */\nexport const walletTemplateP2pkh = {\n    $schema: 'https://libauth.org/schemas/wallet-template-v0.schema.json',\n    description: 'A standard single-factor wallet template that uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\\n\\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions. Because the template uses a Hierarchical Deterministic (HD) key, it also supports watch-only clients.',\n    entities: {\n        owner: {\n            description: 'The individual who can spend from this wallet.',\n            name: 'Owner',\n            scripts: ['lock', 'unlock'],\n            variables: {\n                key: {\n                    description: 'The private key that controls this wallet.',\n                    name: 'Key',\n                    type: 'HdKey',\n                },\n            },\n        },\n    },\n    name: 'Single Signature (P2PKH)',\n    scripts: {\n        lock: {\n            lockingType: 'standard',\n            name: 'P2PKH Lock',\n            script: 'OP_DUP\\nOP_HASH160 <$(<key.public_key> OP_HASH160\\n)> OP_EQUALVERIFY\\nOP_CHECKSIG',\n        },\n        unlock: {\n            name: 'Unlock',\n            script: '<key.schnorr_signature.all_outputs>\\n<key.public_key>',\n            unlocks: 'lock',\n        },\n    },\n    supported: [\n        'BCH_2020_05',\n        'BCH_2021_05',\n        'BCH_2022_05',\n        'BCH_2023_05',\n        'BCH_2024_05',\n        'BCH_2025_05',\n        'BCH_2026_05',\n        'BCH_SPEC',\n    ],\n};\n//# sourceMappingURL=p2pkh.js.map","import { lockingBytecodeToCashAddress } from '../address/address.js';\nimport { formatError } from '../format/format.js';\nimport { stringifyErrors } from '../language/language.js';\nimport { walletTemplateToCompilerBch } from './compiler-bch/compiler-bch.js';\nimport { walletTemplateP2pkh, walletTemplateP2pkhNonHd, } from './standard/standard.js';\nexport var P2pkhUtilityError;\n(function (P2pkhUtilityError) {\n    P2pkhUtilityError[\"hdPrivateKeyToP2pkhLockingBytecodeCompilation\"] = \"P2PKH utility error: could not derive P2PKH locking bytecode from the provided HD private key.\";\n    P2pkhUtilityError[\"hdPublicKeyToP2pkhLockingBytecodeCompilation\"] = \"P2PKH utility error: could not derive P2PKH locking bytecode from the provided HD public key.\";\n    P2pkhUtilityError[\"privateKeyToP2pkhLockingBytecodeCompilation\"] = \"P2PKH utility error: could not derive P2PKH locking bytecode from the provided private key.\";\n    P2pkhUtilityError[\"publicKeyToP2pkhLockingBytecodeCompilation\"] = \"P2PKH utility error: could not derive P2PKH locking bytecode from the provided public key.\";\n})(P2pkhUtilityError || (P2pkhUtilityError = {}));\n/**\n * Derive the P2PKH locking bytecode of the provided private key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid private key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive the resulting CashAddress, use\n * {@link privateKeyToP2pkhCashAddress}. For HD private keys, use\n * {@link hdPrivateKeyToP2pkhLockingBytecode}. For the public key equivalent,\n * see {@link publicKeyToP2pkhLockingBytecode}.\n */\nexport const privateKeyToP2pkhLockingBytecode = ({ privateKey, throwErrors = true, }) => {\n    const compiler = walletTemplateToCompilerBch(walletTemplateP2pkhNonHd);\n    const lockingBytecode = compiler.generateBytecode({\n        data: { keys: { privateKeys: { key: privateKey } } },\n        scriptId: 'lock',\n    });\n    if (!lockingBytecode.success) {\n        return formatError(P2pkhUtilityError.privateKeyToP2pkhLockingBytecodeCompilation, stringifyErrors(lockingBytecode.errors), throwErrors);\n    }\n    return lockingBytecode.bytecode;\n};\n/**\n * Derive the P2PKH locking bytecode of the provided public key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid public key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive the resulting CashAddress, use {@link publicKeyToP2pkhCashAddress}.\n * For HD public keys, use {@link hdPublicKeyToP2pkhLockingBytecode}. For the\n * private key equivalent, see {@link privateKeyToP2pkhLockingBytecode}.\n */\nexport const publicKeyToP2pkhLockingBytecode = ({ publicKey, throwErrors = true, }) => {\n    const compiler = walletTemplateToCompilerBch(walletTemplateP2pkhNonHd);\n    const lockingBytecode = compiler.generateBytecode({\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        data: { bytecode: { 'key.public_key': publicKey } },\n        scriptId: 'lock',\n    });\n    if (!lockingBytecode.success) {\n        return formatError(P2pkhUtilityError.publicKeyToP2pkhLockingBytecodeCompilation, stringifyErrors(lockingBytecode.errors), throwErrors);\n    }\n    return lockingBytecode.bytecode;\n};\n/**\n * Derive the P2PKH locking bytecode at the provided path and address index of\n * the provided HD private key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid HD private key or derivation path. To handle errors in a type-safe\n * way, set `throwErrors` to `false`.\n *\n * To derive the resulting CashAddress, use\n * {@link hdPrivateKeyToP2pkhCashAddress}. For non-HD private keys, use\n * {@link privateKeyToP2pkhLockingBytecode}. For the HD public key equivalent,\n * see {@link hdPublicKeyToP2pkhLockingBytecode}.\n */\nexport const hdPrivateKeyToP2pkhLockingBytecode = ({ addressIndex, hdPrivateKey, privateDerivationPath = 'i', throwErrors = true, }) => {\n    const template = structuredClone(walletTemplateP2pkh);\n    // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    template.entities.owner.variables.key.privateDerivationPath =\n        privateDerivationPath;\n    const compiler = walletTemplateToCompilerBch(template);\n    const lockingBytecode = compiler.generateBytecode({\n        data: { hdKeys: { addressIndex, hdPrivateKeys: { owner: hdPrivateKey } } },\n        scriptId: 'lock',\n    });\n    if (!lockingBytecode.success) {\n        return formatError(P2pkhUtilityError.hdPrivateKeyToP2pkhLockingBytecodeCompilation, stringifyErrors(lockingBytecode.errors), throwErrors);\n    }\n    return lockingBytecode.bytecode;\n};\n/**\n * Derive the P2PKH locking bytecode at the provided index of the provided HD\n * public key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid HD public key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive the resulting CashAddress, use\n * {@link hdPublicKeyToP2pkhCashAddress}. For non-HD public keys, use\n * {@link publicKeyToP2pkhLockingBytecode}. For the HD private key equivalent,\n * see {@link hdPrivateKeyToP2pkhLockingBytecode}.\n */\nexport const hdPublicKeyToP2pkhLockingBytecode = ({ addressIndex, hdPublicKey, hdPublicKeyDerivationPath = '', throwErrors = true, publicDerivationPath = 'i', }) => {\n    const template = structuredClone(walletTemplateP2pkh);\n    /* eslint-disable functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n    template.entities.owner.variables.key.publicDerivationPath =\n        publicDerivationPath;\n    template.entities.owner.variables.key.hdPublicKeyDerivationPath =\n        hdPublicKeyDerivationPath;\n    template.entities.owner.variables.key.privateDerivationPath =\n        hdPublicKeyDerivationPath === ''\n            ? publicDerivationPath\n            : `${hdPublicKeyDerivationPath}/${publicDerivationPath}`;\n    /* eslint-enable functional/no-expression-statements, functional/immutable-data, @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n    const compiler = walletTemplateToCompilerBch(template);\n    const lockingBytecode = compiler.generateBytecode({\n        data: { hdKeys: { addressIndex, hdPublicKeys: { owner: hdPublicKey } } },\n        scriptId: 'lock',\n    });\n    if (!lockingBytecode.success) {\n        return formatError(P2pkhUtilityError.hdPublicKeyToP2pkhLockingBytecodeCompilation, stringifyErrors(lockingBytecode.errors), throwErrors);\n    }\n    return lockingBytecode.bytecode;\n};\n/**\n * Derive the P2PKH address of the provided private key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid private key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive only the locking bytecode, use\n * {@link privateKeyToP2pkhLockingBytecode}. For HD private keys, use\n * {@link hdPrivateKeyToP2pkhCashAddress}. For the public key equivalent,\n * see {@link publicKeyToP2pkhCashAddress}.\n */\nexport const privateKeyToP2pkhCashAddress = ({ privateKey, prefix = 'bitcoincash', throwErrors = true, tokenSupport = false, }) => {\n    const bytecode = privateKeyToP2pkhLockingBytecode({\n        privateKey,\n        throwErrors,\n    });\n    if (typeof bytecode === 'string') {\n        return formatError(bytecode, undefined, throwErrors);\n    }\n    return lockingBytecodeToCashAddress({\n        bytecode,\n        prefix,\n        tokenSupport,\n    });\n};\n/**\n * Derive the P2PKH address of the provided public key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid public key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive only the locking bytecode, use\n * {@link publicKeyToP2pkhLockingBytecode}. For HD public keys, use\n * {@link hdPublicKeyToP2pkhCashAddress}. For the private key equivalent,\n * see {@link privateKeyToP2pkhCashAddress}.\n */\nexport const publicKeyToP2pkhCashAddress = ({ publicKey, prefix = 'bitcoincash', throwErrors = true, tokenSupport = false, }) => {\n    const bytecode = publicKeyToP2pkhLockingBytecode({\n        publicKey,\n        throwErrors,\n    });\n    if (typeof bytecode === 'string') {\n        return formatError(bytecode, undefined, throwErrors);\n    }\n    return lockingBytecodeToCashAddress({\n        bytecode,\n        prefix,\n        tokenSupport,\n    });\n};\n/**\n * Derive the P2PKH address at the provided index of the provided HD\n * private key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid HD private key or derivation path. To handle errors in a type-safe\n * way, set `throwErrors` to `false`.\n *\n * To derive only the locking bytecode, use\n * {@link hdPrivateKeyToP2pkhLockingBytecode}. For non-HD private keys, use\n * {@link privateKeyToP2pkhCashAddress}. For the HD public key equivalent,\n * see {@link hdPublicKeyToP2pkhCashAddress}.\n */\nexport const hdPrivateKeyToP2pkhCashAddress = ({ addressIndex, hdPrivateKey, prefix = 'bitcoincash', privateDerivationPath = 'i', throwErrors = true, tokenSupport = false, }) => {\n    const bytecode = hdPrivateKeyToP2pkhLockingBytecode({\n        addressIndex,\n        hdPrivateKey,\n        privateDerivationPath,\n        throwErrors,\n    });\n    if (typeof bytecode === 'string') {\n        return formatError(bytecode, undefined, throwErrors);\n    }\n    return lockingBytecodeToCashAddress({\n        bytecode,\n        prefix,\n        tokenSupport,\n    });\n};\n/**\n * Derive the P2PKH address at the provided index of the provided HD\n * public key.\n *\n * Note that this function defaults to throwing an error if provided with an\n * invalid HD public key. To handle errors in a type-safe way, set `throwErrors`\n * to `false`.\n *\n * To derive only the locking bytecode, use\n * {@link hdPublicKeyToP2pkhLockingBytecode}. For non-HD public keys, use\n * {@link publicKeyToP2pkhCashAddress}. For the HD private key equivalent,\n * see {@link hdPrivateKeyToP2pkhCashAddress}.\n */\nexport const hdPublicKeyToP2pkhCashAddress = ({ addressIndex, hdPublicKey, hdPublicKeyDerivationPath = '', prefix = 'bitcoincash', publicDerivationPath = 'i', throwErrors = true, tokenSupport = false, }) => {\n    const bytecode = hdPublicKeyToP2pkhLockingBytecode({\n        addressIndex,\n        hdPublicKey,\n        hdPublicKeyDerivationPath,\n        publicDerivationPath,\n        throwErrors,\n    });\n    if (typeof bytecode === 'string') {\n        return formatError(bytecode, undefined, throwErrors);\n    }\n    return lockingBytecodeToCashAddress({\n        bytecode,\n        prefix,\n        tokenSupport,\n    });\n};\n//# sourceMappingURL=p2pkh-utils.js.map","export default validate20;\nconst schema22 = {\n    $ref: '#/definitions/WalletTemplate',\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    definitions: {\n        AuthenticationVirtualMachineIdentifier: {\n            description: \"Allowable identifiers for authentication virtual machine versions. The `BCH` prefix identifies the Bitcoin Cash network, the `XEC` prefix identifies the eCash network, the `BSV` prefix identifies the Bitcoin SV network, and the `BTC` prefix identifies the Bitcoin Core network. VM versions are named according to the date they were deployed on the indicated network.\\n\\nFor each network prefix, a `_SPEC` VM version is reserved to indicate that the template requires a custom, not-yet-deployed VM version (e.g. one or more CHIPs). By convention, templates marked for `_SPEC` VMs should indicate their requirements in the template description. After deployment of the `_SPEC` VM, when template compatibility is verified, the template's `supported` array should be updated to indicate compatibility with the live VM version.\",\n            enum: [\n                'BCH_2020_05',\n                'BCH_2021_05',\n                'BCH_2022_05',\n                'BCH_2023_05',\n                'BCH_2024_05',\n                'BCH_2025_05',\n                'BCH_2026_05',\n                'BCH_2027_05',\n                'BCH_2028_05',\n                'BCH_2029_05',\n                'BCH_2030_05',\n                'BCH_SPEC',\n                'BSV_2020_02',\n                'BSV_SPEC',\n                'BTC_2017_08',\n                'BTC_SPEC',\n                'XEC_2020_05',\n                'XEC_SPEC',\n            ],\n            type: 'string',\n        },\n        WalletTemplate: {\n            additionalProperties: false,\n            description: 'A `WalletTemplate` specifies a set of locking scripts, unlocking scripts, and other information required to use a certain wallet protocol. Templates fully describe wallet protocols in a way that can be shared between software clients.',\n            properties: {\n                $schema: {\n                    description: 'The URI that identifies the JSON Schema used by this template. Try: `https://libauth.org/schemas/wallet-template-v0.schema.json` to enable documentation, autocompletion, and validation in JSON documents.',\n                    type: 'string',\n                },\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this wallet template (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.\\n\\nDescriptions have no length limit, but in user interfaces with limited space, they should be hidden beyond the first newline character or `140` characters until revealed by the user (e.g. by hiding the remaining description until the user activates a \"show more\" link).',\n                    type: 'string',\n                },\n                entities: {\n                    additionalProperties: { $ref: '#/definitions/WalletTemplateEntity' },\n                    description: 'A map of entities defined in this wallet template.\\n\\nObject keys are used as entity identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this authentication template (for use in user interfaces).',\n                    type: 'string',\n                },\n                scenarios: {\n                    additionalProperties: {\n                        $ref: '#/definitions/WalletTemplateScenario',\n                    },\n                    description: 'A scenario describes a context in which one or more scripts might be used. Scenarios are used for transaction estimation and as an integrated testing system for wallet templates.\\n\\nObject keys are used as scenario identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                scripts: {\n                    additionalProperties: {\n                        anyOf: [\n                            { $ref: '#/definitions/WalletTemplateScript' },\n                            { $ref: '#/definitions/WalletTemplateScriptLocking' },\n                            { $ref: '#/definitions/WalletTemplateScriptTested' },\n                            { $ref: '#/definitions/WalletTemplateScriptUnlocking' },\n                        ],\n                    },\n                    description: 'A map of scripts used in this wallet template.\\n\\nObject keys are used as script identifiers, and by convention, should use `snake_case`.',\n                    type: 'object',\n                },\n                supported: {\n                    description: 'A list of authentication virtual machine versions supported by this template.\\n\\nVirtual machine identifiers use the format `CODE_YYYY_MM`, where `CODE` is the currency code used to identify the network, and `YYYY_MM` is the year and month in which the specified VM version became active on the indicated network.\\n\\nIdentifiers with the `_SPEC` suffix indicate that this template is intended for compatibility with a future virtual machine version, but at the time the template was created, that virtual machine had not yet become active on the specified chain.',\n                    items: {\n                        $ref: '#/definitions/AuthenticationVirtualMachineIdentifier',\n                    },\n                    type: 'array',\n                },\n                version: {\n                    const: 0,\n                    deprecated: 'template versions are now specified via `$schema`',\n                    description: 'A number identifying the format of this WalletTemplate. Currently, this implementation allows `version` to be set to `0`.',\n                    type: 'number',\n                },\n            },\n            required: ['entities', 'scripts', 'supported'],\n            type: 'object',\n        },\n        WalletTemplateAddressData: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                type: { const: 'AddressData', type: 'string' },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        WalletTemplateEntity: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular entity within an wallet template.',\n            properties: {\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this entity (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this entity for use in user interfaces and error messages, e.g.: `Trusted Third-Party`.',\n                    type: 'string',\n                },\n                scripts: {\n                    description: 'An array of the identifiers of each script the entity must be capable of generating, e.g. each of the unlocking scripts this entity might use.\\n\\nProvided the necessary variables, any entity can construct any script, but this option allows us to hint to more advanced wallets which scripts to recommend to users. (Especially when many scripts require inter-entity communication initiated by a user.)\\n\\nIf not provided, this property is assumed to include all scripts in the template.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                variables: {\n                    additionalProperties: {\n                        $ref: '#/definitions/WalletTemplateVariable',\n                    },\n                    description: \"A map of variables that must be provided by this entity for use in the template's scripts. Some variables are required before locking script generation, while some variables can or must be resolved only before unlocking script generation.\\n\\nObject keys are used as variable identifiers, and by convention, should use `snake_case`.\",\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        WalletTemplateHdKey: {\n            additionalProperties: false,\n            properties: {\n                addressOffset: {\n                    description: 'The offset by which to increment the `addressIndex` provided in the compilation data when deriving this `HdKey`. (Default: 0)\\n\\nThis is useful for deriving the \"next\" (`1`) or \"previous\" (`-1`) address for use in the current compilation.',\n                    type: 'number',\n                },\n                description: {\n                    description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                hdPublicKeyDerivationPath: {\n                    description: \"The path to derive the entity's HD public key from the entity's provided HD private key. By default, an empty string (`\\\"\\\"`), i.e. the entity's HD public key represents the same node in the HD tree as the provided HD private key.\\n\\nThis can be used to specify another relative or absolute derivation path from which the `publicDerivationPath` begins, e.g. `m/0'/1'/2'`. See `publicDerivationPath` for details.\\n\\nThis path may optionally begin with an `m` (for relative private derivation) and must be fixed – it cannot contain any `i` characters to represent the address index, as a dynamic hardened path would require a new HD public key for each address.\\n\\nNote, `hdPublicKeyDerivationPath` could be automatically determined in some cases, but it's always defined independently to improve validation and auditability.\",\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                neverSignTwice: {\n                    description: 'If set to `true`, indicates that this key should never be used to sign two different messages.\\n\\nThis is useful for contracts that use zero-confirmation escrow systems to guarantee against double-spend attempts. By indicating that the user could be subjected to losses if a key were used in multiple signatures, templates can ensure that wallet implementations apply appropriate safeguards around use of the key.\\n\\nDefaults to `false`.',\n                    type: 'boolean',\n                },\n                privateDerivationPath: {\n                    description: \"The relative or absolute derivation path used to derive this `HdKey` from the owning entity's HD private key. By default, `i`.\\n\\nIf the first character is `m`, the path is an absolute path, otherwise, the path is a relative path. For absolute paths, the compiler will verify that the relevant entity's HD private key is a master private key (encoded with a depth of zero); `HdKey`s with relative `privateDerivationPath` may be resolved using non-master private keys (e.g. hardened accounts that have been previously derived and delegated to a sub-entity prior to compilation).\\n\\nThis path uses the notation specified in BIP32 and the `i` character to represent the `addressIndex`:\\n\\nAn optional `m` character (indicating an absolute, private derivation path), followed by sets of `/` and a number representing the child index used in the derivation at that depth. Hardened derivation is represented by a trailing `'`, and hardened child indexes are represented with the hardened index offset (`2147483648`) subtracted. All `i` characters are replaced with the value of `addressIndex` plus this `HdKey`'s `addressOffset`. If the `i` character is followed by `'`, the hardened index offset is added (`2147483648`) and hardened derivation is used.\\n\\nFor example, `m/0/1'/i'` has 3 levels of derivation, with child indexes in the following order:\\n\\n`derive(derive(derive(masterKey, 0), 2147483648 + 1), 2147483648 + addressIndex + addressOffset)`\\n\\nAs the path is absolute (begins with `m`), the compiler will also verify that a zero-depth (\\\"master\\\") HD private key is provided for the entity owning this `HdKey`.\\n\\nNote, because hardened derivation requires knowledge of the private key, `HdKey` variables with `privateDerivationPath`s that include hardened derivation must configure `hdPublicKeyDerivationPath` to support HD public derivation.\",\n                    type: 'string',\n                },\n                publicDerivationPath: {\n                    description: \"The relative derivation path used to derive this `HdKey`'s public key from the owning entity's HD public key (configured via `hdPublicKeyDerivationPath`). If not set, the relative path (following the `m/` of `privateDerivationPath`) is used. For the `privateDerivationPath` default of `i`, this is `i`.\\n\\nIf `privateDerivationPath` uses hardened derivation for some levels, but later derivation levels use non-hardened derivation, `publicDerivationPath` can be used to specify a public derivation path beginning from `hdPublicKeyDerivationPath` (i.e. `publicDerivationPath` should always be a non-hardened segment of `privateDerivationPath` that follows `hdPublicKeyDerivationPath`).\\n\\nThe `publicDerivationPath` must be a relative HD derivation path: non-hardened positive integer child indexes (between `0` and `2147483647`, without any trailing `'`s) separated by `/`s.\\n\\nFor example, if `privateDerivationPath` is `m/0'/i`, it is not possible to derive the equivalent public key with only the HD public key `M`. (The path `M/0'/i` is impossible.) However, given the HD public key for `m/0'`, it is possible to derive the public key of `m/0'/i` for any `i`. In this case, `hdPublicKeyDerivationPath` would be `m/0'` and `publicDerivationPath` would be the remaining `i`.\",\n                    type: 'string',\n                },\n                type: { const: 'HdKey', type: 'string' },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        WalletTemplateKey: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                neverSignTwice: {\n                    description: 'If set to `true`, indicates that this key should never be used to sign two different messages.\\n\\nThis is useful for contracts that use zero-confirmation escrow systems to guarantee against double-spend attempts. By indicating that the user could be subjected to losses if a key were used in multiple signatures, templates can ensure that wallet implementations apply appropriate safeguards around use of the key.\\n\\nDefaults to `false`.',\n                    type: 'boolean',\n                },\n                type: { const: 'Key', type: 'string' },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n        WalletTemplateScenario: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular scenario within an wallet template.',\n            properties: {\n                data: {\n                    $ref: '#/definitions/WalletTemplateScenarioData',\n                    description: \"An object defining the data to use while compiling this scenario. The properties specified here are used to extend the existing scenario data based on this scenario's `extends` property.\\n\\nEach property is extended individually – to unset a previously-set property, the property must be individually overridden in this object.\",\n                },\n                description: {\n                    description: 'An optionally multi-line, free-form, human-readable description for this scenario (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n                    type: 'string',\n                },\n                extends: {\n                    description: \"The identifier of the scenario that this scenario extends. Any `data` or `transaction` properties not defined in this scenario inherit from the extended parent scenario.\\n\\nIf undefined, this scenario is assumed to extend the default scenario:\\n\\n- The default values for `data` are set:   - The identifiers of all `Key` variables and entities in this template are lexicographically sorted, then each is assigned an incrementing positive integer – beginning with `1` – encoded as an unsigned, 256-bit, big-endian integer (i.e. `0x0000...0001` (32 bytes), `0x0000...0002`, `0x0000...0003`, etc.). For `Key`s, this assigned value is used as the private key; For entities, the assigned value is used as the master seed of that entity's `HdPrivateKey`. If `hdKey` is set, the `addressIndex` is set to `0`.   - `currentBlockHeight` is set to `2`. This is the height of the second mined block after the genesis block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`. This default value was chosen to be low enough to simplify the debugging of block height offsets while remaining differentiated from `0` and `1`, which are used both as boolean return values and for control flow.   - `currentBlockTime` is set to `1231469665`. This is the Median Time-Past block time (BIP113) of block `2`.\\n\\n- Then `transaction` is set based on use:   - if the scenario is being used for transaction estimation, all transaction properties are taken from the transaction being estimated.   - if the scenario is being used for script testing and validation, the default value for each `transaction` property is used.\\n\\nWhen a scenario is extended, each property of `data` and `transaction` is extended individually: if the extending scenario does not provide a new value for `data.bytecode.value` or `transaction.property`, the parent value is used. To avoid inheriting a parent value, each child value must be individually overridden.\",\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this scenario for use in user interfaces, e.g.: `Delayed Recovery`.',\n                    type: 'string',\n                },\n                sourceOutputs: {\n                    description: 'The list of source outputs (a.k.a. UTXOs) to use when generating the compilation context for this scenario.\\n\\nThe `sourceOutputs` property must have the same length as `transaction.inputs`, and each source output must be ordered to match the index of the input that spends it.\\n\\nTo be valid the `sourceOutputs` property must have exactly one source output with `lockingBytecode` set to `[\"slot\"]` – the output at the same index as the `[\"slot\"]` input in `transaction.inputs`.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": [\"slot\"] }]`.',\n                    items: { $ref: '#/definitions/WalletTemplateScenarioSourceOutput' },\n                    type: 'array',\n                },\n                transaction: {\n                    additionalProperties: false,\n                    description: 'The transaction within which this scenario should be evaluated. This is used for script testing and validation.\\n\\nIf undefined, inherits the default value for each property: ```json {   \"inputs\": [{ \"unlockingBytecode\": [\\'slot\\'] }],   \"locktime\": 0,   \"outputs\": [{ \"lockingBytecode\": {} }],   \"version\": 2 } ```\\n\\nAny `transaction` property that is not set will be inherited from the scenario specified by `extends`. when specifying the `inputs` and `outputs` properties, each input and output extends the default values for inputs and outputs, respectively.\\n\\nFor example, an input of `{}` is interpreted as: ```json {   \"outpointIndex\": 0,   \"outpointTransactionHash\":     \"0000000000000000000000000000000000000000000000000000000000000000\",   \"sequenceNumber\": 0,   \"unlockingBytecode\": [\\'slot\\'] } ``` And an output of `{}` is interpreted as: ```json {   \"lockingBytecode\": {     \"script\": [\\'copy\\'],     \"overrides\": { \"hdKeys\": { \"addressIndex\": 1 } }   },   \"valueSatoshis\": 0 } ```',\n                    properties: {\n                        inputs: {\n                            description: 'The list of inputs to use when generating the transaction for this scenario.\\n\\nTo be valid the `inputs` property must have exactly one input with `unlockingBytecode` set to `[\"slot\"]`. This is the input in which the unlocking script under test will be placed.\\n\\nIf undefined, inherits the default scenario `inputs` value: `[{ \"unlockingBytecode\": [\"slot\"] }]`.',\n                            items: { $ref: '#/definitions/WalletTemplateScenarioInput' },\n                            type: 'array',\n                        },\n                        locktime: {\n                            description: 'The locktime to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, defaults to `0`.\\n\\nLocktime can be provided as either a timestamp or a block height. Values less than `500000000` are understood to be a block height (the current block number in the chain, beginning from block `0`). Values greater than or equal to `500000000` are understood to be a UNIX timestamp.\\n\\nFor validating timestamp values, the median timestamp of the last 11 blocks (Median Time-Past) is used. The precise behavior is defined in BIP113.\\n\\nIf the `sequenceNumber` of every transaction input is set to `0xffffffff` (`4294967295`), locktime is disabled, and the transaction may be added to a block even if the specified locktime has not yet been reached. When locktime is disabled, if an `OP_CHECKLOCKTIMEVERIFY` operation is encountered during the verification of any input, an error is produced, and the transaction is invalid.',\n                            type: 'number',\n                        },\n                        outputs: {\n                            description: 'The list of outputs to use when generating the transaction for this scenario.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": {} }]`.',\n                            items: {\n                                $ref: '#/definitions/WalletTemplateScenarioTransactionOutput',\n                            },\n                            type: 'array',\n                        },\n                        version: {\n                            description: 'The version to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, inherits the default scenario `version` value: `2`.',\n                            type: 'number',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        WalletTemplateScenarioBytecode: {\n            anyOf: [\n                { type: 'string' },\n                {\n                    additionalProperties: false,\n                    properties: {\n                        overrides: {\n                            $ref: '#/definitions/WalletTemplateScenarioData',\n                            description: 'Scenario data that extends the scenario\\'s top-level `data` during script compilation.\\n\\nEach property is extended individually – to modify a property set by the top-level scenario `data`, the new value must be listed here.\\n\\nDefaults to `{}` for `sourceOutputs` and `transaction.inputs`; defaults to `{ \"hdKeys\": { \"addressIndex\": 1 } }` for `transaction.outputs`.',\n                        },\n                        script: {\n                            anyOf: [\n                                { type: 'string' },\n                                {\n                                    items: { const: 'copy', type: 'string' },\n                                    maxItems: 1,\n                                    minItems: 1,\n                                    type: 'array',\n                                },\n                            ],\n                            description: 'The identifier of the script to compile when generating this bytecode. May also be set to `[\"copy\"]`, which is automatically replaced with the identifier of the locking or unlocking script under test, respectively.\\n\\nIf undefined, defaults to `[\"copy\"]`.',\n                        },\n                    },\n                    type: 'object',\n                },\n            ],\n            description: 'A type that describes the configuration for a particular locking or unlocking bytecode within a wallet template scenario.\\n\\nBytecode may be specified as either a hexadecimal-encoded string or an object describing the required compilation.\\n\\nFor `sourceOutputs` and `transaction.inputs`, defaults to `{ script: [\"copy\"], overrides: {} }`. For `transaction.outputs`, defaults to `{ script: [\"copy\"], overrides: { \"hdKeys\": { \"addressIndex\": 1 } } }`.',\n        },\n        WalletTemplateScenarioData: {\n            additionalProperties: false,\n            description: 'An object defining the data to use while compiling a scenario.',\n            properties: {\n                bytecode: {\n                    additionalProperties: { type: 'string' },\n                    description: \"A map of full identifiers to CashAssembly scripts that compile to each identifier's value for this scenario. Allowing `bytecode` to be specified as scripts (rather than e.g. hex) offers greater power and flexibility.\\n\\nBytecode scripts have access to each other and all other template scripts and defined variables, however, cyclical references will produce an error at compile time. Also, because the results of these compilations will be used to generate the compilation context for this scenario, these scripts may not use compiler operations that themselves require access to compilation context (e.g. signatures).\\n\\nThe provided `fullIdentifier` should match the complete identifier for each item, e.g. `some_wallet_data`, `variable_id.public_key`, or `variable_id.schnorr_signature.all_outputs`.\\n\\nAll `AddressData` and `WalletData` variables must be provided via `bytecode` (though the default scenario automatically includes reasonable values), and pre-computed results for operations of other variable types (e.g. `key.public_key`) may also be provided via this property.\\n\\nBecause each bytecode identifier may precisely match the identifier of the variable it defines for this scenario, references between these scripts must refer to the target script with a `_scenario.` prefix. E.g. to reference a sibling script `my_foo` from `my_bar`, the `my_bar` script must use the identifier `_scenario.my_foo`.\",\n                    type: 'object',\n                },\n                currentBlockHeight: {\n                    description: 'The current block height at the \"address creation time\" implied in this scenario.',\n                    type: 'number',\n                },\n                currentBlockTime: {\n                    description: 'The current MTP block time as a UNIX timestamp at the \"address creation time\" implied in this scenario.\\n\\nNote, this is never a current timestamp, but rather the median timestamp of the last 11 blocks. It is therefore approximately one hour in the past.\\n\\nEvery block has a precise MTP block time, much like a block height. See BIP113 for details.',\n                    type: 'number',\n                },\n                hdKeys: {\n                    additionalProperties: false,\n                    description: 'An object describing the settings used for `HdKey` variables in this scenario.',\n                    properties: {\n                        addressIndex: {\n                            description: 'The current address index to be used for this scenario. The `addressIndex` gets added to each `HdKey`s `addressOffset` to calculate the dynamic index (`i`) used in each `privateDerivationPath` or `publicDerivationPath`.\\n\\nThis is required for any compiler operation that requires derivation. Typically, the value is incremented by one for each address in a wallet.\\n\\nDefaults to `0`.',\n                            type: 'number',\n                        },\n                        hdPrivateKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of entity IDs to master HD private keys. These master HD private keys are used to derive each `HdKey` variable assigned to that entity according to its `privateDerivationPath`.\\n\\nHD private keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                            type: 'object',\n                        },\n                        hdPublicKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of entity IDs to HD public keys. These HD public keys are used to derive public keys for each `HdKey` variable assigned to that entity according to its `publicDerivationPath`.\\n\\nHD public keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                keys: {\n                    additionalProperties: false,\n                    description: 'An object describing the settings used for `Key` variables in this scenario.',\n                    properties: {\n                        privateKeys: {\n                            additionalProperties: { type: 'string' },\n                            description: 'A map of `Key` variable IDs to their 32-byte, hexadecimal-encoded private key values.',\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        WalletTemplateScenarioInput: {\n            additionalProperties: false,\n            description: 'An example input used to define a scenario for a wallet template.',\n            properties: {\n                outpointIndex: {\n                    description: 'The index of the output in the transaction from which this input is spent.\\n\\nIf undefined, this defaults to the same index as the input itself (so that by default, every outpoint in the produced transaction is different, even if an empty `outpointTransactionHash` is used for each transaction).',\n                    type: 'number',\n                },\n                outpointTransactionHash: {\n                    description: 'A 32-byte, hexadecimal-encoded hash of the transaction from which this input is spent in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000001`\\n\\nA.K.A. Outpoint `Transaction ID`',\n                    type: 'string',\n                },\n                sequenceNumber: {\n                    description: 'The positive, 32-bit unsigned integer used as the \"sequence number\" for this input.\\n\\nIf undefined, this defaults to `0`.',\n                    type: 'number',\n                },\n                unlockingBytecode: {\n                    anyOf: [\n                        { $ref: '#/definitions/WalletTemplateScenarioBytecode' },\n                        {\n                            items: { const: 'slot', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The `unlockingBytecode` value of this input for this scenario. This must be either `[\"slot\"]`, indicating that this input contains the `unlockingBytecode` under test by the scenario, or an `WalletTemplateScenarioBytecode`.\\n\\nFor a scenario to be valid, `unlockingBytecode` must be `[\"slot\"]` for exactly one input in the scenario.\\n\\nDefaults to `[\"slot\"]`.',\n                },\n            },\n            type: 'object',\n        },\n        'WalletTemplateScenarioOutput<false>': {\n            additionalProperties: false,\n            description: 'An example output used to define a scenario for a wallet template.',\n            properties: {\n                lockingBytecode: {\n                    $ref: '#/definitions/WalletTemplateScenarioBytecode',\n                    description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n                },\n                token: {\n                    additionalProperties: false,\n                    description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n                    properties: {\n                        amount: {\n                            description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                            type: ['number', 'string'],\n                        },\n                        category: {\n                            description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                            type: 'string',\n                        },\n                        nft: {\n                            additionalProperties: false,\n                            description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                            properties: {\n                                capability: {\n                                    description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                                    enum: ['minting', 'mutable', 'none'],\n                                    type: 'string',\n                                },\n                                commitment: {\n                                    description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                                    type: 'string',\n                                },\n                            },\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                valueSatoshis: {\n                    description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n            },\n            type: 'object',\n        },\n        'WalletTemplateScenarioOutput<true>': {\n            additionalProperties: false,\n            description: 'An example output used to define a scenario for a wallet template.',\n            properties: {\n                lockingBytecode: {\n                    anyOf: [\n                        { $ref: '#/definitions/WalletTemplateScenarioBytecode' },\n                        {\n                            items: { const: 'slot', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n                },\n                token: {\n                    additionalProperties: false,\n                    description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n                    properties: {\n                        amount: {\n                            description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                            type: ['number', 'string'],\n                        },\n                        category: {\n                            description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                            type: 'string',\n                        },\n                        nft: {\n                            additionalProperties: false,\n                            description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                            properties: {\n                                capability: {\n                                    description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                                    enum: ['minting', 'mutable', 'none'],\n                                    type: 'string',\n                                },\n                                commitment: {\n                                    description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                                    type: 'string',\n                                },\n                            },\n                            type: 'object',\n                        },\n                    },\n                    type: 'object',\n                },\n                valueSatoshis: {\n                    description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n            },\n            type: 'object',\n        },\n        WalletTemplateScenarioSourceOutput: {\n            $ref: '#/definitions/WalletTemplateScenarioOutput<true>',\n            description: 'A source output used by a wallet template scenario.',\n        },\n        WalletTemplateScenarioTransactionOutput: {\n            $ref: '#/definitions/WalletTemplateScenarioOutput<false>',\n            description: 'A transaction output used to define a wallet template scenario transaction.',\n        },\n        WalletTemplateScript: {\n            additionalProperties: false,\n            description: 'An object describing the configuration for a particular script within an wallet template.',\n            properties: {\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n            },\n            required: ['script'],\n            type: 'object',\n        },\n        WalletTemplateScriptLocking: {\n            additionalProperties: false,\n            properties: {\n                lockingType: {\n                    description: 'Indicates if P2SH20 infrastructure should be used when producing bytecode related to this script. For more information on P2SH20, see BIP16.\\n\\nWhen compiling locking scripts of type `p2sh20`, the result will be placed in a P2SH20 \"redeem script\" format: `OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL`\\n\\nWhen compiling unlocking scripts that unlock locking scripts of type `p2sh20`, the result will be transformed into the P2SH20 unlocking format: `unlockingBytecode <lockingBytecode>` (where `lockingBytecode` is the compiled bytecode of the locking script, without the \"redeem script\" transformation.)\\n\\nThe presence of the `lockingType` property indicates that this script is a locking script. It must be present on any script referenced by the `unlocks` property of another script.\\n\\nTODO: migrate `standard` -> `p2s`',\n                    enum: ['p2sh20', 'p2sh32', 'standard'],\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n            },\n            required: ['lockingType', 'script'],\n            type: 'object',\n        },\n        WalletTemplateScriptTest: {\n            additionalProperties: false,\n            properties: {\n                check: {\n                    description: 'The script to evaluate after the script being tested. This can be used to check that the tested script leaves the expected results on the stack. For example, if the tested script is expected to leave 3 items of a specific size on the stack, the `check` script could pop each resulting item from the stack and examine it for correctness.\\n\\nIn scenario testing, this script is appended to the script under test, and together they are treated as the locking script. Program evaluation is considered successful if the resulting program state can be verified by the virtual machine (e.g. the resulting stack contains a single `1`, no errors are produced, etc.).',\n                    type: 'string',\n                },\n                fails: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that fails program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                invalid: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in a compilation error. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this test (for use in user interfaces).',\n                    type: 'string',\n                },\n                passes: {\n                    description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that passes program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                setup: {\n                    description: 'A script to evaluate before the script being tested. This can be used to push values to the stack that are operated on by the tested script.\\n\\nIn scenario testing, this script is treated as the unlocking script.',\n                    type: 'string',\n                },\n            },\n            required: ['check'],\n            type: 'object',\n        },\n        WalletTemplateScriptTested: {\n            additionalProperties: false,\n            properties: {\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                pushed: {\n                    description: 'If set to `true`, indicates that this script should be wrapped in a push statement for testing.\\n\\nThis is useful for scripts that serve as \"bytecode templates\" – e.g. formatted messages or signature preimages. These scripts are typically not evaluated as bytecode but appear within push statements elsewhere in the template.\\n\\nDefaults to `false`.',\n                    type: 'boolean',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n                tests: {\n                    additionalProperties: {\n                        $ref: '#/definitions/WalletTemplateScriptTest',\n                    },\n                    description: 'One or more tests that can be used during development and during template validation to confirm the correctness of this tested script.',\n                    type: 'object',\n                },\n            },\n            required: ['script', 'tests'],\n            type: 'object',\n        },\n        WalletTemplateScriptUnlocking: {\n            additionalProperties: false,\n            properties: {\n                ageLock: {\n                    description: 'TODO: not yet implemented\\n\\nThe minimum input age required for this unlocking script to become valid.\\n\\nThis value is provided as a CashAssembly script that must compile to the least significant 3 bytes of the minimum sequence number required for this unlocking script to be valid (the \"type bit\" and the 2-byte \"value\" – see BIP68 for details). This script has access to all other template scripts and variables, but cyclical references will produce an error at compile time.\\n\\nIn supporting wallets, this value can be computed at address creation time, and the remaining time for which any UTXO remains \"age-locked\" can be displayed in user interfaces (by parsing the \"type bit\" and \"value\" as described in BIP68).\\n\\nNote, because the precise value used by `OP_CHECKSEQUENCEVERIFY` can be provided in the unlocking script, it is trivial to create an unlocking script for which a proper value for `ageLock` is not possible to determine until the spending transaction is prepared. These cases are intentionally out-of-scope for this property. Instead, `ageLock` should only be used for unlocking scripts where the expected value can be compiled at address creation time.',\n                    type: 'string',\n                },\n                estimate: {\n                    description: 'The identifier of the scenario to use for this unlocking script when compiling an estimated transaction.\\n\\nUsing estimate scenarios, it\\'s possible for wallet software to compute an \"estimated transaction\", an invalid transaction that is guaranteed to be the same byte length as the final transaction. This length can be used to calculate the required transaction fee and assign values to the transaction\\'s change output(s). Because estimate scenarios provide \"estimated\" values for all variables, this estimation can be done by a single entity without input from other entities.\\n\\nIf not provided, the default scenario will be used for estimation. The default scenario only provides values for each `Key` and `HdKey` variable, so compilations requiring other variables will produce errors. See `WalletTemplateScenario.extends` for details.',\n                    type: 'string',\n                },\n                fails: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that fails program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                invalid: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in a compilation error.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                name: {\n                    description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n                    type: 'string',\n                },\n                passes: {\n                    description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that passes program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n                    items: { type: 'string' },\n                    type: 'array',\n                },\n                script: {\n                    description: 'The script definition in CashAssembly.',\n                    type: 'string',\n                },\n                timeLockType: {\n                    description: \"The expected type of time locks in this script.\\n\\nBecause `OP_CHECKLOCKTIMEVERIFY` reads from a transaction's `locktime` property, every input to a given transaction must share the same time lock type. This differs from `OP_CHECKSEQUENCEVERIFY` in that each input has its own `sequenceNumber`, so compatibility is not required.\\n\\nIf a transaction includes multiple inputs using scripts with `timeLockType` defined, and the types are not compatible, generation should fail.\\n\\nThe `timestamp` type indicates that the transaction's locktime is provided as a UNIX timestamp (the `locktime` value is greater than or equal to `500000000`).\\n\\nThe `height` type indicates that the transaction's locktime is provided as a block height (the `locktime` value is less than `500000000`).\\n\\nIf `timeLockType` is undefined, the script is assumed to have no reliance on absolute time locks.\",\n                    enum: ['height', 'timestamp'],\n                    type: 'string',\n                },\n                unlocks: {\n                    description: 'The identifier of the script that can be unlocked by this script.\\n\\nThe presence of the `unlocks` property indicates that this script is an unlocking script, and the script it unlocks must be a locking script.',\n                    type: 'string',\n                },\n            },\n            required: ['script', 'unlocks'],\n            type: 'object',\n        },\n        WalletTemplateVariable: {\n            anyOf: [\n                { $ref: '#/definitions/WalletTemplateAddressData' },\n                { $ref: '#/definitions/WalletTemplateHdKey' },\n                { $ref: '#/definitions/WalletTemplateKey' },\n                { $ref: '#/definitions/WalletTemplateWalletData' },\n            ],\n        },\n        WalletTemplateWalletData: {\n            additionalProperties: false,\n            properties: {\n                description: {\n                    description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                name: {\n                    description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n                    type: 'string',\n                },\n                type: { const: 'WalletData', type: 'string' },\n            },\n            required: ['type'],\n            type: 'object',\n        },\n    },\n};\nconst schema23 = {\n    additionalProperties: false,\n    description: 'A `WalletTemplate` specifies a set of locking scripts, unlocking scripts, and other information required to use a certain wallet protocol. Templates fully describe wallet protocols in a way that can be shared between software clients.',\n    properties: {\n        $schema: {\n            description: 'The URI that identifies the JSON Schema used by this template. Try: `https://libauth.org/schemas/wallet-template-v0.schema.json` to enable documentation, autocompletion, and validation in JSON documents.',\n            type: 'string',\n        },\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this wallet template (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.\\n\\nDescriptions have no length limit, but in user interfaces with limited space, they should be hidden beyond the first newline character or `140` characters until revealed by the user (e.g. by hiding the remaining description until the user activates a \"show more\" link).',\n            type: 'string',\n        },\n        entities: {\n            additionalProperties: { $ref: '#/definitions/WalletTemplateEntity' },\n            description: 'A map of entities defined in this wallet template.\\n\\nObject keys are used as entity identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this authentication template (for use in user interfaces).',\n            type: 'string',\n        },\n        scenarios: {\n            additionalProperties: { $ref: '#/definitions/WalletTemplateScenario' },\n            description: 'A scenario describes a context in which one or more scripts might be used. Scenarios are used for transaction estimation and as an integrated testing system for wallet templates.\\n\\nObject keys are used as scenario identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        scripts: {\n            additionalProperties: {\n                anyOf: [\n                    { $ref: '#/definitions/WalletTemplateScript' },\n                    { $ref: '#/definitions/WalletTemplateScriptLocking' },\n                    { $ref: '#/definitions/WalletTemplateScriptTested' },\n                    { $ref: '#/definitions/WalletTemplateScriptUnlocking' },\n                ],\n            },\n            description: 'A map of scripts used in this wallet template.\\n\\nObject keys are used as script identifiers, and by convention, should use `snake_case`.',\n            type: 'object',\n        },\n        supported: {\n            description: 'A list of authentication virtual machine versions supported by this template.\\n\\nVirtual machine identifiers use the format `CODE_YYYY_MM`, where `CODE` is the currency code used to identify the network, and `YYYY_MM` is the year and month in which the specified VM version became active on the indicated network.\\n\\nIdentifiers with the `_SPEC` suffix indicate that this template is intended for compatibility with a future virtual machine version, but at the time the template was created, that virtual machine had not yet become active on the specified chain.',\n            items: { $ref: '#/definitions/AuthenticationVirtualMachineIdentifier' },\n            type: 'array',\n        },\n        version: {\n            const: 0,\n            deprecated: 'template versions are now specified via `$schema`',\n            description: 'A number identifying the format of this WalletTemplate. Currently, this implementation allows `version` to be set to `0`.',\n            type: 'number',\n        },\n    },\n    required: ['entities', 'scripts', 'supported'],\n    type: 'object',\n};\nconst schema37 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular script within an wallet template.',\n    properties: {\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n    },\n    required: ['script'],\n    type: 'object',\n};\nconst schema38 = {\n    additionalProperties: false,\n    properties: {\n        lockingType: {\n            description: 'Indicates if P2SH20 infrastructure should be used when producing bytecode related to this script. For more information on P2SH20, see BIP16.\\n\\nWhen compiling locking scripts of type `p2sh20`, the result will be placed in a P2SH20 \"redeem script\" format: `OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL`\\n\\nWhen compiling unlocking scripts that unlock locking scripts of type `p2sh20`, the result will be transformed into the P2SH20 unlocking format: `unlockingBytecode <lockingBytecode>` (where `lockingBytecode` is the compiled bytecode of the locking script, without the \"redeem script\" transformation.)\\n\\nThe presence of the `lockingType` property indicates that this script is a locking script. It must be present on any script referenced by the `unlocks` property of another script.\\n\\nTODO: migrate `standard` -> `p2s`',\n            enum: ['p2sh20', 'p2sh32', 'standard'],\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n    },\n    required: ['lockingType', 'script'],\n    type: 'object',\n};\nconst schema41 = {\n    additionalProperties: false,\n    properties: {\n        ageLock: {\n            description: 'TODO: not yet implemented\\n\\nThe minimum input age required for this unlocking script to become valid.\\n\\nThis value is provided as a CashAssembly script that must compile to the least significant 3 bytes of the minimum sequence number required for this unlocking script to be valid (the \"type bit\" and the 2-byte \"value\" – see BIP68 for details). This script has access to all other template scripts and variables, but cyclical references will produce an error at compile time.\\n\\nIn supporting wallets, this value can be computed at address creation time, and the remaining time for which any UTXO remains \"age-locked\" can be displayed in user interfaces (by parsing the \"type bit\" and \"value\" as described in BIP68).\\n\\nNote, because the precise value used by `OP_CHECKSEQUENCEVERIFY` can be provided in the unlocking script, it is trivial to create an unlocking script for which a proper value for `ageLock` is not possible to determine until the spending transaction is prepared. These cases are intentionally out-of-scope for this property. Instead, `ageLock` should only be used for unlocking scripts where the expected value can be compiled at address creation time.',\n            type: 'string',\n        },\n        estimate: {\n            description: 'The identifier of the scenario to use for this unlocking script when compiling an estimated transaction.\\n\\nUsing estimate scenarios, it\\'s possible for wallet software to compute an \"estimated transaction\", an invalid transaction that is guaranteed to be the same byte length as the final transaction. This length can be used to calculate the required transaction fee and assign values to the transaction\\'s change output(s). Because estimate scenarios provide \"estimated\" values for all variables, this estimation can be done by a single entity without input from other entities.\\n\\nIf not provided, the default scenario will be used for estimation. The default scenario only provides values for each `Key` and `HdKey` variable, so compilations requiring other variables will produce errors. See `WalletTemplateScenario.extends` for details.',\n            type: 'string',\n        },\n        fails: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that fails program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        invalid: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in a compilation error.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        passes: {\n            description: 'A list of the scenario identifiers that – when used to compile this unlocking script and the script it unlocks – result in bytecode that passes program verification.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n        timeLockType: {\n            description: \"The expected type of time locks in this script.\\n\\nBecause `OP_CHECKLOCKTIMEVERIFY` reads from a transaction's `locktime` property, every input to a given transaction must share the same time lock type. This differs from `OP_CHECKSEQUENCEVERIFY` in that each input has its own `sequenceNumber`, so compatibility is not required.\\n\\nIf a transaction includes multiple inputs using scripts with `timeLockType` defined, and the types are not compatible, generation should fail.\\n\\nThe `timestamp` type indicates that the transaction's locktime is provided as a UNIX timestamp (the `locktime` value is greater than or equal to `500000000`).\\n\\nThe `height` type indicates that the transaction's locktime is provided as a block height (the `locktime` value is less than `500000000`).\\n\\nIf `timeLockType` is undefined, the script is assumed to have no reliance on absolute time locks.\",\n            enum: ['height', 'timestamp'],\n            type: 'string',\n        },\n        unlocks: {\n            description: 'The identifier of the script that can be unlocked by this script.\\n\\nThe presence of the `unlocks` property indicates that this script is an unlocking script, and the script it unlocks must be a locking script.',\n            type: 'string',\n        },\n    },\n    required: ['script', 'unlocks'],\n    type: 'object',\n};\nconst schema42 = {\n    description: \"Allowable identifiers for authentication virtual machine versions. The `BCH` prefix identifies the Bitcoin Cash network, the `XEC` prefix identifies the eCash network, the `BSV` prefix identifies the Bitcoin SV network, and the `BTC` prefix identifies the Bitcoin Core network. VM versions are named according to the date they were deployed on the indicated network.\\n\\nFor each network prefix, a `_SPEC` VM version is reserved to indicate that the template requires a custom, not-yet-deployed VM version (e.g. one or more CHIPs). By convention, templates marked for `_SPEC` VMs should indicate their requirements in the template description. After deployment of the `_SPEC` VM, when template compatibility is verified, the template's `supported` array should be updated to indicate compatibility with the live VM version.\",\n    enum: [\n        'BCH_2020_05',\n        'BCH_2021_05',\n        'BCH_2022_05',\n        'BCH_2023_05',\n        'BCH_2024_05',\n        'BCH_2025_05',\n        'BCH_2026_05',\n        'BCH_2027_05',\n        'BCH_2028_05',\n        'BCH_2029_05',\n        'BCH_2030_05',\n        'BCH_SPEC',\n        'BSV_2020_02',\n        'BSV_SPEC',\n        'BTC_2017_08',\n        'BTC_SPEC',\n        'XEC_2020_05',\n        'XEC_SPEC',\n    ],\n    type: 'string',\n};\nconst schema24 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular entity within an wallet template.',\n    properties: {\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this entity (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this entity for use in user interfaces and error messages, e.g.: `Trusted Third-Party`.',\n            type: 'string',\n        },\n        scripts: {\n            description: 'An array of the identifiers of each script the entity must be capable of generating, e.g. each of the unlocking scripts this entity might use.\\n\\nProvided the necessary variables, any entity can construct any script, but this option allows us to hint to more advanced wallets which scripts to recommend to users. (Especially when many scripts require inter-entity communication initiated by a user.)\\n\\nIf not provided, this property is assumed to include all scripts in the template.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        variables: {\n            additionalProperties: { $ref: '#/definitions/WalletTemplateVariable' },\n            description: \"A map of variables that must be provided by this entity for use in the template's scripts. Some variables are required before locking script generation, while some variables can or must be resolved only before unlocking script generation.\\n\\nObject keys are used as variable identifiers, and by convention, should use `snake_case`.\",\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema25 = {\n    anyOf: [\n        { $ref: '#/definitions/WalletTemplateAddressData' },\n        { $ref: '#/definitions/WalletTemplateHdKey' },\n        { $ref: '#/definitions/WalletTemplateKey' },\n        { $ref: '#/definitions/WalletTemplateWalletData' },\n    ],\n};\nconst schema26 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        type: { const: 'AddressData', type: 'string' },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema27 = {\n    additionalProperties: false,\n    properties: {\n        addressOffset: {\n            description: 'The offset by which to increment the `addressIndex` provided in the compilation data when deriving this `HdKey`. (Default: 0)\\n\\nThis is useful for deriving the \"next\" (`1`) or \"previous\" (`-1`) address for use in the current compilation.',\n            type: 'number',\n        },\n        description: {\n            description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        hdPublicKeyDerivationPath: {\n            description: \"The path to derive the entity's HD public key from the entity's provided HD private key. By default, an empty string (`\\\"\\\"`), i.e. the entity's HD public key represents the same node in the HD tree as the provided HD private key.\\n\\nThis can be used to specify another relative or absolute derivation path from which the `publicDerivationPath` begins, e.g. `m/0'/1'/2'`. See `publicDerivationPath` for details.\\n\\nThis path may optionally begin with an `m` (for relative private derivation) and must be fixed – it cannot contain any `i` characters to represent the address index, as a dynamic hardened path would require a new HD public key for each address.\\n\\nNote, `hdPublicKeyDerivationPath` could be automatically determined in some cases, but it's always defined independently to improve validation and auditability.\",\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        neverSignTwice: {\n            description: 'If set to `true`, indicates that this key should never be used to sign two different messages.\\n\\nThis is useful for contracts that use zero-confirmation escrow systems to guarantee against double-spend attempts. By indicating that the user could be subjected to losses if a key were used in multiple signatures, templates can ensure that wallet implementations apply appropriate safeguards around use of the key.\\n\\nDefaults to `false`.',\n            type: 'boolean',\n        },\n        privateDerivationPath: {\n            description: \"The relative or absolute derivation path used to derive this `HdKey` from the owning entity's HD private key. By default, `i`.\\n\\nIf the first character is `m`, the path is an absolute path, otherwise, the path is a relative path. For absolute paths, the compiler will verify that the relevant entity's HD private key is a master private key (encoded with a depth of zero); `HdKey`s with relative `privateDerivationPath` may be resolved using non-master private keys (e.g. hardened accounts that have been previously derived and delegated to a sub-entity prior to compilation).\\n\\nThis path uses the notation specified in BIP32 and the `i` character to represent the `addressIndex`:\\n\\nAn optional `m` character (indicating an absolute, private derivation path), followed by sets of `/` and a number representing the child index used in the derivation at that depth. Hardened derivation is represented by a trailing `'`, and hardened child indexes are represented with the hardened index offset (`2147483648`) subtracted. All `i` characters are replaced with the value of `addressIndex` plus this `HdKey`'s `addressOffset`. If the `i` character is followed by `'`, the hardened index offset is added (`2147483648`) and hardened derivation is used.\\n\\nFor example, `m/0/1'/i'` has 3 levels of derivation, with child indexes in the following order:\\n\\n`derive(derive(derive(masterKey, 0), 2147483648 + 1), 2147483648 + addressIndex + addressOffset)`\\n\\nAs the path is absolute (begins with `m`), the compiler will also verify that a zero-depth (\\\"master\\\") HD private key is provided for the entity owning this `HdKey`.\\n\\nNote, because hardened derivation requires knowledge of the private key, `HdKey` variables with `privateDerivationPath`s that include hardened derivation must configure `hdPublicKeyDerivationPath` to support HD public derivation.\",\n            type: 'string',\n        },\n        publicDerivationPath: {\n            description: \"The relative derivation path used to derive this `HdKey`'s public key from the owning entity's HD public key (configured via `hdPublicKeyDerivationPath`). If not set, the relative path (following the `m/` of `privateDerivationPath`) is used. For the `privateDerivationPath` default of `i`, this is `i`.\\n\\nIf `privateDerivationPath` uses hardened derivation for some levels, but later derivation levels use non-hardened derivation, `publicDerivationPath` can be used to specify a public derivation path beginning from `hdPublicKeyDerivationPath` (i.e. `publicDerivationPath` should always be a non-hardened segment of `privateDerivationPath` that follows `hdPublicKeyDerivationPath`).\\n\\nThe `publicDerivationPath` must be a relative HD derivation path: non-hardened positive integer child indexes (between `0` and `2147483647`, without any trailing `'`s) separated by `/`s.\\n\\nFor example, if `privateDerivationPath` is `m/0'/i`, it is not possible to derive the equivalent public key with only the HD public key `M`. (The path `M/0'/i` is impossible.) However, given the HD public key for `m/0'`, it is possible to derive the public key of `m/0'/i` for any `i`. In this case, `hdPublicKeyDerivationPath` would be `m/0'` and `publicDerivationPath` would be the remaining `i`.\",\n            type: 'string',\n        },\n        type: { const: 'HdKey', type: 'string' },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema28 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        neverSignTwice: {\n            description: 'If set to `true`, indicates that this key should never be used to sign two different messages.\\n\\nThis is useful for contracts that use zero-confirmation escrow systems to guarantee against double-spend attempts. By indicating that the user could be subjected to losses if a key were used in multiple signatures, templates can ensure that wallet implementations apply appropriate safeguards around use of the key.\\n\\nDefaults to `false`.',\n            type: 'boolean',\n        },\n        type: { const: 'Key', type: 'string' },\n    },\n    required: ['type'],\n    type: 'object',\n};\nconst schema29 = {\n    additionalProperties: false,\n    properties: {\n        description: {\n            description: 'A single-line, human readable description for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this variable (for use in user interfaces).',\n            type: 'string',\n        },\n        type: { const: 'WalletData', type: 'string' },\n    },\n    required: ['type'],\n    type: 'object',\n};\nfunction validate23(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    const _errs1 = errors;\n    const _errs2 = errors;\n    if (errors === _errs2) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if (data.type === undefined && (missing0 = 'type')) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: '#/definitions/WalletTemplateAddressData/required',\n                    keyword: 'required',\n                    params: { missingProperty: missing0 },\n                    message: \"must have required property '\" + missing0 + \"'\",\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n            else {\n                const _errs4 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'description' || key0 === 'name' || key0 === 'type')) {\n                        const err1 = {\n                            instancePath,\n                            schemaPath: '#/definitions/WalletTemplateAddressData/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err1];\n                        }\n                        else {\n                            vErrors.push(err1);\n                        }\n                        errors++;\n                        break;\n                    }\n                }\n                if (_errs4 === errors) {\n                    if (data.description !== undefined) {\n                        const _errs5 = errors;\n                        if (typeof data.description !== 'string') {\n                            const err2 = {\n                                instancePath: instancePath + '/description',\n                                schemaPath: '#/definitions/WalletTemplateAddressData/properties/description/type',\n                                keyword: 'type',\n                                params: { type: 'string' },\n                                message: 'must be string',\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err2];\n                            }\n                            else {\n                                vErrors.push(err2);\n                            }\n                            errors++;\n                        }\n                        var valid2 = _errs5 === errors;\n                    }\n                    else {\n                        var valid2 = true;\n                    }\n                    if (valid2) {\n                        if (data.name !== undefined) {\n                            const _errs7 = errors;\n                            if (typeof data.name !== 'string') {\n                                const err3 = {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/definitions/WalletTemplateAddressData/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err3];\n                                }\n                                else {\n                                    vErrors.push(err3);\n                                }\n                                errors++;\n                            }\n                            var valid2 = _errs7 === errors;\n                        }\n                        else {\n                            var valid2 = true;\n                        }\n                        if (valid2) {\n                            if (data.type !== undefined) {\n                                let data2 = data.type;\n                                const _errs9 = errors;\n                                if (typeof data2 !== 'string') {\n                                    const err4 = {\n                                        instancePath: instancePath + '/type',\n                                        schemaPath: '#/definitions/WalletTemplateAddressData/properties/type/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err4];\n                                    }\n                                    else {\n                                        vErrors.push(err4);\n                                    }\n                                    errors++;\n                                }\n                                if ('AddressData' !== data2) {\n                                    const err5 = {\n                                        instancePath: instancePath + '/type',\n                                        schemaPath: '#/definitions/WalletTemplateAddressData/properties/type/const',\n                                        keyword: 'const',\n                                        params: { allowedValue: 'AddressData' },\n                                        message: 'must be equal to constant',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err5];\n                                    }\n                                    else {\n                                        vErrors.push(err5);\n                                    }\n                                    errors++;\n                                }\n                                var valid2 = _errs9 === errors;\n                            }\n                            else {\n                                var valid2 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            const err6 = {\n                instancePath,\n                schemaPath: '#/definitions/WalletTemplateAddressData/type',\n                keyword: 'type',\n                params: { type: 'object' },\n                message: 'must be object',\n            };\n            if (vErrors === null) {\n                vErrors = [err6];\n            }\n            else {\n                vErrors.push(err6);\n            }\n            errors++;\n        }\n    }\n    var _valid0 = _errs1 === errors;\n    valid0 = valid0 || _valid0;\n    if (!valid0) {\n        const _errs11 = errors;\n        const _errs12 = errors;\n        if (errors === _errs12) {\n            if (data && typeof data == 'object' && !Array.isArray(data)) {\n                let missing1;\n                if (data.type === undefined && (missing1 = 'type')) {\n                    const err7 = {\n                        instancePath,\n                        schemaPath: '#/definitions/WalletTemplateHdKey/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing1 },\n                        message: \"must have required property '\" + missing1 + \"'\",\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err7];\n                    }\n                    else {\n                        vErrors.push(err7);\n                    }\n                    errors++;\n                }\n                else {\n                    const _errs14 = errors;\n                    for (const key1 in data) {\n                        if (!(key1 === 'addressOffset' ||\n                            key1 === 'description' ||\n                            key1 === 'hdPublicKeyDerivationPath' ||\n                            key1 === 'name' ||\n                            key1 === 'neverSignTwice' ||\n                            key1 === 'privateDerivationPath' ||\n                            key1 === 'publicDerivationPath' ||\n                            key1 === 'type')) {\n                            const err8 = {\n                                instancePath,\n                                schemaPath: '#/definitions/WalletTemplateHdKey/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key1 },\n                                message: 'must NOT have additional properties',\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err8];\n                            }\n                            else {\n                                vErrors.push(err8);\n                            }\n                            errors++;\n                            break;\n                        }\n                    }\n                    if (_errs14 === errors) {\n                        if (data.addressOffset !== undefined) {\n                            let data3 = data.addressOffset;\n                            const _errs15 = errors;\n                            if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                const err9 = {\n                                    instancePath: instancePath + '/addressOffset',\n                                    schemaPath: '#/definitions/WalletTemplateHdKey/properties/addressOffset/type',\n                                    keyword: 'type',\n                                    params: { type: 'number' },\n                                    message: 'must be number',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err9];\n                                }\n                                else {\n                                    vErrors.push(err9);\n                                }\n                                errors++;\n                            }\n                            var valid4 = _errs15 === errors;\n                        }\n                        else {\n                            var valid4 = true;\n                        }\n                        if (valid4) {\n                            if (data.description !== undefined) {\n                                const _errs17 = errors;\n                                if (typeof data.description !== 'string') {\n                                    const err10 = {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/definitions/WalletTemplateHdKey/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err10];\n                                    }\n                                    else {\n                                        vErrors.push(err10);\n                                    }\n                                    errors++;\n                                }\n                                var valid4 = _errs17 === errors;\n                            }\n                            else {\n                                var valid4 = true;\n                            }\n                            if (valid4) {\n                                if (data.hdPublicKeyDerivationPath !== undefined) {\n                                    const _errs19 = errors;\n                                    if (typeof data.hdPublicKeyDerivationPath !== 'string') {\n                                        const err11 = {\n                                            instancePath: instancePath + '/hdPublicKeyDerivationPath',\n                                            schemaPath: '#/definitions/WalletTemplateHdKey/properties/hdPublicKeyDerivationPath/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err11];\n                                        }\n                                        else {\n                                            vErrors.push(err11);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid4 = _errs19 === errors;\n                                }\n                                else {\n                                    var valid4 = true;\n                                }\n                                if (valid4) {\n                                    if (data.name !== undefined) {\n                                        const _errs21 = errors;\n                                        if (typeof data.name !== 'string') {\n                                            const err12 = {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/definitions/WalletTemplateHdKey/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err12];\n                                            }\n                                            else {\n                                                vErrors.push(err12);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid4 = _errs21 === errors;\n                                    }\n                                    else {\n                                        var valid4 = true;\n                                    }\n                                    if (valid4) {\n                                        if (data.neverSignTwice !== undefined) {\n                                            const _errs23 = errors;\n                                            if (typeof data.neverSignTwice !== 'boolean') {\n                                                const err13 = {\n                                                    instancePath: instancePath + '/neverSignTwice',\n                                                    schemaPath: '#/definitions/WalletTemplateHdKey/properties/neverSignTwice/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'boolean' },\n                                                    message: 'must be boolean',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err13];\n                                                }\n                                                else {\n                                                    vErrors.push(err13);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid4 = _errs23 === errors;\n                                        }\n                                        else {\n                                            var valid4 = true;\n                                        }\n                                        if (valid4) {\n                                            if (data.privateDerivationPath !== undefined) {\n                                                const _errs25 = errors;\n                                                if (typeof data.privateDerivationPath !== 'string') {\n                                                    const err14 = {\n                                                        instancePath: instancePath + '/privateDerivationPath',\n                                                        schemaPath: '#/definitions/WalletTemplateHdKey/properties/privateDerivationPath/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err14];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err14);\n                                                    }\n                                                    errors++;\n                                                }\n                                                var valid4 = _errs25 === errors;\n                                            }\n                                            else {\n                                                var valid4 = true;\n                                            }\n                                            if (valid4) {\n                                                if (data.publicDerivationPath !== undefined) {\n                                                    const _errs27 = errors;\n                                                    if (typeof data.publicDerivationPath !== 'string') {\n                                                        const err15 = {\n                                                            instancePath: instancePath + '/publicDerivationPath',\n                                                            schemaPath: '#/definitions/WalletTemplateHdKey/properties/publicDerivationPath/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err15];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err15);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid4 = _errs27 === errors;\n                                                }\n                                                else {\n                                                    var valid4 = true;\n                                                }\n                                                if (valid4) {\n                                                    if (data.type !== undefined) {\n                                                        let data10 = data.type;\n                                                        const _errs29 = errors;\n                                                        if (typeof data10 !== 'string') {\n                                                            const err16 = {\n                                                                instancePath: instancePath + '/type',\n                                                                schemaPath: '#/definitions/WalletTemplateHdKey/properties/type/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'string' },\n                                                                message: 'must be string',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err16];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err16);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        if ('HdKey' !== data10) {\n                                                            const err17 = {\n                                                                instancePath: instancePath + '/type',\n                                                                schemaPath: '#/definitions/WalletTemplateHdKey/properties/type/const',\n                                                                keyword: 'const',\n                                                                params: { allowedValue: 'HdKey' },\n                                                                message: 'must be equal to constant',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err17];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err17);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        var valid4 = _errs29 === errors;\n                                                    }\n                                                    else {\n                                                        var valid4 = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                const err18 = {\n                    instancePath,\n                    schemaPath: '#/definitions/WalletTemplateHdKey/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                };\n                if (vErrors === null) {\n                    vErrors = [err18];\n                }\n                else {\n                    vErrors.push(err18);\n                }\n                errors++;\n            }\n        }\n        var _valid0 = _errs11 === errors;\n        valid0 = valid0 || _valid0;\n        if (!valid0) {\n            const _errs31 = errors;\n            const _errs32 = errors;\n            if (errors === _errs32) {\n                if (data && typeof data == 'object' && !Array.isArray(data)) {\n                    let missing2;\n                    if (data.type === undefined && (missing2 = 'type')) {\n                        const err19 = {\n                            instancePath,\n                            schemaPath: '#/definitions/WalletTemplateKey/required',\n                            keyword: 'required',\n                            params: { missingProperty: missing2 },\n                            message: \"must have required property '\" + missing2 + \"'\",\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err19];\n                        }\n                        else {\n                            vErrors.push(err19);\n                        }\n                        errors++;\n                    }\n                    else {\n                        const _errs34 = errors;\n                        for (const key2 in data) {\n                            if (!(key2 === 'description' ||\n                                key2 === 'name' ||\n                                key2 === 'neverSignTwice' ||\n                                key2 === 'type')) {\n                                const err20 = {\n                                    instancePath,\n                                    schemaPath: '#/definitions/WalletTemplateKey/additionalProperties',\n                                    keyword: 'additionalProperties',\n                                    params: { additionalProperty: key2 },\n                                    message: 'must NOT have additional properties',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err20];\n                                }\n                                else {\n                                    vErrors.push(err20);\n                                }\n                                errors++;\n                                break;\n                            }\n                        }\n                        if (_errs34 === errors) {\n                            if (data.description !== undefined) {\n                                const _errs35 = errors;\n                                if (typeof data.description !== 'string') {\n                                    const err21 = {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/definitions/WalletTemplateKey/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err21];\n                                    }\n                                    else {\n                                        vErrors.push(err21);\n                                    }\n                                    errors++;\n                                }\n                                var valid6 = _errs35 === errors;\n                            }\n                            else {\n                                var valid6 = true;\n                            }\n                            if (valid6) {\n                                if (data.name !== undefined) {\n                                    const _errs37 = errors;\n                                    if (typeof data.name !== 'string') {\n                                        const err22 = {\n                                            instancePath: instancePath + '/name',\n                                            schemaPath: '#/definitions/WalletTemplateKey/properties/name/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err22];\n                                        }\n                                        else {\n                                            vErrors.push(err22);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid6 = _errs37 === errors;\n                                }\n                                else {\n                                    var valid6 = true;\n                                }\n                                if (valid6) {\n                                    if (data.neverSignTwice !== undefined) {\n                                        const _errs39 = errors;\n                                        if (typeof data.neverSignTwice !== 'boolean') {\n                                            const err23 = {\n                                                instancePath: instancePath + '/neverSignTwice',\n                                                schemaPath: '#/definitions/WalletTemplateKey/properties/neverSignTwice/type',\n                                                keyword: 'type',\n                                                params: { type: 'boolean' },\n                                                message: 'must be boolean',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err23];\n                                            }\n                                            else {\n                                                vErrors.push(err23);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid6 = _errs39 === errors;\n                                    }\n                                    else {\n                                        var valid6 = true;\n                                    }\n                                    if (valid6) {\n                                        if (data.type !== undefined) {\n                                            let data14 = data.type;\n                                            const _errs41 = errors;\n                                            if (typeof data14 !== 'string') {\n                                                const err24 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/WalletTemplateKey/properties/type/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err24];\n                                                }\n                                                else {\n                                                    vErrors.push(err24);\n                                                }\n                                                errors++;\n                                            }\n                                            if ('Key' !== data14) {\n                                                const err25 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/WalletTemplateKey/properties/type/const',\n                                                    keyword: 'const',\n                                                    params: { allowedValue: 'Key' },\n                                                    message: 'must be equal to constant',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err25];\n                                                }\n                                                else {\n                                                    vErrors.push(err25);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid6 = _errs41 === errors;\n                                        }\n                                        else {\n                                            var valid6 = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    const err26 = {\n                        instancePath,\n                        schemaPath: '#/definitions/WalletTemplateKey/type',\n                        keyword: 'type',\n                        params: { type: 'object' },\n                        message: 'must be object',\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err26];\n                    }\n                    else {\n                        vErrors.push(err26);\n                    }\n                    errors++;\n                }\n            }\n            var _valid0 = _errs31 === errors;\n            valid0 = valid0 || _valid0;\n            if (!valid0) {\n                const _errs43 = errors;\n                const _errs44 = errors;\n                if (errors === _errs44) {\n                    if (data && typeof data == 'object' && !Array.isArray(data)) {\n                        let missing3;\n                        if (data.type === undefined && (missing3 = 'type')) {\n                            const err27 = {\n                                instancePath,\n                                schemaPath: '#/definitions/WalletTemplateWalletData/required',\n                                keyword: 'required',\n                                params: { missingProperty: missing3 },\n                                message: \"must have required property '\" + missing3 + \"'\",\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err27];\n                            }\n                            else {\n                                vErrors.push(err27);\n                            }\n                            errors++;\n                        }\n                        else {\n                            const _errs46 = errors;\n                            for (const key3 in data) {\n                                if (!(key3 === 'description' ||\n                                    key3 === 'name' ||\n                                    key3 === 'type')) {\n                                    const err28 = {\n                                        instancePath,\n                                        schemaPath: '#/definitions/WalletTemplateWalletData/additionalProperties',\n                                        keyword: 'additionalProperties',\n                                        params: { additionalProperty: key3 },\n                                        message: 'must NOT have additional properties',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err28];\n                                    }\n                                    else {\n                                        vErrors.push(err28);\n                                    }\n                                    errors++;\n                                    break;\n                                }\n                            }\n                            if (_errs46 === errors) {\n                                if (data.description !== undefined) {\n                                    const _errs47 = errors;\n                                    if (typeof data.description !== 'string') {\n                                        const err29 = {\n                                            instancePath: instancePath + '/description',\n                                            schemaPath: '#/definitions/WalletTemplateWalletData/properties/description/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err29];\n                                        }\n                                        else {\n                                            vErrors.push(err29);\n                                        }\n                                        errors++;\n                                    }\n                                    var valid8 = _errs47 === errors;\n                                }\n                                else {\n                                    var valid8 = true;\n                                }\n                                if (valid8) {\n                                    if (data.name !== undefined) {\n                                        const _errs49 = errors;\n                                        if (typeof data.name !== 'string') {\n                                            const err30 = {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/definitions/WalletTemplateWalletData/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err30];\n                                            }\n                                            else {\n                                                vErrors.push(err30);\n                                            }\n                                            errors++;\n                                        }\n                                        var valid8 = _errs49 === errors;\n                                    }\n                                    else {\n                                        var valid8 = true;\n                                    }\n                                    if (valid8) {\n                                        if (data.type !== undefined) {\n                                            let data17 = data.type;\n                                            const _errs51 = errors;\n                                            if (typeof data17 !== 'string') {\n                                                const err31 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/WalletTemplateWalletData/properties/type/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err31];\n                                                }\n                                                else {\n                                                    vErrors.push(err31);\n                                                }\n                                                errors++;\n                                            }\n                                            if ('WalletData' !== data17) {\n                                                const err32 = {\n                                                    instancePath: instancePath + '/type',\n                                                    schemaPath: '#/definitions/WalletTemplateWalletData/properties/type/const',\n                                                    keyword: 'const',\n                                                    params: { allowedValue: 'WalletData' },\n                                                    message: 'must be equal to constant',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err32];\n                                                }\n                                                else {\n                                                    vErrors.push(err32);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid8 = _errs51 === errors;\n                                        }\n                                        else {\n                                            var valid8 = true;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        const err33 = {\n                            instancePath,\n                            schemaPath: '#/definitions/WalletTemplateWalletData/type',\n                            keyword: 'type',\n                            params: { type: 'object' },\n                            message: 'must be object',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err33];\n                        }\n                        else {\n                            vErrors.push(err33);\n                        }\n                        errors++;\n                    }\n                }\n                var _valid0 = _errs43 === errors;\n                valid0 = valid0 || _valid0;\n            }\n        }\n    }\n    if (!valid0) {\n        const err34 = {\n            instancePath,\n            schemaPath: '#/anyOf',\n            keyword: 'anyOf',\n            params: {},\n            message: 'must match a schema in anyOf',\n        };\n        if (vErrors === null) {\n            vErrors = [err34];\n        }\n        else {\n            vErrors.push(err34);\n        }\n        errors++;\n        validate23.errors = vErrors;\n        return false;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate23.errors = vErrors;\n    return errors === 0;\n}\nfunction validate22(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'description' ||\n                    key0 === 'name' ||\n                    key0 === 'scripts' ||\n                    key0 === 'variables')) {\n                    validate22.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.description !== undefined) {\n                    const _errs2 = errors;\n                    if (typeof data.description !== 'string') {\n                        validate22.errors = [\n                            {\n                                instancePath: instancePath + '/description',\n                                schemaPath: '#/properties/description/type',\n                                keyword: 'type',\n                                params: { type: 'string' },\n                                message: 'must be string',\n                            },\n                        ];\n                        return false;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.name !== undefined) {\n                        const _errs4 = errors;\n                        if (typeof data.name !== 'string') {\n                            validate22.errors = [\n                                {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs4 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.scripts !== undefined) {\n                            let data2 = data.scripts;\n                            const _errs6 = errors;\n                            if (errors === _errs6) {\n                                if (Array.isArray(data2)) {\n                                    var valid1 = true;\n                                    const len0 = data2.length;\n                                    for (let i0 = 0; i0 < len0; i0++) {\n                                        const _errs8 = errors;\n                                        if (typeof data2[i0] !== 'string') {\n                                            validate22.errors = [\n                                                {\n                                                    instancePath: instancePath + '/scripts/' + i0,\n                                                    schemaPath: '#/properties/scripts/items/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid1 = _errs8 === errors;\n                                        if (!valid1) {\n                                            break;\n                                        }\n                                    }\n                                }\n                                else {\n                                    validate22.errors = [\n                                        {\n                                            instancePath: instancePath + '/scripts',\n                                            schemaPath: '#/properties/scripts/type',\n                                            keyword: 'type',\n                                            params: { type: 'array' },\n                                            message: 'must be array',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                            }\n                            var valid0 = _errs6 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.variables !== undefined) {\n                                let data4 = data.variables;\n                                const _errs10 = errors;\n                                if (errors === _errs10) {\n                                    if (data4 &&\n                                        typeof data4 == 'object' &&\n                                        !Array.isArray(data4)) {\n                                        for (const key1 in data4) {\n                                            const _errs13 = errors;\n                                            if (!validate23(data4[key1], {\n                                                instancePath: instancePath +\n                                                    '/variables/' +\n                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                parentData: data4,\n                                                parentDataProperty: key1,\n                                                rootData,\n                                            })) {\n                                                vErrors =\n                                                    vErrors === null\n                                                        ? validate23.errors\n                                                        : vErrors.concat(validate23.errors);\n                                                errors = vErrors.length;\n                                            }\n                                            var valid2 = _errs13 === errors;\n                                            if (!valid2) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        validate22.errors = [\n                                            {\n                                                instancePath: instancePath + '/variables',\n                                                schemaPath: '#/properties/variables/type',\n                                                keyword: 'type',\n                                                params: { type: 'object' },\n                                                message: 'must be object',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                }\n                                var valid0 = _errs10 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate22.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate22.errors = vErrors;\n    return errors === 0;\n}\nconst schema30 = {\n    additionalProperties: false,\n    description: 'An object describing the configuration for a particular scenario within an wallet template.',\n    properties: {\n        data: {\n            $ref: '#/definitions/WalletTemplateScenarioData',\n            description: \"An object defining the data to use while compiling this scenario. The properties specified here are used to extend the existing scenario data based on this scenario's `extends` property.\\n\\nEach property is extended individually – to unset a previously-set property, the property must be individually overridden in this object.\",\n        },\n        description: {\n            description: 'An optionally multi-line, free-form, human-readable description for this scenario (for use in user interfaces). If displayed, this description should use a monospace font to properly render ASCII diagrams.',\n            type: 'string',\n        },\n        extends: {\n            description: \"The identifier of the scenario that this scenario extends. Any `data` or `transaction` properties not defined in this scenario inherit from the extended parent scenario.\\n\\nIf undefined, this scenario is assumed to extend the default scenario:\\n\\n- The default values for `data` are set:   - The identifiers of all `Key` variables and entities in this template are lexicographically sorted, then each is assigned an incrementing positive integer – beginning with `1` – encoded as an unsigned, 256-bit, big-endian integer (i.e. `0x0000...0001` (32 bytes), `0x0000...0002`, `0x0000...0003`, etc.). For `Key`s, this assigned value is used as the private key; For entities, the assigned value is used as the master seed of that entity's `HdPrivateKey`. If `hdKey` is set, the `addressIndex` is set to `0`.   - `currentBlockHeight` is set to `2`. This is the height of the second mined block after the genesis block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`. This default value was chosen to be low enough to simplify the debugging of block height offsets while remaining differentiated from `0` and `1`, which are used both as boolean return values and for control flow.   - `currentBlockTime` is set to `1231469665`. This is the Median Time-Past block time (BIP113) of block `2`.\\n\\n- Then `transaction` is set based on use:   - if the scenario is being used for transaction estimation, all transaction properties are taken from the transaction being estimated.   - if the scenario is being used for script testing and validation, the default value for each `transaction` property is used.\\n\\nWhen a scenario is extended, each property of `data` and `transaction` is extended individually: if the extending scenario does not provide a new value for `data.bytecode.value` or `transaction.property`, the parent value is used. To avoid inheriting a parent value, each child value must be individually overridden.\",\n            type: 'string',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this scenario for use in user interfaces, e.g.: `Delayed Recovery`.',\n            type: 'string',\n        },\n        sourceOutputs: {\n            description: 'The list of source outputs (a.k.a. UTXOs) to use when generating the compilation context for this scenario.\\n\\nThe `sourceOutputs` property must have the same length as `transaction.inputs`, and each source output must be ordered to match the index of the input that spends it.\\n\\nTo be valid the `sourceOutputs` property must have exactly one source output with `lockingBytecode` set to `[\"slot\"]` – the output at the same index as the `[\"slot\"]` input in `transaction.inputs`.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": [\"slot\"] }]`.',\n            items: { $ref: '#/definitions/WalletTemplateScenarioSourceOutput' },\n            type: 'array',\n        },\n        transaction: {\n            additionalProperties: false,\n            description: 'The transaction within which this scenario should be evaluated. This is used for script testing and validation.\\n\\nIf undefined, inherits the default value for each property: ```json {   \"inputs\": [{ \"unlockingBytecode\": [\\'slot\\'] }],   \"locktime\": 0,   \"outputs\": [{ \"lockingBytecode\": {} }],   \"version\": 2 } ```\\n\\nAny `transaction` property that is not set will be inherited from the scenario specified by `extends`. when specifying the `inputs` and `outputs` properties, each input and output extends the default values for inputs and outputs, respectively.\\n\\nFor example, an input of `{}` is interpreted as: ```json {   \"outpointIndex\": 0,   \"outpointTransactionHash\":     \"0000000000000000000000000000000000000000000000000000000000000000\",   \"sequenceNumber\": 0,   \"unlockingBytecode\": [\\'slot\\'] } ``` And an output of `{}` is interpreted as: ```json {   \"lockingBytecode\": {     \"script\": [\\'copy\\'],     \"overrides\": { \"hdKeys\": { \"addressIndex\": 1 } }   },   \"valueSatoshis\": 0 } ```',\n            properties: {\n                inputs: {\n                    description: 'The list of inputs to use when generating the transaction for this scenario.\\n\\nTo be valid the `inputs` property must have exactly one input with `unlockingBytecode` set to `[\"slot\"]`. This is the input in which the unlocking script under test will be placed.\\n\\nIf undefined, inherits the default scenario `inputs` value: `[{ \"unlockingBytecode\": [\"slot\"] }]`.',\n                    items: { $ref: '#/definitions/WalletTemplateScenarioInput' },\n                    type: 'array',\n                },\n                locktime: {\n                    description: 'The locktime to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, defaults to `0`.\\n\\nLocktime can be provided as either a timestamp or a block height. Values less than `500000000` are understood to be a block height (the current block number in the chain, beginning from block `0`). Values greater than or equal to `500000000` are understood to be a UNIX timestamp.\\n\\nFor validating timestamp values, the median timestamp of the last 11 blocks (Median Time-Past) is used. The precise behavior is defined in BIP113.\\n\\nIf the `sequenceNumber` of every transaction input is set to `0xffffffff` (`4294967295`), locktime is disabled, and the transaction may be added to a block even if the specified locktime has not yet been reached. When locktime is disabled, if an `OP_CHECKLOCKTIMEVERIFY` operation is encountered during the verification of any input, an error is produced, and the transaction is invalid.',\n                    type: 'number',\n                },\n                outputs: {\n                    description: 'The list of outputs to use when generating the transaction for this scenario.\\n\\nIf undefined, defaults to `[{ \"lockingBytecode\": {} }]`.',\n                    items: {\n                        $ref: '#/definitions/WalletTemplateScenarioTransactionOutput',\n                    },\n                    type: 'array',\n                },\n                version: {\n                    description: 'The version to use when generating the transaction for this scenario. A positive integer from `0` to a maximum of `4294967295` – if undefined, inherits the default scenario `version` value: `2`.',\n                    type: 'number',\n                },\n            },\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema31 = {\n    additionalProperties: false,\n    description: 'An object defining the data to use while compiling a scenario.',\n    properties: {\n        bytecode: {\n            additionalProperties: { type: 'string' },\n            description: \"A map of full identifiers to CashAssembly scripts that compile to each identifier's value for this scenario. Allowing `bytecode` to be specified as scripts (rather than e.g. hex) offers greater power and flexibility.\\n\\nBytecode scripts have access to each other and all other template scripts and defined variables, however, cyclical references will produce an error at compile time. Also, because the results of these compilations will be used to generate the compilation context for this scenario, these scripts may not use compiler operations that themselves require access to compilation context (e.g. signatures).\\n\\nThe provided `fullIdentifier` should match the complete identifier for each item, e.g. `some_wallet_data`, `variable_id.public_key`, or `variable_id.schnorr_signature.all_outputs`.\\n\\nAll `AddressData` and `WalletData` variables must be provided via `bytecode` (though the default scenario automatically includes reasonable values), and pre-computed results for operations of other variable types (e.g. `key.public_key`) may also be provided via this property.\\n\\nBecause each bytecode identifier may precisely match the identifier of the variable it defines for this scenario, references between these scripts must refer to the target script with a `_scenario.` prefix. E.g. to reference a sibling script `my_foo` from `my_bar`, the `my_bar` script must use the identifier `_scenario.my_foo`.\",\n            type: 'object',\n        },\n        currentBlockHeight: {\n            description: 'The current block height at the \"address creation time\" implied in this scenario.',\n            type: 'number',\n        },\n        currentBlockTime: {\n            description: 'The current MTP block time as a UNIX timestamp at the \"address creation time\" implied in this scenario.\\n\\nNote, this is never a current timestamp, but rather the median timestamp of the last 11 blocks. It is therefore approximately one hour in the past.\\n\\nEvery block has a precise MTP block time, much like a block height. See BIP113 for details.',\n            type: 'number',\n        },\n        hdKeys: {\n            additionalProperties: false,\n            description: 'An object describing the settings used for `HdKey` variables in this scenario.',\n            properties: {\n                addressIndex: {\n                    description: 'The current address index to be used for this scenario. The `addressIndex` gets added to each `HdKey`s `addressOffset` to calculate the dynamic index (`i`) used in each `privateDerivationPath` or `publicDerivationPath`.\\n\\nThis is required for any compiler operation that requires derivation. Typically, the value is incremented by one for each address in a wallet.\\n\\nDefaults to `0`.',\n                    type: 'number',\n                },\n                hdPrivateKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of entity IDs to master HD private keys. These master HD private keys are used to derive each `HdKey` variable assigned to that entity according to its `privateDerivationPath`.\\n\\nHD private keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                    type: 'object',\n                },\n                hdPublicKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of entity IDs to HD public keys. These HD public keys are used to derive public keys for each `HdKey` variable assigned to that entity according to its `publicDerivationPath`.\\n\\nHD public keys may be encoded for either mainnet or testnet (the network information is ignored).\\n\\nIf both an HD private key (in `hdPrivateKeys`) and HD public key (in `hdPublicKeys`) are provided for the same entity in the same scenario (not recommended), the HD private key is used.',\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        keys: {\n            additionalProperties: false,\n            description: 'An object describing the settings used for `Key` variables in this scenario.',\n            properties: {\n                privateKeys: {\n                    additionalProperties: { type: 'string' },\n                    description: 'A map of `Key` variable IDs to their 32-byte, hexadecimal-encoded private key values.',\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n    },\n    type: 'object',\n};\nconst schema32 = {\n    additionalProperties: false,\n    description: 'An example output used to define a scenario for a wallet template.',\n    properties: {\n        lockingBytecode: {\n            anyOf: [\n                { $ref: '#/definitions/WalletTemplateScenarioBytecode' },\n                {\n                    items: { const: 'slot', type: 'string' },\n                    maxItems: 1,\n                    minItems: 1,\n                    type: 'array',\n                },\n            ],\n            description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n        },\n        token: {\n            additionalProperties: false,\n            description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n            properties: {\n                amount: {\n                    description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n                category: {\n                    description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                    type: 'string',\n                },\n                nft: {\n                    additionalProperties: false,\n                    description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                    properties: {\n                        capability: {\n                            description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                            enum: ['minting', 'mutable', 'none'],\n                            type: 'string',\n                        },\n                        commitment: {\n                            description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                            type: 'string',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        valueSatoshis: {\n            description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n            type: ['number', 'string'],\n        },\n    },\n    type: 'object',\n};\nconst schema33 = {\n    anyOf: [\n        { type: 'string' },\n        {\n            additionalProperties: false,\n            properties: {\n                overrides: {\n                    $ref: '#/definitions/WalletTemplateScenarioData',\n                    description: 'Scenario data that extends the scenario\\'s top-level `data` during script compilation.\\n\\nEach property is extended individually – to modify a property set by the top-level scenario `data`, the new value must be listed here.\\n\\nDefaults to `{}` for `sourceOutputs` and `transaction.inputs`; defaults to `{ \"hdKeys\": { \"addressIndex\": 1 } }` for `transaction.outputs`.',\n                },\n                script: {\n                    anyOf: [\n                        { type: 'string' },\n                        {\n                            items: { const: 'copy', type: 'string' },\n                            maxItems: 1,\n                            minItems: 1,\n                            type: 'array',\n                        },\n                    ],\n                    description: 'The identifier of the script to compile when generating this bytecode. May also be set to `[\"copy\"]`, which is automatically replaced with the identifier of the locking or unlocking script under test, respectively.\\n\\nIf undefined, defaults to `[\"copy\"]`.',\n                },\n            },\n            type: 'object',\n        },\n    ],\n    description: 'A type that describes the configuration for a particular locking or unlocking bytecode within a wallet template scenario.\\n\\nBytecode may be specified as either a hexadecimal-encoded string or an object describing the required compilation.\\n\\nFor `sourceOutputs` and `transaction.inputs`, defaults to `{ script: [\"copy\"], overrides: {} }`. For `transaction.outputs`, defaults to `{ script: [\"copy\"], overrides: { \"hdKeys\": { \"addressIndex\": 1 } } }`.',\n};\nfunction validate28(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    const _errs1 = errors;\n    if (typeof data !== 'string') {\n        const err0 = {\n            instancePath,\n            schemaPath: '#/anyOf/0/type',\n            keyword: 'type',\n            params: { type: 'string' },\n            message: 'must be string',\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    valid0 = valid0 || _valid0;\n    if (!valid0) {\n        const _errs3 = errors;\n        if (errors === _errs3) {\n            if (data && typeof data == 'object' && !Array.isArray(data)) {\n                const _errs5 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'overrides' || key0 === 'script')) {\n                        const err1 = {\n                            instancePath,\n                            schemaPath: '#/anyOf/1/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err1];\n                        }\n                        else {\n                            vErrors.push(err1);\n                        }\n                        errors++;\n                        break;\n                    }\n                }\n                if (_errs5 === errors) {\n                    if (data.overrides !== undefined) {\n                        let data0 = data.overrides;\n                        const _errs6 = errors;\n                        const _errs7 = errors;\n                        if (errors === _errs7) {\n                            if (data0 && typeof data0 == 'object' && !Array.isArray(data0)) {\n                                const _errs9 = errors;\n                                for (const key1 in data0) {\n                                    if (!(key1 === 'bytecode' ||\n                                        key1 === 'currentBlockHeight' ||\n                                        key1 === 'currentBlockTime' ||\n                                        key1 === 'hdKeys' ||\n                                        key1 === 'keys')) {\n                                        const err2 = {\n                                            instancePath: instancePath + '/overrides',\n                                            schemaPath: '#/definitions/WalletTemplateScenarioData/additionalProperties',\n                                            keyword: 'additionalProperties',\n                                            params: { additionalProperty: key1 },\n                                            message: 'must NOT have additional properties',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err2];\n                                        }\n                                        else {\n                                            vErrors.push(err2);\n                                        }\n                                        errors++;\n                                        break;\n                                    }\n                                }\n                                if (_errs9 === errors) {\n                                    if (data0.bytecode !== undefined) {\n                                        let data1 = data0.bytecode;\n                                        const _errs10 = errors;\n                                        if (errors === _errs10) {\n                                            if (data1 &&\n                                                typeof data1 == 'object' &&\n                                                !Array.isArray(data1)) {\n                                                for (const key2 in data1) {\n                                                    const _errs13 = errors;\n                                                    if (typeof data1[key2] !== 'string') {\n                                                        const err3 = {\n                                                            instancePath: instancePath +\n                                                                '/overrides/bytecode/' +\n                                                                key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/bytecode/additionalProperties/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err3];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err3);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid4 = _errs13 === errors;\n                                                    if (!valid4) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                const err4 = {\n                                                    instancePath: instancePath + '/overrides/bytecode',\n                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/bytecode/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err4];\n                                                }\n                                                else {\n                                                    vErrors.push(err4);\n                                                }\n                                                errors++;\n                                            }\n                                        }\n                                        var valid3 = _errs10 === errors;\n                                    }\n                                    else {\n                                        var valid3 = true;\n                                    }\n                                    if (valid3) {\n                                        if (data0.currentBlockHeight !== undefined) {\n                                            let data3 = data0.currentBlockHeight;\n                                            const _errs15 = errors;\n                                            if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                                const err5 = {\n                                                    instancePath: instancePath + '/overrides/currentBlockHeight',\n                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/currentBlockHeight/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'number' },\n                                                    message: 'must be number',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err5];\n                                                }\n                                                else {\n                                                    vErrors.push(err5);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid3 = _errs15 === errors;\n                                        }\n                                        else {\n                                            var valid3 = true;\n                                        }\n                                        if (valid3) {\n                                            if (data0.currentBlockTime !== undefined) {\n                                                let data4 = data0.currentBlockTime;\n                                                const _errs17 = errors;\n                                                if (!(typeof data4 == 'number' && isFinite(data4))) {\n                                                    const err6 = {\n                                                        instancePath: instancePath + '/overrides/currentBlockTime',\n                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/currentBlockTime/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'number' },\n                                                        message: 'must be number',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err6];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err6);\n                                                    }\n                                                    errors++;\n                                                }\n                                                var valid3 = _errs17 === errors;\n                                            }\n                                            else {\n                                                var valid3 = true;\n                                            }\n                                            if (valid3) {\n                                                if (data0.hdKeys !== undefined) {\n                                                    let data5 = data0.hdKeys;\n                                                    const _errs19 = errors;\n                                                    if (errors === _errs19) {\n                                                        if (data5 &&\n                                                            typeof data5 == 'object' &&\n                                                            !Array.isArray(data5)) {\n                                                            const _errs21 = errors;\n                                                            for (const key3 in data5) {\n                                                                if (!(key3 === 'addressIndex' ||\n                                                                    key3 === 'hdPrivateKeys' ||\n                                                                    key3 === 'hdPublicKeys')) {\n                                                                    const err7 = {\n                                                                        instancePath: instancePath + '/overrides/hdKeys',\n                                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key3 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err7];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err7);\n                                                                    }\n                                                                    errors++;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs21 === errors) {\n                                                                if (data5.addressIndex !== undefined) {\n                                                                    let data6 = data5.addressIndex;\n                                                                    const _errs22 = errors;\n                                                                    if (!(typeof data6 == 'number' &&\n                                                                        isFinite(data6))) {\n                                                                        const err8 = {\n                                                                            instancePath: instancePath +\n                                                                                '/overrides/hdKeys/addressIndex',\n                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/addressIndex/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'number' },\n                                                                            message: 'must be number',\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err8];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err8);\n                                                                        }\n                                                                        errors++;\n                                                                    }\n                                                                    var valid5 = _errs22 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid5 = true;\n                                                                }\n                                                                if (valid5) {\n                                                                    if (data5.hdPrivateKeys !== undefined) {\n                                                                        let data7 = data5.hdPrivateKeys;\n                                                                        const _errs24 = errors;\n                                                                        if (errors === _errs24) {\n                                                                            if (data7 &&\n                                                                                typeof data7 == 'object' &&\n                                                                                !Array.isArray(data7)) {\n                                                                                for (const key4 in data7) {\n                                                                                    const _errs27 = errors;\n                                                                                    if (typeof data7[key4] !== 'string') {\n                                                                                        const err9 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/overrides/hdKeys/hdPrivateKeys/' +\n                                                                                                key4\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err9];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err9);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid6 = _errs27 === errors;\n                                                                                    if (!valid6) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                const err10 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/overrides/hdKeys/hdPrivateKeys',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err10];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err10);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                        }\n                                                                        var valid5 = _errs24 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid5 = true;\n                                                                    }\n                                                                    if (valid5) {\n                                                                        if (data5.hdPublicKeys !== undefined) {\n                                                                            let data9 = data5.hdPublicKeys;\n                                                                            const _errs29 = errors;\n                                                                            if (errors === _errs29) {\n                                                                                if (data9 &&\n                                                                                    typeof data9 == 'object' &&\n                                                                                    !Array.isArray(data9)) {\n                                                                                    for (const key5 in data9) {\n                                                                                        const _errs32 = errors;\n                                                                                        if (typeof data9[key5] !== 'string') {\n                                                                                            const err11 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/overrides/hdKeys/hdPublicKeys/' +\n                                                                                                    key5\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1'),\n                                                                                                schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/additionalProperties/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err11];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err11);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid7 = _errs32 === errors;\n                                                                                        if (!valid7) {\n                                                                                            break;\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                                else {\n                                                                                    const err12 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/overrides/hdKeys/hdPublicKeys',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'object' },\n                                                                                        message: 'must be object',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err12];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err12);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                            }\n                                                                            var valid5 = _errs29 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid5 = true;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                        else {\n                                                            const err13 = {\n                                                                instancePath: instancePath + '/overrides/hdKeys',\n                                                                schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err13];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err13);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                    }\n                                                    var valid3 = _errs19 === errors;\n                                                }\n                                                else {\n                                                    var valid3 = true;\n                                                }\n                                                if (valid3) {\n                                                    if (data0.keys !== undefined) {\n                                                        let data11 = data0.keys;\n                                                        const _errs34 = errors;\n                                                        if (errors === _errs34) {\n                                                            if (data11 &&\n                                                                typeof data11 == 'object' &&\n                                                                !Array.isArray(data11)) {\n                                                                const _errs36 = errors;\n                                                                for (const key6 in data11) {\n                                                                    if (!(key6 === 'privateKeys')) {\n                                                                        const err14 = {\n                                                                            instancePath: instancePath + '/overrides/keys',\n                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key6 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err14];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err14);\n                                                                        }\n                                                                        errors++;\n                                                                        break;\n                                                                    }\n                                                                }\n                                                                if (_errs36 === errors) {\n                                                                    if (data11.privateKeys !== undefined) {\n                                                                        let data12 = data11.privateKeys;\n                                                                        const _errs37 = errors;\n                                                                        if (errors === _errs37) {\n                                                                            if (data12 &&\n                                                                                typeof data12 == 'object' &&\n                                                                                !Array.isArray(data12)) {\n                                                                                for (const key7 in data12) {\n                                                                                    const _errs40 = errors;\n                                                                                    if (typeof data12[key7] !== 'string') {\n                                                                                        const err15 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/overrides/keys/privateKeys/' +\n                                                                                                key7\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/properties/privateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err15];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err15);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid9 = _errs40 === errors;\n                                                                                    if (!valid9) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                const err16 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/overrides/keys/privateKeys',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/properties/privateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err16];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err16);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                const err17 = {\n                                                                    instancePath: instancePath + '/overrides/keys',\n                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                };\n                                                                if (vErrors === null) {\n                                                                    vErrors = [err17];\n                                                                }\n                                                                else {\n                                                                    vErrors.push(err17);\n                                                                }\n                                                                errors++;\n                                                            }\n                                                        }\n                                                        var valid3 = _errs34 === errors;\n                                                    }\n                                                    else {\n                                                        var valid3 = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                const err18 = {\n                                    instancePath: instancePath + '/overrides',\n                                    schemaPath: '#/definitions/WalletTemplateScenarioData/type',\n                                    keyword: 'type',\n                                    params: { type: 'object' },\n                                    message: 'must be object',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err18];\n                                }\n                                else {\n                                    vErrors.push(err18);\n                                }\n                                errors++;\n                            }\n                        }\n                        var valid1 = _errs6 === errors;\n                    }\n                    else {\n                        var valid1 = true;\n                    }\n                    if (valid1) {\n                        if (data.script !== undefined) {\n                            let data14 = data.script;\n                            const _errs42 = errors;\n                            const _errs43 = errors;\n                            let valid10 = false;\n                            const _errs44 = errors;\n                            if (typeof data14 !== 'string') {\n                                const err19 = {\n                                    instancePath: instancePath + '/script',\n                                    schemaPath: '#/anyOf/1/properties/script/anyOf/0/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err19];\n                                }\n                                else {\n                                    vErrors.push(err19);\n                                }\n                                errors++;\n                            }\n                            var _valid1 = _errs44 === errors;\n                            valid10 = valid10 || _valid1;\n                            if (!valid10) {\n                                const _errs46 = errors;\n                                if (errors === _errs46) {\n                                    if (Array.isArray(data14)) {\n                                        if (data14.length > 1) {\n                                            const err20 = {\n                                                instancePath: instancePath + '/script',\n                                                schemaPath: '#/anyOf/1/properties/script/anyOf/1/maxItems',\n                                                keyword: 'maxItems',\n                                                params: { limit: 1 },\n                                                message: 'must NOT have more than 1 items',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err20];\n                                            }\n                                            else {\n                                                vErrors.push(err20);\n                                            }\n                                            errors++;\n                                        }\n                                        else {\n                                            if (data14.length < 1) {\n                                                const err21 = {\n                                                    instancePath: instancePath + '/script',\n                                                    schemaPath: '#/anyOf/1/properties/script/anyOf/1/minItems',\n                                                    keyword: 'minItems',\n                                                    params: { limit: 1 },\n                                                    message: 'must NOT have fewer than 1 items',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err21];\n                                                }\n                                                else {\n                                                    vErrors.push(err21);\n                                                }\n                                                errors++;\n                                            }\n                                            else {\n                                                var valid11 = true;\n                                                const len0 = data14.length;\n                                                for (let i0 = 0; i0 < len0; i0++) {\n                                                    let data15 = data14[i0];\n                                                    const _errs48 = errors;\n                                                    if (typeof data15 !== 'string') {\n                                                        const err22 = {\n                                                            instancePath: instancePath + '/script/' + i0,\n                                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/items/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err22];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err22);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    if ('copy' !== data15) {\n                                                        const err23 = {\n                                                            instancePath: instancePath + '/script/' + i0,\n                                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/items/const',\n                                                            keyword: 'const',\n                                                            params: { allowedValue: 'copy' },\n                                                            message: 'must be equal to constant',\n                                                        };\n                                                        if (vErrors === null) {\n                                                            vErrors = [err23];\n                                                        }\n                                                        else {\n                                                            vErrors.push(err23);\n                                                        }\n                                                        errors++;\n                                                    }\n                                                    var valid11 = _errs48 === errors;\n                                                    if (!valid11) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        const err24 = {\n                                            instancePath: instancePath + '/script',\n                                            schemaPath: '#/anyOf/1/properties/script/anyOf/1/type',\n                                            keyword: 'type',\n                                            params: { type: 'array' },\n                                            message: 'must be array',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err24];\n                                        }\n                                        else {\n                                            vErrors.push(err24);\n                                        }\n                                        errors++;\n                                    }\n                                }\n                                var _valid1 = _errs46 === errors;\n                                valid10 = valid10 || _valid1;\n                            }\n                            if (!valid10) {\n                                const err25 = {\n                                    instancePath: instancePath + '/script',\n                                    schemaPath: '#/anyOf/1/properties/script/anyOf',\n                                    keyword: 'anyOf',\n                                    params: {},\n                                    message: 'must match a schema in anyOf',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err25];\n                                }\n                                else {\n                                    vErrors.push(err25);\n                                }\n                                errors++;\n                            }\n                            else {\n                                errors = _errs43;\n                                if (vErrors !== null) {\n                                    if (_errs43) {\n                                        vErrors.length = _errs43;\n                                    }\n                                    else {\n                                        vErrors = null;\n                                    }\n                                }\n                            }\n                            var valid1 = _errs42 === errors;\n                        }\n                        else {\n                            var valid1 = true;\n                        }\n                    }\n                }\n            }\n            else {\n                const err26 = {\n                    instancePath,\n                    schemaPath: '#/anyOf/1/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                };\n                if (vErrors === null) {\n                    vErrors = [err26];\n                }\n                else {\n                    vErrors.push(err26);\n                }\n                errors++;\n            }\n        }\n        var _valid0 = _errs3 === errors;\n        valid0 = valid0 || _valid0;\n    }\n    if (!valid0) {\n        const err27 = {\n            instancePath,\n            schemaPath: '#/anyOf',\n            keyword: 'anyOf',\n            params: {},\n            message: 'must match a schema in anyOf',\n        };\n        if (vErrors === null) {\n            vErrors = [err27];\n        }\n        else {\n            vErrors.push(err27);\n        }\n        errors++;\n        validate28.errors = vErrors;\n        return false;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate28.errors = vErrors;\n    return errors === 0;\n}\nfunction validate27(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'lockingBytecode' ||\n                    key0 === 'token' ||\n                    key0 === 'valueSatoshis')) {\n                    validate27.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.lockingBytecode !== undefined) {\n                    let data0 = data.lockingBytecode;\n                    const _errs2 = errors;\n                    const _errs3 = errors;\n                    let valid1 = false;\n                    const _errs4 = errors;\n                    if (!validate28(data0, {\n                        instancePath: instancePath + '/lockingBytecode',\n                        parentData: data,\n                        parentDataProperty: 'lockingBytecode',\n                        rootData,\n                    })) {\n                        vErrors =\n                            vErrors === null\n                                ? validate28.errors\n                                : vErrors.concat(validate28.errors);\n                        errors = vErrors.length;\n                    }\n                    var _valid0 = _errs4 === errors;\n                    valid1 = valid1 || _valid0;\n                    if (!valid1) {\n                        const _errs5 = errors;\n                        if (errors === _errs5) {\n                            if (Array.isArray(data0)) {\n                                if (data0.length > 1) {\n                                    const err0 = {\n                                        instancePath: instancePath + '/lockingBytecode',\n                                        schemaPath: '#/properties/lockingBytecode/anyOf/1/maxItems',\n                                        keyword: 'maxItems',\n                                        params: { limit: 1 },\n                                        message: 'must NOT have more than 1 items',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err0];\n                                    }\n                                    else {\n                                        vErrors.push(err0);\n                                    }\n                                    errors++;\n                                }\n                                else {\n                                    if (data0.length < 1) {\n                                        const err1 = {\n                                            instancePath: instancePath + '/lockingBytecode',\n                                            schemaPath: '#/properties/lockingBytecode/anyOf/1/minItems',\n                                            keyword: 'minItems',\n                                            params: { limit: 1 },\n                                            message: 'must NOT have fewer than 1 items',\n                                        };\n                                        if (vErrors === null) {\n                                            vErrors = [err1];\n                                        }\n                                        else {\n                                            vErrors.push(err1);\n                                        }\n                                        errors++;\n                                    }\n                                    else {\n                                        var valid2 = true;\n                                        const len0 = data0.length;\n                                        for (let i0 = 0; i0 < len0; i0++) {\n                                            let data1 = data0[i0];\n                                            const _errs7 = errors;\n                                            if (typeof data1 !== 'string') {\n                                                const err2 = {\n                                                    instancePath: instancePath + '/lockingBytecode/' + i0,\n                                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/items/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'string' },\n                                                    message: 'must be string',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err2];\n                                                }\n                                                else {\n                                                    vErrors.push(err2);\n                                                }\n                                                errors++;\n                                            }\n                                            if ('slot' !== data1) {\n                                                const err3 = {\n                                                    instancePath: instancePath + '/lockingBytecode/' + i0,\n                                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/items/const',\n                                                    keyword: 'const',\n                                                    params: { allowedValue: 'slot' },\n                                                    message: 'must be equal to constant',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err3];\n                                                }\n                                                else {\n                                                    vErrors.push(err3);\n                                                }\n                                                errors++;\n                                            }\n                                            var valid2 = _errs7 === errors;\n                                            if (!valid2) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                const err4 = {\n                                    instancePath: instancePath + '/lockingBytecode',\n                                    schemaPath: '#/properties/lockingBytecode/anyOf/1/type',\n                                    keyword: 'type',\n                                    params: { type: 'array' },\n                                    message: 'must be array',\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err4];\n                                }\n                                else {\n                                    vErrors.push(err4);\n                                }\n                                errors++;\n                            }\n                        }\n                        var _valid0 = _errs5 === errors;\n                        valid1 = valid1 || _valid0;\n                    }\n                    if (!valid1) {\n                        const err5 = {\n                            instancePath: instancePath + '/lockingBytecode',\n                            schemaPath: '#/properties/lockingBytecode/anyOf',\n                            keyword: 'anyOf',\n                            params: {},\n                            message: 'must match a schema in anyOf',\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err5];\n                        }\n                        else {\n                            vErrors.push(err5);\n                        }\n                        errors++;\n                        validate27.errors = vErrors;\n                        return false;\n                    }\n                    else {\n                        errors = _errs3;\n                        if (vErrors !== null) {\n                            if (_errs3) {\n                                vErrors.length = _errs3;\n                            }\n                            else {\n                                vErrors = null;\n                            }\n                        }\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.token !== undefined) {\n                        let data2 = data.token;\n                        const _errs9 = errors;\n                        if (errors === _errs9) {\n                            if (data2 && typeof data2 == 'object' && !Array.isArray(data2)) {\n                                const _errs11 = errors;\n                                for (const key1 in data2) {\n                                    if (!(key1 === 'amount' ||\n                                        key1 === 'category' ||\n                                        key1 === 'nft')) {\n                                        validate27.errors = [\n                                            {\n                                                instancePath: instancePath + '/token',\n                                                schemaPath: '#/properties/token/additionalProperties',\n                                                keyword: 'additionalProperties',\n                                                params: { additionalProperty: key1 },\n                                                message: 'must NOT have additional properties',\n                                            },\n                                        ];\n                                        return false;\n                                        break;\n                                    }\n                                }\n                                if (_errs11 === errors) {\n                                    if (data2.amount !== undefined) {\n                                        let data3 = data2.amount;\n                                        const _errs12 = errors;\n                                        if (!(typeof data3 == 'number' && isFinite(data3)) &&\n                                            typeof data3 !== 'string') {\n                                            validate27.errors = [\n                                                {\n                                                    instancePath: instancePath + '/token/amount',\n                                                    schemaPath: '#/properties/token/properties/amount/type',\n                                                    keyword: 'type',\n                                                    params: {\n                                                        type: schema32.properties.token.properties.amount\n                                                            .type,\n                                                    },\n                                                    message: 'must be number,string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid3 = _errs12 === errors;\n                                    }\n                                    else {\n                                        var valid3 = true;\n                                    }\n                                    if (valid3) {\n                                        if (data2.category !== undefined) {\n                                            const _errs14 = errors;\n                                            if (typeof data2.category !== 'string') {\n                                                validate27.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/token/category',\n                                                        schemaPath: '#/properties/token/properties/category/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid3 = _errs14 === errors;\n                                        }\n                                        else {\n                                            var valid3 = true;\n                                        }\n                                        if (valid3) {\n                                            if (data2.nft !== undefined) {\n                                                let data5 = data2.nft;\n                                                const _errs16 = errors;\n                                                if (errors === _errs16) {\n                                                    if (data5 &&\n                                                        typeof data5 == 'object' &&\n                                                        !Array.isArray(data5)) {\n                                                        const _errs18 = errors;\n                                                        for (const key2 in data5) {\n                                                            if (!(key2 === 'capability' || key2 === 'commitment')) {\n                                                                validate27.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/token/nft',\n                                                                        schemaPath: '#/properties/token/properties/nft/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key2 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs18 === errors) {\n                                                            if (data5.capability !== undefined) {\n                                                                let data6 = data5.capability;\n                                                                const _errs19 = errors;\n                                                                if (typeof data6 !== 'string') {\n                                                                    validate27.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'string' },\n                                                                            message: 'must be string',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                if (!(data6 === 'minting' ||\n                                                                    data6 === 'mutable' ||\n                                                                    data6 === 'none')) {\n                                                                    validate27.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/enum',\n                                                                            keyword: 'enum',\n                                                                            params: {\n                                                                                allowedValues: schema32.properties.token.properties\n                                                                                    .nft.properties.capability.enum,\n                                                                            },\n                                                                            message: 'must be equal to one of the allowed values',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid4 = _errs19 === errors;\n                                                            }\n                                                            else {\n                                                                var valid4 = true;\n                                                            }\n                                                            if (valid4) {\n                                                                if (data5.commitment !== undefined) {\n                                                                    const _errs21 = errors;\n                                                                    if (typeof data5.commitment !== 'string') {\n                                                                        validate27.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/token/nft/commitment',\n                                                                                schemaPath: '#/properties/token/properties/nft/properties/commitment/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid4 = _errs21 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid4 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate27.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/token/nft',\n                                                                schemaPath: '#/properties/token/properties/nft/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid3 = _errs16 === errors;\n                                            }\n                                            else {\n                                                var valid3 = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                validate27.errors = [\n                                    {\n                                        instancePath: instancePath + '/token',\n                                        schemaPath: '#/properties/token/type',\n                                        keyword: 'type',\n                                        params: { type: 'object' },\n                                        message: 'must be object',\n                                    },\n                                ];\n                                return false;\n                            }\n                        }\n                        var valid0 = _errs9 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.valueSatoshis !== undefined) {\n                            let data8 = data.valueSatoshis;\n                            const _errs23 = errors;\n                            if (!(typeof data8 == 'number' && isFinite(data8)) &&\n                                typeof data8 !== 'string') {\n                                validate27.errors = [\n                                    {\n                                        instancePath: instancePath + '/valueSatoshis',\n                                        schemaPath: '#/properties/valueSatoshis/type',\n                                        keyword: 'type',\n                                        params: { type: schema32.properties.valueSatoshis.type },\n                                        message: 'must be number,string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs23 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate27.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate27.errors = vErrors;\n    return errors === 0;\n}\nconst schema35 = {\n    additionalProperties: false,\n    description: 'An example input used to define a scenario for a wallet template.',\n    properties: {\n        outpointIndex: {\n            description: 'The index of the output in the transaction from which this input is spent.\\n\\nIf undefined, this defaults to the same index as the input itself (so that by default, every outpoint in the produced transaction is different, even if an empty `outpointTransactionHash` is used for each transaction).',\n            type: 'number',\n        },\n        outpointTransactionHash: {\n            description: 'A 32-byte, hexadecimal-encoded hash of the transaction from which this input is spent in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000001`\\n\\nA.K.A. Outpoint `Transaction ID`',\n            type: 'string',\n        },\n        sequenceNumber: {\n            description: 'The positive, 32-bit unsigned integer used as the \"sequence number\" for this input.\\n\\nIf undefined, this defaults to `0`.',\n            type: 'number',\n        },\n        unlockingBytecode: {\n            anyOf: [\n                { $ref: '#/definitions/WalletTemplateScenarioBytecode' },\n                {\n                    items: { const: 'slot', type: 'string' },\n                    maxItems: 1,\n                    minItems: 1,\n                    type: 'array',\n                },\n            ],\n            description: 'The `unlockingBytecode` value of this input for this scenario. This must be either `[\"slot\"]`, indicating that this input contains the `unlockingBytecode` under test by the scenario, or an `WalletTemplateScenarioBytecode`.\\n\\nFor a scenario to be valid, `unlockingBytecode` must be `[\"slot\"]` for exactly one input in the scenario.\\n\\nDefaults to `[\"slot\"]`.',\n        },\n    },\n    type: 'object',\n};\nfunction validate31(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'outpointIndex' ||\n                    key0 === 'outpointTransactionHash' ||\n                    key0 === 'sequenceNumber' ||\n                    key0 === 'unlockingBytecode')) {\n                    validate31.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.outpointIndex !== undefined) {\n                    let data0 = data.outpointIndex;\n                    const _errs2 = errors;\n                    if (!(typeof data0 == 'number' && isFinite(data0))) {\n                        validate31.errors = [\n                            {\n                                instancePath: instancePath + '/outpointIndex',\n                                schemaPath: '#/properties/outpointIndex/type',\n                                keyword: 'type',\n                                params: { type: 'number' },\n                                message: 'must be number',\n                            },\n                        ];\n                        return false;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.outpointTransactionHash !== undefined) {\n                        const _errs4 = errors;\n                        if (typeof data.outpointTransactionHash !== 'string') {\n                            validate31.errors = [\n                                {\n                                    instancePath: instancePath + '/outpointTransactionHash',\n                                    schemaPath: '#/properties/outpointTransactionHash/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs4 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.sequenceNumber !== undefined) {\n                            let data2 = data.sequenceNumber;\n                            const _errs6 = errors;\n                            if (!(typeof data2 == 'number' && isFinite(data2))) {\n                                validate31.errors = [\n                                    {\n                                        instancePath: instancePath + '/sequenceNumber',\n                                        schemaPath: '#/properties/sequenceNumber/type',\n                                        keyword: 'type',\n                                        params: { type: 'number' },\n                                        message: 'must be number',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs6 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.unlockingBytecode !== undefined) {\n                                let data3 = data.unlockingBytecode;\n                                const _errs8 = errors;\n                                const _errs9 = errors;\n                                let valid1 = false;\n                                const _errs10 = errors;\n                                if (!validate28(data3, {\n                                    instancePath: instancePath + '/unlockingBytecode',\n                                    parentData: data,\n                                    parentDataProperty: 'unlockingBytecode',\n                                    rootData,\n                                })) {\n                                    vErrors =\n                                        vErrors === null\n                                            ? validate28.errors\n                                            : vErrors.concat(validate28.errors);\n                                    errors = vErrors.length;\n                                }\n                                var _valid0 = _errs10 === errors;\n                                valid1 = valid1 || _valid0;\n                                if (!valid1) {\n                                    const _errs11 = errors;\n                                    if (errors === _errs11) {\n                                        if (Array.isArray(data3)) {\n                                            if (data3.length > 1) {\n                                                const err0 = {\n                                                    instancePath: instancePath + '/unlockingBytecode',\n                                                    schemaPath: '#/properties/unlockingBytecode/anyOf/1/maxItems',\n                                                    keyword: 'maxItems',\n                                                    params: { limit: 1 },\n                                                    message: 'must NOT have more than 1 items',\n                                                };\n                                                if (vErrors === null) {\n                                                    vErrors = [err0];\n                                                }\n                                                else {\n                                                    vErrors.push(err0);\n                                                }\n                                                errors++;\n                                            }\n                                            else {\n                                                if (data3.length < 1) {\n                                                    const err1 = {\n                                                        instancePath: instancePath + '/unlockingBytecode',\n                                                        schemaPath: '#/properties/unlockingBytecode/anyOf/1/minItems',\n                                                        keyword: 'minItems',\n                                                        params: { limit: 1 },\n                                                        message: 'must NOT have fewer than 1 items',\n                                                    };\n                                                    if (vErrors === null) {\n                                                        vErrors = [err1];\n                                                    }\n                                                    else {\n                                                        vErrors.push(err1);\n                                                    }\n                                                    errors++;\n                                                }\n                                                else {\n                                                    var valid2 = true;\n                                                    const len0 = data3.length;\n                                                    for (let i0 = 0; i0 < len0; i0++) {\n                                                        let data4 = data3[i0];\n                                                        const _errs13 = errors;\n                                                        if (typeof data4 !== 'string') {\n                                                            const err2 = {\n                                                                instancePath: instancePath + '/unlockingBytecode/' + i0,\n                                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/items/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'string' },\n                                                                message: 'must be string',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err2];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err2);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        if ('slot' !== data4) {\n                                                            const err3 = {\n                                                                instancePath: instancePath + '/unlockingBytecode/' + i0,\n                                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/items/const',\n                                                                keyword: 'const',\n                                                                params: { allowedValue: 'slot' },\n                                                                message: 'must be equal to constant',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err3];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err3);\n                                                            }\n                                                            errors++;\n                                                        }\n                                                        var valid2 = _errs13 === errors;\n                                                        if (!valid2) {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            const err4 = {\n                                                instancePath: instancePath + '/unlockingBytecode',\n                                                schemaPath: '#/properties/unlockingBytecode/anyOf/1/type',\n                                                keyword: 'type',\n                                                params: { type: 'array' },\n                                                message: 'must be array',\n                                            };\n                                            if (vErrors === null) {\n                                                vErrors = [err4];\n                                            }\n                                            else {\n                                                vErrors.push(err4);\n                                            }\n                                            errors++;\n                                        }\n                                    }\n                                    var _valid0 = _errs11 === errors;\n                                    valid1 = valid1 || _valid0;\n                                }\n                                if (!valid1) {\n                                    const err5 = {\n                                        instancePath: instancePath + '/unlockingBytecode',\n                                        schemaPath: '#/properties/unlockingBytecode/anyOf',\n                                        keyword: 'anyOf',\n                                        params: {},\n                                        message: 'must match a schema in anyOf',\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err5];\n                                    }\n                                    else {\n                                        vErrors.push(err5);\n                                    }\n                                    errors++;\n                                    validate31.errors = vErrors;\n                                    return false;\n                                }\n                                else {\n                                    errors = _errs9;\n                                    if (vErrors !== null) {\n                                        if (_errs9) {\n                                            vErrors.length = _errs9;\n                                        }\n                                        else {\n                                            vErrors = null;\n                                        }\n                                    }\n                                }\n                                var valid0 = _errs8 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate31.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate31.errors = vErrors;\n    return errors === 0;\n}\nconst schema36 = {\n    additionalProperties: false,\n    description: 'An example output used to define a scenario for a wallet template.',\n    properties: {\n        lockingBytecode: {\n            $ref: '#/definitions/WalletTemplateScenarioBytecode',\n            description: 'The locking bytecode used to encumber this output.\\n\\n`lockingBytecode` values may be provided as a hexadecimal-encoded string or as an object describing the required compilation. If undefined, defaults to  `{}`, which uses the default values for `script` and `overrides`, respectively.\\n\\nOnly source outputs may specify a `lockingBytecode` of `[\"slot\"]`; this identifies the source output in which the locking script under test will be placed. (To be valid, every scenario\\'s `sourceOutputs` property must have exactly one source output slot and one input slot at the same index.)',\n        },\n        token: {\n            additionalProperties: false,\n            description: 'The CashToken contents of this output. This property is only defined if the output contains one or more tokens. For details, see `CHIP-2022-02-CashTokens`.',\n            properties: {\n                amount: {\n                    description: 'The number of fungible tokens (of `category`) held in this output.\\n\\nBecause `Number.MAX_SAFE_INTEGER` (`9007199254740991`) is less than the maximum token amount (`9223372036854775807`), this value may also be provided as a string, e.g. `\"9223372036854775807\"`.\\n\\nIf undefined, this defaults to: `0`.',\n                    type: ['number', 'string'],\n                },\n                category: {\n                    description: 'The 32-byte, hexadecimal-encoded token category ID to which the token(s) in this output belong in big-endian byte order. This is the byte order typically seen in block explorers and user interfaces (as opposed to little-endian byte order, which is used in standard P2P network messages).\\n\\nIf undefined, this defaults to the value: `0000000000000000000000000000000000000000000000000000000000000002`',\n                    type: 'string',\n                },\n                nft: {\n                    additionalProperties: false,\n                    description: 'If present, the non-fungible token (NFT) held by this output. If the output does not include a non-fungible token, `undefined`.',\n                    properties: {\n                        capability: {\n                            description: 'The capability of this non-fungible token, must be either `minting`, `mutable`, or `none`.\\n\\nIf undefined, this defaults to: `none`.',\n                            enum: ['minting', 'mutable', 'none'],\n                            type: 'string',\n                        },\n                        commitment: {\n                            description: 'The hex-encoded commitment contents included in the non-fungible token held in this output.\\n\\nIf undefined, this defaults to: `\"\"` (a zero-length commitment).',\n                            type: 'string',\n                        },\n                    },\n                    type: 'object',\n                },\n            },\n            type: 'object',\n        },\n        valueSatoshis: {\n            description: 'The value of the output in satoshis, the smallest unit of bitcoin.\\n\\nIn a valid transaction, this is a positive integer, from `0` to the maximum number of satoshis available to the transaction.\\n\\nThe maximum number of satoshis in existence is about 1/4 of `Number.MAX_SAFE_INTEGER` (`9007199254740991`), so typically, this value is defined using a `number`. However, this value may also be defined using a 16-character, hexadecimal-encoded `string`, to allow for the full range of the 64-bit unsigned, little-endian integer used to encode `valueSatoshis` in the encoded output format, e.g. `\"ffffffffffffffff\"`. This is useful for representing scenarios where intentionally excessive values are provided (to ensure an otherwise properly-signed transaction can never be included in the blockchain), e.g. transaction size estimations or off-chain Bitauth signatures.\\n\\nIf undefined, this defaults to: `0`.',\n            type: ['number', 'string'],\n        },\n    },\n    type: 'object',\n};\nfunction validate34(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'lockingBytecode' ||\n                    key0 === 'token' ||\n                    key0 === 'valueSatoshis')) {\n                    validate34.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.lockingBytecode !== undefined) {\n                    const _errs2 = errors;\n                    if (!validate28(data.lockingBytecode, {\n                        instancePath: instancePath + '/lockingBytecode',\n                        parentData: data,\n                        parentDataProperty: 'lockingBytecode',\n                        rootData,\n                    })) {\n                        vErrors =\n                            vErrors === null\n                                ? validate28.errors\n                                : vErrors.concat(validate28.errors);\n                        errors = vErrors.length;\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.token !== undefined) {\n                        let data1 = data.token;\n                        const _errs3 = errors;\n                        if (errors === _errs3) {\n                            if (data1 && typeof data1 == 'object' && !Array.isArray(data1)) {\n                                const _errs5 = errors;\n                                for (const key1 in data1) {\n                                    if (!(key1 === 'amount' ||\n                                        key1 === 'category' ||\n                                        key1 === 'nft')) {\n                                        validate34.errors = [\n                                            {\n                                                instancePath: instancePath + '/token',\n                                                schemaPath: '#/properties/token/additionalProperties',\n                                                keyword: 'additionalProperties',\n                                                params: { additionalProperty: key1 },\n                                                message: 'must NOT have additional properties',\n                                            },\n                                        ];\n                                        return false;\n                                        break;\n                                    }\n                                }\n                                if (_errs5 === errors) {\n                                    if (data1.amount !== undefined) {\n                                        let data2 = data1.amount;\n                                        const _errs6 = errors;\n                                        if (!(typeof data2 == 'number' && isFinite(data2)) &&\n                                            typeof data2 !== 'string') {\n                                            validate34.errors = [\n                                                {\n                                                    instancePath: instancePath + '/token/amount',\n                                                    schemaPath: '#/properties/token/properties/amount/type',\n                                                    keyword: 'type',\n                                                    params: {\n                                                        type: schema36.properties.token.properties.amount\n                                                            .type,\n                                                    },\n                                                    message: 'must be number,string',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid1 = _errs6 === errors;\n                                    }\n                                    else {\n                                        var valid1 = true;\n                                    }\n                                    if (valid1) {\n                                        if (data1.category !== undefined) {\n                                            const _errs8 = errors;\n                                            if (typeof data1.category !== 'string') {\n                                                validate34.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/token/category',\n                                                        schemaPath: '#/properties/token/properties/category/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'string' },\n                                                        message: 'must be string',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid1 = _errs8 === errors;\n                                        }\n                                        else {\n                                            var valid1 = true;\n                                        }\n                                        if (valid1) {\n                                            if (data1.nft !== undefined) {\n                                                let data4 = data1.nft;\n                                                const _errs10 = errors;\n                                                if (errors === _errs10) {\n                                                    if (data4 &&\n                                                        typeof data4 == 'object' &&\n                                                        !Array.isArray(data4)) {\n                                                        const _errs12 = errors;\n                                                        for (const key2 in data4) {\n                                                            if (!(key2 === 'capability' || key2 === 'commitment')) {\n                                                                validate34.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/token/nft',\n                                                                        schemaPath: '#/properties/token/properties/nft/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key2 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs12 === errors) {\n                                                            if (data4.capability !== undefined) {\n                                                                let data5 = data4.capability;\n                                                                const _errs13 = errors;\n                                                                if (typeof data5 !== 'string') {\n                                                                    validate34.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'string' },\n                                                                            message: 'must be string',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                if (!(data5 === 'minting' ||\n                                                                    data5 === 'mutable' ||\n                                                                    data5 === 'none')) {\n                                                                    validate34.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/token/nft/capability',\n                                                                            schemaPath: '#/properties/token/properties/nft/properties/capability/enum',\n                                                                            keyword: 'enum',\n                                                                            params: {\n                                                                                allowedValues: schema36.properties.token.properties\n                                                                                    .nft.properties.capability.enum,\n                                                                            },\n                                                                            message: 'must be equal to one of the allowed values',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid2 = _errs13 === errors;\n                                                            }\n                                                            else {\n                                                                var valid2 = true;\n                                                            }\n                                                            if (valid2) {\n                                                                if (data4.commitment !== undefined) {\n                                                                    const _errs15 = errors;\n                                                                    if (typeof data4.commitment !== 'string') {\n                                                                        validate34.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/token/nft/commitment',\n                                                                                schemaPath: '#/properties/token/properties/nft/properties/commitment/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid2 = _errs15 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid2 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate34.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/token/nft',\n                                                                schemaPath: '#/properties/token/properties/nft/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid1 = _errs10 === errors;\n                                            }\n                                            else {\n                                                var valid1 = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                validate34.errors = [\n                                    {\n                                        instancePath: instancePath + '/token',\n                                        schemaPath: '#/properties/token/type',\n                                        keyword: 'type',\n                                        params: { type: 'object' },\n                                        message: 'must be object',\n                                    },\n                                ];\n                                return false;\n                            }\n                        }\n                        var valid0 = _errs3 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.valueSatoshis !== undefined) {\n                            let data7 = data.valueSatoshis;\n                            const _errs17 = errors;\n                            if (!(typeof data7 == 'number' && isFinite(data7)) &&\n                                typeof data7 !== 'string') {\n                                validate34.errors = [\n                                    {\n                                        instancePath: instancePath + '/valueSatoshis',\n                                        schemaPath: '#/properties/valueSatoshis/type',\n                                        keyword: 'type',\n                                        params: { type: schema36.properties.valueSatoshis.type },\n                                        message: 'must be number,string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs17 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate34.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate34.errors = vErrors;\n    return errors === 0;\n}\nfunction validate26(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            const _errs1 = errors;\n            for (const key0 in data) {\n                if (!(key0 === 'data' ||\n                    key0 === 'description' ||\n                    key0 === 'extends' ||\n                    key0 === 'name' ||\n                    key0 === 'sourceOutputs' ||\n                    key0 === 'transaction')) {\n                    validate26.errors = [\n                        {\n                            instancePath,\n                            schemaPath: '#/additionalProperties',\n                            keyword: 'additionalProperties',\n                            params: { additionalProperty: key0 },\n                            message: 'must NOT have additional properties',\n                        },\n                    ];\n                    return false;\n                    break;\n                }\n            }\n            if (_errs1 === errors) {\n                if (data.data !== undefined) {\n                    let data0 = data.data;\n                    const _errs2 = errors;\n                    const _errs3 = errors;\n                    if (errors === _errs3) {\n                        if (data0 && typeof data0 == 'object' && !Array.isArray(data0)) {\n                            const _errs5 = errors;\n                            for (const key1 in data0) {\n                                if (!(key1 === 'bytecode' ||\n                                    key1 === 'currentBlockHeight' ||\n                                    key1 === 'currentBlockTime' ||\n                                    key1 === 'hdKeys' ||\n                                    key1 === 'keys')) {\n                                    validate26.errors = [\n                                        {\n                                            instancePath: instancePath + '/data',\n                                            schemaPath: '#/definitions/WalletTemplateScenarioData/additionalProperties',\n                                            keyword: 'additionalProperties',\n                                            params: { additionalProperty: key1 },\n                                            message: 'must NOT have additional properties',\n                                        },\n                                    ];\n                                    return false;\n                                    break;\n                                }\n                            }\n                            if (_errs5 === errors) {\n                                if (data0.bytecode !== undefined) {\n                                    let data1 = data0.bytecode;\n                                    const _errs6 = errors;\n                                    if (errors === _errs6) {\n                                        if (data1 &&\n                                            typeof data1 == 'object' &&\n                                            !Array.isArray(data1)) {\n                                            for (const key2 in data1) {\n                                                const _errs9 = errors;\n                                                if (typeof data1[key2] !== 'string') {\n                                                    validate26.errors = [\n                                                        {\n                                                            instancePath: instancePath +\n                                                                '/data/bytecode/' +\n                                                                key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/bytecode/additionalProperties/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'string' },\n                                                            message: 'must be string',\n                                                        },\n                                                    ];\n                                                    return false;\n                                                }\n                                                var valid3 = _errs9 === errors;\n                                                if (!valid3) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/data/bytecode',\n                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/bytecode/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid2 = _errs6 === errors;\n                                }\n                                else {\n                                    var valid2 = true;\n                                }\n                                if (valid2) {\n                                    if (data0.currentBlockHeight !== undefined) {\n                                        let data3 = data0.currentBlockHeight;\n                                        const _errs11 = errors;\n                                        if (!(typeof data3 == 'number' && isFinite(data3))) {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/data/currentBlockHeight',\n                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/currentBlockHeight/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'number' },\n                                                    message: 'must be number',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                        var valid2 = _errs11 === errors;\n                                    }\n                                    else {\n                                        var valid2 = true;\n                                    }\n                                    if (valid2) {\n                                        if (data0.currentBlockTime !== undefined) {\n                                            let data4 = data0.currentBlockTime;\n                                            const _errs13 = errors;\n                                            if (!(typeof data4 == 'number' && isFinite(data4))) {\n                                                validate26.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/data/currentBlockTime',\n                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/currentBlockTime/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'number' },\n                                                        message: 'must be number',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                            var valid2 = _errs13 === errors;\n                                        }\n                                        else {\n                                            var valid2 = true;\n                                        }\n                                        if (valid2) {\n                                            if (data0.hdKeys !== undefined) {\n                                                let data5 = data0.hdKeys;\n                                                const _errs15 = errors;\n                                                if (errors === _errs15) {\n                                                    if (data5 &&\n                                                        typeof data5 == 'object' &&\n                                                        !Array.isArray(data5)) {\n                                                        const _errs17 = errors;\n                                                        for (const key3 in data5) {\n                                                            if (!(key3 === 'addressIndex' ||\n                                                                key3 === 'hdPrivateKeys' ||\n                                                                key3 === 'hdPublicKeys')) {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/data/hdKeys',\n                                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/additionalProperties',\n                                                                        keyword: 'additionalProperties',\n                                                                        params: { additionalProperty: key3 },\n                                                                        message: 'must NOT have additional properties',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                                break;\n                                                            }\n                                                        }\n                                                        if (_errs17 === errors) {\n                                                            if (data5.addressIndex !== undefined) {\n                                                                let data6 = data5.addressIndex;\n                                                                const _errs18 = errors;\n                                                                if (!(typeof data6 == 'number' && isFinite(data6))) {\n                                                                    validate26.errors = [\n                                                                        {\n                                                                            instancePath: instancePath +\n                                                                                '/data/hdKeys/addressIndex',\n                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/addressIndex/type',\n                                                                            keyword: 'type',\n                                                                            params: { type: 'number' },\n                                                                            message: 'must be number',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                }\n                                                                var valid4 = _errs18 === errors;\n                                                            }\n                                                            else {\n                                                                var valid4 = true;\n                                                            }\n                                                            if (valid4) {\n                                                                if (data5.hdPrivateKeys !== undefined) {\n                                                                    let data7 = data5.hdPrivateKeys;\n                                                                    const _errs20 = errors;\n                                                                    if (errors === _errs20) {\n                                                                        if (data7 &&\n                                                                            typeof data7 == 'object' &&\n                                                                            !Array.isArray(data7)) {\n                                                                            for (const key4 in data7) {\n                                                                                const _errs23 = errors;\n                                                                                if (typeof data7[key4] !== 'string') {\n                                                                                    validate26.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/data/hdKeys/hdPrivateKeys/' +\n                                                                                                key4\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid5 = _errs23 === errors;\n                                                                                if (!valid5) {\n                                                                                    break;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            validate26.errors = [\n                                                                                {\n                                                                                    instancePath: instancePath +\n                                                                                        '/data/hdKeys/hdPrivateKeys',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPrivateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                },\n                                                                            ];\n                                                                            return false;\n                                                                        }\n                                                                    }\n                                                                    var valid4 = _errs20 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid4 = true;\n                                                                }\n                                                                if (valid4) {\n                                                                    if (data5.hdPublicKeys !== undefined) {\n                                                                        let data9 = data5.hdPublicKeys;\n                                                                        const _errs25 = errors;\n                                                                        if (errors === _errs25) {\n                                                                            if (data9 &&\n                                                                                typeof data9 == 'object' &&\n                                                                                !Array.isArray(data9)) {\n                                                                                for (const key5 in data9) {\n                                                                                    const _errs28 = errors;\n                                                                                    if (typeof data9[key5] !== 'string') {\n                                                                                        validate26.errors = [\n                                                                                            {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/data/hdKeys/hdPublicKeys/' +\n                                                                                                    key5\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1'),\n                                                                                                schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/additionalProperties/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            },\n                                                                                        ];\n                                                                                        return false;\n                                                                                    }\n                                                                                    var valid6 = _errs28 === errors;\n                                                                                    if (!valid6) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                validate26.errors = [\n                                                                                    {\n                                                                                        instancePath: instancePath +\n                                                                                            '/data/hdKeys/hdPublicKeys',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/properties/hdPublicKeys/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'object' },\n                                                                                        message: 'must be object',\n                                                                                    },\n                                                                                ];\n                                                                                return false;\n                                                                            }\n                                                                        }\n                                                                        var valid4 = _errs25 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid4 = true;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate26.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/data/hdKeys',\n                                                                schemaPath: '#/definitions/WalletTemplateScenarioData/properties/hdKeys/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid2 = _errs15 === errors;\n                                            }\n                                            else {\n                                                var valid2 = true;\n                                            }\n                                            if (valid2) {\n                                                if (data0.keys !== undefined) {\n                                                    let data11 = data0.keys;\n                                                    const _errs30 = errors;\n                                                    if (errors === _errs30) {\n                                                        if (data11 &&\n                                                            typeof data11 == 'object' &&\n                                                            !Array.isArray(data11)) {\n                                                            const _errs32 = errors;\n                                                            for (const key6 in data11) {\n                                                                if (!(key6 === 'privateKeys')) {\n                                                                    validate26.errors = [\n                                                                        {\n                                                                            instancePath: instancePath + '/data/keys',\n                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key6 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs32 === errors) {\n                                                                if (data11.privateKeys !== undefined) {\n                                                                    let data12 = data11.privateKeys;\n                                                                    const _errs33 = errors;\n                                                                    if (errors === _errs33) {\n                                                                        if (data12 &&\n                                                                            typeof data12 == 'object' &&\n                                                                            !Array.isArray(data12)) {\n                                                                            for (const key7 in data12) {\n                                                                                const _errs36 = errors;\n                                                                                if (typeof data12[key7] !== 'string') {\n                                                                                    validate26.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/data/keys/privateKeys/' +\n                                                                                                key7\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/properties/privateKeys/additionalProperties/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid8 = _errs36 === errors;\n                                                                                if (!valid8) {\n                                                                                    break;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            validate26.errors = [\n                                                                                {\n                                                                                    instancePath: instancePath +\n                                                                                        '/data/keys/privateKeys',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/properties/privateKeys/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'object' },\n                                                                                    message: 'must be object',\n                                                                                },\n                                                                            ];\n                                                                            return false;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                        else {\n                                                            validate26.errors = [\n                                                                {\n                                                                    instancePath: instancePath + '/data/keys',\n                                                                    schemaPath: '#/definitions/WalletTemplateScenarioData/properties/keys/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                },\n                                                            ];\n                                                            return false;\n                                                        }\n                                                    }\n                                                    var valid2 = _errs30 === errors;\n                                                }\n                                                else {\n                                                    var valid2 = true;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            validate26.errors = [\n                                {\n                                    instancePath: instancePath + '/data',\n                                    schemaPath: '#/definitions/WalletTemplateScenarioData/type',\n                                    keyword: 'type',\n                                    params: { type: 'object' },\n                                    message: 'must be object',\n                                },\n                            ];\n                            return false;\n                        }\n                    }\n                    var valid0 = _errs2 === errors;\n                }\n                else {\n                    var valid0 = true;\n                }\n                if (valid0) {\n                    if (data.description !== undefined) {\n                        const _errs38 = errors;\n                        if (typeof data.description !== 'string') {\n                            validate26.errors = [\n                                {\n                                    instancePath: instancePath + '/description',\n                                    schemaPath: '#/properties/description/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs38 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.extends !== undefined) {\n                            const _errs40 = errors;\n                            if (typeof data.extends !== 'string') {\n                                validate26.errors = [\n                                    {\n                                        instancePath: instancePath + '/extends',\n                                        schemaPath: '#/properties/extends/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs40 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.name !== undefined) {\n                                const _errs42 = errors;\n                                if (typeof data.name !== 'string') {\n                                    validate26.errors = [\n                                        {\n                                            instancePath: instancePath + '/name',\n                                            schemaPath: '#/properties/name/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                                var valid0 = _errs42 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.sourceOutputs !== undefined) {\n                                    let data17 = data.sourceOutputs;\n                                    const _errs44 = errors;\n                                    if (errors === _errs44) {\n                                        if (Array.isArray(data17)) {\n                                            var valid9 = true;\n                                            const len0 = data17.length;\n                                            for (let i0 = 0; i0 < len0; i0++) {\n                                                const _errs46 = errors;\n                                                if (!validate27(data17[i0], {\n                                                    instancePath: instancePath + '/sourceOutputs/' + i0,\n                                                    parentData: data17,\n                                                    parentDataProperty: i0,\n                                                    rootData,\n                                                })) {\n                                                    vErrors =\n                                                        vErrors === null\n                                                            ? validate27.errors\n                                                            : vErrors.concat(validate27.errors);\n                                                    errors = vErrors.length;\n                                                }\n                                                var valid9 = _errs46 === errors;\n                                                if (!valid9) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate26.errors = [\n                                                {\n                                                    instancePath: instancePath + '/sourceOutputs',\n                                                    schemaPath: '#/properties/sourceOutputs/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'array' },\n                                                    message: 'must be array',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid0 = _errs44 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                                if (valid0) {\n                                    if (data.transaction !== undefined) {\n                                        let data19 = data.transaction;\n                                        const _errs47 = errors;\n                                        if (errors === _errs47) {\n                                            if (data19 &&\n                                                typeof data19 == 'object' &&\n                                                !Array.isArray(data19)) {\n                                                const _errs49 = errors;\n                                                for (const key8 in data19) {\n                                                    if (!(key8 === 'inputs' ||\n                                                        key8 === 'locktime' ||\n                                                        key8 === 'outputs' ||\n                                                        key8 === 'version')) {\n                                                        validate26.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/transaction',\n                                                                schemaPath: '#/properties/transaction/additionalProperties',\n                                                                keyword: 'additionalProperties',\n                                                                params: { additionalProperty: key8 },\n                                                                message: 'must NOT have additional properties',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                        break;\n                                                    }\n                                                }\n                                                if (_errs49 === errors) {\n                                                    if (data19.inputs !== undefined) {\n                                                        let data20 = data19.inputs;\n                                                        const _errs50 = errors;\n                                                        if (errors === _errs50) {\n                                                            if (Array.isArray(data20)) {\n                                                                var valid11 = true;\n                                                                const len1 = data20.length;\n                                                                for (let i1 = 0; i1 < len1; i1++) {\n                                                                    const _errs52 = errors;\n                                                                    if (!validate31(data20[i1], {\n                                                                        instancePath: instancePath +\n                                                                            '/transaction/inputs/' +\n                                                                            i1,\n                                                                        parentData: data20,\n                                                                        parentDataProperty: i1,\n                                                                        rootData,\n                                                                    })) {\n                                                                        vErrors =\n                                                                            vErrors === null\n                                                                                ? validate31.errors\n                                                                                : vErrors.concat(validate31.errors);\n                                                                        errors = vErrors.length;\n                                                                    }\n                                                                    var valid11 = _errs52 === errors;\n                                                                    if (!valid11) {\n                                                                        break;\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/transaction/inputs',\n                                                                        schemaPath: '#/properties/transaction/properties/inputs/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'array' },\n                                                                        message: 'must be array',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                        }\n                                                        var valid10 = _errs50 === errors;\n                                                    }\n                                                    else {\n                                                        var valid10 = true;\n                                                    }\n                                                    if (valid10) {\n                                                        if (data19.locktime !== undefined) {\n                                                            let data22 = data19.locktime;\n                                                            const _errs53 = errors;\n                                                            if (!(typeof data22 == 'number' && isFinite(data22))) {\n                                                                validate26.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/transaction/locktime',\n                                                                        schemaPath: '#/properties/transaction/properties/locktime/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'number' },\n                                                                        message: 'must be number',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            var valid10 = _errs53 === errors;\n                                                        }\n                                                        else {\n                                                            var valid10 = true;\n                                                        }\n                                                        if (valid10) {\n                                                            if (data19.outputs !== undefined) {\n                                                                let data23 = data19.outputs;\n                                                                const _errs55 = errors;\n                                                                if (errors === _errs55) {\n                                                                    if (Array.isArray(data23)) {\n                                                                        var valid12 = true;\n                                                                        const len2 = data23.length;\n                                                                        for (let i2 = 0; i2 < len2; i2++) {\n                                                                            const _errs57 = errors;\n                                                                            if (!validate34(data23[i2], {\n                                                                                instancePath: instancePath +\n                                                                                    '/transaction/outputs/' +\n                                                                                    i2,\n                                                                                parentData: data23,\n                                                                                parentDataProperty: i2,\n                                                                                rootData,\n                                                                            })) {\n                                                                                vErrors =\n                                                                                    vErrors === null\n                                                                                        ? validate34.errors\n                                                                                        : vErrors.concat(validate34.errors);\n                                                                                errors = vErrors.length;\n                                                                            }\n                                                                            var valid12 = _errs57 === errors;\n                                                                            if (!valid12) {\n                                                                                break;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    else {\n                                                                        validate26.errors = [\n                                                                            {\n                                                                                instancePath: instancePath + '/transaction/outputs',\n                                                                                schemaPath: '#/properties/transaction/properties/outputs/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'array' },\n                                                                                message: 'must be array',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                }\n                                                                var valid10 = _errs55 === errors;\n                                                            }\n                                                            else {\n                                                                var valid10 = true;\n                                                            }\n                                                            if (valid10) {\n                                                                if (data19.version !== undefined) {\n                                                                    let data25 = data19.version;\n                                                                    const _errs58 = errors;\n                                                                    if (!(typeof data25 == 'number' &&\n                                                                        isFinite(data25))) {\n                                                                        validate26.errors = [\n                                                                            {\n                                                                                instancePath: instancePath + '/transaction/version',\n                                                                                schemaPath: '#/properties/transaction/properties/version/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'number' },\n                                                                                message: 'must be number',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid10 = _errs58 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid10 = true;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                validate26.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/transaction',\n                                                        schemaPath: '#/properties/transaction/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'object' },\n                                                        message: 'must be object',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                        }\n                                        var valid0 = _errs47 === errors;\n                                    }\n                                    else {\n                                        var valid0 = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate26.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate26.errors = vErrors;\n    return errors === 0;\n}\nconst schema39 = {\n    additionalProperties: false,\n    properties: {\n        name: {\n            description: 'A single-line, human-readable name for this script (for use in user interfaces).',\n            type: 'string',\n        },\n        pushed: {\n            description: 'If set to `true`, indicates that this script should be wrapped in a push statement for testing.\\n\\nThis is useful for scripts that serve as \"bytecode templates\" – e.g. formatted messages or signature preimages. These scripts are typically not evaluated as bytecode but appear within push statements elsewhere in the template.\\n\\nDefaults to `false`.',\n            type: 'boolean',\n        },\n        script: {\n            description: 'The script definition in CashAssembly.',\n            type: 'string',\n        },\n        tests: {\n            additionalProperties: { $ref: '#/definitions/WalletTemplateScriptTest' },\n            description: 'One or more tests that can be used during development and during template validation to confirm the correctness of this tested script.',\n            type: 'object',\n        },\n    },\n    required: ['script', 'tests'],\n    type: 'object',\n};\nconst schema40 = {\n    additionalProperties: false,\n    properties: {\n        check: {\n            description: 'The script to evaluate after the script being tested. This can be used to check that the tested script leaves the expected results on the stack. For example, if the tested script is expected to leave 3 items of a specific size on the stack, the `check` script could pop each resulting item from the stack and examine it for correctness.\\n\\nIn scenario testing, this script is appended to the script under test, and together they are treated as the locking script. Program evaluation is considered successful if the resulting program state can be verified by the virtual machine (e.g. the resulting stack contains a single `1`, no errors are produced, etc.).',\n            type: 'string',\n        },\n        fails: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that fails program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        invalid: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in a compilation error. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        name: {\n            description: 'A single-line, Title Case, human-readable name for this test (for use in user interfaces).',\n            type: 'string',\n        },\n        passes: {\n            description: 'A list of the scenario identifiers that – when used to compile this test and the script it tests – result in bytecode that passes program verification. The `setup` script is used in place of an unlocking script, and the concatenation of the script under test and the `check` script are used in place of a locking script.\\n\\nThese scenarios can be used to test this script in development and review.',\n            items: { type: 'string' },\n            type: 'array',\n        },\n        setup: {\n            description: 'A script to evaluate before the script being tested. This can be used to push values to the stack that are operated on by the tested script.\\n\\nIn scenario testing, this script is treated as the unlocking script.',\n            type: 'string',\n        },\n    },\n    required: ['check'],\n    type: 'object',\n};\nfunction validate38(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if ((data.script === undefined && (missing0 = 'script')) ||\n                (data.tests === undefined && (missing0 = 'tests'))) {\n                validate38.errors = [\n                    {\n                        instancePath,\n                        schemaPath: '#/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing0 },\n                        message: \"must have required property '\" + missing0 + \"'\",\n                    },\n                ];\n                return false;\n            }\n            else {\n                const _errs1 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === 'name' ||\n                        key0 === 'pushed' ||\n                        key0 === 'script' ||\n                        key0 === 'tests')) {\n                        validate38.errors = [\n                            {\n                                instancePath,\n                                schemaPath: '#/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key0 },\n                                message: 'must NOT have additional properties',\n                            },\n                        ];\n                        return false;\n                        break;\n                    }\n                }\n                if (_errs1 === errors) {\n                    if (data.name !== undefined) {\n                        const _errs2 = errors;\n                        if (typeof data.name !== 'string') {\n                            validate38.errors = [\n                                {\n                                    instancePath: instancePath + '/name',\n                                    schemaPath: '#/properties/name/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs2 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.pushed !== undefined) {\n                            const _errs4 = errors;\n                            if (typeof data.pushed !== 'boolean') {\n                                validate38.errors = [\n                                    {\n                                        instancePath: instancePath + '/pushed',\n                                        schemaPath: '#/properties/pushed/type',\n                                        keyword: 'type',\n                                        params: { type: 'boolean' },\n                                        message: 'must be boolean',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs4 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.script !== undefined) {\n                                const _errs6 = errors;\n                                if (typeof data.script !== 'string') {\n                                    validate38.errors = [\n                                        {\n                                            instancePath: instancePath + '/script',\n                                            schemaPath: '#/properties/script/type',\n                                            keyword: 'type',\n                                            params: { type: 'string' },\n                                            message: 'must be string',\n                                        },\n                                    ];\n                                    return false;\n                                }\n                                var valid0 = _errs6 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.tests !== undefined) {\n                                    let data3 = data.tests;\n                                    const _errs8 = errors;\n                                    if (errors === _errs8) {\n                                        if (data3 &&\n                                            typeof data3 == 'object' &&\n                                            !Array.isArray(data3)) {\n                                            for (const key1 in data3) {\n                                                let data4 = data3[key1];\n                                                const _errs11 = errors;\n                                                const _errs12 = errors;\n                                                if (errors === _errs12) {\n                                                    if (data4 &&\n                                                        typeof data4 == 'object' &&\n                                                        !Array.isArray(data4)) {\n                                                        let missing1;\n                                                        if (data4.check === undefined &&\n                                                            (missing1 = 'check')) {\n                                                            validate38.errors = [\n                                                                {\n                                                                    instancePath: instancePath +\n                                                                        '/tests/' +\n                                                                        key1\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    schemaPath: '#/definitions/WalletTemplateScriptTest/required',\n                                                                    keyword: 'required',\n                                                                    params: { missingProperty: missing1 },\n                                                                    message: \"must have required property '\" +\n                                                                        missing1 +\n                                                                        \"'\",\n                                                                },\n                                                            ];\n                                                            return false;\n                                                        }\n                                                        else {\n                                                            const _errs14 = errors;\n                                                            for (const key2 in data4) {\n                                                                if (!(key2 === 'check' ||\n                                                                    key2 === 'fails' ||\n                                                                    key2 === 'invalid' ||\n                                                                    key2 === 'name' ||\n                                                                    key2 === 'passes' ||\n                                                                    key2 === 'setup')) {\n                                                                    validate38.errors = [\n                                                                        {\n                                                                            instancePath: instancePath +\n                                                                                '/tests/' +\n                                                                                key1\n                                                                                    .replace(/~/g, '~0')\n                                                                                    .replace(/\\//g, '~1'),\n                                                                            schemaPath: '#/definitions/WalletTemplateScriptTest/additionalProperties',\n                                                                            keyword: 'additionalProperties',\n                                                                            params: { additionalProperty: key2 },\n                                                                            message: 'must NOT have additional properties',\n                                                                        },\n                                                                    ];\n                                                                    return false;\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if (_errs14 === errors) {\n                                                                if (data4.check !== undefined) {\n                                                                    const _errs15 = errors;\n                                                                    if (typeof data4.check !== 'string') {\n                                                                        validate38.errors = [\n                                                                            {\n                                                                                instancePath: instancePath +\n                                                                                    '/tests/' +\n                                                                                    key1\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1') +\n                                                                                    '/check',\n                                                                                schemaPath: '#/definitions/WalletTemplateScriptTest/properties/check/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'string' },\n                                                                                message: 'must be string',\n                                                                            },\n                                                                        ];\n                                                                        return false;\n                                                                    }\n                                                                    var valid3 = _errs15 === errors;\n                                                                }\n                                                                else {\n                                                                    var valid3 = true;\n                                                                }\n                                                                if (valid3) {\n                                                                    if (data4.fails !== undefined) {\n                                                                        let data6 = data4.fails;\n                                                                        const _errs17 = errors;\n                                                                        if (errors === _errs17) {\n                                                                            if (Array.isArray(data6)) {\n                                                                                var valid4 = true;\n                                                                                const len0 = data6.length;\n                                                                                for (let i0 = 0; i0 < len0; i0++) {\n                                                                                    const _errs19 = errors;\n                                                                                    if (typeof data6[i0] !== 'string') {\n                                                                                        validate38.errors = [\n                                                                                            {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/tests/' +\n                                                                                                    key1\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/fails/' +\n                                                                                                    i0,\n                                                                                                schemaPath: '#/definitions/WalletTemplateScriptTest/properties/fails/items/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            },\n                                                                                        ];\n                                                                                        return false;\n                                                                                    }\n                                                                                    var valid4 = _errs19 === errors;\n                                                                                    if (!valid4) {\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            else {\n                                                                                validate38.errors = [\n                                                                                    {\n                                                                                        instancePath: instancePath +\n                                                                                            '/tests/' +\n                                                                                            key1\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/fails',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScriptTest/properties/fails/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'array' },\n                                                                                        message: 'must be array',\n                                                                                    },\n                                                                                ];\n                                                                                return false;\n                                                                            }\n                                                                        }\n                                                                        var valid3 = _errs17 === errors;\n                                                                    }\n                                                                    else {\n                                                                        var valid3 = true;\n                                                                    }\n                                                                    if (valid3) {\n                                                                        if (data4.invalid !== undefined) {\n                                                                            let data8 = data4.invalid;\n                                                                            const _errs21 = errors;\n                                                                            if (errors === _errs21) {\n                                                                                if (Array.isArray(data8)) {\n                                                                                    var valid5 = true;\n                                                                                    const len1 = data8.length;\n                                                                                    for (let i1 = 0; i1 < len1; i1++) {\n                                                                                        const _errs23 = errors;\n                                                                                        if (typeof data8[i1] !== 'string') {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/invalid/' +\n                                                                                                        i1,\n                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptTest/properties/invalid/items/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                        var valid5 = _errs23 === errors;\n                                                                                        if (!valid5) {\n                                                                                            break;\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                                else {\n                                                                                    validate38.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/tests/' +\n                                                                                                key1\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/invalid',\n                                                                                            schemaPath: '#/definitions/WalletTemplateScriptTest/properties/invalid/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'array' },\n                                                                                            message: 'must be array',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                            }\n                                                                            var valid3 = _errs21 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid3 = true;\n                                                                        }\n                                                                        if (valid3) {\n                                                                            if (data4.name !== undefined) {\n                                                                                const _errs25 = errors;\n                                                                                if (typeof data4.name !== 'string') {\n                                                                                    validate38.errors = [\n                                                                                        {\n                                                                                            instancePath: instancePath +\n                                                                                                '/tests/' +\n                                                                                                key1\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/name',\n                                                                                            schemaPath: '#/definitions/WalletTemplateScriptTest/properties/name/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        },\n                                                                                    ];\n                                                                                    return false;\n                                                                                }\n                                                                                var valid3 = _errs25 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid3 = true;\n                                                                            }\n                                                                            if (valid3) {\n                                                                                if (data4.passes !== undefined) {\n                                                                                    let data11 = data4.passes;\n                                                                                    const _errs27 = errors;\n                                                                                    if (errors === _errs27) {\n                                                                                        if (Array.isArray(data11)) {\n                                                                                            var valid6 = true;\n                                                                                            const len2 = data11.length;\n                                                                                            for (let i2 = 0; i2 < len2; i2++) {\n                                                                                                const _errs29 = errors;\n                                                                                                if (typeof data11[i2] !== 'string') {\n                                                                                                    validate38.errors = [\n                                                                                                        {\n                                                                                                            instancePath: instancePath +\n                                                                                                                '/tests/' +\n                                                                                                                key1\n                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                '/passes/' +\n                                                                                                                i2,\n                                                                                                            schemaPath: '#/definitions/WalletTemplateScriptTest/properties/passes/items/type',\n                                                                                                            keyword: 'type',\n                                                                                                            params: {\n                                                                                                                type: 'string',\n                                                                                                            },\n                                                                                                            message: 'must be string',\n                                                                                                        },\n                                                                                                    ];\n                                                                                                    return false;\n                                                                                                }\n                                                                                                var valid6 = _errs29 === errors;\n                                                                                                if (!valid6) {\n                                                                                                    break;\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                        else {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/passes',\n                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptTest/properties/passes/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'array' },\n                                                                                                    message: 'must be array',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                    }\n                                                                                    var valid3 = _errs27 === errors;\n                                                                                }\n                                                                                else {\n                                                                                    var valid3 = true;\n                                                                                }\n                                                                                if (valid3) {\n                                                                                    if (data4.setup !== undefined) {\n                                                                                        const _errs31 = errors;\n                                                                                        if (typeof data4.setup !== 'string') {\n                                                                                            validate38.errors = [\n                                                                                                {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/tests/' +\n                                                                                                        key1\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/setup',\n                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptTest/properties/setup/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                },\n                                                                                            ];\n                                                                                            return false;\n                                                                                        }\n                                                                                        var valid3 = _errs31 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid3 = true;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate38.errors = [\n                                                            {\n                                                                instancePath: instancePath +\n                                                                    '/tests/' +\n                                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                                schemaPath: '#/definitions/WalletTemplateScriptTest/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'object' },\n                                                                message: 'must be object',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid1 = _errs11 === errors;\n                                                if (!valid1) {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            validate38.errors = [\n                                                {\n                                                    instancePath: instancePath + '/tests',\n                                                    schemaPath: '#/properties/tests/type',\n                                                    keyword: 'type',\n                                                    params: { type: 'object' },\n                                                    message: 'must be object',\n                                                },\n                                            ];\n                                            return false;\n                                        }\n                                    }\n                                    var valid0 = _errs8 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate38.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate38.errors = vErrors;\n    return errors === 0;\n}\nconst func4 = Object.prototype.hasOwnProperty;\nfunction validate21(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (errors === 0) {\n        if (data && typeof data == 'object' && !Array.isArray(data)) {\n            let missing0;\n            if ((data.entities === undefined && (missing0 = 'entities')) ||\n                (data.scripts === undefined && (missing0 = 'scripts')) ||\n                (data.supported === undefined && (missing0 = 'supported'))) {\n                validate21.errors = [\n                    {\n                        instancePath,\n                        schemaPath: '#/required',\n                        keyword: 'required',\n                        params: { missingProperty: missing0 },\n                        message: \"must have required property '\" + missing0 + \"'\",\n                    },\n                ];\n                return false;\n            }\n            else {\n                const _errs1 = errors;\n                for (const key0 in data) {\n                    if (!(key0 === '$schema' ||\n                        key0 === 'description' ||\n                        key0 === 'entities' ||\n                        key0 === 'name' ||\n                        key0 === 'scenarios' ||\n                        key0 === 'scripts' ||\n                        key0 === 'supported' ||\n                        key0 === 'version')) {\n                        validate21.errors = [\n                            {\n                                instancePath,\n                                schemaPath: '#/additionalProperties',\n                                keyword: 'additionalProperties',\n                                params: { additionalProperty: key0 },\n                                message: 'must NOT have additional properties',\n                            },\n                        ];\n                        return false;\n                        break;\n                    }\n                }\n                if (_errs1 === errors) {\n                    if (data.$schema !== undefined) {\n                        const _errs2 = errors;\n                        if (typeof data.$schema !== 'string') {\n                            validate21.errors = [\n                                {\n                                    instancePath: instancePath + '/$schema',\n                                    schemaPath: '#/properties/%24schema/type',\n                                    keyword: 'type',\n                                    params: { type: 'string' },\n                                    message: 'must be string',\n                                },\n                            ];\n                            return false;\n                        }\n                        var valid0 = _errs2 === errors;\n                    }\n                    else {\n                        var valid0 = true;\n                    }\n                    if (valid0) {\n                        if (data.description !== undefined) {\n                            const _errs4 = errors;\n                            if (typeof data.description !== 'string') {\n                                validate21.errors = [\n                                    {\n                                        instancePath: instancePath + '/description',\n                                        schemaPath: '#/properties/description/type',\n                                        keyword: 'type',\n                                        params: { type: 'string' },\n                                        message: 'must be string',\n                                    },\n                                ];\n                                return false;\n                            }\n                            var valid0 = _errs4 === errors;\n                        }\n                        else {\n                            var valid0 = true;\n                        }\n                        if (valid0) {\n                            if (data.entities !== undefined) {\n                                let data2 = data.entities;\n                                const _errs6 = errors;\n                                if (errors === _errs6) {\n                                    if (data2 &&\n                                        typeof data2 == 'object' &&\n                                        !Array.isArray(data2)) {\n                                        for (const key1 in data2) {\n                                            const _errs9 = errors;\n                                            if (!validate22(data2[key1], {\n                                                instancePath: instancePath +\n                                                    '/entities/' +\n                                                    key1.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                parentData: data2,\n                                                parentDataProperty: key1,\n                                                rootData,\n                                            })) {\n                                                vErrors =\n                                                    vErrors === null\n                                                        ? validate22.errors\n                                                        : vErrors.concat(validate22.errors);\n                                                errors = vErrors.length;\n                                            }\n                                            var valid1 = _errs9 === errors;\n                                            if (!valid1) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        validate21.errors = [\n                                            {\n                                                instancePath: instancePath + '/entities',\n                                                schemaPath: '#/properties/entities/type',\n                                                keyword: 'type',\n                                                params: { type: 'object' },\n                                                message: 'must be object',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                }\n                                var valid0 = _errs6 === errors;\n                            }\n                            else {\n                                var valid0 = true;\n                            }\n                            if (valid0) {\n                                if (data.name !== undefined) {\n                                    const _errs10 = errors;\n                                    if (typeof data.name !== 'string') {\n                                        validate21.errors = [\n                                            {\n                                                instancePath: instancePath + '/name',\n                                                schemaPath: '#/properties/name/type',\n                                                keyword: 'type',\n                                                params: { type: 'string' },\n                                                message: 'must be string',\n                                            },\n                                        ];\n                                        return false;\n                                    }\n                                    var valid0 = _errs10 === errors;\n                                }\n                                else {\n                                    var valid0 = true;\n                                }\n                                if (valid0) {\n                                    if (data.scenarios !== undefined) {\n                                        let data5 = data.scenarios;\n                                        const _errs12 = errors;\n                                        if (errors === _errs12) {\n                                            if (data5 &&\n                                                typeof data5 == 'object' &&\n                                                !Array.isArray(data5)) {\n                                                for (const key2 in data5) {\n                                                    const _errs15 = errors;\n                                                    if (!validate26(data5[key2], {\n                                                        instancePath: instancePath +\n                                                            '/scenarios/' +\n                                                            key2.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                        parentData: data5,\n                                                        parentDataProperty: key2,\n                                                        rootData,\n                                                    })) {\n                                                        vErrors =\n                                                            vErrors === null\n                                                                ? validate26.errors\n                                                                : vErrors.concat(validate26.errors);\n                                                        errors = vErrors.length;\n                                                    }\n                                                    var valid2 = _errs15 === errors;\n                                                    if (!valid2) {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                validate21.errors = [\n                                                    {\n                                                        instancePath: instancePath + '/scenarios',\n                                                        schemaPath: '#/properties/scenarios/type',\n                                                        keyword: 'type',\n                                                        params: { type: 'object' },\n                                                        message: 'must be object',\n                                                    },\n                                                ];\n                                                return false;\n                                            }\n                                        }\n                                        var valid0 = _errs12 === errors;\n                                    }\n                                    else {\n                                        var valid0 = true;\n                                    }\n                                    if (valid0) {\n                                        if (data.scripts !== undefined) {\n                                            let data7 = data.scripts;\n                                            const _errs16 = errors;\n                                            if (errors === _errs16) {\n                                                if (data7 &&\n                                                    typeof data7 == 'object' &&\n                                                    !Array.isArray(data7)) {\n                                                    for (const key3 in data7) {\n                                                        let data8 = data7[key3];\n                                                        const _errs19 = errors;\n                                                        const _errs20 = errors;\n                                                        let valid4 = false;\n                                                        const _errs21 = errors;\n                                                        const _errs22 = errors;\n                                                        if (errors === _errs22) {\n                                                            if (data8 &&\n                                                                typeof data8 == 'object' &&\n                                                                !Array.isArray(data8)) {\n                                                                let missing1;\n                                                                if (data8.script === undefined &&\n                                                                    (missing1 = 'script')) {\n                                                                    const err0 = {\n                                                                        instancePath: instancePath +\n                                                                            '/scripts/' +\n                                                                            key3\n                                                                                .replace(/~/g, '~0')\n                                                                                .replace(/\\//g, '~1'),\n                                                                        schemaPath: '#/definitions/WalletTemplateScript/required',\n                                                                        keyword: 'required',\n                                                                        params: { missingProperty: missing1 },\n                                                                        message: \"must have required property '\" +\n                                                                            missing1 +\n                                                                            \"'\",\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err0];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err0);\n                                                                    }\n                                                                    errors++;\n                                                                }\n                                                                else {\n                                                                    const _errs24 = errors;\n                                                                    for (const key4 in data8) {\n                                                                        if (!(key4 === 'name' || key4 === 'script')) {\n                                                                            const err1 = {\n                                                                                instancePath: instancePath +\n                                                                                    '/scripts/' +\n                                                                                    key3\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1'),\n                                                                                schemaPath: '#/definitions/WalletTemplateScript/additionalProperties',\n                                                                                keyword: 'additionalProperties',\n                                                                                params: { additionalProperty: key4 },\n                                                                                message: 'must NOT have additional properties',\n                                                                            };\n                                                                            if (vErrors === null) {\n                                                                                vErrors = [err1];\n                                                                            }\n                                                                            else {\n                                                                                vErrors.push(err1);\n                                                                            }\n                                                                            errors++;\n                                                                            break;\n                                                                        }\n                                                                    }\n                                                                    if (_errs24 === errors) {\n                                                                        if (data8.name !== undefined) {\n                                                                            const _errs25 = errors;\n                                                                            if (typeof data8.name !== 'string') {\n                                                                                const err2 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1') +\n                                                                                        '/name',\n                                                                                    schemaPath: '#/definitions/WalletTemplateScript/properties/name/type',\n                                                                                    keyword: 'type',\n                                                                                    params: { type: 'string' },\n                                                                                    message: 'must be string',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err2];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err2);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                            var valid6 = _errs25 === errors;\n                                                                        }\n                                                                        else {\n                                                                            var valid6 = true;\n                                                                        }\n                                                                        if (valid6) {\n                                                                            if (data8.script !== undefined) {\n                                                                                const _errs27 = errors;\n                                                                                if (typeof data8.script !== 'string') {\n                                                                                    const err3 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/script',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScript/properties/script/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'string' },\n                                                                                        message: 'must be string',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err3];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err3);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                var valid6 = _errs27 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid6 = true;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            else {\n                                                                const err4 = {\n                                                                    instancePath: instancePath +\n                                                                        '/scripts/' +\n                                                                        key3\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    schemaPath: '#/definitions/WalletTemplateScript/type',\n                                                                    keyword: 'type',\n                                                                    params: { type: 'object' },\n                                                                    message: 'must be object',\n                                                                };\n                                                                if (vErrors === null) {\n                                                                    vErrors = [err4];\n                                                                }\n                                                                else {\n                                                                    vErrors.push(err4);\n                                                                }\n                                                                errors++;\n                                                            }\n                                                        }\n                                                        var _valid0 = _errs21 === errors;\n                                                        valid4 = valid4 || _valid0;\n                                                        if (!valid4) {\n                                                            const _errs29 = errors;\n                                                            const _errs30 = errors;\n                                                            if (errors === _errs30) {\n                                                                if (data8 &&\n                                                                    typeof data8 == 'object' &&\n                                                                    !Array.isArray(data8)) {\n                                                                    let missing2;\n                                                                    if ((data8.lockingType === undefined &&\n                                                                        (missing2 = 'lockingType')) ||\n                                                                        (data8.script === undefined &&\n                                                                            (missing2 = 'script'))) {\n                                                                        const err5 = {\n                                                                            instancePath: instancePath +\n                                                                                '/scripts/' +\n                                                                                key3\n                                                                                    .replace(/~/g, '~0')\n                                                                                    .replace(/\\//g, '~1'),\n                                                                            schemaPath: '#/definitions/WalletTemplateScriptLocking/required',\n                                                                            keyword: 'required',\n                                                                            params: { missingProperty: missing2 },\n                                                                            message: \"must have required property '\" +\n                                                                                missing2 +\n                                                                                \"'\",\n                                                                        };\n                                                                        if (vErrors === null) {\n                                                                            vErrors = [err5];\n                                                                        }\n                                                                        else {\n                                                                            vErrors.push(err5);\n                                                                        }\n                                                                        errors++;\n                                                                    }\n                                                                    else {\n                                                                        const _errs32 = errors;\n                                                                        for (const key5 in data8) {\n                                                                            if (!(key5 === 'lockingType' ||\n                                                                                key5 === 'name' ||\n                                                                                key5 === 'script')) {\n                                                                                const err6 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1'),\n                                                                                    schemaPath: '#/definitions/WalletTemplateScriptLocking/additionalProperties',\n                                                                                    keyword: 'additionalProperties',\n                                                                                    params: { additionalProperty: key5 },\n                                                                                    message: 'must NOT have additional properties',\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err6];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err6);\n                                                                                }\n                                                                                errors++;\n                                                                                break;\n                                                                            }\n                                                                        }\n                                                                        if (_errs32 === errors) {\n                                                                            if (data8.lockingType !== undefined) {\n                                                                                let data11 = data8.lockingType;\n                                                                                const _errs33 = errors;\n                                                                                if (typeof data11 !== 'string') {\n                                                                                    const err7 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/lockingType',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScriptLocking/properties/lockingType/type',\n                                                                                        keyword: 'type',\n                                                                                        params: { type: 'string' },\n                                                                                        message: 'must be string',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err7];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err7);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                if (!(data11 === 'p2sh20' ||\n                                                                                    data11 === 'p2sh32' ||\n                                                                                    data11 === 'standard')) {\n                                                                                    const err8 = {\n                                                                                        instancePath: instancePath +\n                                                                                            '/scripts/' +\n                                                                                            key3\n                                                                                                .replace(/~/g, '~0')\n                                                                                                .replace(/\\//g, '~1') +\n                                                                                            '/lockingType',\n                                                                                        schemaPath: '#/definitions/WalletTemplateScriptLocking/properties/lockingType/enum',\n                                                                                        keyword: 'enum',\n                                                                                        params: {\n                                                                                            allowedValues: schema38.properties.lockingType\n                                                                                                .enum,\n                                                                                        },\n                                                                                        message: 'must be equal to one of the allowed values',\n                                                                                    };\n                                                                                    if (vErrors === null) {\n                                                                                        vErrors = [err8];\n                                                                                    }\n                                                                                    else {\n                                                                                        vErrors.push(err8);\n                                                                                    }\n                                                                                    errors++;\n                                                                                }\n                                                                                var valid8 = _errs33 === errors;\n                                                                            }\n                                                                            else {\n                                                                                var valid8 = true;\n                                                                            }\n                                                                            if (valid8) {\n                                                                                if (data8.name !== undefined) {\n                                                                                    const _errs35 = errors;\n                                                                                    if (typeof data8.name !== 'string') {\n                                                                                        const err9 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/scripts/' +\n                                                                                                key3\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                '/name',\n                                                                                            schemaPath: '#/definitions/WalletTemplateScriptLocking/properties/name/type',\n                                                                                            keyword: 'type',\n                                                                                            params: { type: 'string' },\n                                                                                            message: 'must be string',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err9];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err9);\n                                                                                        }\n                                                                                        errors++;\n                                                                                    }\n                                                                                    var valid8 = _errs35 === errors;\n                                                                                }\n                                                                                else {\n                                                                                    var valid8 = true;\n                                                                                }\n                                                                                if (valid8) {\n                                                                                    if (data8.script !== undefined) {\n                                                                                        const _errs37 = errors;\n                                                                                        if (typeof data8.script !== 'string') {\n                                                                                            const err10 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/scripts/' +\n                                                                                                    key3\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/script',\n                                                                                                schemaPath: '#/definitions/WalletTemplateScriptLocking/properties/script/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err10];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err10);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid8 = _errs37 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid8 = true;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                                else {\n                                                                    const err11 = {\n                                                                        instancePath: instancePath +\n                                                                            '/scripts/' +\n                                                                            key3\n                                                                                .replace(/~/g, '~0')\n                                                                                .replace(/\\//g, '~1'),\n                                                                        schemaPath: '#/definitions/WalletTemplateScriptLocking/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'object' },\n                                                                        message: 'must be object',\n                                                                    };\n                                                                    if (vErrors === null) {\n                                                                        vErrors = [err11];\n                                                                    }\n                                                                    else {\n                                                                        vErrors.push(err11);\n                                                                    }\n                                                                    errors++;\n                                                                }\n                                                            }\n                                                            var _valid0 = _errs29 === errors;\n                                                            valid4 = valid4 || _valid0;\n                                                            if (!valid4) {\n                                                                const _errs39 = errors;\n                                                                if (!validate38(data8, {\n                                                                    instancePath: instancePath +\n                                                                        '/scripts/' +\n                                                                        key3\n                                                                            .replace(/~/g, '~0')\n                                                                            .replace(/\\//g, '~1'),\n                                                                    parentData: data7,\n                                                                    parentDataProperty: key3,\n                                                                    rootData,\n                                                                })) {\n                                                                    vErrors =\n                                                                        vErrors === null\n                                                                            ? validate38.errors\n                                                                            : vErrors.concat(validate38.errors);\n                                                                    errors = vErrors.length;\n                                                                }\n                                                                var _valid0 = _errs39 === errors;\n                                                                valid4 = valid4 || _valid0;\n                                                                if (!valid4) {\n                                                                    const _errs40 = errors;\n                                                                    const _errs41 = errors;\n                                                                    if (errors === _errs41) {\n                                                                        if (data8 &&\n                                                                            typeof data8 == 'object' &&\n                                                                            !Array.isArray(data8)) {\n                                                                            let missing3;\n                                                                            if ((data8.script === undefined &&\n                                                                                (missing3 = 'script')) ||\n                                                                                (data8.unlocks === undefined &&\n                                                                                    (missing3 = 'unlocks'))) {\n                                                                                const err12 = {\n                                                                                    instancePath: instancePath +\n                                                                                        '/scripts/' +\n                                                                                        key3\n                                                                                            .replace(/~/g, '~0')\n                                                                                            .replace(/\\//g, '~1'),\n                                                                                    schemaPath: '#/definitions/WalletTemplateScriptUnlocking/required',\n                                                                                    keyword: 'required',\n                                                                                    params: { missingProperty: missing3 },\n                                                                                    message: \"must have required property '\" +\n                                                                                        missing3 +\n                                                                                        \"'\",\n                                                                                };\n                                                                                if (vErrors === null) {\n                                                                                    vErrors = [err12];\n                                                                                }\n                                                                                else {\n                                                                                    vErrors.push(err12);\n                                                                                }\n                                                                                errors++;\n                                                                            }\n                                                                            else {\n                                                                                const _errs43 = errors;\n                                                                                for (const key6 in data8) {\n                                                                                    if (!func4.call(schema41.properties, key6)) {\n                                                                                        const err13 = {\n                                                                                            instancePath: instancePath +\n                                                                                                '/scripts/' +\n                                                                                                key3\n                                                                                                    .replace(/~/g, '~0')\n                                                                                                    .replace(/\\//g, '~1'),\n                                                                                            schemaPath: '#/definitions/WalletTemplateScriptUnlocking/additionalProperties',\n                                                                                            keyword: 'additionalProperties',\n                                                                                            params: {\n                                                                                                additionalProperty: key6,\n                                                                                            },\n                                                                                            message: 'must NOT have additional properties',\n                                                                                        };\n                                                                                        if (vErrors === null) {\n                                                                                            vErrors = [err13];\n                                                                                        }\n                                                                                        else {\n                                                                                            vErrors.push(err13);\n                                                                                        }\n                                                                                        errors++;\n                                                                                        break;\n                                                                                    }\n                                                                                }\n                                                                                if (_errs43 === errors) {\n                                                                                    if (data8.ageLock !== undefined) {\n                                                                                        const _errs44 = errors;\n                                                                                        if (typeof data8.ageLock !== 'string') {\n                                                                                            const err14 = {\n                                                                                                instancePath: instancePath +\n                                                                                                    '/scripts/' +\n                                                                                                    key3\n                                                                                                        .replace(/~/g, '~0')\n                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                    '/ageLock',\n                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/ageLock/type',\n                                                                                                keyword: 'type',\n                                                                                                params: { type: 'string' },\n                                                                                                message: 'must be string',\n                                                                                            };\n                                                                                            if (vErrors === null) {\n                                                                                                vErrors = [err14];\n                                                                                            }\n                                                                                            else {\n                                                                                                vErrors.push(err14);\n                                                                                            }\n                                                                                            errors++;\n                                                                                        }\n                                                                                        var valid10 = _errs44 === errors;\n                                                                                    }\n                                                                                    else {\n                                                                                        var valid10 = true;\n                                                                                    }\n                                                                                    if (valid10) {\n                                                                                        if (data8.estimate !== undefined) {\n                                                                                            const _errs46 = errors;\n                                                                                            if (typeof data8.estimate !==\n                                                                                                'string') {\n                                                                                                const err15 = {\n                                                                                                    instancePath: instancePath +\n                                                                                                        '/scripts/' +\n                                                                                                        key3\n                                                                                                            .replace(/~/g, '~0')\n                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                        '/estimate',\n                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/estimate/type',\n                                                                                                    keyword: 'type',\n                                                                                                    params: { type: 'string' },\n                                                                                                    message: 'must be string',\n                                                                                                };\n                                                                                                if (vErrors === null) {\n                                                                                                    vErrors = [err15];\n                                                                                                }\n                                                                                                else {\n                                                                                                    vErrors.push(err15);\n                                                                                                }\n                                                                                                errors++;\n                                                                                            }\n                                                                                            var valid10 = _errs46 === errors;\n                                                                                        }\n                                                                                        else {\n                                                                                            var valid10 = true;\n                                                                                        }\n                                                                                        if (valid10) {\n                                                                                            if (data8.fails !== undefined) {\n                                                                                                let data16 = data8.fails;\n                                                                                                const _errs48 = errors;\n                                                                                                if (errors === _errs48) {\n                                                                                                    if (Array.isArray(data16)) {\n                                                                                                        var valid11 = true;\n                                                                                                        const len0 = data16.length;\n                                                                                                        for (let i0 = 0; i0 < len0; i0++) {\n                                                                                                            const _errs50 = errors;\n                                                                                                            if (typeof data16[i0] !==\n                                                                                                                'string') {\n                                                                                                                const err16 = {\n                                                                                                                    instancePath: instancePath +\n                                                                                                                        '/scripts/' +\n                                                                                                                        key3\n                                                                                                                            .replace(/~/g, '~0')\n                                                                                                                            .replace(/\\//g, '~1') +\n                                                                                                                        '/fails/' +\n                                                                                                                        i0,\n                                                                                                                    schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/fails/items/type',\n                                                                                                                    keyword: 'type',\n                                                                                                                    params: {\n                                                                                                                        type: 'string',\n                                                                                                                    },\n                                                                                                                    message: 'must be string',\n                                                                                                                };\n                                                                                                                if (vErrors === null) {\n                                                                                                                    vErrors = [err16];\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    vErrors.push(err16);\n                                                                                                                }\n                                                                                                                errors++;\n                                                                                                            }\n                                                                                                            var valid11 = _errs50 === errors;\n                                                                                                            if (!valid11) {\n                                                                                                                break;\n                                                                                                            }\n                                                                                                        }\n                                                                                                    }\n                                                                                                    else {\n                                                                                                        const err17 = {\n                                                                                                            instancePath: instancePath +\n                                                                                                                '/scripts/' +\n                                                                                                                key3\n                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                '/fails',\n                                                                                                            schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/fails/type',\n                                                                                                            keyword: 'type',\n                                                                                                            params: { type: 'array' },\n                                                                                                            message: 'must be array',\n                                                                                                        };\n                                                                                                        if (vErrors === null) {\n                                                                                                            vErrors = [err17];\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            vErrors.push(err17);\n                                                                                                        }\n                                                                                                        errors++;\n                                                                                                    }\n                                                                                                }\n                                                                                                var valid10 = _errs48 === errors;\n                                                                                            }\n                                                                                            else {\n                                                                                                var valid10 = true;\n                                                                                            }\n                                                                                            if (valid10) {\n                                                                                                if (data8.invalid !== undefined) {\n                                                                                                    let data18 = data8.invalid;\n                                                                                                    const _errs52 = errors;\n                                                                                                    if (errors === _errs52) {\n                                                                                                        if (Array.isArray(data18)) {\n                                                                                                            var valid12 = true;\n                                                                                                            const len1 = data18.length;\n                                                                                                            for (let i1 = 0; i1 < len1; i1++) {\n                                                                                                                const _errs54 = errors;\n                                                                                                                if (typeof data18[i1] !==\n                                                                                                                    'string') {\n                                                                                                                    const err18 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/invalid/' +\n                                                                                                                            i1,\n                                                                                                                        schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/invalid/items/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'string',\n                                                                                                                        },\n                                                                                                                        message: 'must be string',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err18];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err18);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                                var valid12 = _errs54 === errors;\n                                                                                                                if (!valid12) {\n                                                                                                                    break;\n                                                                                                                }\n                                                                                                            }\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            const err19 = {\n                                                                                                                instancePath: instancePath +\n                                                                                                                    '/scripts/' +\n                                                                                                                    key3\n                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                    '/invalid',\n                                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/invalid/type',\n                                                                                                                keyword: 'type',\n                                                                                                                params: {\n                                                                                                                    type: 'array',\n                                                                                                                },\n                                                                                                                message: 'must be array',\n                                                                                                            };\n                                                                                                            if (vErrors === null) {\n                                                                                                                vErrors = [err19];\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                vErrors.push(err19);\n                                                                                                            }\n                                                                                                            errors++;\n                                                                                                        }\n                                                                                                    }\n                                                                                                    var valid10 = _errs52 === errors;\n                                                                                                }\n                                                                                                else {\n                                                                                                    var valid10 = true;\n                                                                                                }\n                                                                                                if (valid10) {\n                                                                                                    if (data8.name !== undefined) {\n                                                                                                        const _errs56 = errors;\n                                                                                                        if (typeof data8.name !==\n                                                                                                            'string') {\n                                                                                                            const err20 = {\n                                                                                                                instancePath: instancePath +\n                                                                                                                    '/scripts/' +\n                                                                                                                    key3\n                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                    '/name',\n                                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/name/type',\n                                                                                                                keyword: 'type',\n                                                                                                                params: {\n                                                                                                                    type: 'string',\n                                                                                                                },\n                                                                                                                message: 'must be string',\n                                                                                                            };\n                                                                                                            if (vErrors === null) {\n                                                                                                                vErrors = [err20];\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                vErrors.push(err20);\n                                                                                                            }\n                                                                                                            errors++;\n                                                                                                        }\n                                                                                                        var valid10 = _errs56 === errors;\n                                                                                                    }\n                                                                                                    else {\n                                                                                                        var valid10 = true;\n                                                                                                    }\n                                                                                                    if (valid10) {\n                                                                                                        if (data8.passes !== undefined) {\n                                                                                                            let data21 = data8.passes;\n                                                                                                            const _errs58 = errors;\n                                                                                                            if (errors === _errs58) {\n                                                                                                                if (Array.isArray(data21)) {\n                                                                                                                    var valid13 = true;\n                                                                                                                    const len2 = data21.length;\n                                                                                                                    for (let i2 = 0; i2 < len2; i2++) {\n                                                                                                                        const _errs60 = errors;\n                                                                                                                        if (typeof data21[i2] !== 'string') {\n                                                                                                                            const err21 = {\n                                                                                                                                instancePath: instancePath +\n                                                                                                                                    '/scripts/' +\n                                                                                                                                    key3\n                                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                                    '/passes/' +\n                                                                                                                                    i2,\n                                                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/passes/items/type',\n                                                                                                                                keyword: 'type',\n                                                                                                                                params: {\n                                                                                                                                    type: 'string',\n                                                                                                                                },\n                                                                                                                                message: 'must be string',\n                                                                                                                            };\n                                                                                                                            if (vErrors === null) {\n                                                                                                                                vErrors = [\n                                                                                                                                    err21,\n                                                                                                                                ];\n                                                                                                                            }\n                                                                                                                            else {\n                                                                                                                                vErrors.push(err21);\n                                                                                                                            }\n                                                                                                                            errors++;\n                                                                                                                        }\n                                                                                                                        var valid13 = _errs60 ===\n                                                                                                                            errors;\n                                                                                                                        if (!valid13) {\n                                                                                                                            break;\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    const err22 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/passes',\n                                                                                                                        schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/passes/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'array',\n                                                                                                                        },\n                                                                                                                        message: 'must be array',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err22];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err22);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                            }\n                                                                                                            var valid10 = _errs58 === errors;\n                                                                                                        }\n                                                                                                        else {\n                                                                                                            var valid10 = true;\n                                                                                                        }\n                                                                                                        if (valid10) {\n                                                                                                            if (data8.script !==\n                                                                                                                undefined) {\n                                                                                                                const _errs62 = errors;\n                                                                                                                if (typeof data8.script !==\n                                                                                                                    'string') {\n                                                                                                                    const err23 = {\n                                                                                                                        instancePath: instancePath +\n                                                                                                                            '/scripts/' +\n                                                                                                                            key3\n                                                                                                                                .replace(/~/g, '~0')\n                                                                                                                                .replace(/\\//g, '~1') +\n                                                                                                                            '/script',\n                                                                                                                        schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/script/type',\n                                                                                                                        keyword: 'type',\n                                                                                                                        params: {\n                                                                                                                            type: 'string',\n                                                                                                                        },\n                                                                                                                        message: 'must be string',\n                                                                                                                    };\n                                                                                                                    if (vErrors === null) {\n                                                                                                                        vErrors = [err23];\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        vErrors.push(err23);\n                                                                                                                    }\n                                                                                                                    errors++;\n                                                                                                                }\n                                                                                                                var valid10 = _errs62 === errors;\n                                                                                                            }\n                                                                                                            else {\n                                                                                                                var valid10 = true;\n                                                                                                            }\n                                                                                                            if (valid10) {\n                                                                                                                if (data8.timeLockType !==\n                                                                                                                    undefined) {\n                                                                                                                    let data24 = data8.timeLockType;\n                                                                                                                    const _errs64 = errors;\n                                                                                                                    if (typeof data24 !==\n                                                                                                                        'string') {\n                                                                                                                        const err24 = {\n                                                                                                                            instancePath: instancePath +\n                                                                                                                                '/scripts/' +\n                                                                                                                                key3\n                                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                                '/timeLockType',\n                                                                                                                            schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/timeLockType/type',\n                                                                                                                            keyword: 'type',\n                                                                                                                            params: {\n                                                                                                                                type: 'string',\n                                                                                                                            },\n                                                                                                                            message: 'must be string',\n                                                                                                                        };\n                                                                                                                        if (vErrors === null) {\n                                                                                                                            vErrors = [err24];\n                                                                                                                        }\n                                                                                                                        else {\n                                                                                                                            vErrors.push(err24);\n                                                                                                                        }\n                                                                                                                        errors++;\n                                                                                                                    }\n                                                                                                                    if (!(data24 ===\n                                                                                                                        'height' ||\n                                                                                                                        data24 ===\n                                                                                                                            'timestamp')) {\n                                                                                                                        const err25 = {\n                                                                                                                            instancePath: instancePath +\n                                                                                                                                '/scripts/' +\n                                                                                                                                key3\n                                                                                                                                    .replace(/~/g, '~0')\n                                                                                                                                    .replace(/\\//g, '~1') +\n                                                                                                                                '/timeLockType',\n                                                                                                                            schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/timeLockType/enum',\n                                                                                                                            keyword: 'enum',\n                                                                                                                            params: {\n                                                                                                                                allowedValues: schema41\n                                                                                                                                    .properties\n                                                                                                                                    .timeLockType\n                                                                                                                                    .enum,\n                                                                                                                            },\n                                                                                                                            message: 'must be equal to one of the allowed values',\n                                                                                                                        };\n                                                                                                                        if (vErrors === null) {\n                                                                                                                            vErrors = [err25];\n                                                                                                                        }\n                                                                                                                        else {\n                                                                                                                            vErrors.push(err25);\n                                                                                                                        }\n                                                                                                                        errors++;\n                                                                                                                    }\n                                                                                                                    var valid10 = _errs64 === errors;\n                                                                                                                }\n                                                                                                                else {\n                                                                                                                    var valid10 = true;\n                                                                                                                }\n                                                                                                                if (valid10) {\n                                                                                                                    if (data8.unlocks !==\n                                                                                                                        undefined) {\n                                                                                                                        const _errs66 = errors;\n                                                                                                                        if (typeof data8.unlocks !==\n                                                                                                                            'string') {\n                                                                                                                            const err26 = {\n                                                                                                                                instancePath: instancePath +\n                                                                                                                                    '/scripts/' +\n                                                                                                                                    key3\n                                                                                                                                        .replace(/~/g, '~0')\n                                                                                                                                        .replace(/\\//g, '~1') +\n                                                                                                                                    '/unlocks',\n                                                                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/properties/unlocks/type',\n                                                                                                                                keyword: 'type',\n                                                                                                                                params: {\n                                                                                                                                    type: 'string',\n                                                                                                                                },\n                                                                                                                                message: 'must be string',\n                                                                                                                            };\n                                                                                                                            if (vErrors === null) {\n                                                                                                                                vErrors = [\n                                                                                                                                    err26,\n                                                                                                                                ];\n                                                                                                                            }\n                                                                                                                            else {\n                                                                                                                                vErrors.push(err26);\n                                                                                                                            }\n                                                                                                                            errors++;\n                                                                                                                        }\n                                                                                                                        var valid10 = _errs66 ===\n                                                                                                                            errors;\n                                                                                                                    }\n                                                                                                                    else {\n                                                                                                                        var valid10 = true;\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            }\n                                                                                                        }\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else {\n                                                                            const err27 = {\n                                                                                instancePath: instancePath +\n                                                                                    '/scripts/' +\n                                                                                    key3\n                                                                                        .replace(/~/g, '~0')\n                                                                                        .replace(/\\//g, '~1'),\n                                                                                schemaPath: '#/definitions/WalletTemplateScriptUnlocking/type',\n                                                                                keyword: 'type',\n                                                                                params: { type: 'object' },\n                                                                                message: 'must be object',\n                                                                            };\n                                                                            if (vErrors === null) {\n                                                                                vErrors = [err27];\n                                                                            }\n                                                                            else {\n                                                                                vErrors.push(err27);\n                                                                            }\n                                                                            errors++;\n                                                                        }\n                                                                    }\n                                                                    var _valid0 = _errs40 === errors;\n                                                                    valid4 = valid4 || _valid0;\n                                                                }\n                                                            }\n                                                        }\n                                                        if (!valid4) {\n                                                            const err28 = {\n                                                                instancePath: instancePath +\n                                                                    '/scripts/' +\n                                                                    key3.replace(/~/g, '~0').replace(/\\//g, '~1'),\n                                                                schemaPath: '#/properties/scripts/additionalProperties/anyOf',\n                                                                keyword: 'anyOf',\n                                                                params: {},\n                                                                message: 'must match a schema in anyOf',\n                                                            };\n                                                            if (vErrors === null) {\n                                                                vErrors = [err28];\n                                                            }\n                                                            else {\n                                                                vErrors.push(err28);\n                                                            }\n                                                            errors++;\n                                                            validate21.errors = vErrors;\n                                                            return false;\n                                                        }\n                                                        else {\n                                                            errors = _errs20;\n                                                            if (vErrors !== null) {\n                                                                if (_errs20) {\n                                                                    vErrors.length = _errs20;\n                                                                }\n                                                                else {\n                                                                    vErrors = null;\n                                                                }\n                                                            }\n                                                        }\n                                                        var valid3 = _errs19 === errors;\n                                                        if (!valid3) {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                                else {\n                                                    validate21.errors = [\n                                                        {\n                                                            instancePath: instancePath + '/scripts',\n                                                            schemaPath: '#/properties/scripts/type',\n                                                            keyword: 'type',\n                                                            params: { type: 'object' },\n                                                            message: 'must be object',\n                                                        },\n                                                    ];\n                                                    return false;\n                                                }\n                                            }\n                                            var valid0 = _errs16 === errors;\n                                        }\n                                        else {\n                                            var valid0 = true;\n                                        }\n                                        if (valid0) {\n                                            if (data.supported !== undefined) {\n                                                let data26 = data.supported;\n                                                const _errs68 = errors;\n                                                if (errors === _errs68) {\n                                                    if (Array.isArray(data26)) {\n                                                        var valid14 = true;\n                                                        const len3 = data26.length;\n                                                        for (let i3 = 0; i3 < len3; i3++) {\n                                                            let data27 = data26[i3];\n                                                            const _errs70 = errors;\n                                                            if (typeof data27 !== 'string') {\n                                                                validate21.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/supported/' + i3,\n                                                                        schemaPath: '#/definitions/AuthenticationVirtualMachineIdentifier/type',\n                                                                        keyword: 'type',\n                                                                        params: { type: 'string' },\n                                                                        message: 'must be string',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            if (!(data27 === 'BCH_2020_05' ||\n                                                                data27 === 'BCH_2021_05' ||\n                                                                data27 === 'BCH_2022_05' ||\n                                                                data27 === 'BCH_2023_05' ||\n                                                                data27 === 'BCH_2024_05' ||\n                                                                data27 === 'BCH_2025_05' ||\n                                                                data27 === 'BCH_2026_05' ||\n                                                                data27 === 'BCH_2027_05' ||\n                                                                data27 === 'BCH_2028_05' ||\n                                                                data27 === 'BCH_2029_05' ||\n                                                                data27 === 'BCH_2030_05' ||\n                                                                data27 === 'BCH_SPEC' ||\n                                                                data27 === 'BSV_2020_02' ||\n                                                                data27 === 'BSV_SPEC' ||\n                                                                data27 === 'BTC_2017_08' ||\n                                                                data27 === 'BTC_SPEC' ||\n                                                                data27 === 'XEC_2020_05' ||\n                                                                data27 === 'XEC_SPEC')) {\n                                                                validate21.errors = [\n                                                                    {\n                                                                        instancePath: instancePath + '/supported/' + i3,\n                                                                        schemaPath: '#/definitions/AuthenticationVirtualMachineIdentifier/enum',\n                                                                        keyword: 'enum',\n                                                                        params: { allowedValues: schema42.enum },\n                                                                        message: 'must be equal to one of the allowed values',\n                                                                    },\n                                                                ];\n                                                                return false;\n                                                            }\n                                                            var valid14 = _errs70 === errors;\n                                                            if (!valid14) {\n                                                                break;\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/supported',\n                                                                schemaPath: '#/properties/supported/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'array' },\n                                                                message: 'must be array',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                }\n                                                var valid0 = _errs68 === errors;\n                                            }\n                                            else {\n                                                var valid0 = true;\n                                            }\n                                            if (valid0) {\n                                                if (data.version !== undefined) {\n                                                    let data28 = data.version;\n                                                    const _errs73 = errors;\n                                                    if (!(typeof data28 == 'number' && isFinite(data28))) {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/version',\n                                                                schemaPath: '#/properties/version/type',\n                                                                keyword: 'type',\n                                                                params: { type: 'number' },\n                                                                message: 'must be number',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                    if (0 !== data28) {\n                                                        validate21.errors = [\n                                                            {\n                                                                instancePath: instancePath + '/version',\n                                                                schemaPath: '#/properties/version/const',\n                                                                keyword: 'const',\n                                                                params: { allowedValue: 0 },\n                                                                message: 'must be equal to constant',\n                                                            },\n                                                        ];\n                                                        return false;\n                                                    }\n                                                    var valid0 = _errs73 === errors;\n                                                }\n                                                else {\n                                                    var valid0 = true;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            validate21.errors = [\n                {\n                    instancePath,\n                    schemaPath: '#/type',\n                    keyword: 'type',\n                    params: { type: 'object' },\n                    message: 'must be object',\n                },\n            ];\n            return false;\n        }\n    }\n    validate21.errors = vErrors;\n    return errors === 0;\n}\nfunction validate20(data, { instancePath = '', parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (!validate21(data, {\n        instancePath,\n        parentData,\n        parentDataProperty,\n        rootData,\n    })) {\n        vErrors =\n            vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);\n        errors = vErrors.length;\n    }\n    validate20.errors = vErrors;\n    return errors === 0;\n}\n//# sourceMappingURL=validate-wallet-template.js.map","import { lossyNormalize } from '../../format/format.js';\nimport walletTemplateValidator from './validate-wallet-template.js';\nconst avjErrorsToDescription = (errors) => \n// TODO: translate instancePath\nerrors.map((error) => `${error.instancePath}: ${error.message}`).join(',');\n/**\n * Given an untrusted JSON string or object and an AJV validator, verify that\n * the untrusted value is of the expected shape. Note, this method first\n * normalizes all characters in the input using `Normalization Form KC`\n * (Compatibility Decomposition, followed by Canonical Composition).\n */\nexport const ajvStandaloneJsonParse = (untrustedJsonOrObject, validator) => {\n    // eslint-disable-next-line functional/no-try-statements\n    try {\n        const stringified = typeof untrustedJsonOrObject === 'string'\n            ? untrustedJsonOrObject\n            : JSON.stringify(untrustedJsonOrObject);\n        const normalized = lossyNormalize(stringified);\n        const parsed = JSON.parse(normalized);\n        if (validator(parsed)) {\n            return parsed;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return avjErrorsToDescription(walletTemplateValidator.errors);\n    }\n    catch (e) {\n        return `Invalid JSON. ${String(e)}`;\n    }\n};\n//# sourceMappingURL=ajv-utils.js.map","import { ajvStandaloneJsonParse } from './ajv/ajv-utils.js';\n// eslint-disable-next-line import/no-internal-modules\nimport walletTemplateValidator from './ajv/validate-wallet-template.js';\n/**\n * Safely parse and validate a wallet template, returning either an\n * error message as a string or a valid {@link WalletTemplate}. The\n * template may be provided either as an untrusted JSON string or as a\n * pre-parsed object.\n *\n * This method validates both the structure and the contents of a template:\n * - All properties and sub-properties are verified to be of the expected type.\n * - The template contains no unknown properties.\n * - The ID of each entity, script, and scenario is confirmed to be unique.\n * - Script IDs referenced by entities and other scripts (via `unlocks`) are\n * confirmed to exist.\n * - The derivation paths of each HdKey are validated against each other.\n *\n * This method does not validate the CashAssembly contents of scripts (by\n * attempting compilation, evaluating {@link WalletTemplateScriptTest}s,\n * or testing scenario generation).\n *\n * @param untrustedJsonOrObject - the JSON string or object to validate as a\n * wallet template\n */\nexport const importWalletTemplate = (untrustedJsonOrObject) => {\n    const errorPrefix = `Wallet template import failed:`;\n    const template = ajvStandaloneJsonParse(untrustedJsonOrObject, walletTemplateValidator);\n    if (typeof template === 'string') {\n        return `${errorPrefix}${template}`;\n    }\n    // TODO: add back other validation\n    return template;\n};\n//# sourceMappingURL=wallet-template.js.map","import { allErrorsAreRecoverable, extractResolvedVariableBytecodeMap, } from '../language/language.js';\nconst returnFailedCompilationDirective = ({ index, result, type, }) => ({\n    errors: result.errors.map((error) => ({\n        ...error,\n        error: `Failed compilation of ${type} directive at index \"${index}\": ${error.error}`,\n    })),\n    index,\n    ...(result.errorType === 'parse' ? {} : { resolved: result.resolve }),\n    type,\n});\n// eslint-disable-next-line complexity\nexport const compileOutputTemplate = ({ outputTemplate, index, }) => {\n    if ('script' in outputTemplate.lockingBytecode) {\n        const directive = outputTemplate.lockingBytecode;\n        const data = directive.data ?? {};\n        const result = directive.compiler.generateBytecode({\n            data,\n            debug: true,\n            scriptId: directive.script,\n        });\n        return result.success\n            ? {\n                lockingBytecode: result.bytecode,\n                ...(outputTemplate.token === undefined\n                    ? {}\n                    : { token: outputTemplate.token }),\n                valueSatoshis: outputTemplate.valueSatoshis,\n            }\n            : returnFailedCompilationDirective({ index, result, type: 'locking' });\n    }\n    return {\n        lockingBytecode: outputTemplate.lockingBytecode.slice(),\n        ...(outputTemplate.token === undefined\n            ? {}\n            : { token: outputTemplate.token }),\n        valueSatoshis: outputTemplate.valueSatoshis,\n    };\n};\nexport const compileInputTemplate = ({ inputTemplate, index, template, outputs, }) => {\n    if ('script' in inputTemplate.unlockingBytecode) {\n        const directive = inputTemplate.unlockingBytecode;\n        // TODO: workaround, replace by migrating to PST format\n        const sourceOutputs = [];\n        // eslint-disable-next-line functional/no-expression-statements, functional/immutable-data\n        sourceOutputs[index] = {\n            lockingBytecode: Uint8Array.of(),\n            ...(inputTemplate.unlockingBytecode.token === undefined\n                ? {}\n                : { token: inputTemplate.unlockingBytecode.token }),\n            valueSatoshis: inputTemplate.unlockingBytecode.valueSatoshis,\n        };\n        const result = directive.compiler.generateBytecode({\n            data: {\n                ...directive.data,\n                compilationContext: {\n                    inputIndex: index,\n                    sourceOutputs,\n                    transaction: {\n                        inputs: template.inputs,\n                        locktime: template.locktime,\n                        outputs,\n                        version: template.version,\n                    },\n                },\n            },\n            debug: true,\n            scriptId: directive.script,\n        });\n        return result.success\n            ? {\n                outpointIndex: inputTemplate.outpointIndex,\n                outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),\n                sequenceNumber: inputTemplate.sequenceNumber,\n                unlockingBytecode: result.bytecode,\n            }\n            : returnFailedCompilationDirective({ index, result, type: 'unlocking' });\n    }\n    return {\n        outpointIndex: inputTemplate.outpointIndex,\n        outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),\n        sequenceNumber: inputTemplate.sequenceNumber,\n        unlockingBytecode: inputTemplate.unlockingBytecode.slice(),\n    };\n};\n/**\n * Generate a `Transaction` given a `TransactionTemplate` and any applicable\n * compilers and compilation data.\n *\n * Returns either a `Transaction` or an array of compilation errors.\n *\n * For each `CompilationDirective`, the `compilationContext` property will be\n * automatically provided to the compiler. All other necessary `CompilationData`\n * properties must be specified in the `TransactionTemplate`.\n *\n * @param template - the `TransactionTemplate` from which to create the\n * `Transaction`\n */\nexport const generateTransaction = (template) => {\n    const outputResults = template.outputs.map((outputTemplate, index) => compileOutputTemplate({\n        index,\n        outputTemplate,\n    }));\n    const outputCompilationErrors = outputResults.filter((result) => 'errors' in result);\n    if (outputCompilationErrors.length > 0) {\n        const outputCompletions = outputResults\n            .map((result, index) => 'lockingBytecode' in result\n            ? { index, output: result, type: 'output' }\n            : result)\n            .filter((result) => 'output' in result);\n        return {\n            completions: outputCompletions,\n            errors: outputCompilationErrors,\n            stage: 'outputs',\n            success: false,\n        };\n    }\n    const outputs = outputResults;\n    const inputResults = template.inputs.map((inputTemplate, index) => compileInputTemplate({\n        index,\n        inputTemplate,\n        outputs,\n        template,\n    }));\n    const inputCompilationErrors = inputResults.filter((result) => 'errors' in result);\n    if (inputCompilationErrors.length > 0) {\n        const inputCompletions = inputResults\n            .map((result, index) => 'unlockingBytecode' in result\n            ? { index, input: result, type: 'input' }\n            : result)\n            .filter((result) => 'input' in result);\n        return {\n            completions: inputCompletions,\n            errors: inputCompilationErrors,\n            stage: 'inputs',\n            success: false,\n        };\n    }\n    const inputs = inputResults;\n    return {\n        success: true,\n        transaction: {\n            inputs,\n            locktime: template.locktime,\n            outputs,\n            version: template.version,\n        },\n    };\n};\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Extract a map of successfully resolved variables to their resolved bytecode.\n *\n * @param transactionGenerationError - a transaction generation attempt where\n * `success` is `false`\n */\nexport const extractResolvedVariables = (transactionGenerationError) => transactionGenerationError.errors.reduce((all, error) => error.resolved === undefined\n    ? all\n    : { ...all, ...extractResolvedVariableBytecodeMap(error.resolved) }, {});\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Given an unsuccessful transaction generation result, extract a map of the\n * identifiers missing from the compilation mapped to the entity that owns each\n * variable.\n *\n * Returns `false` if any errors are fatal (the error either cannot be resolved\n * by providing a variable, or the entity ownership of the required variable was\n * not provided in the compilation data).\n *\n * @param transactionGenerationError - a transaction generation result where\n * `success` is `false`\n */\nexport const extractMissingVariables = (transactionGenerationError) => {\n    const allErrors = transactionGenerationError.errors.reduce((all, error) => [...all, ...error.errors], []);\n    if (!allErrorsAreRecoverable(allErrors)) {\n        return false;\n    }\n    return allErrors.reduce((all, error) => ({\n        ...all,\n        [error.missingIdentifier]: error.owningEntity,\n    }), {});\n};\n/**\n * TODO: fundamentally unsound, migrate to PST format\n *\n * Safely extend a compilation data with resolutions provided by other entities\n * (via `extractResolvedVariables`).\n *\n * It is security-critical that compilation data only be extended with expected\n * identifiers from the proper owning entity of each variable. See\n * `CompilationData.bytecode` for details.\n *\n * Returns `false` if any errors are fatal (the error either cannot be resolved\n * by providing a variable, or the entity ownership of the required variable was\n * not provided in the compilation data).\n *\n * @remarks\n * To determine which identifiers are required by a given compilation, the\n * compilation is first attempted with only trusted variables: variables owned\n * or previously verified (like `WalletData`) by the compiling entity. If this\n * compilation produces a `TransactionGenerationError`, the error can be\n * provided to `safelyExtendCompilationData`, along with the trusted compilation\n * data and a mapping of untrusted resolutions (where the result of\n * `extractResolvedVariables` is assigned to the entity ID of the entity from\n * which they were received).\n *\n * The first compilation must use only trusted compilation data\n */\nexport const safelyExtendCompilationData = (transactionGenerationError, trustedCompilationData, untrustedResolutions) => {\n    const missing = extractMissingVariables(transactionGenerationError);\n    if (missing === false)\n        return false;\n    const selectedResolutions = Object.entries(missing).reduce((all, [identifier, entityId]) => {\n        const entityResolution = untrustedResolutions[entityId];\n        if (entityResolution === undefined) {\n            return all;\n        }\n        const resolution = entityResolution[identifier];\n        if (resolution === undefined) {\n            return all;\n        }\n        return { ...all, [identifier]: resolution };\n    }, {});\n    return {\n        ...trustedCompilationData,\n        bytecode: {\n            ...selectedResolutions,\n            ...trustedCompilationData.bytecode,\n        },\n    };\n};\n//# sourceMappingURL=generate-transaction.js.map","// Weird setup to allow both Enum parameters, as well as literal strings\n// https://stackoverflow.com/questions/51433319/typescript-constructor-accept-string-for-enum\nconst literal = (l) => l;\nexport const Network = {\n    MAINNET: literal(\"mainnet\"),\n    TESTNET: literal(\"testnet\"),\n    REGTEST: literal(\"regtest\"),\n};\nexport const NFTCapability = {\n    none: literal(\"none\"),\n    mutable: literal(\"mutable\"),\n    minting: literal(\"minting\"),\n};\n//# sourceMappingURL=interface.js.map","import $dvphU$electrumcashdebuglogs from \"@electrum-cash/debug-logs\";\nimport {EventEmitter as $dvphU$EventEmitter} from \"eventemitter3\";\nimport {Mutex as $dvphU$Mutex} from \"async-mutex\";\nimport {ElectrumWebSocket as $dvphU$ElectrumWebSocket} from \"@electrum-cash/web-socket\";\nimport {parse as $dvphU$parse, parseNumberAndBigInt as $dvphU$parseNumberAndBigInt} from \"lossless-json\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n\n\nclass $24139611f53a54b8$export$5d955335434540c6 {\n    /**\n\t * Helper function that builds an Electrum request object.\n\t *\n\t * @param method     - method to call.\n\t * @param parameters - method parameters for the call.\n\t * @param requestId  - unique string or number referencing this request.\n\t *\n\t * @returns a properly formatted Electrum request string.\n\t */ static buildRequestObject(method, parameters, requestId) {\n        // Return the formatted request object.\n        // NOTE: Electrum either uses JsonRPC strictly or loosely.\n        //       If we specify protocol identifier without being 100% compliant, we risk being disconnected/blacklisted.\n        //       For this reason, we omit the protocol identifier to avoid issues.\n        return JSON.stringify({\n            method: method,\n            params: parameters,\n            id: requestId\n        });\n    }\n    /**\n\t * Constant used to verify if a provided string is a valid version number.\n\t *\n\t * @returns a regular expression that matches valid version numbers.\n\t */ static get versionRegexp() {\n        return /^\\d+(\\.\\d+)+$/;\n    }\n    /**\n\t * Constant used to separate statements/messages in a stream of data.\n\t *\n\t * @returns the delimiter used by Electrum to separate statements.\n\t */ static get statementDelimiter() {\n        return \"\\n\";\n    }\n}\n\n\nvar $e83d2e7688025acd$exports = {};\n\n$parcel$export($e83d2e7688025acd$exports, \"isVersionRejected\", () => $e83d2e7688025acd$export$e1f38ab2b4ebdde6);\n$parcel$export($e83d2e7688025acd$exports, \"isVersionNegotiated\", () => $e83d2e7688025acd$export$9598f0c76aa41d73);\nconst $e83d2e7688025acd$export$e1f38ab2b4ebdde6 = function(object) {\n    return \"error\" in object;\n};\nconst $e83d2e7688025acd$export$9598f0c76aa41d73 = function(object) {\n    return \"software\" in object && \"protocol\" in object;\n};\n\n\n// Acceptable parameter types for RPC messages\nconst $abcb763a48577a1e$export$d73a2e87a509880 = function(message) {\n    return \"id\" in message && \"error\" in message;\n};\nconst $abcb763a48577a1e$export$81276773828ff315 = function(message) {\n    return \"id\" in message && \"result\" in message;\n};\nconst $abcb763a48577a1e$export$280de919a0cf6928 = function(message) {\n    return !(\"id\" in message) && \"method\" in message;\n};\nconst $abcb763a48577a1e$export$94e3360fcddccc76 = function(message) {\n    return \"id\" in message && \"method\" in message;\n};\n\n\n\nvar $db7c797e63383364$exports = {};\n\n$parcel$export($db7c797e63383364$exports, \"ConnectionStatus\", () => $db7c797e63383364$export$7516420eb880ab68);\n// Disable indent rule for this file because it is broken (https://github.com/typescript-eslint/typescript-eslint/issues/1824)\n/* eslint-disable @typescript-eslint/indent */ /**\n * Enum that denotes the connection status of an ElectrumConnection.\n * @enum {number}\n * @property {0} DISCONNECTED    The connection is disconnected.\n * @property {1} AVAILABLE       The connection is connected.\n * @property {2} DISCONNECTING   The connection is disconnecting.\n * @property {3} CONNECTING      The connection is connecting.\n * @property {4} RECONNECTING    The connection is restarting.\n */ var $db7c797e63383364$export$7516420eb880ab68;\n(function(ConnectionStatus) {\n    ConnectionStatus[ConnectionStatus[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n    ConnectionStatus[ConnectionStatus[\"CONNECTED\"] = 1] = \"CONNECTED\";\n    ConnectionStatus[ConnectionStatus[\"DISCONNECTING\"] = 2] = \"DISCONNECTING\";\n    ConnectionStatus[ConnectionStatus[\"CONNECTING\"] = 3] = \"CONNECTING\";\n    ConnectionStatus[ConnectionStatus[\"RECONNECTING\"] = 4] = \"RECONNECTING\";\n})($db7c797e63383364$export$7516420eb880ab68 || ($db7c797e63383364$export$7516420eb880ab68 = {}));\n\n\n\nclass $ff134c9a9e1f7361$export$de0f57fc22079b5e extends (0, $dvphU$EventEmitter) {\n    /**\n\t * Sets up network configuration for an Electrum client connection.\n\t *\n\t * @param application       - your application name, used to identify to the electrum host.\n\t * @param version           - protocol version to use with the host.\n\t * @param socketOrHostname  - pre-configured electrum socket or fully qualified domain name or IP number of the host\n\t * @param options           - ...\n\t *\n\t * @throws {Error} if `version` is not a valid version string.\n\t */ constructor(application, version, socketOrHostname, options){\n        // Initialize the event emitter.\n        super();\n        this.application = application;\n        this.version = version;\n        this.socketOrHostname = socketOrHostname;\n        this.options = options;\n        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED;\n        this.verifications = [];\n        this.messageBuffer = \"\";\n        // Check if the provided version is a valid version number.\n        if (!(0, $24139611f53a54b8$export$5d955335434540c6).versionRegexp.test(version)) // Throw an error since the version number was not valid.\n        throw new Error(`Provided version string (${version}) is not a valid protocol version number.`);\n        // If a hostname was provided..\n        if (typeof socketOrHostname === \"string\") // Use a web socket with default parameters.\n        this.socket = new (0, $dvphU$ElectrumWebSocket)(socketOrHostname);\n        else // Use the provided socket.\n        this.socket = socketOrHostname;\n        // Set up handlers for connection and disconnection.\n        this.socket.on(\"connected\", this.onSocketConnect.bind(this));\n        this.socket.on(\"disconnected\", this.onSocketDisconnect.bind(this));\n        // Set up handler for incoming data.\n        this.socket.on(\"data\", this.parseMessageChunk.bind(this));\n        // Handle visibility changes when run in a browser environment (if not explicitly disabled).\n        if (typeof document !== \"undefined\" && !this.options.disableBrowserVisibilityHandling) document.addEventListener(\"visibilitychange\", this.handleVisibilityChange.bind(this));\n        // Handle network connection changes when run in a browser environment (if not explicitly disabled).\n        if (typeof window !== \"undefined\" && !this.options.disableBrowserConnectivityHandling) {\n            window.addEventListener(\"online\", this.handleNetworkChange.bind(this));\n            window.addEventListener(\"offline\", this.handleNetworkChange.bind(this));\n        }\n    }\n    // Expose hostIdentifier from the socket.\n    get hostIdentifier() {\n        return this.socket.hostIdentifier;\n    }\n    // Expose port from the socket.\n    get encrypted() {\n        return this.socket.encrypted;\n    }\n    /**\n\t * Assembles incoming data into statements and hands them off to the message parser.\n\t *\n\t * @param data - data to append to the current message buffer, as a string.\n\t *\n\t * @throws {SyntaxError} if the passed statement parts are not valid JSON.\n\t */ parseMessageChunk(data) {\n        // Update the timestamp for when we last received data.\n        this.lastReceivedTimestamp = Date.now();\n        // Emit a notification indicating that the connection has received data.\n        this.emit(\"received\");\n        // Clear and remove all verification timers.\n        this.verifications.forEach((timer)=>clearTimeout(timer));\n        this.verifications.length = 0;\n        // Add the message to the current message buffer.\n        this.messageBuffer += data;\n        // Check if the new message buffer contains the statement delimiter.\n        while(this.messageBuffer.includes((0, $24139611f53a54b8$export$5d955335434540c6).statementDelimiter)){\n            // Split message buffer into statements.\n            const statementParts = this.messageBuffer.split((0, $24139611f53a54b8$export$5d955335434540c6).statementDelimiter);\n            // For as long as we still have statements to parse..\n            while(statementParts.length > 1){\n                // Move the first statement to its own variable.\n                const currentStatementList = String(statementParts.shift());\n                // Parse the statement into an object or list of objects.\n                let statementList = (0, $dvphU$parse)(currentStatementList, null, this.options.useBigInt ? (0, $dvphU$parseNumberAndBigInt) : parseFloat);\n                // Wrap the statement in an array if it is not already a batched statement list.\n                if (!Array.isArray(statementList)) statementList = [\n                    statementList\n                ];\n                // For as long as there is statements in the result set..\n                while(statementList.length > 0){\n                    // Move the first statement from the batch to its own variable.\n                    const currentStatement = statementList.shift();\n                    // If the current statement is a subscription notification..\n                    if ((0, $abcb763a48577a1e$export$280de919a0cf6928)(currentStatement)) {\n                        // Emit the notification for handling higher up in the stack.\n                        this.emit(\"response\", currentStatement);\n                        continue;\n                    }\n                    // If the current statement is a version negotiation response..\n                    if (currentStatement.id === \"versionNegotiation\") {\n                        if ((0, $abcb763a48577a1e$export$d73a2e87a509880)(currentStatement)) // Then emit a failed version negotiation response signal.\n                        this.emit(\"version\", {\n                            error: currentStatement.error\n                        });\n                        else {\n                            // Extract the software and protocol version reported.\n                            const [software, protocol] = currentStatement.result;\n                            // Emit a successful version negotiation response signal.\n                            this.emit(\"version\", {\n                                software: software,\n                                protocol: protocol\n                            });\n                        }\n                        continue;\n                    }\n                    // If the current statement is a keep-alive response..\n                    if (currentStatement.id === \"keepAlive\") continue;\n                    // Emit the statements for handling higher up in the stack.\n                    this.emit(\"response\", currentStatement);\n                }\n            }\n            // Store the remaining statement as the current message buffer.\n            this.messageBuffer = statementParts.shift() || \"\";\n        }\n    }\n    /**\n\t * Sends a keep-alive message to the host.\n\t *\n\t * @returns true if the ping message was fully flushed to the socket, false if\n\t * part of the message is queued in the user memory\n\t */ ping() {\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).ping(`Sending keep-alive ping to '${this.hostIdentifier}'`);\n        // Craft a keep-alive message.\n        const message = (0, $24139611f53a54b8$export$5d955335434540c6).buildRequestObject(\"server.ping\", [], \"keepAlive\");\n        // Send the keep-alive message.\n        const status = this.send(message);\n        // Return the ping status.\n        return status;\n    }\n    /**\n\t * Initiates the network connection negotiates a protocol version. Also emits the 'connect' signal if successful.\n\t *\n\t * @throws {Error} if the socket connection fails.\n\t * @returns a promise resolving when the connection is established\n\t */ async connect() {\n        // If we are already connected return true.\n        if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) return;\n        // Indicate that the connection is connecting\n        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTING;\n        // Emit a connect event now that the connection is being set up.\n        this.emit(\"connecting\");\n        // Define a function to wrap connection as a promise.\n        const connectionResolver = (resolve, reject)=>{\n            const rejector = (error)=>{\n                // Set the status back to disconnected\n                this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED;\n                // Emit a connect event indicating that we failed to connect.\n                this.emit(\"disconnected\");\n                // Reject with the error as reason\n                reject(error);\n            };\n            // Replace previous error handlers to reject the promise on failure.\n            this.socket.removeAllListeners(\"error\");\n            this.socket.once(\"error\", rejector);\n            // Define a function to wrap version negotiation as a callback.\n            const versionNegotiator = ()=>{\n                // Write a log message to show that we have started version negotiation.\n                (0, $dvphU$electrumcashdebuglogs).network(`Requesting protocol version ${this.version} with '${this.hostIdentifier}'.`);\n                // remove the one-time error handler since no error was detected.\n                this.socket.removeListener(\"error\", rejector);\n                // Build a version negotiation message.\n                const versionMessage = (0, $24139611f53a54b8$export$5d955335434540c6).buildRequestObject(\"server.version\", [\n                    this.application,\n                    this.version\n                ], \"versionNegotiation\");\n                // Define a function to wrap version validation as a function.\n                const versionValidator = (version)=>{\n                    // Check if version negotiation failed.\n                    if ((0, $e83d2e7688025acd$export$e1f38ab2b4ebdde6)(version)) {\n                        // Disconnect from the host.\n                        this.disconnect(true);\n                        // Declare an error message.\n                        const errorMessage = \"unsupported protocol version.\";\n                        // Log the error.\n                        (0, $dvphU$electrumcashdebuglogs).errors(`Failed to connect with ${this.hostIdentifier} due to ${errorMessage}`);\n                        // Reject the connection with false since version negotiation failed.\n                        reject(errorMessage);\n                    } else if (version.protocol !== this.version && `${version.protocol}.0` !== this.version && `${version.protocol}.0.0` !== this.version) {\n                        // Disconnect from the host.\n                        this.disconnect(true);\n                        // Declare an error message.\n                        const errorMessage = `incompatible protocol version negotiated (${version.protocol} !== ${this.version}).`;\n                        // Log the error.\n                        (0, $dvphU$electrumcashdebuglogs).errors(`Failed to connect with ${this.hostIdentifier} due to ${errorMessage}`);\n                        // Reject the connection with false since version negotiation failed.\n                        reject(errorMessage);\n                    } else {\n                        // Write a log message.\n                        (0, $dvphU$electrumcashdebuglogs).network(`Negotiated protocol version ${version.protocol} with '${this.hostIdentifier}', powered by ${version.software}.`);\n                        // Set connection status to connected\n                        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED;\n                        // Emit a connect event now that the connection is usable.\n                        this.emit(\"connected\");\n                        // Resolve the connection promise since we successfully connected and negotiated protocol version.\n                        resolve();\n                    }\n                };\n                // Listen for version negotiation once.\n                this.once(\"version\", versionValidator);\n                // Send the version negotiation message.\n                this.send(versionMessage);\n            };\n            // Prepare the version negotiation.\n            this.socket.once(\"connected\", versionNegotiator);\n            // Set up handler for network errors.\n            this.socket.on(\"error\", this.onSocketError.bind(this));\n            // Connect to the server.\n            this.socket.connect();\n        };\n        // Wait until connection is established and version negotiation succeeds.\n        await new Promise(connectionResolver);\n    }\n    /**\n\t * Restores the network connection.\n\t */ async reconnect() {\n        // If a reconnect timer is set, remove it\n        await this.clearReconnectTimer();\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).network(`Trying to reconnect to '${this.hostIdentifier}'..`);\n        // Set the status to reconnecting for more accurate log messages.\n        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).RECONNECTING;\n        // Emit a connect event now that the connection is usable.\n        this.emit(\"reconnecting\");\n        // Disconnect the underlying socket.\n        this.socket.disconnect();\n        try {\n            // Try to connect again.\n            await this.connect();\n        } catch (error) {\n        // Do nothing as the error should be handled via the disconnect and error signals.\n        }\n    }\n    /**\n\t * Removes the current reconnect timer.\n\t */ clearReconnectTimer() {\n        // If a reconnect timer is set, remove it\n        if (this.reconnectTimer) clearTimeout(this.reconnectTimer);\n        // Reset the timer reference.\n        this.reconnectTimer = undefined;\n    }\n    /**\n\t * Removes the current keep-alive timer.\n\t */ clearKeepAliveTimer() {\n        // If a keep-alive timer is set, remove it\n        if (this.keepAliveTimer) clearTimeout(this.keepAliveTimer);\n        // Reset the timer reference.\n        this.keepAliveTimer = undefined;\n    }\n    /**\n\t * Initializes the keep alive timer loop.\n\t */ setupKeepAliveTimer() {\n        // If the keep-alive timer loop is not currently set up..\n        if (!this.keepAliveTimer) // Set a new keep-alive timer.\n        this.keepAliveTimer = setTimeout(this.ping.bind(this), this.options.sendKeepAliveIntervalInMilliSeconds);\n    }\n    /**\n\t * Tears down the current connection and removes all event listeners on disconnect.\n\t *\n\t * @param force       - disconnect even if the connection has not been fully established yet.\n\t * @param intentional - update connection state if disconnect is intentional.\n\t *\n\t * @returns true if successfully disconnected, or false if there was no connection.\n\t */ async disconnect(force = false, intentional = true) {\n        // Return early when there is nothing to disconnect from\n        if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED && !force) // Return false to indicate that there was nothing to disconnect from.\n        return false;\n        // Update connection state if the disconnection is intentional.\n        // NOTE: The state is meant to represent what the client is requesting, but\n        //       is used internally to handle visibility changes in browsers to ensure functional reconnection.\n        if (intentional) // Set connection status to null to indicate tear-down is currently happening.\n        this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTING;\n        // Emit a connect event to indicate that we are disconnecting.\n        this.emit(\"disconnecting\");\n        // If a keep-alive timer is set, remove it.\n        await this.clearKeepAliveTimer();\n        // If a reconnect timer is set, remove it\n        await this.clearReconnectTimer();\n        const disconnectResolver = (resolve)=>{\n            // Resolve to true after the connection emits a disconnect\n            this.once(\"disconnected\", ()=>resolve(true));\n            // Close the connection on the socket level.\n            this.socket.disconnect();\n        };\n        // Return true to indicate that we disconnected.\n        return new Promise(disconnectResolver);\n    }\n    /**\n\t * Updates the connection state based on browser reported connectivity.\n\t *\n\t * Most modern browsers are able to provide information on the connection state\n\t * which allows for significantly faster response times to network changes compared\n\t * to waiting for network requests to fail.\n\t *\n\t * When available, we make use of this to fail early to provide a better user experience.\n\t */ async handleNetworkChange() {\n        // Do nothing if we do not have the navigator available.\n        if (typeof window.navigator === \"undefined\") return;\n        // Attempt to reconnect to the network now that we may be online again.\n        if (window.navigator.onLine === true) this.reconnect();\n        // Disconnected from the network so that cleanup can happen while we're offline.\n        if (window.navigator.onLine !== true) {\n            const forceDisconnect = true;\n            const isIntentional = true;\n            this.disconnect(forceDisconnect, isIntentional);\n        }\n    }\n    /**\n\t * Updates connection state based on application visibility.\n\t *\n\t * Some browsers will disconnect network connections when the browser is out of focus,\n\t * which would normally cause our reconnect-on-timeout routines to trigger, but that\n\t * results in a poor user experience since the events are not handled consistently\n\t * and sometimes it can take some time after restoring focus to the browser.\n\t *\n\t * By manually disconnecting when this happens we prevent the default reconnection routines\n\t * and make the behavior consistent across browsers.\n\t */ async handleVisibilityChange() {\n        // Disconnect when application is removed from focus.\n        if (document.visibilityState === \"hidden\") {\n            const forceDisconnect = true;\n            const isIntentional = true;\n            this.disconnect(forceDisconnect, isIntentional);\n        }\n        // Reconnect when application is returned to focus.\n        if (document.visibilityState === \"visible\") this.reconnect();\n    }\n    /**\n\t * Sends an arbitrary message to the server.\n\t *\n\t * @param message - json encoded request object to send to the server, as a string.\n\t *\n\t * @returns true if the message was fully flushed to the socket, false if part of the message\n\t * is queued in the user memory\n\t */ send(message) {\n        // Remove the current keep-alive timer if it exists.\n        this.clearKeepAliveTimer();\n        // Get the current timestamp in milliseconds.\n        const currentTime = Date.now();\n        // Follow up and verify that the message got sent..\n        const verificationTimer = setTimeout(this.verifySend.bind(this, currentTime), this.socket.timeout);\n        // Store the verification timer locally so that it can be cleared when data has been received.\n        this.verifications.push(verificationTimer);\n        // Set a new keep-alive timer.\n        this.setupKeepAliveTimer();\n        // Write the message to the network socket.\n        return this.socket.write(message + (0, $24139611f53a54b8$export$5d955335434540c6).statementDelimiter);\n    }\n    // --- Event managers. --- //\n    /**\n\t * Marks the connection as timed out and schedules reconnection if we have not\n\t * received data within the expected time frame.\n\t */ verifySend(sentTimestamp) {\n        // If we haven't received any data since we last sent data out..\n        if (Number(this.lastReceivedTimestamp) < sentTimestamp) {\n            // If this connection is already disconnected, we do not change anything\n            if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED || this.status === (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTING) // debug.warning(`Tried to verify already disconnected connection to '${this.hostIdentifier}'`);\n            return;\n            // Remove the current keep-alive timer if it exists.\n            this.clearKeepAliveTimer();\n            // Write a notification to the logs.\n            (0, $dvphU$electrumcashdebuglogs).network(`Connection to '${this.hostIdentifier}' timed out.`);\n            // Close the connection to avoid re-use.\n            // NOTE: This initiates reconnection routines if the connection has not\n            //       been marked as intentionally disconnected.\n            this.socket.disconnect();\n        }\n    }\n    /**\n\t * Updates the connection status when a connection is confirmed.\n\t */ onSocketConnect() {\n        // If a reconnect timer is set, remove it.\n        this.clearReconnectTimer();\n        // Set up the initial timestamp for when we last received data from the server.\n        this.lastReceivedTimestamp = Date.now();\n        // Set up the initial keep-alive timer.\n        this.setupKeepAliveTimer();\n        // Clear all temporary error listeners.\n        this.socket.removeAllListeners(\"error\");\n        // Set up handler for network errors.\n        this.socket.on(\"error\", this.onSocketError.bind(this));\n    }\n    /**\n\t * Updates the connection status when a connection is ended.\n\t */ onSocketDisconnect() {\n        // Remove the current keep-alive timer if it exists.\n        this.clearKeepAliveTimer();\n        // If this is a connection we're trying to tear down..\n        if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTING) {\n            // Mark the connection as disconnected.\n            this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED;\n            // Send a disconnect signal higher up the stack.\n            this.emit(\"disconnected\");\n            // If a reconnect timer is set, remove it.\n            this.clearReconnectTimer();\n            // Remove all event listeners\n            this.removeAllListeners();\n            // Write a log message.\n            (0, $dvphU$electrumcashdebuglogs).network(`Disconnected from '${this.hostIdentifier}'.`);\n        } else {\n            // If this is for an established connection..\n            if (this.status === (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) // Write a notification to the logs.\n            (0, $dvphU$electrumcashdebuglogs).errors(`Connection with '${this.hostIdentifier}' was closed, trying to reconnect in ${this.options.reconnectAfterMilliSeconds / 1000} seconds.`);\n            // Mark the connection as disconnected for now..\n            this.status = (0, $db7c797e63383364$export$7516420eb880ab68).DISCONNECTED;\n            // Send a disconnect signal higher up the stack.\n            this.emit(\"disconnected\");\n            // If we don't have a pending reconnection timer..\n            if (!this.reconnectTimer) // Attempt to reconnect after one keep-alive duration.\n            this.reconnectTimer = setTimeout(this.reconnect.bind(this), this.options.reconnectAfterMilliSeconds);\n        }\n    }\n    /**\n\t * Notify administrator of any unexpected errors.\n\t */ onSocketError(error) {\n        // Report a generic error if no error information is present.\n        // NOTE: When using WSS, the error event explicitly\n        //       only allows to send a \"simple\" event without data.\n        //       https://stackoverflow.com/a/18804298\n        if (typeof error === \"undefined\") // Do nothing, and instead rely on the socket disconnect event for further information.\n        return;\n        // Log the error, as there is nothing we can do to actually handle it.\n        (0, $dvphU$electrumcashdebuglogs).errors(`Network error ('${this.hostIdentifier}'): `, error);\n    }\n}\n\n\n\n// Define number of milliseconds per second for legibility.\nconst $d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND = 1000;\nconst $d801b1f9b7fc3074$export$5ba3a4134d0d751d = {\n    // By default, all numbers including integers are parsed as regular JavaScript numbers.\n    useBigInt: false,\n    // Send a ping message every seconds, to detect network problem as early as possible.\n    sendKeepAliveIntervalInMilliSeconds: 1 * $d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND,\n    // Try to reconnect 5 seconds after unintentional disconnects.\n    reconnectAfterMilliSeconds: 5 * $d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND,\n    // Try to detect stale connections 5 seconds after every send.\n    verifyConnectionTimeoutInMilliSeconds: 5 * $d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND,\n    // Automatically manage the connection for a consistent behavior across browsers and devices.\n    disableBrowserVisibilityHandling: false,\n    disableBrowserConnectivityHandling: false\n};\n\n\n\n\n\n\n/**\n * High-level Electrum client that lets applications send requests and subscribe to notification events from a server.\n */ class $558b46d3f899ced5$var$ElectrumClient extends (0, $dvphU$EventEmitter) {\n    /**\n\t * Number corresponding to the underlying connection status.\n\t */ get status() {\n        return this.connection.status;\n    }\n    /**\n\t * Initializes an Electrum client.\n\t *\n\t * @param application       - your application name, used to identify to the electrum host.\n\t * @param version           - protocol version to use with the host.\n\t * @param socketOrHostname  - pre-configured electrum socket or fully qualified domain name or IP number of the host\n\t * @param options           - ...\n\t *\n\t * @throws {Error} if `version` is not a valid version string.\n\t */ constructor(application, version, socketOrHostname, options = {}){\n        // Initialize the event emitter.\n        super();\n        this.application = application;\n        this.version = version;\n        this.socketOrHostname = socketOrHostname;\n        this.options = options;\n        this.subscriptionMethods = {};\n        this.requestId = 0;\n        this.requestResolvers = {};\n        this.connectionLock = new (0, $dvphU$Mutex)();\n        // Update default options with the provided values.\n        const networkOptions = {\n            ...(0, $d801b1f9b7fc3074$export$5ba3a4134d0d751d),\n            ...options\n        };\n        // Set up a connection to an electrum server.\n        this.connection = new (0, $ff134c9a9e1f7361$export$de0f57fc22079b5e)(application, version, socketOrHostname, networkOptions);\n    }\n    // Expose hostIdentifier from the connection.\n    get hostIdentifier() {\n        return this.connection.hostIdentifier;\n    }\n    // Expose port from the connection.\n    get encrypted() {\n        return this.connection.encrypted;\n    }\n    /**\n\t * Connects to the remote server.\n\t *\n\t * @throws {Error} if the socket connection fails.\n\t * @returns a promise resolving when the connection is established.\n\t */ async connect() {\n        // Create a lock so that multiple connects/disconnects cannot race each other.\n        const unlock = await this.connectionLock.acquire();\n        try {\n            // If we are already connected, do not attempt to connect again.\n            if (this.connection.status === (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) return;\n            // Listen for parsed statements.\n            this.connection.on(\"response\", this.response.bind(this));\n            // Hook up handles for the connected and disconnected events.\n            this.connection.on(\"connected\", this.resubscribeOnConnect.bind(this));\n            this.connection.on(\"disconnected\", this.onConnectionDisconnect.bind(this));\n            // Relay connecting and reconnecting events.\n            this.connection.on(\"connecting\", this.handleConnectionStatusChanges.bind(this, \"connecting\"));\n            this.connection.on(\"disconnecting\", this.handleConnectionStatusChanges.bind(this, \"disconnecting\"));\n            this.connection.on(\"reconnecting\", this.handleConnectionStatusChanges.bind(this, \"reconnecting\"));\n            // Hook up client metadata gathering functions.\n            this.connection.on(\"version\", this.storeSoftwareVersion.bind(this));\n            this.connection.on(\"received\", this.updateLastReceivedTimestamp.bind(this));\n            // Relay error events.\n            this.connection.on(\"error\", this.emit.bind(this, \"error\"));\n            // Connect with the server.\n            await this.connection.connect();\n        } finally{\n            unlock();\n        }\n    }\n    /**\n\t * Disconnects from the remote server and removes all event listeners/subscriptions and open requests.\n\t *\n\t * @param force               - disconnect even if the connection has not been fully established yet.\n\t * @param retainSubscriptions - retain subscription data so they will be restored on reconnection.\n\t *\n\t * @returns true if successfully disconnected, or false if there was no connection.\n\t */ async disconnect(force = false, retainSubscriptions = false) {\n        if (!retainSubscriptions) {\n            // Cancel all event listeners.\n            this.removeAllListeners();\n            // Remove all subscription data\n            this.subscriptionMethods = {};\n        }\n        // Disconnect from the remote server.\n        return this.connection.disconnect(force);\n    }\n    /**\n\t * Calls a method on the remote server with the supplied parameters.\n\t *\n\t * @param method     - name of the method to call.\n\t * @param parameters - one or more parameters for the method.\n\t *\n\t * @throws {Error} if the client is disconnected.\n\t * @returns a promise that resolves with the result of the method or an Error.\n\t */ async request(method, ...parameters) {\n        // If we are not connected to a server..\n        if (this.connection.status !== (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) // Reject the request with a disconnected error message.\n        throw new Error(`Unable to send request to a disconnected server '${this.hostIdentifier}'.`);\n        // Increase the request ID by one.\n        this.requestId += 1;\n        // Store a copy of the request id.\n        const id = this.requestId;\n        // Format the arguments as an electrum request object.\n        const message = (0, $24139611f53a54b8$export$5d955335434540c6).buildRequestObject(method, parameters, id);\n        // Define a function to wrap the request in a promise.\n        const requestResolver = (resolve)=>{\n            // Add a request resolver for this promise to the list of requests.\n            this.requestResolvers[id] = (error, data)=>{\n                // If the resolution failed..\n                if (error) // Resolve the promise with the error for the application to handle.\n                resolve(error);\n                else // Resolve the promise with the request results.\n                resolve(data);\n            };\n            // Send the request message to the remote server.\n            this.connection.send(message);\n        };\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).network(`Sending request '${method}' to '${this.hostIdentifier}'`);\n        // return a promise to deliver results later.\n        return new Promise(requestResolver);\n    }\n    /**\n\t * Subscribes to the method and payload at the server.\n\t *\n\t * @remarks the response for the subscription request is issued as a notification event.\n\t *\n\t * @param method     - one of the subscribable methods the server supports.\n\t * @param parameters - one or more parameters for the method.\n\t *\n\t * @throws {Error} if the client is disconnected.\n\t * @returns a promise resolving when the subscription is established.\n\t */ async subscribe(method, ...parameters) {\n        // Initialize an empty list of subscription payloads, if needed.\n        if (!this.subscriptionMethods[method]) this.subscriptionMethods[method] = new Set();\n        // Store the subscription parameters to track what data we have subscribed to.\n        this.subscriptionMethods[method].add(JSON.stringify(parameters));\n        // Send initial subscription request.\n        const requestData = await this.request(method, ...parameters);\n        // If the request failed, throw it as an error.\n        if (requestData instanceof Error) throw requestData;\n        // If the request returned more than one data point..\n        if (Array.isArray(requestData)) // .. throw an error, as this breaks our expectation for subscriptions.\n        throw new Error(\"Subscription request returned an more than one data point.\");\n        // Construct a notification structure to package the initial result as a notification.\n        const notification = {\n            jsonrpc: \"2.0\",\n            method: method,\n            params: [\n                ...parameters,\n                requestData\n            ]\n        };\n        // Manually emit an event for the initial response.\n        this.emit(\"notification\", notification);\n        // Try to update the chain height.\n        this.updateChainHeightFromHeadersNotifications(notification);\n    }\n    /**\n\t * Unsubscribes to the method at the server and removes any callback functions\n\t * when there are no more subscriptions for the method.\n\t *\n\t * @param method     - a previously subscribed to method.\n\t * @param parameters - one or more parameters for the method.\n\t *\n\t * @throws {Error} if no subscriptions exist for the combination of the provided `method` and `parameters.\n\t * @throws {Error} if the client is disconnected.\n\t * @returns a promise resolving when the subscription is removed.\n\t */ async unsubscribe(method, ...parameters) {\n        // Throw an error if the client is disconnected.\n        if (this.connection.status !== (0, $db7c797e63383364$export$7516420eb880ab68).CONNECTED) throw new Error(`Unable to send unsubscribe request to a disconnected server '${this.hostIdentifier}'.`);\n        // If this method has no subscriptions..\n        if (!this.subscriptionMethods[method]) // Reject this promise with an explanation.\n        throw new Error(`Cannot unsubscribe from '${method}' since the method has no subscriptions.`);\n        // Pack up the parameters as a long string.\n        const subscriptionParameters = JSON.stringify(parameters);\n        // If the method payload could not be located..\n        if (!this.subscriptionMethods[method].has(subscriptionParameters)) // Reject this promise with an explanation.\n        throw new Error(`Cannot unsubscribe from '${method}' since it has no subscription with the given parameters.`);\n        // Remove this specific subscription payload from internal tracking.\n        this.subscriptionMethods[method].delete(subscriptionParameters);\n        // Send unsubscription request to the server\n        // NOTE: As a convenience we allow users to define the method as the subscribe or unsubscribe version.\n        await this.request(method.replace(\".subscribe\", \".unsubscribe\"), ...parameters);\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).client(`Unsubscribed from '${String(method)}' for the '${subscriptionParameters}' parameters.`);\n    }\n    /**\n\t * Restores existing subscriptions without updating status or triggering manual callbacks.\n\t *\n\t * @throws {Error} if subscription data cannot be found for all stored event names.\n\t * @throws {Error} if the client is disconnected.\n\t * @returns a promise resolving to true when the subscriptions are restored.\n\t *\n\t * @ignore\n\t */ async resubscribeOnConnect() {\n        // Write a log message.\n        (0, $dvphU$electrumcashdebuglogs).client(`Connected to '${this.hostIdentifier}'.`);\n        // Synchronize with the underlying connection status.\n        this.handleConnectionStatusChanges(\"connected\");\n        // Initialize an empty list of resubscription promises.\n        const resubscriptionPromises = [];\n        // For each method we have a subscription for..\n        for(const method in this.subscriptionMethods){\n            // .. and for each parameter we have previously been subscribed to..\n            for (const parameterJSON of this.subscriptionMethods[method].values()){\n                // restore the parameters from JSON.\n                const parameters = JSON.parse(parameterJSON);\n                // Send a subscription request.\n                resubscriptionPromises.push(this.subscribe(method, ...parameters));\n            }\n            // Wait for all re-subscriptions to complete.\n            await Promise.all(resubscriptionPromises);\n        }\n        // Write a log message if there was any subscriptions to restore.\n        if (resubscriptionPromises.length > 0) (0, $dvphU$electrumcashdebuglogs).client(`Restored ${resubscriptionPromises.length} previous subscriptions for '${this.hostIdentifier}'`);\n    }\n    /**\n\t * Parser messages from the remote server to resolve request promises and emit subscription events.\n\t *\n\t * @param message - the response message\n\t *\n\t * @throws {Error} if the message ID does not match an existing request.\n\t * @ignore\n\t */ response(message) {\n        // If the received message is a notification, we forward it to all event listeners\n        if ((0, $abcb763a48577a1e$export$280de919a0cf6928)(message)) {\n            // Write a log message.\n            (0, $dvphU$electrumcashdebuglogs).client(`Received notification for '${message.method}' from '${this.hostIdentifier}'`);\n            // Forward the message content to all event listeners.\n            this.emit(\"notification\", message);\n            // Try to update the chain height.\n            this.updateChainHeightFromHeadersNotifications(message);\n            // Return since it does not have an associated request resolver\n            return;\n        }\n        // If the response ID is null we cannot use it to index our request resolvers\n        if (message.id === null) // Throw an internal error, this should not happen.\n        throw new Error(\"Internal error: Received an RPC response with ID null.\");\n        // Look up which request promise we should resolve this.\n        const requestResolver = this.requestResolvers[message.id];\n        // If we do not have a request resolver for this response message..\n        if (!requestResolver) {\n            // Log that a message was ignored since the request has already been rejected.\n            (0, $dvphU$electrumcashdebuglogs).warning(`Ignoring response #${message.id} as the request has already been rejected.`);\n            // Return as this has now been fully handled.\n            return;\n        }\n        // Remove the promise from the request list.\n        delete this.requestResolvers[message.id];\n        // If the message contains an error..\n        if ((0, $abcb763a48577a1e$export$d73a2e87a509880)(message)) // Forward the message error to the request resolver and omit the `result` parameter.\n        requestResolver(new Error(message.error.message));\n        else {\n            // Forward the message content to the request resolver and omit the `error` parameter\n            // (by setting it to undefined).\n            requestResolver(undefined, message.result);\n            // Attempt to extract genesis hash from feature requests.\n            this.storeGenesisHashFromFeaturesResponse(message);\n        }\n    }\n    /**\n\t * Callback function that is called when connection to the Electrum server is lost.\n\t * Aborts all active requests with an error message indicating that connection was lost.\n\t *\n\t * @ignore\n\t */ async onConnectionDisconnect() {\n        // Loop over active requests\n        for(const resolverId in this.requestResolvers){\n            // Extract request resolver for readability\n            const requestResolver = this.requestResolvers[resolverId];\n            // Resolve the active request with an error indicating that the connection was lost.\n            requestResolver(new Error(\"Connection lost\"));\n            // Remove the promise from the request list.\n            delete this.requestResolvers[resolverId];\n        }\n        // Synchronize with the underlying connection status.\n        this.handleConnectionStatusChanges(\"disconnected\");\n    }\n    /**\n\t * Stores the server provider software version field on successful version negotiation.\n\t *\n\t * @ignore\n\t */ async storeSoftwareVersion(versionStatement) {\n        // TODO: handle failed version negotiation better.\n        if (versionStatement.error) // Do nothing.\n        return;\n        // Store the software version.\n        this.software = versionStatement.software;\n    }\n    /**\n\t * Updates the last received timestamp.\n\t *\n\t * @ignore\n\t */ async updateLastReceivedTimestamp() {\n        // Update the timestamp for when we last received data.\n        this.lastReceivedTimestamp = Date.now();\n    }\n    /**\n\t * Checks if the provided message is a response to a headers subscription,\n\t * and if so updates the locally stored chain height value for this client.\n\t *\n\t * @ignore\n\t */ async updateChainHeightFromHeadersNotifications(message) {\n        // If the message is a notification for a new chain height..\n        if (message.method === \"blockchain.headers.subscribe\") // ..also store the updated chain height locally.\n        this.chainHeight = message.params[0].height;\n    }\n    /**\n\t * Checks if the provided message is a response to a server.features request,\n\t * and if so stores the genesis hash for this client locally.\n\t *\n\t * @ignore\n\t */ async storeGenesisHashFromFeaturesResponse(message) {\n        try {\n            // If the message is a response to a features request..\n            if (typeof message.result.genesis_hash !== \"undefined\") // ..store the genesis hash locally.\n            this.genesisHash = message.result.genesis_hash;\n        } catch (error) {\n        // Do nothing.\n        }\n    }\n    /**\n\t * Helper function to synchronize state and events with the underlying connection.\n\t */ async handleConnectionStatusChanges(eventName) {\n        // Re-emit the event.\n        this.emit(eventName);\n    }\n}\nvar // Export the client.\n$558b46d3f899ced5$export$2e2bcd8739ae039 = $558b46d3f899ced5$var$ElectrumClient;\n\n\n\n\n\n\nexport {$558b46d3f899ced5$export$2e2bcd8739ae039 as ElectrumClient, $e83d2e7688025acd$export$e1f38ab2b4ebdde6 as isVersionRejected, $e83d2e7688025acd$export$9598f0c76aa41d73 as isVersionNegotiated, $db7c797e63383364$export$7516420eb880ab68 as ConnectionStatus};\n//# sourceMappingURL=index.mjs.map\n","export function delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n//# sourceMappingURL=delay.js.map","import { hexToBin, sha256, binToHex } from \"@bitauth/libauth\";\nexport async function getTransactionHash(rawTransactionHex) {\n    const transactionBin = hexToBin(rawTransactionHex);\n    // transaction hash is a double sha256 of a raw transaction data, reversed byte order\n    return binToHex(sha256.hash(sha256.hash(transactionBin)).reverse());\n}\n//# sourceMappingURL=transaction.js.map","export const wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","export const DELIMITER = \":\";\n// Min amount utxo can be to be accepted by the network\nexport const DUST_UTXO_THRESHOLD = 546;\n// Current chained tx limit\nexport const MEMPOOL_CHAIN_LIMIT = 50;\n// time in milliseconds to cache the usd exchange rate\nexport const EXCHANGE_RATE_TTL = 250000;\n// list of common derivation paths\n// a la: https://github.com/Electron-Cash/Electron-Cash/blob/1de24c509992cfebc22217a2a77c862c2b02bc54/electroncash_gui/qt/installwizard.py#L624\nexport const DERIVATION_PATHS = [\n    \"m/0\",\n    \"m/0'\",\n    \"m/0'/0\",\n    \"m/0'/0'\",\n    \"m/0'/0'/0'\",\n    \"m/44'/0'/0'\",\n    \"m/44'/0'/0'/0\",\n    \"m/44'/145'/0'\",\n    \"m/44'/145'/0'/0\",\n    \"m/44'/245'/0\",\n    \"m/44'/245'/0'\",\n    \"m/44'/245'/0'/0\",\n];\nexport const WORDLIST_CHECKSUMS = {\n    czech: \"92e035ca0e3680fab85fa18b9e5c7e7582b3bd9caeb6d4bc8a2ecc8e492100c9\",\n    english: \"f18b9a84c83e38e98eceb0102b275e26438af83ab08f080cdb780a2caa9f3a6d\",\n    french: \"fd4cd57c8e86a99ac53cd0f21a6b89af366769b0143ac0d268ac7d7a39200145\",\n    italian: \"d9664953fe4c49e0b40eb6f6378c421f5f01dc9360aaac6d2a3c294f046ef520\",\n    japanese: \"e641781d89213031233ebc5130020c3de297cad96065ecc688d1c00e010ea71c\",\n    korean: \"0c26059ed7ede977d7fa1c40443e71793e7850aa6a3d8aabf0cbcec91c1f95ec\",\n    portuguese: \"85fea658f90c42c182823807a1d30db587abb72c14a3098e1a65f8b78d1ffcf4\",\n    simplifiedChinese: \"a86e2bd870e228d19a887c9faae8c1374b4e624e85d2b245b59e36583cba4afc\",\n    spanish: \"27e99ad4328299108663c19eb611310bd3b77260af852169108713019831d07d\",\n    traditionalChinese: \"11ef479f2f44b6d4f7fb6239dff06e3cd7a1473b83df6cf91adcbbbee598acf6\",\n};\n//# sourceMappingURL=constant.js.map","import { wordlist as english } from \"@scure/bip39/wordlists/english\";\nimport { WORDLIST_CHECKSUMS } from \"./constant.js\";\nimport { sha256, binToHex, utf8ToBin } from \"@bitauth/libauth\";\nexport class Config {\n    // enforces all token-related methods to specify tokenaddr as recepient and change cashaddr\n    static { this.EnforceCashTokenReceiptAddresses = false; }\n    static { this.DefaultParentDerivationPath = \"m/44'/0'/0'\"; }\n    static { this.DefaultIpfsGateway = \"https://dweb.link/ipfs/\"; }\n    // default currency for balance and rate conversions\n    static { this.DefaultCurrency = \"usd\"; }\n    // caches the raw transactions in browser's local storage instead of memory\n    static { this.UseLocalStorageCache = false; }\n    // caches the raw transactions in browser's indexedDB instead of memory\n    static { this.UseIndexedDBCache = false; }\n    // caches the raw transactions in browser's memory\n    static { this.UseMemoryCache = false; }\n    static { this.DefaultWordlist = english; }\n    static setIpfsGateway(ipfsGateway) {\n        this.DefaultIpfsGateway = ipfsGateway;\n    }\n    static setWordlist(wordlist) {\n        let checksum = binToHex(sha256.hash(utf8ToBin(wordlist.join(\" \"))));\n        if (!Object.values(WORDLIST_CHECKSUMS).includes(checksum))\n            throw Error(\"Error matching provided wordlist to a known list, see @scure/bip39/wordlists\");\n        Config.DefaultWordlist = wordlist;\n    }\n    static getWordlist() {\n        return [...Config.DefaultWordlist];\n    }\n}\n//# sourceMappingURL=config.js.map","import { assertSuccess, binToHex, hexToBin, readUint32LE, } from \"@bitauth/libauth\";\nexport const decodeHeader = (hexHeader) => {\n    const result = {};\n    const header = hexToBin(hexHeader.hex);\n    result.version = assertSuccess(readUint32LE({ bin: header, index: 0 })).result;\n    result.previousBlockHash = binToHex(header.slice(4, 36).reverse());\n    result.merkleRoot = binToHex(header.slice(36, 68).reverse());\n    result.timestamp = assertSuccess(readUint32LE({ bin: header, index: 68 })).result;\n    result.bits = assertSuccess(readUint32LE({ bin: header, index: 72 })).result;\n    result.nonce = assertSuccess(readUint32LE({ bin: header, index: 76 })).result;\n    result.height = hexHeader.height;\n    return result;\n};\n//# sourceMappingURL=header.js.map","// super thin wrapper around indexedDB, compatible with localStorage API\nexport class IndexedDbCache {\n    constructor(objectStoreName = \"ElectrumNetworkProviderCache\") {\n        this.objectStoreName = objectStoreName;\n        this.db = null;\n        this.objectStoreName = objectStoreName;\n    }\n    getDatabaseObjectFromTarget(target) {\n        if (!target) {\n            return null;\n        }\n        const targetWithType = target;\n        return targetWithType.result;\n    }\n    throwDatabaseOpenError(reject, database) {\n        if (!database) {\n            reject(new Error(\"Something went wrong and the database transaction was not opened.\"));\n        }\n    }\n    async init() {\n        const db = indexedDB.open(\"ElectrumNetworkProviderCache\", 1);\n        this.db = await new Promise((resolve, reject) => {\n            const request = db;\n            request.onerror = reject;\n            request.onsuccess = ({ target }) => {\n                const database = this.getDatabaseObjectFromTarget(target);\n                this.throwDatabaseOpenError(reject, database);\n                resolve(database);\n            };\n            request.onupgradeneeded = ({ target }) => {\n                const database = this.getDatabaseObjectFromTarget(target);\n                this.throwDatabaseOpenError(reject, database);\n                database?.createObjectStore(this.objectStoreName);\n            };\n        });\n    }\n    async setItem(key, value) {\n        if (!this.db) {\n            throw new Error(\"Database is not initialized\");\n        }\n        const transaction = this.db.transaction(this.objectStoreName, \"readwrite\");\n        const objectStore = transaction.objectStore(this.objectStoreName);\n        return new Promise((resolve, reject) => {\n            const request = objectStore.put(value, key);\n            request.onerror = reject;\n            request.onsuccess = () => resolve();\n        });\n    }\n    async getItem(key) {\n        if (!this.db) {\n            throw new Error(\"Database is not initialized\");\n        }\n        const transaction = this.db.transaction(this.objectStoreName, \"readonly\");\n        const objectStore = transaction.objectStore(this.objectStoreName);\n        return new Promise((resolve, reject) => {\n            const request = objectStore.get(key);\n            request.onerror = reject;\n            request.onsuccess = () => resolve(request.result ?? null);\n        });\n    }\n    async removeItem(key) {\n        if (!this.db) {\n            throw new Error(\"Database is not initialized\");\n        }\n        const transaction = this.db.transaction(this.objectStoreName, \"readwrite\");\n        const objectStore = transaction.objectStore(this.objectStoreName);\n        return new Promise((resolve, reject) => {\n            const request = objectStore.delete(key);\n            request.onerror = reject;\n            request.onsuccess = () => resolve();\n        });\n    }\n    async clear() {\n        if (!this.db) {\n            throw new Error(\"Database is not initialized\");\n        }\n        const transaction = this.db.transaction(this.objectStoreName, \"readwrite\");\n        const objectStore = transaction.objectStore(this.objectStoreName);\n        return new Promise((resolve, reject) => {\n            const request = objectStore.clear();\n            request.onerror = reject;\n            request.onsuccess = () => resolve();\n        });\n    }\n}\n//# sourceMappingURL=IndexedDbCache.js.map","// super thin wrapper around localStorage\nexport class WebStorageCache {\n    async init() {\n        return;\n    }\n    async setItem(key, value) {\n        localStorage.setItem(key, value);\n    }\n    async getItem(key) {\n        return localStorage.getItem(key);\n    }\n    async removeItem(key) {\n        localStorage.removeItem(key);\n    }\n    async clear() {\n        localStorage.clear();\n    }\n}\n//# sourceMappingURL=WebStorageCache.js.map","export class MemoryCache {\n    constructor() {\n        this.cache = {};\n    }\n    async init() {\n        return;\n    }\n    async setItem(key, value) {\n        this.cache[key] = value;\n    }\n    async getItem(key) {\n        return this.cache[key] ?? null;\n    }\n    async removeItem(key) {\n        delete this.cache[key];\n    }\n    async clear() {\n        this.cache = {};\n    }\n}\n//# sourceMappingURL=MemoryCache.js.map","import { ConnectionStatus, } from \"@electrum-cash/network\";\nimport { Network } from \"../interface.js\";\nimport { delay } from \"../util/delay.js\";\nimport { getTransactionHash } from \"../util/transaction.js\";\nimport { Config } from \"../config.js\";\nimport { decodeHeader } from \"../util/header.js\";\nimport { IndexedDbCache } from \"../cache/IndexedDbCache.js\";\nimport { WebStorageCache } from \"../cache/WebStorageCache.js\";\nimport { MemoryCache } from \"../cache/MemoryCache.js\";\nexport default class ElectrumNetworkProvider {\n    get cache() {\n        if (!Config.UseMemoryCache &&\n            !Config.UseLocalStorageCache &&\n            !Config.UseIndexedDBCache) {\n            this._cache = undefined;\n            return this._cache;\n        }\n        if (Config.UseMemoryCache && !(this._cache instanceof MemoryCache)) {\n            this._cache = new IndexedDbCache();\n            return this._cache;\n        }\n        if (Config.UseLocalStorageCache &&\n            !(this._cache instanceof WebStorageCache)) {\n            this._cache = new WebStorageCache();\n            return this._cache;\n        }\n        if (Config.UseIndexedDBCache && !(this._cache instanceof IndexedDbCache)) {\n            this._cache = new IndexedDbCache();\n            return this._cache;\n        }\n        return this._cache;\n    }\n    constructor(electrum, network = Network.MAINNET, manualConnectionManagement) {\n        this.network = network;\n        this.manualConnectionManagement = manualConnectionManagement;\n        this.subscriptions = 0;\n        this.subscribedToHeaders = false;\n        this.subscriptionMap = {};\n        if (electrum) {\n            this.electrum = electrum;\n            this.connectPromise = this.getConnectPromise();\n            this.version = this.electrum.version;\n        }\n        else {\n            throw new Error(`A electrum-cash client is required.`);\n        }\n    }\n    async getConnectPromise(_timeout = 3000) {\n        // connects to the electrum cash and waits until the connection is ready to accept requests\n        let timeoutHandle;\n        await Promise.race([\n            new Promise(async (resolve) => {\n                this.connectPromise = undefined;\n                resolve(await this.connectClient());\n            }),\n        ]);\n        clearTimeout(timeoutHandle);\n    }\n    async getUtxos(cashaddr) {\n        const result = await this.performRequest(\"blockchain.address.listunspent\", cashaddr, \"include_tokens\");\n        return result.map((utxo) => ({\n            txid: utxo.tx_hash,\n            vout: utxo.tx_pos,\n            satoshis: utxo.value,\n            height: utxo.height,\n            token: utxo.token_data\n                ? {\n                    amount: BigInt(utxo.token_data.amount),\n                    tokenId: utxo.token_data.category,\n                    capability: utxo.token_data.nft?.capability,\n                    commitment: utxo.token_data.nft?.commitment,\n                }\n                : undefined,\n        }));\n    }\n    async getBalance(cashaddr) {\n        const result = await this.performRequest(\"blockchain.address.get_balance\", cashaddr);\n        return result.confirmed + result.unconfirmed;\n    }\n    async getHeader(height, verbose = false) {\n        const key = `header-${this.network}-${height}-${verbose}`;\n        if (this.cache) {\n            const cached = await this.cache.getItem(key);\n            if (cached) {\n                return verbose ? decodeHeader(JSON.parse(cached)) : JSON.parse(cached);\n            }\n        }\n        const result = await this.performRequest(\"blockchain.header.get\", height);\n        if (this.cache) {\n            await this.cache.setItem(key, JSON.stringify(result));\n        }\n        return verbose ? decodeHeader(result) : result;\n    }\n    async getBlockHeight() {\n        return (await this.performRequest(\"blockchain.headers.get_tip\"))\n            .height;\n    }\n    async getRawTransaction(txHash, verbose = false, loadInputValues = false) {\n        const key = `tx-${this.network}-${txHash}-${verbose}-${loadInputValues}`;\n        if (this.cache) {\n            const cached = await this.cache.getItem(key);\n            if (cached) {\n                return verbose ? JSON.parse(cached) : cached;\n            }\n        }\n        try {\n            const transaction = (await this.performRequest(\"blockchain.transaction.get\", txHash, verbose));\n            if (this.cache) {\n                await this.cache.setItem(key, verbose\n                    ? JSON.stringify(transaction)\n                    : transaction);\n            }\n            if (verbose && loadInputValues) {\n                // get unique transaction hashes\n                const hashes = [...new Set(transaction.vin.map((val) => val.txid))];\n                const transactions = await Promise.all(hashes.map((hash) => this.getRawTransactionObject(hash, false)));\n                const transactionMap = new Map();\n                transactions.forEach((val) => transactionMap.set(val.hash, val));\n                transaction.vin.forEach((input) => {\n                    const output = transactionMap\n                        .get(input.txid)\n                        .vout.find((val) => val.n === input.vout);\n                    input.address = output.scriptPubKey.addresses[0];\n                    input.value = output.value;\n                    input.tokenData = output.tokenData;\n                });\n            }\n            return transaction;\n        }\n        catch (error) {\n            if (error.message.indexOf(\"No such mempool or blockchain transaction.\") > -1)\n                throw Error(`Could not decode transaction ${txHash}. It might not exist on the current blockchain (${this.network}).`);\n            else\n                throw error;\n        }\n    }\n    // gets the decoded transaction in human readable form\n    async getRawTransactionObject(txHash, loadInputValues = false) {\n        return (await this.getRawTransaction(txHash, true, loadInputValues));\n    }\n    async sendRawTransaction(txHex, awaitPropagation = true) {\n        return new Promise(async (resolve, reject) => {\n            let txHash = await getTransactionHash(txHex);\n            if (!awaitPropagation) {\n                this.performRequest(\"blockchain.transaction.broadcast\", txHex);\n                resolve(txHash);\n            }\n            else {\n                let cancel;\n                const waitForTransactionCallback = async (data) => {\n                    if (data && data[0] === txHash && data[1] !== null) {\n                        await cancel?.();\n                        resolve(txHash);\n                    }\n                };\n                cancel = await this.subscribeToTransaction(txHash, waitForTransactionCallback);\n                this.performRequest(\"blockchain.transaction.broadcast\", txHex).catch(async (error) => {\n                    await cancel?.();\n                    reject(error);\n                });\n            }\n        });\n    }\n    // Get transaction history of a given cashaddr\n    async getHistory(cashaddr, fromHeight = 0, toHeight = -1) {\n        const result = await this.performRequest(\"blockchain.address.get_history\", cashaddr, fromHeight, toHeight);\n        return result;\n    }\n    // Get the minimum fee a low-priority transaction must pay in order to be accepted to the daemon's memory pool.\n    async getRelayFee() {\n        const result = (await this.performRequest(\"blockchain.relayfee\"));\n        return result;\n    }\n    async watchAddressStatus(cashaddr, callback) {\n        const watchAddressStatusCallback = async (data) => {\n            // subscription acknowledgement is the latest known status or null if no status is known\n            // status is an array: [ cashaddr, statusHash ]\n            if (data instanceof Array) {\n                const addr = data[0];\n                if (addr !== cashaddr) {\n                    return;\n                }\n                const status = data[1];\n                callback(status);\n            }\n        };\n        return this.subscribeToAddress(cashaddr, watchAddressStatusCallback);\n    }\n    async watchAddress(cashaddr, callback) {\n        const historyMap = {};\n        this.getHistory(cashaddr).then((history) => history.forEach((val) => (historyMap[val.tx_hash] = true)));\n        const watchAddressStatusCallback = async () => {\n            const newHistory = await this.getHistory(cashaddr);\n            // sort history to put unconfirmed transactions in the beginning, then transactions in block height descenting order\n            const txHashes = newHistory\n                .sort((a, b) => a.height <= 0 || b.height <= 0 ? -1 : b.height - a.height)\n                .map((val) => val.tx_hash);\n            for (const hash of txHashes) {\n                if (!(hash in historyMap)) {\n                    historyMap[hash] = true;\n                    callback(hash);\n                    // exit early to prevent further map lookups\n                    break;\n                }\n            }\n        };\n        return this.watchAddressStatus(cashaddr, watchAddressStatusCallback);\n    }\n    async watchAddressTransactions(cashaddr, callback) {\n        return this.watchAddress(cashaddr, async (txHash) => {\n            const tx = await this.getRawTransactionObject(txHash);\n            callback(tx);\n        });\n    }\n    async watchAddressTokenTransactions(cashaddr, callback) {\n        return this.watchAddress(cashaddr, async (txHash) => {\n            const tx = await this.getRawTransactionObject(txHash, true);\n            if (tx.vin.some((val) => val.tokenData) ||\n                tx.vout.some((val) => val.tokenData)) {\n                callback(tx);\n            }\n        });\n    }\n    // watch for block headers and block height, if `skipCurrentHeight` is set, the notification about current block will not arrive\n    async watchBlocks(callback, skipCurrentHeight = true) {\n        let acknowledged = !skipCurrentHeight;\n        const waitForBlockCallback = (_header) => {\n            if (!acknowledged) {\n                acknowledged = true;\n                return;\n            }\n            _header = _header instanceof Array ? _header[0] : _header;\n            callback(_header);\n        };\n        return this.subscribeToHeaders(waitForBlockCallback);\n    }\n    // Wait for the next block or a block at given blockchain height.\n    async waitForBlock(height) {\n        return new Promise(async (resolve) => {\n            let cancelWatch;\n            if (this.electrum.chainHeight && !height) {\n                height = this.electrum.chainHeight + 1;\n            }\n            cancelWatch = await this.watchBlocks(async (header) => {\n                if (!height) {\n                    height = header.height + 1;\n                    return;\n                }\n                if (header.height >= height) {\n                    await cancelWatch?.();\n                    resolve(header);\n                    return;\n                }\n            });\n        });\n    }\n    // subscribe to notifications sent when new block is found, the block header is sent to callback\n    async subscribeToHeaders(callback) {\n        return this.subscribeRequest(\"blockchain.headers.subscribe\", callback);\n    }\n    async subscribeToAddress(cashaddr, callback) {\n        return this.subscribeRequest(\"blockchain.address.subscribe\", callback, cashaddr);\n    }\n    async subscribeToTransaction(txHash, callback) {\n        return this.subscribeRequest(\"blockchain.transaction.subscribe\", callback, txHash);\n    }\n    async performRequest(name, ...parameters) {\n        await this.ready();\n        const requestTimeout = new Promise(function (_resolve, reject) {\n            setTimeout(function () {\n                reject(\"electrum-cash request timed out, retrying\");\n            }, 30000);\n        }).catch(function (e) {\n            throw e;\n        });\n        const request = this.electrum.request(name, ...parameters);\n        return await Promise.race([request, requestTimeout])\n            .then((value) => {\n            if (value instanceof Error)\n                throw value;\n            let result = value;\n            return result;\n        })\n            .catch(async () => {\n            // console.warn(\n            //   \"initial electrum-cash request attempt timed out, retrying...\"\n            // );\n            return await Promise.race([request, requestTimeout])\n                .then((value) => {\n                if (value instanceof Error)\n                    throw value;\n                let result = value;\n                return result;\n            })\n                .catch(function (e) {\n                throw e;\n            });\n        });\n    }\n    async trackSubscription(methodName, ...parameters) {\n        const key = `${methodName}-${this.network}-${JSON.stringify(parameters)}`;\n        if (this.subscriptionMap[key]) {\n            this.subscriptionMap[key]++;\n        }\n        else {\n            this.subscriptionMap[key] = 1;\n        }\n        await this.electrum.subscribe(methodName, ...parameters);\n    }\n    async untrackSubscription(methodName, ...parameters) {\n        const key = `${methodName}-${this.network}-${JSON.stringify(parameters)}`;\n        if (this.subscriptionMap[key]) {\n            this.subscriptionMap[key]--;\n            if (this.subscriptionMap[key] <= 0) {\n                // only really unsubscribe if there are no more subscriptions for this `key`\n                delete this.subscriptionMap[key];\n                try {\n                    await this.electrum.unsubscribe(methodName, ...parameters);\n                }\n                catch { }\n            }\n        }\n    }\n    async subscribeRequest(methodName, callback, ...parameters) {\n        await this.ready();\n        const handler = (data) => {\n            if (data.method === methodName) {\n                callback(data.params);\n            }\n        };\n        this.electrum.on(\"notification\", handler);\n        // safeguard against multiple subscriptions to headers\n        if (methodName === \"blockhain.headers.subscribe\") {\n            if (!this.subscribedToHeaders) {\n                this.subscribedToHeaders = true;\n                await this.trackSubscription(methodName, ...parameters);\n            }\n        }\n        else {\n            await this.trackSubscription(methodName, ...parameters);\n        }\n        this.subscriptions++;\n        return async () => {\n            this.electrum.off(\"notification\", handler);\n            this.subscriptions--;\n            // there are no blockchain.headers.unsubscribe method, so let's safeguard against it\n            if (methodName !== \"blockchain.headers.subscribe\") {\n                await this.untrackSubscription(methodName, ...parameters);\n            }\n        };\n    }\n    async ready() {\n        return this.connect();\n    }\n    async connect() {\n        await this.cache?.init();\n        return await this.connectPromise;\n    }\n    disconnect() {\n        if (this.subscriptions > 0) {\n            // console.warn(\n            //   `Trying to disconnect a network provider with ${this.subscriptions} active subscriptions. This is in most cases a bad idea.`\n            // );\n        }\n        return this.disconnectClient();\n    }\n    async readyClient(timeout) {\n        timeout = typeof timeout !== \"undefined\" ? timeout : 3000;\n        let connectPromise = async () => {\n            while (this.electrum.status !== ConnectionStatus.CONNECTED) {\n                await delay(100);\n            }\n            return true;\n        };\n        return connectPromise;\n    }\n    async connectClient() {\n        let connectionPromise = async () => {\n            try {\n                return await this.electrum.connect();\n            }\n            catch (e) {\n                console.warn(`Warning: Failed to connect to client on ${this.network} at ${this.electrum.hostIdentifier}.`, e);\n                return;\n            }\n        };\n        return connectionPromise();\n    }\n    async disconnectClient() {\n        return this.electrum.disconnect(true, false);\n    }\n}\n//# sourceMappingURL=ElectrumNetworkProvider.js.map","export const bchParam = {\n    subUnits: 100000000,\n};\n//# sourceMappingURL=chain.js.map","import { CashAddressNetworkPrefix } from \"@bitauth/libauth\";\nexport var NetworkType;\n(function (NetworkType) {\n    NetworkType[\"Mainnet\"] = \"mainnet\";\n    NetworkType[\"Testnet\"] = \"testnet\";\n    NetworkType[\"Regtest\"] = \"regtest\";\n})(NetworkType || (NetworkType = {}));\nexport var NetworkEnum;\n(function (NetworkEnum) {\n    NetworkEnum[NetworkEnum[\"Mainnet\"] = \"mainnet\"] = \"Mainnet\";\n    NetworkEnum[NetworkEnum[\"Testnet\"] = \"testnet\"] = \"Testnet\";\n    NetworkEnum[NetworkEnum[\"Regtest\"] = \"regtest\"] = \"Regtest\";\n    NetworkEnum[NetworkEnum[\"Simtest\"] = \"simtest\"] = \"Simtest\";\n})(NetworkEnum || (NetworkEnum = {}));\nexport const networkPrefixMap = {\n    bitcoincash: \"mainnet\",\n    bchtest: \"testnet\",\n    bchreg: \"regtest\",\n};\nexport const prefixFromNetworkMap = {\n    mainnet: CashAddressNetworkPrefix.mainnet,\n    testnet: CashAddressNetworkPrefix.testnet,\n    regtest: CashAddressNetworkPrefix.regtest,\n};\nconst literal = (l) => l;\nexport const UnitEnum = {\n    BCH: literal(\"bch\"),\n    USD: literal(\"usd\"),\n    BIT: literal(\"bit\"),\n    BITS: literal(\"bits\"),\n    SAT: literal(\"sat\"),\n    SATS: literal(\"sats\"),\n    SATOSHI: literal(\"satoshi\"),\n    SATOSHIS: literal(\"satoshis\"),\n};\n//# sourceMappingURL=enum.js.map","export default class ExchangeRateProvider {\n    /*\n     *   Exchange Rate functions\n     */\n    async getRate(symbol) {\n        const valueString = localStorage.getItem(`rate-${symbol}`);\n        if (valueString) {\n            return JSON.parse(valueString);\n        }\n        return undefined;\n    }\n    async setRate(symbol, rate, ttl) {\n        localStorage.setItem(`rate-${symbol}`, JSON.stringify({ symbol: symbol, rate: rate, ttl: ttl }));\n        return true;\n    }\n}\n//# sourceMappingURL=ExchangeRateProvider.js.map","import { EXCHANGE_RATE_TTL } from \"../constant.js\";\nimport { RuntimePlatform, getRuntimePlatform, } from \"../util/getRuntimePlatform.js\";\nimport ExchangeRateProvider from \"../db/ExchangeRateProvider.js\";\nexport class ExchangeRate {\n    constructor({ symbol, rate, ttl, }) {\n        this.symbol = symbol;\n        this.rate = rate;\n        this.ttl = ttl;\n    }\n    toString() {\n        this.rate.toFixed(2);\n    }\n    static async get(symbol, useCache = true) {\n        const platform = getRuntimePlatform();\n        if (platform === RuntimePlatform.browser) {\n            try {\n                return await this.getRateFromLocalStorage(symbol, useCache);\n            }\n            catch {\n                return await this.getRateFromGlobalScope(symbol, useCache);\n            }\n        }\n        else {\n            return await this.getRateFromGlobalScope(symbol, useCache);\n        }\n    }\n    static async getRateFromLocalStorage(symbol, useCache = true) {\n        if (!useCache) {\n            return await getRateFromExchange(symbol);\n        }\n        let cache = new ExchangeRateProvider();\n        let cacheRate = await cache.getRate(symbol);\n        if (cacheRate) {\n            // if the cache is still good, return it\n            if (cacheRate.ttl > Date.now()) {\n                return cacheRate.rate;\n            }\n            // else fall through\n        }\n        let freshRate = await getRateFromExchange(symbol);\n        cache.setRate(symbol, freshRate, getTtl());\n        return freshRate;\n    }\n    static async getRateFromGlobalScope(symbol, useCache = true) {\n        if (!useCache) {\n            return await getRateFromExchange(symbol);\n        }\n        if (globalThis.RATE) {\n            let rateObject = globalThis.RATE;\n            if (symbol in rateObject) {\n                let cachedRate = rateObject[symbol];\n                // If the cache is still good return ie\n                if (cachedRate.ttl > Date.now()) {\n                    return cachedRate.rate;\n                }\n            }\n        }\n        let freshRate = await getRateFromExchange(symbol);\n        this.cacheRateInGlobalScope(symbol, freshRate);\n        return freshRate;\n    }\n    static cacheRateInGlobalScope(symbol, rate) {\n        if (!globalThis.RATE) {\n            globalThis.RATE = {};\n        }\n        else {\n            globalThis.RATE[symbol] = {\n                symbol: symbol,\n                rate: rate,\n                ttl: getTtl(),\n            };\n        }\n    }\n}\nexport function getTtl() {\n    return Math.trunc(Date.now() + EXCHANGE_RATE_TTL);\n}\n// Attempt to get the usd rate from some web app\nexport async function getRateFromExchange(symbol) {\n    if (symbol.length > 0) {\n        symbol = symbol.toLocaleLowerCase();\n    }\n    if (symbol === \"usd\") {\n        try {\n            const response = await fetch(\"https://markets.api.bitcoin.com/live/bitcoin\");\n            const data = await response.json();\n            return data[\"data\"][\"BCH\"];\n        }\n        catch { }\n    }\n    const response = await fetch(\"https://bitpay.com/rates/BCH\");\n    const data = (await response.json());\n    const rates = data.data.reduce((acc, rate) => ({ ...acc, [rate.code.toLocaleLowerCase()]: rate.rate }), {});\n    if (symbol in rates) {\n        return rates[symbol];\n    }\n    throw Error(`Currency '${symbol}' is not supported.`);\n}\n// do not await and do not throw in case we are offline\nExchangeRate.get(\"usd\").catch(() => { });\n//# sourceMappingURL=ExchangeRate.js.map","export function sanitizeUnit(rawUnit) {\n    if (rawUnit) {\n        return rawUnit.toLocaleLowerCase();\n    }\n    else {\n        throw Error(\"Attempted to sanitize a unit of value, but the unit was undefined.\");\n    }\n}\n//# sourceMappingURL=sanitizeUnit.js.map","import { bchParam } from \"../chain.js\";\nimport { UnitEnum } from \"../enum.js\";\nimport { ExchangeRate } from \"../rate/ExchangeRate.js\";\nimport { sanitizeUnit } from \"../util/sanitizeUnit.js\";\n/**\n * converts given value and unit into satoshi\n *\n * @param {value} number           some value\n * @param {rawUnit} any            the unit of value\n *\n * @returns a promise to the value in satoshi\n */\nexport async function amountInSatoshi(value, rawUnit) {\n    const unit = sanitizeUnit(rawUnit);\n    switch (unit) {\n        case UnitEnum.BCH:\n            return Math.round(value * bchParam.subUnits);\n        case UnitEnum.SATOSHI:\n            return value;\n        case UnitEnum.SAT:\n            return value;\n        case UnitEnum.SATS:\n            return value;\n        case UnitEnum.SATOSHIS:\n            return value;\n        default:\n            const Currency_over_BCH = await ExchangeRate.get(rawUnit);\n            const SAT_over_BCH = bchParam.subUnits;\n            return Math.round(Number(value * (SAT_over_BCH / Currency_over_BCH)));\n    }\n}\n//# sourceMappingURL=amountInSatoshi.js.map","import { ripemd160, sha256 } from \"@bitauth/libauth\";\n/**\n * hash160 - Calculate the sha256, ripemd160 hash of a value\n *\n * @param {message} Uint8Array       value to hash as a binary array\n *\n * @returns a promise to the hash160 value of the input\n */\nexport function hash160(message) {\n    return ripemd160.hash(sha256.hash(message));\n}\n//# sourceMappingURL=hash160.js.map","import { CashAddressType, decodeCashAddress, encodeCashAddress, secp256k1, } from \"@bitauth/libauth\";\nimport { prefixFromNetworkMap } from \"../enum.js\";\nimport { hash160 } from \"./hash160.js\";\nexport function isValidAddress(cashaddr) {\n    const result = decodeCashAddress(cashaddr);\n    if (typeof result === \"string\") {\n        return false;\n    }\n    return true;\n}\nexport function deriveCashaddr(privateKey, networkPrefix) {\n    let publicKey = secp256k1.derivePublicKeyCompressed(privateKey);\n    if (typeof publicKey === \"string\") {\n        throw new Error(publicKey);\n    }\n    let pkh = hash160(publicKey);\n    return encodeCashAddress({\n        prefix: networkPrefix,\n        type: CashAddressType.p2pkh,\n        payload: pkh,\n    }).address;\n}\nexport function deriveTokenaddr(key, networkPrefix) {\n    let publicKeyHash;\n    // private key\n    if (key.length === 32) {\n        let publicKeyCompressed = secp256k1.derivePublicKeyCompressed(key);\n        if (typeof publicKeyCompressed === \"string\") {\n            throw new Error(publicKeyCompressed);\n        }\n        publicKeyHash = hash160(publicKeyCompressed);\n    }\n    else if (key.length === 65) {\n        // uncompressed public key\n        let publicKeyCompressed = secp256k1.compressPublicKey(key);\n        if (typeof publicKeyCompressed === \"string\") {\n            throw new Error(publicKeyCompressed);\n        }\n        publicKeyHash = hash160(publicKeyCompressed);\n    }\n    else if (key.length === 33) {\n        // compressed public key\n        publicKeyHash = hash160(key);\n    }\n    else if (key.length === 20) {\n        // public key hash\n        publicKeyHash = key;\n    }\n    else {\n        throw new Error(\"Unsupported type of key\");\n    }\n    return encodeCashAddress({\n        prefix: networkPrefix,\n        type: CashAddressType.p2pkhWithTokens,\n        payload: publicKeyHash,\n    }).address;\n}\nfunction decodeAddress(address) {\n    const result = decodeCashAddress(address);\n    if (typeof result === \"string\") {\n        throw new Error(result);\n    }\n    return result;\n}\nexport function toCashaddr(address) {\n    const result = decodeAddress(address);\n    return encodeCashAddress({\n        prefix: result.prefix,\n        type: result.type.replace(\"WithTokens\", \"\"),\n        payload: result.payload,\n    }).address;\n}\nexport function toTokenaddr(address) {\n    const result = decodeAddress(address);\n    return encodeCashAddress({\n        prefix: result.prefix,\n        type: (result.type.replace(\"WithTokens\", \"\") +\n            \"WithTokens\"),\n        payload: result.payload,\n    }).address;\n}\nexport function isTokenaddr(address) {\n    const result = decodeAddress(address);\n    return result.type.endsWith(\"WithTokens\");\n}\n// This function converts a cash address to a cash address of the specified network.\n// If withTokens is true, it will return a token-aware address.\n// If withTokens is false, it will return a non-token-aware address.\n// If withTokens is undefined, it will not change the token-awareness.\nexport function convertAddress(address, network = \"mainnet\", withTokens = undefined) {\n    const result = decodeAddress(address);\n    return encodeCashAddress({\n        prefix: prefixFromNetworkMap[network],\n        type: withTokens === undefined\n            ? result.type\n            : (result.type.replace(\"WithTokens\", \"\") +\n                (withTokens ? \"WithTokens\" : \"\")),\n        payload: result.payload,\n    }).address;\n}\nexport function checkTokenaddr(cashaddr, enforce) {\n    if (enforce && !isTokenaddr(cashaddr)) {\n        throw new Error(\"Error trying to send to a non-tokenaware cash address\");\n    }\n}\n//# sourceMappingURL=deriveCashaddr.js.map","import { sanitizeUnit } from \"../util/sanitizeUnit.js\";\nimport { DELIMITER } from \"../constant.js\";\nimport { binToNumberUint16LE, binToUtf8, hexToBin, utf8ToBin, } from \"@bitauth/libauth\";\nimport { Config } from \"../config.js\";\nimport { checkTokenaddr } from \"../util/deriveCashaddr.js\";\nexport class SendRequest {\n    constructor({ cashaddr, value, unit, }) {\n        this.cashaddr = cashaddr;\n        this.value = value;\n        this.unit = sanitizeUnit(unit);\n    }\n}\nexport class TokenGenesisRequest {\n    constructor({ amount, capability, commitment, cashaddr, value, }) {\n        this.amount = amount;\n        this.capability = capability;\n        this.commitment = commitment;\n        this.cashaddr = cashaddr;\n        this.value = value;\n    }\n}\nexport class TokenBurnRequest {\n    constructor({ tokenId, capability, commitment, amount, cashaddr, }) {\n        this.tokenId = tokenId;\n        this.capability = capability;\n        this.commitment = commitment;\n        this.amount = amount ? BigInt(amount) : 0n;\n        this.cashaddr = cashaddr;\n    }\n}\nexport class TokenSendRequest {\n    constructor({ cashaddr, value, amount, tokenId, capability, commitment, }) {\n        checkTokenaddr(cashaddr, Config.EnforceCashTokenReceiptAddresses);\n        this.cashaddr = cashaddr;\n        this.value = value;\n        this.amount = amount ? BigInt(amount) : 0n;\n        this.tokenId = tokenId;\n        this.capability = capability;\n        this.commitment = commitment;\n    }\n}\nexport class TokenMintRequest {\n    constructor({ capability, commitment, cashaddr, value, }) {\n        this.capability = capability;\n        this.commitment = commitment;\n        this.cashaddr = cashaddr;\n        this.value = value;\n    }\n}\nexport class OpReturnData {\n    constructor(buffer) {\n        this.buffer = Uint8Array.from(buffer);\n    }\n    /**\n     * from - Construct OP_RETURN data from arbitrary data type\n     *\n     * @param string   UTF-8 encoded string message to be converted to OP_RETURN data\n     *\n     * @returns class instance\n     */\n    static from(data) {\n        return this.fromArray([data]);\n    }\n    /**\n     * fromString - Accept data as a simple UTF-8 string message and append an OP_RETURN and PUSH_DATA1 opcodes to it\n     *\n     * @param string   UTF-8 encoded string message to be converted to OP_RETURN data\n     *\n     * @returns class instance\n     */\n    static fromString(string) {\n        return this.fromArray([string]);\n    }\n    /**\n     * buffer - Accept OP_RETURN data as a binary buffer.\n     * If buffer lacks the OP_RETURN and OP_PUSHDATA opcodes, they will be prepended.\n     *\n     * @param buffer   Data buffer to be assigned to the OP_RETURN outpit\n     *\n     * @returns class instance\n     */\n    static fromUint8Array(uint8Array) {\n        if (uint8Array[0] !== 0x6a) {\n            return this.fromArray([uint8Array]);\n        }\n        return new this(Uint8Array.from(uint8Array));\n    }\n    /**\n     * fromArray - Accept array of data\n     *\n     * @param array   Array of Uint8Array or UTF-8 encoded string messages to be converted to OP_RETURN data\n     *\n     * @returns class instance\n     */\n    static fromArray(array) {\n        let data = Uint8Array.from([0x6a]); // OP_RETURN\n        for (const element of array) {\n            let length;\n            let elementData;\n            let lengthData;\n            if (typeof element === \"string\") {\n                elementData = utf8ToBin(element);\n                length = elementData.length;\n            }\n            else if (element instanceof Uint8Array) {\n                elementData = element;\n                length = elementData.length;\n            }\n            else {\n                throw new Error(\"Wrong data array element\");\n            }\n            if (length < 76) {\n                // OP_PUSHDATA_1\n                lengthData = [length];\n            }\n            else if (length < 223) {\n                // default max `-datacarriersize`\n                lengthData = [0x4c, length];\n            }\n            else {\n                throw new Error(\"OP_RETURN data can not exceed 220 bytes in size\");\n            }\n            data = Uint8Array.from([...data, ...lengthData, ...elementData]);\n        }\n        if (data.length > 220) {\n            throw new Error(\"OP_RETURN data can not exceed 220 bytes in size\");\n        }\n        return new this(data);\n    }\n    /**\n     * parseBinary - parse OP_RETURN data and return pushed chunks of binary data\n     *\n     * @param opReturn   Raw OP_RETURN data\n     *\n     * @returns array of binary data chunks pushed\n     */\n    static parseBinary(opReturn) {\n        const chunks = [];\n        let position = 1;\n        // handle direct push, OP_PUSHDATA1, OP_PUSHDATA2;\n        // OP_PUSHDATA4 is not supported in OP_RETURNs by consensus\n        while (opReturn[position]) {\n            let length = 0;\n            if (opReturn[position] === 0x4c) {\n                length = opReturn[position + 1];\n                position += 2;\n            }\n            else if (opReturn[position] === 0x4d) {\n                length = binToNumberUint16LE(opReturn.slice(position + 1, position + 3));\n                position += 3;\n            }\n            else {\n                length = opReturn[position];\n                position += 1;\n            }\n            chunks.push(opReturn.slice(position, position + length));\n            position += length;\n        }\n        return chunks;\n    }\n    /**\n     * parse - parse OP_RETURN hex data and return pushed chunks of binary data, converted to utf8 strings\n     *\n     * @param opReturn   Raw OP_RETURN hex data\n     *\n     * @returns array of binary data chunks pushed, converted to utf8 strings\n     */\n    static parse(opReturnHex) {\n        return this.parseBinary(hexToBin(opReturnHex)).map((val) => binToUtf8(val));\n    }\n}\nexport class SendResponse {\n    constructor({ txId, balance, explorerUrl, }) {\n        this.txId = txId;\n        this.balance = balance;\n        this.explorerUrl = explorerUrl;\n    }\n}\nexport class XPubKey {\n    constructor({ path, xPubKey }) {\n        this.path = path;\n        this.xPubKey = xPubKey;\n    }\n    async ready() {\n        await this.xPubKey;\n        return this.asObject();\n    }\n    asObject() {\n        return {\n            path: this.path,\n            xPubKey: this.xPubKey,\n        };\n    }\n}\nexport const fromUtxoId = (utxoId) => {\n    const [txid, vout, satoshis, tokenId, amount, capability, commitment] = utxoId.split(DELIMITER);\n    return {\n        satoshis: satoshis ? parseInt(satoshis) : 0,\n        vout: parseInt(vout),\n        txid,\n        token: tokenId\n            ? {\n                tokenId,\n                amount: BigInt(amount),\n                capability: capability || undefined,\n                commitment: commitment || undefined,\n            }\n            : undefined,\n    };\n};\nexport const toUtxoId = (utxo) => {\n    return [\n        utxo.txid,\n        utxo.vout,\n        utxo.satoshis,\n        utxo.token?.tokenId,\n        utxo.token?.amount,\n        utxo.token?.capability,\n        utxo.token?.commitment,\n    ]\n        .join(DELIMITER)\n        .replace(/:+$/, \"\");\n};\n//# sourceMappingURL=model.js.map","import { base64ToBin } from \"@bitauth/libauth\";\nimport { OpReturnData, SendRequest, TokenSendRequest, } from \"../wallet/model.js\";\nexport function asSendRequestObject(requests) {\n    let resp = [];\n    if (Array.isArray(requests)) {\n        requests.forEach((r) => {\n            // the SendRequestArray[] case\n            if (Array.isArray(r)) {\n                if (r[0] === \"OP_RETURN\") {\n                    // ['OP_RETURN', utf8ToBin('MEMO\\x10')],\n                    resp.push(OpReturnData.from(r[1]));\n                }\n                else if (r[0] === \"OP_RETURNB64\") {\n                    resp.push(OpReturnData.fromUint8Array(Uint8Array.from(base64ToBin(r[1]))));\n                }\n                else {\n                    // ['cashaddr', 120, 'sats'],\n                    resp.push(new SendRequest({\n                        cashaddr: r[0],\n                        value: r[1],\n                        unit: r[2],\n                    }));\n                }\n            }\n            else {\n                // SendRequest | TokenSendRequest | OpReturnRequest case\n                resp.push(convertToClass(r));\n            }\n        });\n    }\n    else {\n        // the SendRequest | OpReturnData object case\n        resp.push(convertToClass(requests));\n    }\n    return resp;\n}\nfunction convertToClass(object) {\n    if (object.hasOwnProperty(\"unit\")) {\n        return new SendRequest(object);\n    }\n    else if (object.hasOwnProperty(\"tokenId\")) {\n        return new TokenSendRequest(object);\n    }\n    else if (object.hasOwnProperty(\"buffer\")) {\n        return OpReturnData.fromUint8Array(object.buffer);\n    }\n    // endcoding in REST\n    else if (object.hasOwnProperty(\"dataString\")) {\n        return OpReturnData.fromString(object.dataString);\n    }\n    else if (object.hasOwnProperty(\"dataBuffer\")) {\n        return OpReturnData.fromUint8Array(Uint8Array.from(base64ToBin(object.dataBuffer)));\n    }\n    throw new Error(\"Unsupported send object\");\n}\n//# sourceMappingURL=asSendRequestObject.js.map","import { bchParam } from \"../chain.js\";\nimport { UnitEnum } from \"../enum.js\";\nimport { ExchangeRate } from \"../rate/ExchangeRate.js\";\nimport { sanitizeUnit } from \"../util/sanitizeUnit.js\";\n/**\n * converts given value and unit from satoshi\n *\n * @param {value} number           some value in satoshi\n * @param {rawUnit} any            the target unit\n *\n * @returns a promise to the value in the unit of account given by rawUnit\n */\nexport async function satoshiToAmount(value, rawUnit) {\n    const unit = sanitizeUnit(rawUnit);\n    switch (unit) {\n        case UnitEnum.BCH:\n            return value / bchParam.subUnits;\n        case UnitEnum.SATOSHI:\n            return value;\n        case UnitEnum.SAT:\n            return value;\n        case UnitEnum.SATS:\n            return value;\n        case UnitEnum.SATOSHIS:\n            return value;\n        default:\n            const Currency_over_BCH = await ExchangeRate.get(rawUnit);\n            // truncate currency amounts to fixed precision (2),\n            // then return the fixed value string as a float.\n            const currencyValue = Number(value * (Currency_over_BCH / bchParam.subUnits)).toFixed(2);\n            return Number.parseFloat(currencyValue);\n    }\n}\n//# sourceMappingURL=satoshiToAmount.js.map","import { amountInSatoshi } from \"./amountInSatoshi.js\";\nimport { satoshiToAmount } from \"./satoshiToAmount.js\";\n/**\n * convert transforms unit of measurement for some monetary value\n *\n * @param {value} number           amount to convert\n * @param {from} any               unit of measurement to convert from\n * @param {to} any                 unit of measurement to convert to\n *\n * @returns a promise to the value in \"to\" units\n */\nexport async function convert(value, from, to) {\n    let satoshi = await amountInSatoshi(value, from);\n    return satoshiToAmount(satoshi, to);\n}\nexport async function convertObject({ value, from, to, }) {\n    return await convert(value, from, to);\n}\n//# sourceMappingURL=convert.js.map","import { decodeCashAddressFormat, decodeCashAddressFormatWithoutPrefix, } from \"@bitauth/libauth\";\n/**\n * Helper function to convert an address to a public key hash\n *\n * @param address   Address to convert to a hash\n *\n * @returns a public key hash corresponding to the passed address\n */\nexport function derivePublicKeyHash(address) {\n    let result;\n    // If the address has a prefix decode it as is\n    if (address.includes(\":\")) {\n        result = decodeCashAddressFormat(address);\n    }\n    // otherwise, derive the network from the address without prefix\n    else {\n        result = decodeCashAddressFormatWithoutPrefix(address);\n    }\n    if (typeof result === \"string\")\n        throw new Error(result);\n    // return the public key hash\n    return result.payload;\n}\n/**\n * Helper function to convert an address prefix\n *\n * @param address   Address with or without prefix\n *\n * @returns the address prefix\n */\nexport function derivePrefix(address) {\n    let result;\n    if (address.includes(\":\")) {\n        result = decodeCashAddressFormat(address);\n    }\n    else {\n        result = decodeCashAddressFormatWithoutPrefix(address);\n    }\n    if (typeof result === \"string\")\n        throw new Error(result);\n    // TODO pass the network in and check it or raise Error\n    return result.prefix;\n}\n//# sourceMappingURL=derivePublicKeyHash.js.map","import { deriveHdPrivateNodeFromSeed, deriveHdPath, deriveHdPublicNode, encodeHdPublicKey, hexToBin, } from \"@bitauth/libauth\";\nexport function getXPubKey(seed, derivationPath, network) {\n    if (typeof seed === \"string\") {\n        seed = hexToBin(seed);\n    }\n    let hdNode = deriveHdPrivateNodeFromSeed(seed, {\n        assumeValidity: true, // TODO: we should switch to libauth's BIP39 implementation and set this to false\n        throwErrors: true,\n    });\n    let node = deriveHdPath(hdNode, derivationPath);\n    if (typeof node === \"string\") {\n        throw node;\n    }\n    let parentPublicNode = deriveHdPublicNode(node);\n    let xPubKey = encodeHdPublicKey({\n        network: network,\n        node: parentPublicNode,\n    }, {\n        throwErrors: true,\n    }).hdPublicKey;\n    return xPubKey;\n}\n//# sourceMappingURL=getXPubKey.js.map","export function sumUtxoValue(utxos) {\n    if (utxos.length > 0) {\n        const balanceArray = utxos.map((o) => {\n            return o.satoshis;\n        });\n        const balance = balanceArray.reduce((a, b) => a + b, 0);\n        return balance;\n    }\n    else {\n        return 0;\n    }\n}\nexport function sumTokenAmounts(utxos, tokenId) {\n    if (utxos.length > 0) {\n        const tokenArray = utxos\n            .filter((utxo) => utxo.token?.tokenId === tokenId)\n            .map((o) => {\n            return o.token?.amount || 0n;\n        });\n        const balance = tokenArray.reduce((a, b) => a + b, 0n);\n        return balance;\n    }\n    else {\n        return 0n;\n    }\n}\n//# sourceMappingURL=sumUtxoValue.js.map","export function floor(value, precision) {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.floor(value * multiplier) / multiplier;\n}\n//# sourceMappingURL=floor.js.map","import { bchParam } from \"../chain.js\";\nimport { UnitEnum } from \"../enum.js\";\nimport { floor } from \"./floor.js\";\nimport { ExchangeRate } from \"../rate/ExchangeRate.js\";\nimport { sanitizeUnit } from \"./sanitizeUnit.js\";\nimport { Config } from \"../config.js\";\nexport async function balanceResponseFromSatoshi(value, priceCache = true) {\n    const response = {};\n    response.bch = value / bchParam.subUnits;\n    response.sat = value;\n    const currencyValue = (value / bchParam.subUnits) *\n        (await ExchangeRate.get(Config.DefaultCurrency, priceCache));\n    response[Config.DefaultCurrency] = floor(currencyValue, 2);\n    return response;\n}\nexport async function balanceFromSatoshi(value, rawUnit, priceCache = true) {\n    const unit = sanitizeUnit(rawUnit);\n    switch (unit) {\n        case UnitEnum.BCH:\n            return value / bchParam.subUnits;\n        case UnitEnum.SAT:\n            return value;\n        case UnitEnum.SATS:\n            return value;\n        case UnitEnum.SATOSHI:\n            return value;\n        case UnitEnum.SATOSHIS:\n            return value;\n        default:\n            const currencyValue = (value / bchParam.subUnits) *\n                (await ExchangeRate.get(Config.DefaultCurrency, priceCache));\n            return Number(currencyValue.toFixed(2));\n    }\n}\n//# sourceMappingURL=balanceObjectFromSatoshi.js.map","export const ELECTRUM_CASH_PROTOCOL_VERSION = \"1.5\";\nexport const networkTickerMap = {\n    mainnet: \"BCH\",\n    testnet: \"tBCH\",\n    regtest: \"rBCH\",\n};\nexport const mainnetServers = [\n    \"wss://bch.imaginary.cash:50004\",\n    //\"wss://blackie.c3-soft.com:50004\",\n    // \"wss://electrum.imaginary.cash:50004\",\n    // \"wss://fulcrum.fountainhead.cash\",\n];\n// export const testnetServers = [\n//   // \"wss://tbch.loping.net:60004\",\n//   \"wss://blackie.c3-soft.com:60004\",\n//   // \"wss://testnet.bitcoincash.network:60004\",\n//   //,\"wss://unavailable.invalid:50004\"\n// ];\n// testnet4\n// export const testnetServers = [\n//   //\"wss://t4fork.c3-soft.com:61004\",\n//   \"wss://testnet4.imaginary.cash:50004\",\n//   //,\"wss://unavailable.invalid:50004\"\n// ];\n// chipnet\nexport const testnetServers = [\n    // \"wss://chipnet.imaginary.cash:50004\",\n    //\"wss://blackie.c3-soft.com:64004\", // chipnet with protocol 1.5.0\n    \"wss://chipnet.bch.ninja:50004\",\n];\nexport const regtestServers = [\"ws://127.0.0.1:60003\"];\nexport const defaultServers = {\n    mainnet: mainnetServers,\n    testnet: testnetServers,\n    regtest: regtestServers,\n};\n//# sourceMappingURL=constant.js.map","import { getRuntimePlatform } from \"../util/index.js\";\nimport * as primary from \"./constant.js\";\nlet mainnetServers, testnetServers, regtestServers;\nexport class DefaultProvider {\n    static { this.servers = {\n        mainnet: [],\n        testnet: [],\n        regtest: [],\n    }; }\n}\nexport function getDefaultServers(network) {\n    let env;\n    if (getRuntimePlatform() == \"node\") {\n        env = process.env;\n    }\n    else {\n        env = {};\n    }\n    mainnetServers = DefaultProvider.servers.mainnet.length\n        ? DefaultProvider.servers.mainnet\n        : env.ELECTRUM\n            ? env.ELECTRUM.split(\",\")\n            : primary.mainnetServers;\n    testnetServers = DefaultProvider.servers.testnet.length\n        ? DefaultProvider.servers.testnet\n        : env.ELECTRUM_TESTNET\n            ? env.ELECTRUM_TESTNET.split(\",\")\n            : primary.testnetServers;\n    regtestServers = DefaultProvider.servers.regtest.length\n        ? DefaultProvider.servers.regtest\n        : env.ELECTRUM_REGTEST\n            ? env.ELECTRUM_REGTEST.split(\",\")\n            : primary.regtestServers;\n    return {\n        mainnet: mainnetServers,\n        testnet: testnetServers,\n        regtest: regtestServers,\n    }[network];\n}\nexport function getUserAgent() {\n    // Allow users to configure the cluster confidence\n    let ua;\n    if (getRuntimePlatform() === \"node\") {\n        ua = process.env.ELECTRUM_USER_AGENT\n            ? process.env.ELECTRUM_USER_AGENT\n            : \"mainnet-js-\" + getRuntimePlatform();\n    }\n    else {\n        ua = \"mainnet-js-\" + getRuntimePlatform();\n    }\n    return ua;\n}\nexport function getConfidence() {\n    // Allow users to configure the cluster confidence\n    let confidence;\n    if (getRuntimePlatform() === \"node\") {\n        confidence = process.env.ELECTRUM_CONFIDENCE\n            ? parseInt(process.env.ELECTRUM_CONFIDENCE)\n            : 1;\n    }\n    else {\n        confidence = 1;\n    }\n    return confidence;\n}\n//# sourceMappingURL=configuration.js.map","export function parseElectrumUrl(givenUrl) {\n    let url = new URL(givenUrl);\n    let port = parseInt(url.port || \"443\");\n    let scheme = getElectrumScheme(url.protocol);\n    return { host: url.hostname, port: port, scheme: scheme };\n}\nfunction getElectrumScheme(protocol) {\n    let transport;\n    switch (protocol) {\n        case \"http:\":\n            transport = \"tcp\";\n            break;\n        case \"https:\":\n            transport = \"tcp_tls\";\n            break;\n        case \"ws:\":\n            transport = \"ws\";\n            break;\n        case \"wss:\":\n            transport = \"wss\";\n            break;\n        default:\n            throw Error(\"Electrum transport protocol not understood.\");\n    }\n    return transport;\n}\n//# sourceMappingURL=util.js.map","import { default as ElectrumNetworkProvider } from \"./ElectrumNetworkProvider.js\";\nimport { ElectrumClient } from \"@electrum-cash/network\";\nimport { ElectrumWebSocket } from \"@electrum-cash/web-socket\";\nimport { getDefaultServers, getUserAgent } from \"./configuration.js\";\nimport { parseElectrumUrl } from \"./util.js\";\nimport { Network } from \"../interface.js\";\nimport { networkTickerMap, ELECTRUM_CASH_PROTOCOL_VERSION, } from \"./constant.js\";\nexport function setGlobalProvider(network, provider) {\n    const accessor = networkTickerMap[network];\n    globalThis[accessor] = provider;\n    return provider;\n}\nexport function getGlobalProvider(network) {\n    const accessor = networkTickerMap[network];\n    return globalThis[accessor];\n}\nexport function removeGlobalProvider(network) {\n    const accessor = networkTickerMap[network];\n    if (accessor in globalThis) {\n        delete globalThis[accessor];\n    }\n}\nexport function getNetworkProvider(network = Network.MAINNET, servers, manualConnectionManagement, options) {\n    const globalContext = servers === undefined &&\n        manualConnectionManagement === undefined &&\n        options === undefined;\n    if (globalContext) {\n        const globalProvider = getGlobalProvider(network);\n        if (globalProvider) {\n            return globalProvider;\n        }\n    }\n    manualConnectionManagement = manualConnectionManagement\n        ? manualConnectionManagement\n        : false;\n    servers = servers ? servers : getDefaultServers(network);\n    // If the user has passed a single string, assume a single client connection\n    if (typeof servers === \"string\") {\n        servers = [servers];\n    }\n    // There were server(s)\n    if (servers) {\n        const client = getClient(servers[0], network, options);\n        let provider = new ElectrumNetworkProvider(client, network, manualConnectionManagement);\n        if (globalContext) {\n            return setGlobalProvider(network, provider);\n        }\n        return provider;\n    }\n    else {\n        throw Error(\"No servers provided, defaults not available.\");\n    }\n}\n// create a client with a server\nfunction getClient(server, network, options) {\n    let url = parseElectrumUrl(server);\n    return getElectrumClient(url, options?.timeout ?? 120000, network);\n}\nfunction getElectrumClient(params, timeout, network) {\n    if (params.scheme?.includes(\"tcp\")) {\n        throw Error(\"TCP connections are not supported.\");\n    }\n    const webSocket = new ElectrumWebSocket(params.host, params.port, params.scheme === \"wss\", timeout);\n    return new ElectrumClient(getUserAgent(), ELECTRUM_CASH_PROTOCOL_VERSION, webSocket, {\n        disableBrowserConnectivityHandling: true,\n        disableBrowserVisibilityHandling: true,\n    });\n}\n//# sourceMappingURL=default.js.map","import { getNetworkProvider, setGlobalProvider, getGlobalProvider, removeGlobalProvider, } from \"./default.js\";\nimport { networkTickerMap } from \"./constant.js\";\nimport { prefixFromNetworkMap } from \"../enum.js\";\nexport async function initProvider(network) {\n    if (!getGlobalProvider(network)) {\n        const conn = new Connection(network);\n        const provider = (await conn.ready()).networkProvider;\n        setGlobalProvider(network, provider);\n        return provider;\n    }\n    return getGlobalProvider(network);\n}\nexport async function initProviders(networks) {\n    networks = networks ? networks : Object.keys(networkTickerMap);\n    let initPromises = networks.map((n) => initProvider(n));\n    await Promise.all(initPromises).catch((e) => {\n        console.warn(`Warning, couldn't establish a connection for ${e}`);\n    });\n}\nasync function disconnectProvider(network) {\n    const provider = getGlobalProvider(network);\n    if (provider) {\n        await provider.disconnect();\n        removeGlobalProvider(network);\n        return;\n    }\n    else {\n        // console.warn(\n        //   `Ignoring attempt to disconnect non-existent ${network} provider`\n        // );\n        return true;\n    }\n}\nexport async function disconnectProviders(networks) {\n    networks = networks ? networks : Object.keys(networkTickerMap);\n    let disconnectPromises = networks.map((n) => disconnectProvider(n));\n    await Promise.all(disconnectPromises);\n}\nexport class Connection {\n    constructor(network, servers) {\n        this.network = network ? network : \"mainnet\";\n        this.networkPrefix = prefixFromNetworkMap[this.network];\n        this.networkProvider = getNetworkProvider(this.network, servers, true);\n    }\n    async ready() {\n        await this.networkProvider.connect();\n        await this.networkProvider.ready();\n        return this;\n    }\n    async disconnect() {\n        await this.networkProvider.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Connection.js.map","import { binToHex, binToUtf8, decodeTransaction, hexToBin, sha256, utf8ToBin, } from \"@bitauth/libauth\";\nimport { Network } from \"../interface.js\";\nimport { initProvider } from \"../network/Connection.js\";\nimport { OpReturnData } from \"./model.js\";\nimport { Config } from \"../config.js\";\n// Implementation of CHIP-BCMR v2.0.0-draft, refer to https://github.com/bitjson/chip-bcmr\nexport class BCMR {\n    // List of tracked registries\n    static { this.metadataRegistries = []; }\n    static getRegistries() {\n        return this.metadataRegistries;\n    }\n    static resetRegistries() {\n        this.metadataRegistries = [];\n    }\n    /**\n     * fetchMetadataRegistry Fetch the BCMR registry JSON file from a remote URI, optionally verifying its content hash\n     *\n     * @param  {string} uri URI of the registry to fetch from\n     * @param  {string?} contentHash SHA256 hash of the resource the `uri` parameter points at.\n     * If specified, calculates the hash of the data fetched from `uri` and matches it with provided one.\n     * Yields an error upon mismatch.\n     *\n     * @returns {Registry} resolved registry\n     */\n    static async fetchMetadataRegistry(uri, contentHash) {\n        if (uri.indexOf(\"https://\") < 0) {\n            uri = `https://${uri}`;\n        }\n        // content hashes HTTPS Publication Outputs per spec\n        if (contentHash) {\n            // request as text and verify hash\n            const response = await fetch(uri);\n            const data = await response.text();\n            const hash = binToHex(sha256.hash(utf8ToBin(data)));\n            if (contentHash != hash) {\n                throw new Error(`Content hash mismatch for URI: ${uri}\\nreceived: ${hash}\\nrequired: ${contentHash}`);\n            }\n            return JSON.parse(data);\n        }\n        // request as JSON\n        const response = await fetch(uri);\n        const data = await response.json();\n        return data;\n    }\n    /**\n     * addMetadataRegistry Add the metadata registry to the list of tracked registries\n     *\n     * @param  {Registry} registry Registry object per schema specification, see https://raw.githubusercontent.com/bitjson/chip-bcmr/master/bcmr-v1.schema.json\n     *\n     */\n    static addMetadataRegistry(registry) {\n        if (this.metadataRegistries.some((val) => JSON.stringify(val) === JSON.stringify(registry))) {\n            return;\n        }\n        this.metadataRegistries.push(registry);\n    }\n    /**\n     * addMetadataRegistryFromUri Add the metadata registry by fetching a JSON file from a remote URI, optionally verifying its content hash\n     *\n     * @param  {string} uri URI of the registry to fetch from\n     * @param  {string?} contentHash SHA256 hash of the resource the `uri` parameter points at.\n     * If specified, calculates the hash of the data fetched from `uri` and matches it with provided one.\n     * Yields an error upon mismatch.\n     *\n     */\n    static async addMetadataRegistryFromUri(uri, contentHash) {\n        const registry = await this.fetchMetadataRegistry(uri, contentHash);\n        this.addMetadataRegistry(registry);\n    }\n    // helper function to enforce the constraints on the 0th output, decode the BCMR's OP_RETURN data\n    // returns resolved AuthChainElement\n    static makeAuthChainElement(rawTx, hash) {\n        let opReturns;\n        let spends0thOutput = false;\n        if (rawTx.hasOwnProperty(\"vout\")) {\n            const electrumTransaction = rawTx;\n            opReturns = electrumTransaction.vout\n                .filter((val) => val.scriptPubKey.type === \"nulldata\")\n                .map((val) => val.scriptPubKey.hex);\n            spends0thOutput = electrumTransaction.vin.some((val) => val.vout === 0);\n        }\n        else {\n            const libauthTransaction = rawTx;\n            opReturns = libauthTransaction.outputs\n                .map((val) => binToHex(val.lockingBytecode))\n                .filter((val) => val.indexOf(\"6a\") === 0);\n            spends0thOutput = libauthTransaction.inputs.some((val) => val.outpointIndex === 0);\n        }\n        if (!spends0thOutput) {\n            throw new Error(\"Invalid authchain transaction (does not spend 0th output of previous transaction)\");\n        }\n        const bcmrOpReturns = opReturns.filter((val) => val.indexOf(\"6a0442434d52\") === 0 ||\n            val.indexOf(\"6a4c0442434d52\") === 0 ||\n            val.indexOf(\"6a4d040042434d52\") === 0 ||\n            val.indexOf(\"6a4e0400000042434d52\") === 0);\n        if (bcmrOpReturns.length === 0) {\n            return {\n                txHash: hash,\n                contentHash: \"\",\n                uris: [],\n                httpsUrl: \"\",\n            };\n        }\n        const opReturnHex = opReturns[0];\n        const chunks = OpReturnData.parseBinary(hexToBin(opReturnHex));\n        if (chunks.length < 2) {\n            throw new Error(`Malformed BCMR output: ${opReturnHex}`);\n        }\n        const result = {\n            txHash: hash,\n            contentHash: \"\",\n            uris: [],\n            httpsUrl: \"\",\n        };\n        if (chunks.length === 2) {\n            // IPFS Publication Output\n            result.contentHash = binToHex(chunks[1]);\n            const ipfsCid = binToUtf8(chunks[1]);\n            result.uris = [`ipfs://${ipfsCid}`];\n            result.httpsUrl = `${Config.DefaultIpfsGateway}${ipfsCid}`;\n        }\n        else {\n            // URI Publication Output\n            // content hash is in OP_SHA256 byte order per spec\n            result.contentHash = binToHex(chunks[1].slice());\n            const uris = chunks.slice(2);\n            for (const uri of uris) {\n                const uriString = binToUtf8(uri);\n                result.uris.push(uriString);\n                if (result.httpsUrl) {\n                    continue;\n                }\n                if (uriString.indexOf(\"ipfs://\") === 0) {\n                    const ipfsCid = uriString.replace(\"ipfs://\", \"\");\n                    result.httpsUrl = `${Config.DefaultIpfsGateway}${ipfsCid}`;\n                }\n                else if (uriString.indexOf(\"https://\") === 0) {\n                    result.httpsUrl = uriString;\n                }\n                else if (uriString.indexOf(\"https://\") === -1) {\n                    result.httpsUrl = uriString;\n                    // case for domain name specifier, like example.com\n                    if (uriString.indexOf(\"/\") === -1) {\n                        const parts = uriString.toLowerCase().split(\".\");\n                        if (!(parts?.[0]?.indexOf(\"baf\") === 0 && parts?.[1] === \"ipfs\")) {\n                            result.httpsUrl = `${result.httpsUrl}/.well-known/bitcoin-cash-metadata-registry.json`;\n                        }\n                    }\n                    result.httpsUrl = `https://${result.httpsUrl}`;\n                }\n                else {\n                    throw new Error(`Unsupported uri type: ${uriString}`);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * buildAuthChain Build an authchain - Zeroth-Descendant Transaction Chain, refer to https://github.com/bitjson/chip-bcmr#zeroth-descendant-transaction-chains\n     * The authchain in this implementation is specific to resolve to a valid metadata registry\n     *\n     * @param  {string} options.transactionHash (required) transaction hash from which to build the auth chain\n     * @param  {Network?} options.network (default=mainnet) network to query the data from\n     * @param  {boolean?} options.resolveBase (default=false) boolean flag to indicate that autchain building should resolve and verify elements back to base or be stopped at this exact chain element\n     * @param  {boolean?} options.followToHead (default=true) boolean flag to indicate that autchain building should progress to head or be stopped at this exact chain element\n     * @param  {ElectrumRawTransaction?} options.rawTx cached raw transaction obtained previously, spares a Fulcrum call\n     * @param  {TxI[]?} options.historyCache cached address history to be reused if authchain building proceeds with the same address, spares a flurry of Fulcrum calls\n     *\n     * @returns {AuthChain} returns the resolved authchain\n     */\n    static async buildAuthChain(options) {\n        if (options.network === undefined) {\n            options.network = Network.MAINNET;\n        }\n        if (options.followToHead === undefined) {\n            options.followToHead = true;\n        }\n        if (options.resolveBase === undefined) {\n            options.resolveBase = false;\n        }\n        const provider = (await initProvider(options.network));\n        if (options.rawTx === undefined) {\n            options.rawTx = await provider.getRawTransactionObject(options.transactionHash);\n        }\n        // figure out the autchain by moving towards authhead\n        const getAuthChainChild = async () => {\n            const history = options.historyCache ||\n                (await provider.getHistory(options.rawTx.vout[0].scriptPubKey.addresses[0]));\n            const thisTx = history.find((val) => val.tx_hash === options.transactionHash);\n            let filteredHistory = history.filter((val) => val.height > 0\n                ? val.height >= thisTx.height || val.height <= 0\n                : val.height <= 0 && val.tx_hash !== thisTx.tx_hash);\n            for (const historyTx of filteredHistory) {\n                const historyRawTx = await provider.getRawTransactionObject(historyTx.tx_hash);\n                const authChainVin = historyRawTx.vin.find((val) => val.txid === options.transactionHash && val.vout === 0);\n                // if we've found continuation of authchain, we shall recurse into it\n                if (authChainVin) {\n                    // reuse queried address history if the next element in chain is the same address\n                    const historyCache = options.rawTx.vout[0].scriptPubKey.addresses[0] ===\n                        historyRawTx.vout[0].scriptPubKey.addresses[0]\n                        ? filteredHistory\n                        : undefined;\n                    // combine the authchain element with the rest obtained\n                    return { rawTx: historyRawTx, historyCache };\n                }\n            }\n            return undefined;\n        };\n        // make authchain element and combine with the rest obtained\n        let element;\n        try {\n            element = BCMR.makeAuthChainElement(options.rawTx, options.rawTx.hash);\n        }\n        catch (error) {\n            // special case for cashtoken authchain lookup by categoryId - allow to fail first lookup and inspect the genesis transaction\n            // follow authchain to head and look for BCMR outputs\n            const child = await getAuthChainChild();\n            if (child) {\n                return await BCMR.buildAuthChain({\n                    ...options,\n                    transactionHash: child.rawTx.hash,\n                    rawTx: child.rawTx,\n                    historyCache: child.historyCache,\n                });\n            }\n            else {\n                throw error;\n            }\n        }\n        let chainBase = [];\n        if (options.resolveBase) {\n            // check for accelerated path if \"authchain\" extension is in registry\n            const registry = await this.fetchMetadataRegistry(element.httpsUrl, element.contentHash);\n            if (registry.extensions &&\n                registry.extensions[\"authchain\"] &&\n                Object.keys(registry.extensions[\"authchain\"]).length) {\n                const chainTxArray = Object.values(registry.extensions[\"authchain\"]);\n                chainBase = chainTxArray\n                    .map((tx) => {\n                    const transactionBin = hexToBin(tx);\n                    const decoded = decodeTransaction(transactionBin);\n                    if (typeof decoded === \"string\") {\n                        throw new Error(`Error decoding transaction ${JSON.stringify(tx)}, ${decoded}`);\n                    }\n                    const hash = binToHex(sha256.hash(sha256.hash(transactionBin)).reverse());\n                    return { decoded, hash };\n                })\n                    .map(({ decoded, hash }) => BCMR.makeAuthChainElement(decoded, hash));\n            }\n            else {\n                // simply go back in history towards authhead\n                let stop = false;\n                let tx = { ...options.rawTx };\n                let maxElements = 10;\n                while (stop == false || maxElements === 0) {\n                    const vin = tx.vin.find((val) => val.vout === 0);\n                    tx = await provider.getRawTransactionObject(vin.txid);\n                    try {\n                        const pastElement = BCMR.makeAuthChainElement(tx, tx.hash);\n                        chainBase.unshift(pastElement);\n                        maxElements--;\n                    }\n                    catch {\n                        stop = true;\n                    }\n                }\n            }\n        }\n        // if we follow to head, we need to locate the next transaction spending our 0th output\n        // and repeat the building process recursively\n        if (options.followToHead) {\n            const child = await getAuthChainChild();\n            if (child) {\n                const chainHead = await BCMR.buildAuthChain({\n                    transactionHash: child.rawTx.hash,\n                    network: options.network,\n                    rawTx: child.rawTx,\n                    historyCache: child.historyCache,\n                    followToHead: options.followToHead,\n                    resolveBase: false,\n                });\n                // combine the authchain element with the rest obtained\n                return [...chainBase, element, ...chainHead].filter((val) => val.httpsUrl.length);\n            }\n        }\n        // return the last chain element (or the only found in an edge case)\n        return [...chainBase, element].filter((val) => val.httpsUrl.length);\n    }\n    /**\n     * fetchAuthChainFromChaingraph Fetch the authchain information from a trusted external indexer\n     * The authchain in this implementation is specific to resolve to a valid metadata registry\n     *\n     * @param  {string} options.chaingraphUrl (required) URL of a chaingraph indexer instance to fetch info from\n     * @param  {string} options.transactionHash (required) transaction hash from which to build the auth chain\n     * @param  {string?} options.network (default=undefined) network to query the data from, specific to the queried instance,\n     *  can be 'mainnet', 'chipnet', or anything else.\n     *  if left undefined all chaingraph transactions will be looked at, disregarding the chain\n     *\n     * @returns {AuthChain} returns the resolved authchain\n     */\n    static async fetchAuthChainFromChaingraph(options) {\n        if (!options.chaingraphUrl) {\n            throw new Error(\"Provide `chaingraphUrl` param.\");\n        }\n        const response = await fetch(options.chaingraphUrl, {\n            method: \"POST\",\n            headers: {\n                Accept: \"*/*\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                operationName: null,\n                variables: {},\n                query: `\n{\n  transaction(\n    where: {\n      hash:{_eq:\"\\\\\\\\x${options.transactionHash}\"}\n    }\n  ) {\n    hash\n    authchains {\n      authchain_length\n      migrations(\n        where: {\n          transaction: {\n            outputs: { locking_bytecode_pattern: { _like: \"6a04%\" } }\n          }\n        }\n      ) {\n        transaction {\n          hash\n          inputs(where:{ outpoint_index: { _eq:\"0\" } }){\n            outpoint_index\n          }\n          outputs(where: { locking_bytecode_pattern: { _like: \"6a04%\" } }) {\n            output_index\n            locking_bytecode\n          }\n        }\n      }\n    }\n  }\n}`,\n            }),\n        });\n        const responseData = await response.json();\n        const result = [];\n        const migrations = responseData.data.transaction[0]?.authchains[0].migrations;\n        if (!migrations) {\n            return result;\n        }\n        for (const migration of migrations) {\n            const transaction = migration.transaction[0];\n            if (!transaction) {\n                continue;\n            }\n            transaction.inputs.forEach((input) => (input.outpointIndex = Number(input.outpoint_index)));\n            transaction.outputs.forEach((output) => {\n                output.outputIndex = Number(output.output_index);\n                output.lockingBytecode = hexToBin(output.locking_bytecode.replace(\"\\\\x\", \"\"));\n            });\n            const txHash = transaction.hash.replace(\"\\\\x\", \"\");\n            result.push(BCMR.makeAuthChainElement(transaction, txHash));\n        }\n        return result.filter((element) => element.contentHash.length && element.httpsUrl.length);\n    }\n    /**\n     * addMetadataRegistryAuthChain Add BCMR metadata registry by resolving an authchain\n     *\n     * @param  {string} options.transactionHash (required) transaction hash from which to build the auth chain\n     * @param  {Network?} options.network (default=mainnet) network to query the data from\n     * @param  {boolean?} options.followToHead (default=true) boolean flag to indicate that autchain building should progress to head (most recent registry version) or be stopped at this exact chain element\n     * @param  {ElectrumRawTransaction?} options.rawTx cached raw transaction obtained previously, spares a Fulcrum call\n     *\n     * @returns {AuthChain} returns the resolved authchain\n     */\n    static async addMetadataRegistryAuthChain(options) {\n        const authChain = await this.buildAuthChain({\n            ...options,\n            resolveBase: false,\n        });\n        if (!authChain.length) {\n            throw new Error(`There were no BCMR entries in the resolved authchain ${JSON.stringify(authChain, null, 2)}`);\n        }\n        const registry = await this.fetchMetadataRegistry(authChain.reverse()[0].httpsUrl);\n        this.addMetadataRegistry(registry);\n        return authChain;\n    }\n    /**\n     * getTokenInfo Return the token info (or the identity snapshot as per spec)\n     *\n     * @param  {string} tokenId token id to look up\n     *\n     * @returns {IdentitySnapshot?} return the info for the token found, otherwise undefined\n     */\n    static getTokenInfo(tokenId) {\n        for (const registry of this.metadataRegistries.slice().reverse()) {\n            const history = registry.identities?.[tokenId];\n            if (!history) {\n                continue;\n            }\n            const latestIdentityIndex = Object.keys(history)[0];\n            if (latestIdentityIndex === undefined) {\n                continue;\n            }\n            return history[latestIdentityIndex];\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=Bcmr.js.map","import { base64ToBin, binToBase64, CashAddressType, encodeCashAddress, hexToBin, instantiateSecp256k1, instantiateSha256, utf8ToBin, } from \"@bitauth/libauth\";\nimport { derivePrefix } from \"../util/derivePublicKeyHash.js\";\nimport { hash160 } from \"../util/hash160.js\";\n/**\n * message_magic - Add \"Magic\", per standard bitcoin message signing.\n *\n * In this case, the magic is simply adding the number 24 as binary \"\\x16\", and \"Bitcoin Signed Message\\n\" followed\n * by the size of the message in binary followed by the message encoded as binary.\n *\n * @param {str} string    The string to add the magic syntax to.\n *\n * @returns a promise to the string as binary array with magic syntax\n */\n// see    https://github.com/Electron-Cash/Electron-Cash/blob/49f9f672364f50053a026e4a5cb30e92db2d195d/electroncash/bitcoin.py#L524\nfunction message_magic(str) {\n    const length = utf8ToBin(str).length.toString(16);\n    let payload = `\\x18Bitcoin Signed Message:\\n`;\n    return new Uint8Array([\n        ...utf8ToBin(payload),\n        ...hexToBin(length),\n        ...utf8ToBin(str),\n    ]);\n}\n/**\n * hash_magic - Return the hash of the string that has undergone standard formatting\n *\n * @param {str} string    The string to hash\n *\n * @returns a promise to the hash of the string.\n */\nexport async function hash_message(str) {\n    const h = (await instantiateSha256()).hash;\n    return h(h(message_magic(str)));\n}\nexport class SignedMessage {\n    /**\n     * sign - Calculate the recoverable signed checksum of a string message.\n     *\n     * @param {message} string          The\n     * @param {privateKey} Uint8Array   The private key to sign the message with\n     *\n     * @returns a promise to signature as a string\n     */\n    async sign(message, privateKey) {\n        const secp256k1 = await instantiateSecp256k1();\n        let messageHash = await hash_message(message);\n        let rs = secp256k1.signMessageHashRecoverableCompact(privateKey, messageHash);\n        if (typeof rs === \"string\") {\n            throw new Error(rs);\n        }\n        let sigDer = secp256k1.signMessageHashDER(privateKey, messageHash);\n        let sigSchnorr = secp256k1.signMessageHashSchnorr(privateKey, messageHash);\n        let electronEncoding = new Uint8Array([\n            ...[31 + rs.recoveryId],\n            ...rs.signature,\n        ]);\n        return {\n            raw: {\n                ecdsa: binToBase64(rs.signature),\n                schnorr: binToBase64(sigSchnorr),\n                der: binToBase64(sigDer),\n            },\n            details: {\n                recoveryId: rs.recoveryId,\n                compressed: true,\n                messageHash: binToBase64(messageHash),\n            },\n            signature: binToBase64(electronEncoding),\n        };\n    }\n    static async sign(message, privateKey) {\n        return new this().sign(message, privateKey);\n    }\n    /**\n     * verify - Validate that the message is valid against a given signature\n     *\n     * @param {message} string     The message to verify as a utf8 string\n     * @param {signature} string   The signature as a base64 encoded string\n     * @param {cashaddr} string    The cashaddr to validate the signature against a recoverable signature.\n     * @param {publicKey} string    If publicKey is not recoverable from the signature type, the publicKey must be passed.\n     *\n     * @returns a promise to signature as a string\n     */\n    async verify(message, signature, cashaddr, publicKey) {\n        // Check that the signature is valid for the given message.\n        const secp256k1 = await instantiateSecp256k1();\n        let messageHash = await hash_message(message);\n        let sig = base64ToBin(signature);\n        let signatureValid = false;\n        let keyMatch = false;\n        let pkhMatch = false;\n        let pkh, signatureType;\n        if (sig.length === 65) {\n            let rawSig = sig.length === 65 ? sig.slice(1) : sig;\n            let recoveryId = sig.slice(0, 1)[0] - 31;\n            let recoveredPk = secp256k1.recoverPublicKeyCompressed(rawSig, recoveryId, messageHash);\n            if (typeof recoveredPk === \"string\") {\n                throw new Error(recoveredPk);\n            }\n            pkh = await hash160(recoveredPk);\n            signatureType = \"recoverable\";\n            signatureValid = secp256k1.verifySignatureCompact(rawSig, recoveredPk, messageHash);\n            if (cashaddr) {\n                // Validate that the signature actually matches the provided cashaddr\n                let prefix = derivePrefix(cashaddr);\n                let resultingCashaddr = encodeCashAddress({\n                    prefix,\n                    type: CashAddressType.p2pkh,\n                    payload: pkh,\n                }).address;\n                if (resultingCashaddr === cashaddr) {\n                    pkhMatch = true;\n                }\n            }\n        }\n        else if (publicKey) {\n            if (secp256k1.verifySignatureDER(sig, publicKey, messageHash)) {\n                signatureType = \"der\";\n                signatureValid = true;\n                keyMatch = true;\n            }\n            else if (secp256k1.verifySignatureSchnorr(sig, publicKey, messageHash)) {\n                signatureType = \"schnorr\";\n                signatureValid = true;\n                keyMatch = true;\n            }\n            else if (secp256k1.verifySignatureCompact(sig, publicKey, messageHash)) {\n                signatureType = \"ecdsa\";\n                signatureValid = true;\n                keyMatch = true;\n            }\n            else {\n                signatureType = \"na\";\n            }\n        }\n        return {\n            valid: signatureValid && (keyMatch || pkhMatch),\n            details: {\n                signatureValid: signatureValid,\n                signatureType: signatureType,\n                messageHash: binToBase64(messageHash),\n                publicKeyHashMatch: pkhMatch,\n                publicKeyMatch: keyMatch,\n            },\n        };\n    }\n    static async verify(message, signature, cashaddr, publicKey) {\n        return new this().verify(message, signature, cashaddr, publicKey);\n    }\n}\n//# sourceMappingURL=signed.js.map","import { binToHex, decodeTransaction, hexToBin, lockingBytecodeToCashAddress, decodeCashAddress, assertSuccess, Opcodes, } from \"@bitauth/libauth\";\nimport { convert } from \"../util/convert.js\";\nexport const getAddressHistory = async ({ address, provider, unit = \"sat\", fromHeight = 0, toHeight = -1, start = 0, count = -1, }) => {\n    if (count === -1) {\n        count = 1e10;\n    }\n    const history = (await provider.getHistory(address, fromHeight, toHeight))\n        .sort((a, b) => a.height <= 0 || b.height <= 0 ? a.height - b.height : b.height - a.height)\n        .slice(start, start + count);\n    // fill transaction timestamps by requesting headers from network and parsing them\n    const heights = history\n        .map((tx) => tx.height)\n        .filter((height) => height > 0)\n        .filter((value, index, array) => array.indexOf(value) === index);\n    const timestampMap = (await Promise.all(heights.map(async (height) => [\n        height,\n        (await provider.getHeader(height, true)).timestamp,\n    ]))).reduce((acc, [height, timestamp]) => ({ ...acc, [height]: timestamp }), {});\n    // first load all transactions\n    const historicTransactions = await Promise.all(history.map(async (tx) => {\n        const txHex = (await provider.getRawTransaction(tx.tx_hash));\n        const transactionCommon = decodeTransaction(hexToBin(txHex));\n        if (typeof transactionCommon === \"string\") {\n            throw transactionCommon;\n        }\n        const transaction = transactionCommon;\n        transaction.blockHeight = tx.height;\n        transaction.timestamp = timestampMap[tx.height];\n        transaction.hash = tx.tx_hash;\n        transaction.size = txHex.length / 2;\n        return transaction;\n    }));\n    // then load their prevout transactions\n    const prevoutTransactionHashes = historicTransactions\n        .map((tx) => tx.inputs.map((input) => binToHex(input.outpointTransactionHash)))\n        .flat()\n        .filter((value, index, array) => array.indexOf(value) === index);\n    const prevoutTransactionMap = (await Promise.all(prevoutTransactionHashes.map(async (hash) => {\n        const txHex = (await provider.getRawTransaction(hash));\n        const transaction = decodeTransaction(hexToBin(txHex));\n        if (typeof transaction === \"string\") {\n            throw transaction;\n        }\n        return [hash, transaction];\n    }))).reduce((acc, [hash, transaction]) => ({\n        ...acc,\n        [hash]: transaction,\n    }), {});\n    const decoded = decodeCashAddress(address);\n    if (typeof decoded === \"string\") {\n        throw decoded;\n    }\n    const addressCache = {};\n    // map decoded transaction data to TransactionHistoryItem\n    const historyItems = historicTransactions.map((tx) => {\n        const result = {};\n        let inputTotalValue = 0n;\n        let outputTotalValue = 0n;\n        result.inputs = tx.inputs.map((input) => {\n            const prevoutTx = prevoutTransactionMap[binToHex(input.outpointTransactionHash)];\n            if (!prevoutTx) {\n                throw new Error(\"Could not find prevout transaction\");\n            }\n            const prevoutOutput = prevoutTx.outputs[input.outpointIndex];\n            if (!prevoutOutput) {\n                throw new Error(\"Could not find prevout output\");\n            }\n            const cached = addressCache[prevoutOutput.lockingBytecode];\n            let address;\n            if (!cached) {\n                address = assertSuccess(lockingBytecodeToCashAddress({\n                    bytecode: prevoutOutput.lockingBytecode,\n                    prefix: decoded.prefix,\n                })).address;\n                addressCache[prevoutOutput.lockingBytecode] = address;\n            }\n            else {\n                address = cached;\n            }\n            inputTotalValue += prevoutOutput.valueSatoshis;\n            return {\n                address: address,\n                value: Number(prevoutOutput.valueSatoshis),\n                token: prevoutOutput.token\n                    ? {\n                        tokenId: binToHex(prevoutOutput.token.category),\n                        amount: prevoutOutput.token.amount,\n                        capability: prevoutOutput.token.nft?.capability\n                            ? prevoutOutput.token.nft.capability\n                            : undefined,\n                        commitment: prevoutOutput.token.nft?.capability\n                            ? binToHex(prevoutOutput.token.nft.commitment)\n                            : undefined,\n                    }\n                    : undefined,\n            };\n        });\n        result.outputs = tx.outputs.map((output) => {\n            const cached = addressCache[output.lockingBytecode];\n            let address;\n            if (!cached) {\n                if (output.lockingBytecode[0] === Opcodes.OP_RETURN) {\n                    address = `OP_RETURN: ${binToHex(output.lockingBytecode)}`;\n                }\n                else {\n                    address = assertSuccess(lockingBytecodeToCashAddress({\n                        bytecode: output.lockingBytecode,\n                        prefix: decoded.prefix,\n                    })).address;\n                    addressCache[output.lockingBytecode] = address;\n                }\n            }\n            else {\n                address = cached;\n            }\n            outputTotalValue += output.valueSatoshis;\n            return {\n                address: address,\n                value: Number(output.valueSatoshis),\n                token: output.token\n                    ? {\n                        tokenId: binToHex(output.token.category),\n                        amount: output.token.amount,\n                        capability: output.token.nft?.capability\n                            ? output.token.nft.capability\n                            : undefined,\n                        commitment: output.token.nft?.capability\n                            ? binToHex(output.token.nft.commitment)\n                            : undefined,\n                    }\n                    : undefined,\n            };\n        });\n        result.blockHeight = tx.blockHeight;\n        result.timestamp = tx.timestamp;\n        result.hash = tx.hash;\n        result.size = tx.size;\n        result.fee = Number(inputTotalValue - outputTotalValue);\n        return result;\n    });\n    // compute value changes\n    historyItems.forEach((tx) => {\n        let satoshiBalance = 0;\n        const ftTokenBalances = {};\n        const nftTokenBalances = {};\n        tx.inputs.forEach((input) => {\n            if (input.address === address) {\n                satoshiBalance -= input.value;\n                if (input.token?.amount) {\n                    ftTokenBalances[input.token.tokenId] =\n                        (ftTokenBalances[input.token.tokenId] || BigInt(0)) -\n                            input.token.amount;\n                }\n                if (input.token?.capability) {\n                    nftTokenBalances[input.token.tokenId] =\n                        (nftTokenBalances[input.token.tokenId] || BigInt(0)) - 1n;\n                }\n            }\n        });\n        tx.outputs.forEach((output) => {\n            if (output.address === address) {\n                satoshiBalance += Number(output.value);\n                if (output.token?.amount) {\n                    ftTokenBalances[output.token.tokenId] =\n                        (ftTokenBalances[output.token.tokenId] || BigInt(0)) +\n                            output.token.amount;\n                }\n                if (output.token?.capability) {\n                    nftTokenBalances[output.token.tokenId] =\n                        (nftTokenBalances[output.token.tokenId] || BigInt(0)) + 1n;\n                }\n            }\n        });\n        tx.valueChange = satoshiBalance;\n        tx.tokenAmountChanges = Object.entries(ftTokenBalances).map(([tokenId, amount]) => ({\n            tokenId,\n            amount,\n            nftAmount: BigInt(0),\n        }));\n        for (const [tokenId, nftAmount] of Object.entries(nftTokenBalances)) {\n            const tokenChange = tx.tokenAmountChanges.find((tokenChange) => tokenChange.tokenId === tokenId);\n            if (tokenChange) {\n                tokenChange.nftAmount = nftAmount;\n            }\n            else {\n                tx.tokenAmountChanges.push({\n                    tokenId,\n                    amount: BigInt(0),\n                    nftAmount,\n                });\n            }\n        }\n    });\n    // order transactions in a way such that receives are always ordered before sends, per block\n    historyItems.sort((a, b) => (a.blockHeight <= 0 || b.blockHeight <= 0\n        ? a.blockHeight - b.blockHeight\n        : b.blockHeight - a.blockHeight) || a.valueChange - b.valueChange);\n    // backfill the balances\n    let prevBalance = await provider.getBalance(address);\n    let prevValueChange = 0;\n    historyItems.forEach((tx) => {\n        tx.balance = prevBalance - prevValueChange;\n        prevBalance = tx.balance;\n        prevValueChange = tx.valueChange;\n    });\n    // convert units if needed\n    if (!unit.includes(\"sat\")) {\n        for (const tx of historyItems) {\n            for (const input of tx.inputs) {\n                input.value = await convert(input.value, \"sat\", unit);\n            }\n            for (const output of tx.outputs) {\n                output.value = await convert(output.value, \"sat\", unit);\n            }\n            tx.valueChange = await convert(tx.valueChange, \"sat\", unit);\n            tx.balance = await convert(tx.balance, \"sat\", unit);\n        }\n    }\n    return historyItems;\n};\n//# sourceMappingURL=electrumTransformer.js.map","import { bchParam } from \"../chain.js\";\nimport { networkTickerMap } from \"./constant.js\";\nexport async function getRelayFeeCache(provider) {\n    let relayFeePerKbInCoins;\n    if (networkTickerMap[provider.network] + \"_RELAY_FEE\" in globalThis) {\n        // Stores the fee in BCH_RELAY_FEE, tBCH_RELAY_FEE, etc\n        relayFeePerKbInCoins =\n            globalThis[networkTickerMap[provider.network] + \"_RELAY_FEE\"];\n    }\n    if (typeof relayFeePerKbInCoins !== \"number\") {\n        relayFeePerKbInCoins = await provider.getRelayFee();\n        globalThis[networkTickerMap[provider.network] + \"_RELAY_FEE\"] =\n            relayFeePerKbInCoins;\n    }\n    if (typeof relayFeePerKbInCoins === \"number\") {\n        return Math.round(relayFeePerKbInCoins * bchParam.subUnits) / 1000;\n    }\n    else {\n        console.warn(\"Couldn't get min relay fee, using default instead\");\n        return Math.round(0.00001 * bchParam.subUnits) / 1000;\n    }\n}\n//# sourceMappingURL=getRelayFeeCache.js.map","export var WalletTypeEnum;\n(function (WalletTypeEnum) {\n    WalletTypeEnum[\"Wif\"] = \"wif\";\n    WalletTypeEnum[\"Seed\"] = \"seed\";\n    WalletTypeEnum[\"Hd\"] = \"hd\";\n    WalletTypeEnum[\"Watch\"] = \"watch\";\n    WalletTypeEnum[\"PrivateKey\"] = \"privkey\";\n})(WalletTypeEnum || (WalletTypeEnum = {}));\nexport var FeePaidByEnum;\n(function (FeePaidByEnum) {\n    FeePaidByEnum[\"change\"] = \"change\";\n    FeePaidByEnum[\"first\"] = \"firstOutput\";\n    FeePaidByEnum[\"any\"] = \"anyOutputs\";\n    FeePaidByEnum[\"last\"] = \"lastOutput\";\n    FeePaidByEnum[\"changeThenFirst\"] = \"changeThenFirst\";\n    FeePaidByEnum[\"changeThenAny\"] = \"changeThenAny\";\n    FeePaidByEnum[\"changeThenLast\"] = \"changeThenLast\";\n})(FeePaidByEnum || (FeePaidByEnum = {}));\n//# sourceMappingURL=enum.js.map","import { OpReturnData, TokenSendRequest, } from \"../wallet/model.js\";\nimport { FeePaidByEnum } from \"../wallet/enum.js\";\nimport { DUST_UTXO_THRESHOLD } from \"../constant.js\";\nexport function checkFeeForDust(value) {\n    if (value < DUST_UTXO_THRESHOLD) {\n        throw Error(\"Fee strategy would result in dust output\");\n    }\n}\nexport function checkSatsAvailable(sendRequestArray, fee) {\n    let amountAvailable = sendRequestArray.reduce(function (sum, r) {\n        return sum + (r.value - DUST_UTXO_THRESHOLD);\n    }, 0);\n    if (amountAvailable < fee) {\n        throw Error(\"Insufficient funds for transaction given fee\");\n    }\n}\nexport function checkForNonStandardSendRequest(output) {\n    if (output instanceof TokenSendRequest) {\n        throw Error(\"Cannot specify fee to be paid by TokenSendRequest\");\n    }\n    if (output instanceof OpReturnData) {\n        throw Error(\"Cannot specify fee to be paid by OpReturnData\");\n    }\n    return output;\n}\nexport function sortSendRequests(sendRequestArray) {\n    return sendRequestArray.sort((a, b) => a.value - b.value);\n}\nfunction distributeFees(requests, fee) {\n    checkSatsAvailable(requests, fee);\n    fee = Number(fee);\n    for (let r = 0; r < requests.length; r++) {\n        if (fee > 0) {\n            checkForNonStandardSendRequest(requests[r]);\n            let perRequestFee = Math.floor(fee / (requests.length - r));\n            perRequestFee += fee % (requests.length - r);\n            if (requests[r].value - perRequestFee < DUST_UTXO_THRESHOLD) {\n                fee -= requests[r].value;\n                requests[r].value = 0;\n            }\n            else {\n                fee -= perRequestFee;\n                requests[r].value -= perRequestFee;\n            }\n        }\n    }\n    return requests.filter((r) => r.value >= DUST_UTXO_THRESHOLD);\n}\nfunction firstPays(requests, fee) {\n    let payer = requests.shift();\n    payer = checkForNonStandardSendRequest(payer);\n    payer.value = payer.value - fee;\n    checkFeeForDust(payer.value);\n    requests.unshift(payer);\n    return requests;\n}\nfunction lastPays(requests, fee) {\n    let payer = requests.pop();\n    payer = checkForNonStandardSendRequest(payer);\n    payer.value = payer.value - fee;\n    checkFeeForDust(payer.value);\n    requests.push(payer);\n    return requests;\n}\nfunction anyPays(requests, fee) {\n    for (let r of requests) {\n        checkForNonStandardSendRequest(r);\n    }\n    requests = sortSendRequests(requests);\n    requests = distributeFees(requests, fee);\n    return requests;\n}\nfunction changeThenFallback(requests, fee, change, fallbackFn) {\n    if (BigInt(fee) > change) {\n        let outstandingFee = BigInt(fee) - change;\n        requests = fallbackFn(requests, outstandingFee);\n    }\n    return requests;\n}\nexport function allocateFee(requests, fee, feePaidBy, change) {\n    if (requests.length > 0) {\n        switch (feePaidBy) {\n            case FeePaidByEnum.change:\n                // handled by default\n                break;\n            case FeePaidByEnum.changeThenFirst:\n                requests = changeThenFallback(requests, fee, change, firstPays);\n                break;\n            case FeePaidByEnum.changeThenLast:\n                requests = changeThenFallback(requests, fee, change, lastPays);\n                break;\n            case FeePaidByEnum.changeThenAny:\n                requests = changeThenFallback(requests, fee, change, anyPays);\n                break;\n            case FeePaidByEnum.first:\n                requests = firstPays(requests, fee);\n                break;\n            case FeePaidByEnum.last:\n                requests = lastPays(requests, fee);\n                break;\n            case FeePaidByEnum.any:\n                requests = anyPays(requests, fee);\n                break;\n            default:\n                throw Error(\"FeePaidBy option not recognized\");\n        }\n        return requests;\n    }\n    else {\n        throw Error(\"Attempted to specify feePaidBy on zero length SendRequest\");\n    }\n}\n//# sourceMappingURL=allocateFee.js.map","import { SendRequest, TokenSendRequest, } from \"../wallet/model.js\";\nimport { amountInSatoshi } from \"./amountInSatoshi.js\";\n// This function sums a list of send request objects\nexport async function sumSendRequestAmounts(requests) {\n    if (requests) {\n        const balanceArray = await Promise.all(requests.map(async (r) => {\n            if (r instanceof SendRequest) {\n                return BigInt(await amountInSatoshi(r.value, r.unit));\n            }\n            else if (r instanceof TokenSendRequest) {\n                return BigInt(r.value || 1000);\n            }\n            else\n                return BigInt(0);\n        }));\n        const balance = balanceArray.reduce(sumBalance, BigInt(0));\n        return balance;\n    }\n    else {\n        return BigInt(0);\n    }\n}\nfunction sumBalance(a, b) {\n    // a is zero or a number\n    if (b instanceof Error) {\n        throw b;\n    }\n    return BigInt(a) + BigInt(b);\n}\n//# sourceMappingURL=sumSendRequestAmounts.js.map","import { walletTemplateP2pkhNonHd, walletTemplateToCompilerBCH, cashAddressToLockingBytecode, encodeTransaction, generateTransaction, importWalletTemplate, hexToBin, verifyTransactionTokens, decodeTransaction, } from \"@bitauth/libauth\";\nimport { NFTCapability } from \"../interface.js\";\nimport { allocateFee } from \"./allocateFee.js\";\nimport { DUST_UTXO_THRESHOLD } from \"../constant.js\";\nimport { OpReturnData, TokenSendRequest, } from \"../wallet/model.js\";\nimport { amountInSatoshi } from \"../util/amountInSatoshi.js\";\nimport { sumSendRequestAmounts } from \"../util/sumSendRequestAmounts.js\";\nimport { sumUtxoValue } from \"../util/sumUtxoValue.js\";\nimport { FeePaidByEnum } from \"../wallet/enum.js\";\n// Build a transaction for a p2pkh transaction for a non HD wallet\nexport async function buildP2pkhNonHdTransaction({ inputs, outputs, signingKey, sourceAddress, fee = 0, discardChange = false, feePaidBy = FeePaidByEnum.change, changeAddress = \"\", }) {\n    if (!signingKey) {\n        throw new Error(\"Missing signing key when building transaction\");\n    }\n    const template = importWalletTemplate(walletTemplateP2pkhNonHd);\n    if (typeof template === \"string\") {\n        throw new Error(\"Transaction template error\");\n    }\n    const compiler = await walletTemplateToCompilerBCH(template);\n    const inputAmount = await sumUtxoValue(inputs);\n    const sendAmount = await sumSendRequestAmounts(outputs);\n    const changeAmount = BigInt(inputAmount) - BigInt(sendAmount) - BigInt(fee);\n    outputs = allocateFee(outputs, fee, feePaidBy, changeAmount);\n    const lockedOutputs = await prepareOutputs(outputs);\n    if (!changeAddress) {\n        changeAddress = sourceAddress;\n    }\n    if (discardChange !== true) {\n        if (changeAmount > DUST_UTXO_THRESHOLD) {\n            const changeLockingBytecode = cashAddressToLockingBytecode(changeAddress);\n            if (typeof changeLockingBytecode === \"string\") {\n                throw Error(changeLockingBytecode);\n            }\n            lockedOutputs.push({\n                lockingBytecode: changeLockingBytecode.bytecode,\n                valueSatoshis: BigInt(changeAmount),\n            });\n        }\n    }\n    const { preparedInputs, sourceOutputs } = prepareInputs({\n        inputs,\n        compiler,\n        signingKey,\n        sourceAddress,\n    });\n    const result = generateTransaction({\n        inputs: preparedInputs,\n        locktime: 0,\n        outputs: lockedOutputs,\n        version: 2,\n    });\n    if (!result.success) {\n        throw Error(\"Error building transaction with fee\");\n    }\n    const tokenValidationResult = verifyTransactionTokens(result.transaction, sourceOutputs, { maximumTokenCommitmentLength: 40 });\n    if (tokenValidationResult !== true && fee > 0) {\n        throw tokenValidationResult;\n    }\n    return { transaction: result.transaction, sourceOutputs: sourceOutputs };\n}\nexport function prepareInputs({ inputs, compiler, signingKey, sourceAddress, }) {\n    const preparedInputs = [];\n    const sourceOutputs = [];\n    for (const i of inputs) {\n        const utxoTxnValue = i.satoshis;\n        const utxoIndex = i.vout;\n        // slice will create a clone of the array\n        const utxoOutpointTransactionHash = new Uint8Array(i.txid.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));\n        // reverse the cloned copy\n        // utxoOutpointTransactionHash.reverse();\n        if (!utxoOutpointTransactionHash || utxoIndex === undefined) {\n            throw new Error(\"Missing unspent outpoint when building transaction\");\n        }\n        const libAuthToken = i.token && {\n            amount: BigInt(i.token.amount),\n            category: hexToBin(i.token.tokenId),\n            nft: i.token.capability !== undefined || i.token.commitment !== undefined\n                ? {\n                    capability: i.token.capability,\n                    commitment: i.token.commitment !== undefined &&\n                        hexToBin(i.token.commitment),\n                }\n                : undefined,\n        };\n        const key = signingKey?.length ? signingKey : Uint8Array.from(Array(32));\n        const newInput = {\n            outpointIndex: utxoIndex,\n            outpointTransactionHash: utxoOutpointTransactionHash,\n            sequenceNumber: 0,\n            unlockingBytecode: {\n                compiler,\n                data: {\n                    keys: { privateKeys: { key: key } },\n                },\n                valueSatoshis: BigInt(utxoTxnValue),\n                script: \"unlock\",\n                token: libAuthToken,\n            },\n        };\n        preparedInputs.push(newInput);\n        const lockingBytecode = cashAddressToLockingBytecode(sourceAddress);\n        if (typeof lockingBytecode === \"string\") {\n            throw lockingBytecode;\n        }\n        sourceOutputs.push({\n            outpointIndex: utxoIndex,\n            outpointTransactionHash: utxoOutpointTransactionHash,\n            sequenceNumber: 0,\n            unlockingBytecode: Uint8Array.from([]),\n            // additional info for sourceOutputs\n            lockingBytecode: lockingBytecode.bytecode,\n            valueSatoshis: BigInt(utxoTxnValue),\n            token: libAuthToken,\n        });\n    }\n    return { preparedInputs, sourceOutputs };\n}\n/**\n * prepareOutputs - create outputs for a transaction from a list of send requests\n *\n * a wrapper function\n *\n * @returns A promise to a list of unspent outputs\n */\nexport async function prepareOutputs(outputs) {\n    const lockedOutputs = [];\n    for (const output of outputs) {\n        if (output instanceof TokenSendRequest) {\n            lockedOutputs.push(prepareTokenOutputs(output));\n            continue;\n        }\n        if (output instanceof OpReturnData) {\n            lockedOutputs.push(prepareOpReturnOutput(output));\n            continue;\n        }\n        const outputLockingBytecode = cashAddressToLockingBytecode(output.cashaddr);\n        if (typeof outputLockingBytecode === \"string\")\n            throw new Error(outputLockingBytecode);\n        const sendAmount = await amountInSatoshi(output.value, output.unit);\n        if (sendAmount % 1 !== 0) {\n            throw Error(`Cannot send ${sendAmount} satoshis, (fractional sats do not exist, yet), please use an integer number.`);\n        }\n        const lockedOutput = {\n            lockingBytecode: outputLockingBytecode.bytecode,\n            valueSatoshis: BigInt(sendAmount),\n        };\n        lockedOutputs.push(lockedOutput);\n    }\n    return lockedOutputs;\n}\n/**\n * prepareOpReturnOutput - create an output for OP_RETURN data\n *\n * @returns A promise to a list of unspent outputs\n */\nexport function prepareOpReturnOutput(request) {\n    return {\n        lockingBytecode: request.buffer,\n        valueSatoshis: BigInt(0),\n    };\n}\n/**\n * prepareOpReturnOutput - create an output for token data\n *\n * @returns A libauth Output\n */\nexport function prepareTokenOutputs(request) {\n    const token = request;\n    const outputLockingBytecode = cashAddressToLockingBytecode(request.cashaddr);\n    if (typeof outputLockingBytecode === \"string\")\n        throw new Error(outputLockingBytecode);\n    const libAuthToken = {\n        amount: BigInt(token.amount),\n        category: hexToBin(token.tokenId),\n        nft: token.capability !== undefined || token.commitment !== undefined\n            ? {\n                capability: token.capability,\n                commitment: token.commitment !== undefined && hexToBin(token.commitment),\n            }\n            : undefined,\n    };\n    return {\n        lockingBytecode: outputLockingBytecode.bytecode,\n        valueSatoshis: BigInt(request.value || 1000),\n        token: libAuthToken,\n    };\n}\n/**\n * getSuitableUtxos - Filter a list of unspent transaction outputs to the minimum needed to complete a transaction\n *\n * a intermediate function\n *\n * @param unspentOutputs  An unfiltered list of available unspent transaction outputs\n *\n * @returns A promise to a list of unspent outputs\n */\nexport async function getSuitableUtxos(inputs, amountRequired, bestHeight, feePaidBy, requests, ensureUtxos = [], tokenOperation = \"send\") {\n    const suitableUtxos = [...ensureUtxos];\n    let amountAvailable = BigInt(0);\n    const tokenRequests = requests.filter((val) => val instanceof TokenSendRequest);\n    const availableInputs = inputs.slice();\n    const selectedInputs = [];\n    // find matching utxos for token transfers\n    if (tokenOperation === \"send\") {\n        for (const request of tokenRequests) {\n            const tokenInputs = availableInputs.filter((val) => val.token?.tokenId === request.tokenId);\n            const sameCommitmentTokens = [...suitableUtxos, ...tokenInputs]\n                .filter((val) => val.token?.capability === request.capability &&\n                val.token?.commitment === request.commitment)\n                .filter((val) => selectedInputs.find((selected) => val.txid === selected.txid && val.vout === selected.vout) === undefined);\n            if (sameCommitmentTokens.length) {\n                const input = sameCommitmentTokens[0];\n                const index = availableInputs.indexOf(input);\n                if (index !== -1) {\n                    suitableUtxos.push(input);\n                    selectedInputs.push(input);\n                    availableInputs.splice(index, 1);\n                    amountAvailable += BigInt(input.satoshis);\n                }\n                continue;\n            }\n            if (request.capability === NFTCapability.minting ||\n                request.capability === NFTCapability.mutable) {\n                const changeCommitmentTokens = [\n                    ...suitableUtxos,\n                    ...tokenInputs,\n                ].filter((val) => val.token?.capability === request.capability);\n                if (changeCommitmentTokens.length) {\n                    const input = changeCommitmentTokens[0];\n                    const index = availableInputs.indexOf(input);\n                    if (index !== -1) {\n                        suitableUtxos.push(input);\n                        availableInputs.splice(index, 1);\n                        amountAvailable += BigInt(input.satoshis);\n                    }\n                    continue;\n                }\n            }\n            // handle splitting the hybrid (FT+NFT) token into its parts\n            if (request.capability === undefined &&\n                request.commitment === undefined &&\n                [...suitableUtxos, ...tokenInputs]\n                    .map((val) => val.token?.tokenId)\n                    .includes(request.tokenId)) {\n                continue;\n            }\n            throw Error(`No suitable token utxos available to send token with id \"${request.tokenId}\", capability \"${request.capability}\", commitment \"${request.commitment}\"`);\n        }\n    }\n    // find plain bch outputs\n    for (const u of availableInputs) {\n        if (u.token) {\n            continue;\n        }\n        if (u.coinbase && u.height && bestHeight) {\n            const age = bestHeight - u.height;\n            if (age > 100) {\n                suitableUtxos.push(u);\n                amountAvailable += BigInt(u.satoshis);\n            }\n        }\n        else {\n            suitableUtxos.push(u);\n            amountAvailable += BigInt(u.satoshis);\n        }\n        // if amountRequired is not given, assume it is a max spend request, skip this condition\n        if (amountRequired && amountAvailable > amountRequired) {\n            break;\n        }\n    }\n    const addEnsured = (suitableUtxos) => {\n        return [...ensureUtxos, ...suitableUtxos].filter((val, index, array) => array.findIndex((other) => other.txid === val.txid && other.vout === val.vout) === index);\n    };\n    // if the fee is split with a feePaidBy option, skip checking change.\n    if (feePaidBy && feePaidBy != FeePaidByEnum.change) {\n        return addEnsured(suitableUtxos);\n    }\n    // If the amount needed is met, or no amount is given, return\n    if (typeof amountRequired === \"undefined\") {\n        return addEnsured(suitableUtxos);\n    }\n    else if (amountAvailable < amountRequired) {\n        const e = Error(`Amount required was not met, ${amountRequired} satoshis needed, ${amountAvailable} satoshis available`);\n        e[\"data\"] = {\n            required: amountRequired,\n            available: amountAvailable,\n        };\n        throw e;\n    }\n    else {\n        return addEnsured(suitableUtxos);\n    }\n}\n// model-based imprecise and fast fee estimation\nexport async function getFeeAmountSimple({ utxos, sendRequests, relayFeePerByteInSatoshi, discardChange, }) {\n    const inputSizeP2pkh = 148;\n    const outputSizeP2pkh = 34;\n    const inputTotalSize = utxos.reduce((prev, curr) => prev +\n        (curr.token\n            ? inputSizeP2pkh +\n                1 +\n                34 +\n                Math.round(1 + (curr.token.commitment?.length ?? 0) / 2) +\n                (curr.token.amount ? 9 : 0)\n            : inputSizeP2pkh), 0);\n    const outputSize = (sendRequest) => {\n        if (sendRequest.hasOwnProperty(\"unit\")) {\n            return outputSizeP2pkh;\n        }\n        else if (sendRequest.hasOwnProperty(\"tokenId\")) {\n            const tokenRequest = sendRequest;\n            return (outputSizeP2pkh +\n                1 +\n                34 +\n                Math.round(1 + (tokenRequest.commitment?.length ?? 0) / 2) +\n                (tokenRequest.amount ? 9 : 0));\n        }\n        else if (sendRequest.hasOwnProperty(\"buffer\")) {\n            return 9 + sendRequest.buffer.length;\n        }\n        return 0;\n    };\n    const outputTotalSize = sendRequests.reduce((prev, curr) => prev + outputSize(curr), 0) +\n        (discardChange ? 0 : outputSizeP2pkh);\n    return Math.ceil((inputTotalSize + outputTotalSize + 16) * relayFeePerByteInSatoshi);\n}\n// precise fee estimation\nexport async function getFeeAmount({ utxos, sendRequests, privateKey, sourceAddress, relayFeePerByteInSatoshi, feePaidBy, discardChange, }) {\n    // build transaction\n    if (utxos) {\n        // Build the transaction to get the approximate size\n        const { encodedTransaction: draftTransaction } = await buildEncodedTransaction({\n            inputs: utxos,\n            outputs: sendRequests,\n            signingKey: privateKey,\n            sourceAddress,\n            fee: 0, //DUST_UTXO_THRESHOLD\n            discardChange: discardChange ?? false,\n            feePaidBy,\n            changeAddress: \"\",\n        });\n        return Math.ceil(draftTransaction.length * relayFeePerByteInSatoshi + 1);\n    }\n    else {\n        throw Error(\"The available inputs in the wallet cannot satisfy this send request\");\n    }\n}\n// Build encoded transaction\nexport async function buildEncodedTransaction({ inputs, outputs, signingKey, sourceAddress, fee = 0, discardChange = false, feePaidBy = FeePaidByEnum.change, changeAddress = \"\", buildUnsigned = false, }) {\n    const { transaction, sourceOutputs } = await buildP2pkhNonHdTransaction({\n        inputs,\n        outputs,\n        signingKey,\n        sourceAddress,\n        fee,\n        discardChange,\n        feePaidBy,\n        changeAddress,\n    });\n    if (buildUnsigned === true) {\n        transaction.inputs.forEach((input) => (input.unlockingBytecode = Uint8Array.from([])));\n    }\n    return { encodedTransaction: encodeTransaction(transaction), sourceOutputs };\n}\nexport async function signUnsignedTransaction(transaction, sourceOutputs, signingKey) {\n    if (typeof transaction === \"string\") {\n        transaction = hexToBin(transaction);\n    }\n    const decoded = decodeTransaction(transaction);\n    if (typeof decoded === \"string\") {\n        throw decoded;\n    }\n    const template = importWalletTemplate(walletTemplateP2pkhNonHd);\n    if (typeof template === \"string\") {\n        throw new Error(\"Transaction template error\");\n    }\n    const compiler = walletTemplateToCompilerBCH(template);\n    const transactionTemplate = { ...decoded };\n    for (const [index, input] of decoded.inputs.entries()) {\n        const sourceOutput = sourceOutputs[index];\n        transactionTemplate.inputs[index] = {\n            ...input,\n            unlockingBytecode: {\n                compiler,\n                data: {\n                    keys: { privateKeys: { key: signingKey } },\n                },\n                valueSatoshis: sourceOutput.valueSatoshis,\n                script: \"unlock\",\n                token: sourceOutput.token,\n            },\n        };\n    }\n    const result = generateTransaction(transactionTemplate);\n    if (!result.success) {\n        throw result.errors;\n    }\n    return encodeTransaction(result.transaction);\n}\n//# sourceMappingURL=Wif.js.map","export async function checkUtxos(utxos, wallet) {\n    if (utxos.some((val) => val.satoshis === 0)) {\n        const addressUtxos = await wallet.getAddressUtxos(wallet.cashaddr);\n        const absent = utxos.filter((val) => !addressUtxos.find((utxo) => val.txid === utxo.txid && val.vout === utxo.vout));\n        if (absent.length) {\n            const absentString = absent\n                .map((val) => `${val.txid}:${val.vout}`)\n                .join(\", \");\n            throw Error(`Utxos [${absentString}] not found in wallet`);\n        }\n        utxos = utxos.map((val) => addressUtxos.find((utxo) => val.txid === utxo.txid && val.vout === utxo.vout));\n    }\n    return utxos;\n}\n//# sourceMappingURL=checkUtxos.js.map","import { assertSuccess, binToHex, decodeTransaction as decodeTransactionLibAuth, hexToBin, isPayToPublicKey, lockingBytecodeToAddressContents, lockingBytecodeToCashAddress, publicKeyToP2pkhCashAddress, } from \"@bitauth/libauth\";\nimport { bchParam } from \"../chain.js\";\nimport { NetworkType, prefixFromNetworkMap } from \"../enum.js\";\nimport { getNetworkProvider } from \"../network/default.js\";\nimport { getTransactionHash } from \"../util/transaction.js\";\n/**\n * Class with various wallet utilities.\n */\nexport class Util {\n    /**\n     * Initializes a wallet Util class.\n     *\n     * @param network     The network type to use. Defaults to mainnet.\n     */\n    constructor(network = NetworkType.Mainnet) {\n        this.network = network;\n        this.provider = getNetworkProvider(network);\n    }\n    async getTransactionHash(rawTransactionHex) {\n        return getTransactionHash(rawTransactionHex);\n    }\n    static async getTransactionHash(rawTransactionHex) {\n        return getTransactionHash(rawTransactionHex);\n    }\n    async decodeTransaction(transactionHashOrHex, loadInputValues = false) {\n        let transactionHex;\n        let transactionBin;\n        let txHash;\n        // raw transaction\n        if (transactionHashOrHex.length > 64) {\n            txHash = await this.getTransactionHash(transactionHashOrHex);\n            transactionBin = hexToBin(transactionHashOrHex);\n            transactionHex = transactionHashOrHex;\n        }\n        else {\n            // tx hash, look up the raw transaction\n            txHash = transactionHashOrHex;\n            transactionHex = await this.provider.getRawTransaction(txHash);\n            transactionBin = hexToBin(transactionHex);\n        }\n        const result = decodeTransactionLibAuth(transactionBin);\n        if (typeof result === \"string\") {\n            throw Error(result);\n        }\n        const transaction = this.mapToElectrumRawTransaction(result, txHash, transactionHex);\n        if (loadInputValues) {\n            // get unique transaction hashes\n            const hashes = [...new Set(transaction.vin.map((val) => val.txid))];\n            const transactions = await Promise.all(hashes.map((hash) => this.decodeTransaction(hash, false)));\n            const transactionMap = new Map();\n            transactions.forEach((val) => transactionMap.set(val.hash, val));\n            transaction.vin.forEach((input) => {\n                const output = transactionMap\n                    .get(input.txid)\n                    .vout.find((val) => val.n === input.vout);\n                input.address = output.scriptPubKey.addresses[0];\n                input.value = output.value;\n                input.tokenData = output.tokenData;\n            });\n        }\n        return transaction;\n    }\n    mapToElectrumRawTransaction(transaction, txHash, txHex) {\n        let result = {};\n        result.vin = transaction.inputs.map((input) => {\n            return {\n                scriptSig: {\n                    hex: binToHex(input.unlockingBytecode),\n                },\n                sequence: input.sequenceNumber,\n                txid: binToHex(input.outpointTransactionHash),\n                vout: input.outpointIndex,\n            };\n        });\n        result.vout = transaction.outputs.map((output, index) => {\n            return {\n                n: index,\n                scriptPubKey: {\n                    addresses: [\n                        isPayToPublicKey(output.lockingBytecode)\n                            ? publicKeyToP2pkhCashAddress({\n                                publicKey: lockingBytecodeToAddressContents(output.lockingBytecode).payload,\n                                prefix: prefixFromNetworkMap[this.network],\n                            })\n                            : assertSuccess(lockingBytecodeToCashAddress({\n                                bytecode: output.lockingBytecode,\n                                prefix: prefixFromNetworkMap[this.network],\n                            })).address,\n                    ],\n                    hex: binToHex(output.lockingBytecode),\n                },\n                value: Number(output.valueSatoshis) / bchParam.subUnits,\n            };\n        });\n        result.locktime = transaction.locktime;\n        result.version = transaction.version;\n        result.hash = txHash;\n        result.hex = txHex;\n        result.txid = txHash;\n        result.size = txHex.length / 2;\n        return result;\n    }\n    static async decodeTransaction(transactionHashOrHex, loadInputValues = false, network) {\n        return new this(network).decodeTransaction(transactionHashOrHex, loadInputValues);\n    }\n}\n//# sourceMappingURL=Util.js.map","import { binToHex, CashAddressNetworkPrefix, CashAddressType, decodeCashAddress, encodeCashAddress, } from \"@bitauth/libauth\";\nimport { DUST_UTXO_THRESHOLD } from \"../constant.js\";\nimport { networkPrefixMap, NetworkType, prefixFromNetworkMap, UnitEnum, } from \"../enum.js\";\nimport { getAddressHistory } from \"../history/electrumTransformer.js\";\nimport { NFTCapability } from \"../interface.js\";\nimport { SignedMessage } from \"../message/signed.js\";\nimport { getNetworkProvider } from \"../network/default.js\";\nimport { getRelayFeeCache } from \"../network/getRelayFeeCache.js\";\nimport { buildEncodedTransaction, getFeeAmount, getFeeAmountSimple, getSuitableUtxos, } from \"../transaction/Wif.js\";\nimport { balanceFromSatoshi, balanceResponseFromSatoshi, } from \"../util/balanceObjectFromSatoshi.js\";\nimport { checkUtxos } from \"../util/checkUtxos.js\";\nimport { derivePrefix } from \"../util/derivePublicKeyHash.js\";\nimport { amountInSatoshi, asSendRequestObject, deriveTokenaddr, getRuntimePlatform, hexToBin, sumTokenAmounts, sumUtxoValue, toTokenaddr, } from \"../util/index.js\";\nimport { sanitizeUnit } from \"../util/sanitizeUnit.js\";\nimport { sumSendRequestAmounts } from \"../util/sumSendRequestAmounts.js\";\nimport { BCMR } from \"./Bcmr.js\";\nimport { FeePaidByEnum, WalletTypeEnum } from \"./enum.js\";\nimport { fromUtxoId, OpReturnData, SendRequest, SendResponse, TokenSendRequest, } from \"./model.js\";\nimport { Util } from \"./Util.js\";\nconst placeholderPrivateKey = \"0000000000000000000000000000000000000000000000000000000000000001\";\n/**\n * A class to hold features used by all wallets\n * @class  BaseWallet\n */\nexport class BaseWallet {\n    get networkPrefix() {\n        return prefixFromNetworkMap[this.network];\n    }\n    // interface to util functions. see Util.ts\n    get util() {\n        if (!this._util) {\n            this._util = new Util(this.network);\n        }\n        return this._util;\n    }\n    // interface to util util. see Util.Util\n    static get util() {\n        return new this().util;\n    }\n    // Return wallet info\n    getInfo() {\n        return {\n            cashaddr: this.cashaddr,\n            tokenaddr: this.tokenaddr,\n            isTestnet: this.isTestnet,\n            name: this.name,\n            network: this.network,\n            publicKeyHash: binToHex(this.publicKeyHash),\n            walletId: this.toString(),\n            walletDbEntry: this.toDbString(),\n        };\n    }\n    slpSemiAware(value = true) {\n        this._slpSemiAware = value;\n        return this;\n    }\n    //#region Accessors\n    getNetworkProvider(\n    // @ts-ignore\n    network = NetworkType.Mainnet) {\n        return getNetworkProvider(network);\n    }\n    /**\n     * getDepositAddress - get a wallet deposit address\n     *\n     * a high-level function,\n     *\n     * @see {@link https://rest-unstable.mainnet.cash/api-docs/#/wallet/depositAddress|/wallet/deposit_address} for REST endpoint\n     *\n     * @returns The deposit address as a string\n     */\n    getDepositAddress() {\n        return this.cashaddr;\n    }\n    /**\n     * getTokenDepositAddress - get a cashtoken aware wallet deposit address\n     *\n     * @returns The cashtoken aware deposit address as a string\n     */\n    getTokenDepositAddress() {\n        return this.tokenaddr;\n    }\n    //#endregion Accessors\n    //#region Constructors and Statics\n    /**\n     * constructor for a new wallet\n     * @param network              network for wallet\n     *\n     * @throws {Error} if called on BaseWallet\n     */\n    constructor(network = NetworkType.Mainnet) {\n        this._slpSemiAware = false; // a flag which requires an utxo to have more than 546 sats to be spendable and counted in the balance\n        this.name = \"\";\n        this.network = network;\n        this.walletType = WalletTypeEnum.Watch;\n        this.provider = this.getNetworkProvider(this.network);\n        this.isTestnet = this.network === NetworkType.Mainnet ? false : true;\n    }\n    /**\n     * watchOnly - create a watch-only wallet\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   cashaddress, token aware cashaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async watchOnly(address) {\n        return new this().watchOnly(address);\n    }\n    //#endregion Constructors\n    /**\n     * named (internal) get a named wallet from the database or create a new one.\n     * Note: this function should behave identically if\n     *\n     * @param {string} name              name of the wallet\n     * @param {string} dbName            database name the wallet is stored in\n     * @param {boolean} forceNew         attempt to overwrite an existing wallet\n     *\n     * @throws {Error} if forceNew is true and the wallet already exists\n     * @returns a promise to a named wallet\n     */\n    async named(name, dbName, forceNew = false) {\n        if (name.length === 0) {\n            throw Error(\"Named wallets must have a non-empty name\");\n        }\n        _checkContextSafety(this);\n        this.name = name;\n        dbName = dbName ? dbName : prefixFromNetworkMap[this.network];\n        const db = getStorageProvider(dbName);\n        // If there is a database, force saving or error\n        if (db) {\n            await db.init();\n            const savedWalletRecord = await db.getWallet(name);\n            if (savedWalletRecord) {\n                await db.close();\n                if (forceNew) {\n                    throw Error(`A wallet with the name ${name} already exists in ${dbName}`);\n                }\n                const recoveredWallet = await this.fromId(savedWalletRecord.wallet);\n                recoveredWallet.name = savedWalletRecord.name;\n                return recoveredWallet;\n            }\n            else {\n                const wallet = await this.generate();\n                await db.addWallet(wallet.name, wallet.toDbString());\n                await db.close();\n                return wallet;\n            }\n        }\n        else {\n            throw Error(\"No database was available or configured to store the named wallet.\");\n        }\n    }\n    /**\n     * replaceNamed - Replace (recover) named wallet with a new walletId\n     *\n     * If wallet with a provided name does not exist yet, it will be created with a `walletId` supplied\n     * If wallet exists it will be overwritten without exception\n     *\n     * @param name   user friendly wallet alias\n     * @param walletId walletId options to steer the creation process\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns instantiated wallet\n     */\n    async replaceNamed(name, walletId, dbName) {\n        if (name.length === 0) {\n            throw Error(\"Named wallets must have a non-empty name\");\n        }\n        _checkContextSafety(this);\n        this.name = name;\n        dbName = dbName ? dbName : prefixFromNetworkMap[this.network];\n        let db = getStorageProvider(dbName);\n        if (db) {\n            await db.init();\n            let savedWalletRecord = await db.getWallet(name);\n            await this.fromId(walletId);\n            if (savedWalletRecord) {\n                await db.updateWallet(name, walletId);\n            }\n            else {\n                await db.addWallet(name, walletId);\n            }\n            await db.close();\n            return this;\n        }\n        else {\n            throw Error(\"No database was available or configured to store the named wallet.\");\n        }\n    }\n    /**\n     * namedExists - check if a named wallet already exists\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns boolean\n     */\n    async namedExists(name, dbName) {\n        if (name.length === 0) {\n            throw Error(\"Named wallets must have a non-empty name\");\n        }\n        _checkContextSafety(this);\n        dbName = dbName ? dbName : prefixFromNetworkMap[this.network];\n        let db = getStorageProvider(dbName);\n        if (db) {\n            await db.init();\n            let savedWalletRecord = await db.getWallet(name);\n            await db.close();\n            return savedWalletRecord !== undefined;\n        }\n        else {\n            throw Error(\"No database was available or configured to store the named wallet.\");\n        }\n    }\n    async generate() {\n        return this;\n    }\n    //#region Serialization\n    /**\n     * toDbString - store the serialized version of the wallet in the database, not just the name\n     *\n     * @throws {Error} if called on BaseWallet\n     */\n    toDbString() {\n        return `${this.walletType}:${this.network}:${this.getDepositAddress()}`;\n    }\n    // Returns the serialized wallet as a string\n    // If storing in a database, set asNamed to false to store secrets\n    // In all other cases, the a named wallet is deserialized from the database\n    //  by the name key\n    toString() {\n        return `${this.walletType}:${this.network}:${this.getDepositAddress()}`;\n    }\n    //#endregion Serialization\n    /**\n     *  explorerUrl   Web url to a transaction on a block explorer\n     *\n     * @param txId   transaction Id\n     * @returns   Url string\n     */\n    explorerUrl(txId) {\n        const explorerUrlMap = {\n            mainnet: \"https://blockchair.com/bitcoin-cash/transaction/\",\n            testnet: \"https://www.blockchain.com/bch-testnet/tx/\",\n            regtest: \"\",\n        };\n        return explorerUrlMap[this.network] + txId;\n    }\n    // returns the public key hash for an address\n    getPublicKeyHash(hex = false) {\n        if (this.publicKeyHash) {\n            return hex ? binToHex(this.publicKeyHash) : this.publicKeyHash;\n        }\n        else {\n            throw Error(\"The public key hash for this wallet is not known. If this wallet was created from the constructor directly, calling the deriveInfo() function may help. \");\n        }\n    }\n    /**\n     * fromCashaddr - create a watch-only wallet in the network derived from the address\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   cashaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async fromCashaddr(address) {\n        const prefix = derivePrefix(address);\n        const networkType = networkPrefixMap[prefix];\n        return new this(networkType).watchOnly(address);\n    }\n    /**\n     * fromTokenaddr - create a watch-only wallet in the network derived from the address\n     *\n     * such kind of wallet does not have a private key and is unable to spend any funds\n     * however it still allows to use many utility functions such as getting and watching balance, etc.\n     *\n     * @param address   token aware cashaddress of a wallet\n     *\n     * @returns instantiated wallet\n     */\n    static async fromTokenaddr(address) {\n        const prefix = derivePrefix(address);\n        const networkType = networkPrefixMap[prefix];\n        return new this(networkType).watchOnly(address);\n    }\n    /**\n     * named - create a named wallet\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     * @param force  force recreate wallet in the database if a record already exist\n     *\n     * @returns instantiated wallet\n     */\n    static async named(name, dbName, force) {\n        return new this().named(name, dbName, force);\n    }\n    /**\n     * replaceNamed - replace (recover) named wallet with a new walletId\n     *\n     * If wallet with a provided name does not exist yet, it will be created with a `walletId` supplied\n     * If wallet exists it will be overwritten without exception\n     *\n     * @param name   user friendly wallet alias\n     * @param walletId walletId options to steer the creation process\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns instantiated wallet\n     */\n    static async replaceNamed(name, walletId, dbName) {\n        return new this().replaceNamed(name, walletId, dbName);\n    }\n    /**\n     * namedExists - check if a named wallet already exists\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns boolean\n     */\n    static async namedExists(name, dbName) {\n        return new this().namedExists(name, dbName);\n    }\n    fromId(walletId) {\n        const [walletType, networkGiven, arg1, arg2] = walletId.split(\":\");\n        if (walletType !== WalletTypeEnum.Watch) {\n            throw Error(`fromId called on a ${walletType} wallet, expected a ${WalletTypeEnum.Watch} wallet`);\n        }\n        if (this.network != networkGiven) {\n            throw Error(`Network prefix ${networkGiven} to a ${this.network} wallet`);\n        }\n        if (arg2) {\n            return this.watchOnly(`${arg1}:${arg2}`);\n        }\n        return this.watchOnly(arg1);\n    }\n    // Initialize a watch only wallet from a cash addr\n    async watchOnly(address) {\n        this.walletType = WalletTypeEnum.Watch;\n        const addressComponents = address.split(\":\");\n        let addressPrefix;\n        let addressBase;\n        if (addressComponents.length === 1) {\n            addressBase = addressComponents.shift();\n            addressPrefix = derivePrefix(addressBase);\n        }\n        else {\n            addressPrefix = addressComponents.shift();\n            addressBase = addressComponents.shift();\n            if (addressPrefix in networkPrefixMap) {\n                if (networkPrefixMap[addressPrefix] !== this.network) {\n                    throw Error(`a ${addressPrefix} address cannot be watched from a ${this.network} Wallet`);\n                }\n            }\n        }\n        const prefixedAddress = `${addressPrefix}:${addressBase}`;\n        // check if a token aware address was provided\n        const addressData = decodeCashAddress(prefixedAddress);\n        if (typeof addressData === \"string\")\n            throw addressData;\n        this.publicKeyHash = addressData.payload;\n        let nonTokenAwareType = addressData.type;\n        if (nonTokenAwareType == CashAddressType.p2pkhWithTokens)\n            nonTokenAwareType = CashAddressType.p2pkh;\n        if (nonTokenAwareType == CashAddressType.p2shWithTokens)\n            nonTokenAwareType = CashAddressType.p2sh;\n        if (nonTokenAwareType == CashAddressType.p2pkh)\n            this.publicKeyHash = addressData.payload;\n        this.cashaddr = encodeCashAddress({\n            prefix: addressData.prefix,\n            type: nonTokenAwareType,\n            payload: addressData.payload,\n        }).address;\n        this.tokenaddr = deriveTokenaddr(addressData.payload, this.networkPrefix);\n        return this;\n    }\n    //#region Funds\n    /**\n     * utxos Get unspent outputs for the wallet\n     *\n     */\n    async getUtxos() {\n        if (!this.cashaddr) {\n            throw Error(\"Attempted to get utxos without an address\");\n        }\n        return await this.getAddressUtxos(this.cashaddr);\n    }\n    // gets wallet balance in sats, bch and currency\n    async getBalance(rawUnit, priceCache = true) {\n        if (rawUnit) {\n            const unit = sanitizeUnit(rawUnit);\n            return await balanceFromSatoshi(await this.getBalanceFromProvider(), unit, priceCache);\n        }\n        else {\n            return await balanceResponseFromSatoshi(await this.getBalanceFromProvider(), priceCache);\n        }\n    }\n    // Gets balance by summing value in all utxos in stats\n    async getBalanceFromUtxos() {\n        const utxos = (await this.getAddressUtxos(this.cashaddr)).filter((val) => val.token === undefined);\n        return sumUtxoValue(utxos);\n    }\n    // Gets balance from fulcrum\n    async getBalanceFromProvider() {\n        // Fulcrum reports balance of all utxos, including tokens, which is undesirable\n        // // TODO not sure why getting the balance from a provider doesn't work\n        // if (this._slpAware || this._slpSemiAware) {\n        //   return await this.getBalanceFromUtxos();\n        // } else {\n        //   return await this.provider.getBalance(this.cashaddr);\n        // }\n        // FIXME\n        return this.getBalanceFromUtxos();\n    }\n    async getAddressUtxos(address) {\n        if (!address) {\n            address = this.cashaddr;\n        }\n        if (this._slpSemiAware) {\n            const bchUtxos = await this.provider.getUtxos(address);\n            return bchUtxos.filter((bchutxo) => bchutxo.satoshis > DUST_UTXO_THRESHOLD);\n        }\n        else {\n            return await this.provider.getUtxos(address);\n        }\n    }\n    // watching for any transaction hash of this wallet\n    async watchAddress(callback) {\n        return this.provider.watchAddress(this.getDepositAddress(), callback);\n    }\n    // watching for any transaction of this wallet\n    async watchAddressTransactions(callback) {\n        return this.provider.watchAddressTransactions(this.getDepositAddress(), callback);\n    }\n    // watching for cashtoken transaction of this wallet\n    async watchAddressTokenTransactions(callback) {\n        return this.provider.watchAddressTokenTransactions(this.getDepositAddress(), callback);\n    }\n    // sets up a callback to be called upon wallet's balance change\n    // can be cancelled by calling the function returned from this one\n    async watchBalance(callback) {\n        return this.provider.watchAddressStatus(this.getDepositAddress(), async (_status) => {\n            const balance = (await this.getBalance());\n            callback(balance);\n        });\n    }\n    // sets up a callback to be called upon wallet's BCH or USD balance change\n    // if BCH balance does not change, the callback will be triggered every\n    // @param `usdPriceRefreshInterval` milliseconds by polling for new BCH USD price\n    // Since we want to be most sensitive to usd value change, we do not use the cached exchange rates\n    // can be cancelled by calling the function returned from this one\n    async watchBalanceUsd(callback, usdPriceRefreshInterval = 30000) {\n        let usdPrice = -1;\n        const _callback = async () => {\n            const balance = (await this.getBalance(undefined, false));\n            if (usdPrice !== balance.usd) {\n                usdPrice = balance.usd;\n                callback(balance);\n            }\n        };\n        const watchCancel = await this.provider.watchAddressStatus(this.getDepositAddress(), _callback);\n        const interval = setInterval(_callback, usdPriceRefreshInterval);\n        return async () => {\n            await watchCancel?.();\n            clearInterval(interval);\n        };\n    }\n    // waits for address balance to be greater than or equal to the target value\n    // this call halts the execution\n    async waitForBalance(value, rawUnit = UnitEnum.BCH) {\n        return new Promise(async (resolve) => {\n            let watchCancel;\n            watchCancel = await this.watchBalance(async (balance) => {\n                const satoshiBalance = await amountInSatoshi(value, rawUnit);\n                if (balance.sat >= satoshiBalance) {\n                    await watchCancel?.();\n                    resolve(balance);\n                }\n            });\n        });\n    }\n    // sets up a callback to be called upon wallet's token balance change\n    // can be cancelled by calling the function returned from this one\n    async watchTokenBalance(tokenId, callback) {\n        let previous = undefined;\n        return await this.provider.watchAddressStatus(this.getDepositAddress(), async (_status) => {\n            const balance = await this.getTokenBalance(tokenId);\n            if (previous != balance) {\n                callback(balance);\n            }\n            previous = balance;\n        });\n    }\n    // waits for address token balance to be greater than or equal to the target amount\n    // this call halts the execution\n    async waitForTokenBalance(tokenId, amount) {\n        return new Promise(async (resolve) => {\n            let watchCancel;\n            watchCancel = await this.watchTokenBalance(tokenId, async (balance) => {\n                if (balance >= amount) {\n                    await watchCancel?.();\n                    resolve(balance);\n                }\n            });\n        });\n    }\n    async getTokenInfo(tokenId) {\n        return BCMR.getTokenInfo(tokenId);\n    }\n    async _getMaxAmountToSend(params = {\n        outputCount: 1,\n        options: {},\n    }) {\n        if (!params.privateKey && params.options?.buildUnsigned !== true) {\n            throw Error(\"Couldn't get network or private key for wallet.\");\n        }\n        if (!this.cashaddr) {\n            throw Error(\"attempted to send without a cashaddr\");\n        }\n        if (params.options && params.options.slpSemiAware) {\n            this._slpSemiAware = true;\n        }\n        let feePaidBy;\n        if (params.options && params.options.feePaidBy) {\n            feePaidBy = params.options.feePaidBy;\n        }\n        else {\n            feePaidBy = FeePaidByEnum.change;\n        }\n        // get inputs\n        let utxos;\n        if (params.options && params.options.utxoIds) {\n            utxos = await checkUtxos(params.options.utxoIds.map((utxoId) => typeof utxoId === \"string\" ? fromUtxoId(utxoId) : utxoId), this);\n        }\n        else {\n            utxos = (await this.getAddressUtxos(this.cashaddr)).filter((utxo) => !utxo.token);\n        }\n        // Get current height to assure recently mined coins are not spent.\n        const bestHeight = await this.provider.getBlockHeight();\n        // simulate outputs using the sender's address\n        const sendRequest = new SendRequest({\n            cashaddr: this.cashaddr,\n            value: 100,\n            unit: \"sat\",\n        });\n        const sendRequests = Array(params.outputCount)\n            .fill(0)\n            .map(() => sendRequest);\n        const fundingUtxos = await getSuitableUtxos(utxos, undefined, bestHeight, feePaidBy, sendRequests);\n        const relayFeePerByteInSatoshi = await getRelayFeeCache(this.provider);\n        const fee = await getFeeAmountSimple({\n            utxos: fundingUtxos,\n            sendRequests: sendRequests,\n            privateKey: params.privateKey ?? hexToBin(placeholderPrivateKey),\n            sourceAddress: this.cashaddr,\n            relayFeePerByteInSatoshi: relayFeePerByteInSatoshi,\n            feePaidBy: feePaidBy,\n        });\n        const spendableAmount = sumUtxoValue(fundingUtxos);\n        let result = spendableAmount - fee;\n        if (result < 0) {\n            result = 0;\n        }\n        return { value: result, utxos: fundingUtxos };\n    }\n    async getMaxAmountToSend(params = {\n        outputCount: 1,\n        options: {},\n    }) {\n        const { value: result } = await this._getMaxAmountToSend(params);\n        return await balanceResponseFromSatoshi(result);\n    }\n    /**\n     * send Send some amount to an address\n     * this function processes the send requests, encodes the transaction, sends it to the network\n     * @returns (depending on the options parameter) the transaction id, new address balance and a link to the transaction on the blockchain explorer\n     *\n     * This is a first class function with REST analog, maintainers should strive to keep backward-compatibility\n     *\n     */\n    async send(requests, options) {\n        const { encodedTransaction, tokenIds, sourceOutputs } = await this.encodeTransaction(requests, undefined, options);\n        const resp = new SendResponse({});\n        resp.tokenIds = tokenIds;\n        if (options?.buildUnsigned !== true) {\n            const txId = await this.submitTransaction(encodedTransaction, options?.awaitTransactionPropagation === undefined ||\n                options?.awaitTransactionPropagation === true);\n            resp.txId = txId;\n            resp.explorerUrl = this.explorerUrl(resp.txId);\n            if (options?.queryBalance === undefined ||\n                options?.queryBalance === true) {\n                resp.balance = (await this.getBalance());\n            }\n        }\n        else {\n            resp.unsignedTransaction = binToHex(encodedTransaction);\n            resp.sourceOutputs = sourceOutputs;\n        }\n        return resp;\n    }\n    /**\n     * sendMax Send all available funds to a destination cash address\n     *\n     * @param  {string} cashaddr destination cash address\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     *\n     * @returns (depending on the options parameter) the transaction id, new address balance and a link to the transaction on the blockchain explorer\n     */\n    async sendMax(cashaddr, options) {\n        return await this.sendMaxRaw(cashaddr, options);\n    }\n    /**\n     * sendMaxRaw (internal) Send all available funds to a destination cash address\n     *\n     * @param  {string} cashaddr destination cash address\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     *\n     * @returns the transaction id sent to the network\n     */\n    async sendMaxRaw(cashaddr, options, privateKey) {\n        const { value: maxSpendableAmount, utxos } = await this._getMaxAmountToSend({\n            outputCount: 1,\n            options: options,\n            privateKey: privateKey,\n        });\n        if (!options) {\n            options = {};\n        }\n        options.utxoIds = utxos;\n        const sendRequest = new SendRequest({\n            cashaddr: cashaddr,\n            value: maxSpendableAmount,\n            unit: \"sat\",\n        });\n        const { encodedTransaction, tokenIds, sourceOutputs } = await this.encodeTransaction([sendRequest], true, options, privateKey);\n        const resp = new SendResponse({});\n        resp.tokenIds = tokenIds;\n        if (options?.buildUnsigned !== true) {\n            const txId = await this.submitTransaction(encodedTransaction, options?.awaitTransactionPropagation === undefined ||\n                options?.awaitTransactionPropagation === true);\n            resp.txId = txId;\n            resp.explorerUrl = this.explorerUrl(resp.txId);\n            if (options?.queryBalance === undefined ||\n                options?.queryBalance === true) {\n                resp.balance = (await this.getBalance());\n            }\n        }\n        else {\n            resp.unsignedTransaction = binToHex(encodedTransaction);\n            resp.sourceOutputs = sourceOutputs;\n        }\n        return resp;\n    }\n    /**\n     * encodeTransaction Encode and sign a transaction given a list of sendRequests, options and estimate fees.\n     * @param  {SendRequest[]} sendRequests SendRequests\n     * @param  {boolean} discardChange=false\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async encodeTransaction(requests, discardChange = false, options, privateKey) {\n        let sendRequests = asSendRequestObject(requests);\n        if (!privateKey && options?.buildUnsigned !== true) {\n            throw new Error(`Missing private key`);\n        }\n        if (options && options.slpSemiAware) {\n            this._slpSemiAware = true;\n        }\n        let feePaidBy;\n        if (options && options.feePaidBy) {\n            feePaidBy = options.feePaidBy;\n        }\n        else {\n            feePaidBy = FeePaidByEnum.change;\n        }\n        let changeAddress;\n        if (options && options.changeAddress) {\n            changeAddress = options.changeAddress;\n        }\n        else {\n            changeAddress = this.cashaddr;\n        }\n        let checkTokenQuantities = true;\n        if (options && options.checkTokenQuantities === false) {\n            checkTokenQuantities = false;\n        }\n        // get inputs from options or query all inputs\n        let utxos;\n        if (options && options.utxoIds) {\n            utxos = await checkUtxos(options.utxoIds.map((utxoId) => typeof utxoId === \"string\" ? fromUtxoId(utxoId) : utxoId), this);\n        }\n        else {\n            utxos = await this.getAddressUtxos(this.cashaddr);\n        }\n        // filter out token utxos if there are no token requests\n        if (checkTokenQuantities &&\n            !sendRequests.some((val) => val instanceof TokenSendRequest)) {\n            utxos = utxos.filter((val) => !val.token);\n        }\n        const addTokenChangeOutputs = (inputs, outputs) => {\n            // Allow for implicit token burn if the total amount sent is less than user had\n            // allow for token genesis, creating more tokens than we had before (0)\n            if (!checkTokenQuantities) {\n                return;\n            }\n            const allTokenInputs = inputs.filter((val) => val.token);\n            const allTokenOutputs = outputs.filter((val) => val instanceof TokenSendRequest);\n            const tokenIds = allTokenOutputs\n                .map((val) => val.tokenId)\n                .filter((val, idx, arr) => arr.indexOf(val) === idx);\n            for (let tokenId of tokenIds) {\n                const tokenInputs = allTokenInputs.filter((val) => val.token?.tokenId === tokenId);\n                const inputAmountSum = tokenInputs.reduce((prev, cur) => prev + cur.token.amount, 0n);\n                const tokenOutputs = allTokenOutputs.filter((val) => val.tokenId === tokenId);\n                const outputAmountSum = tokenOutputs.reduce((prev, cur) => prev + cur.amount, 0n);\n                const diff = inputAmountSum - outputAmountSum;\n                if (diff < 0) {\n                    throw new Error(\"Not enough token amount to send\");\n                }\n                if (diff >= 0) {\n                    let available = 0n;\n                    let change = 0n;\n                    const ensureUtxos = [];\n                    for (const token of tokenInputs.filter((val) => val.token?.amount)) {\n                        ensureUtxos.push(token);\n                        available += token.token.amount;\n                        if (available >= outputAmountSum) {\n                            change = available - outputAmountSum;\n                            //break;\n                        }\n                    }\n                    if (ensureUtxos.length) {\n                        if (!options) {\n                            options = {};\n                        }\n                        options.ensureUtxos = [\n                            ...(options.ensureUtxos ?? []),\n                            ...ensureUtxos,\n                        ].filter((val, index, array) => array.findIndex((other) => other.txid === val.txid && other.vout === val.vout) === index);\n                    }\n                    if (change > 0) {\n                        outputs.push(new TokenSendRequest({\n                            cashaddr: toTokenaddr(changeAddress) || this.tokenaddr,\n                            amount: change,\n                            tokenId: tokenId,\n                            commitment: tokenOutputs[0].commitment,\n                            capability: tokenOutputs[0].capability,\n                            value: tokenOutputs[0].value,\n                        }));\n                    }\n                }\n            }\n        };\n        addTokenChangeOutputs(utxos, sendRequests);\n        const bestHeight = await this.provider.getBlockHeight();\n        const spendAmount = await sumSendRequestAmounts(sendRequests);\n        if (utxos.length === 0) {\n            throw Error(\"There were no Unspent Outputs\");\n        }\n        if (typeof spendAmount !== \"bigint\") {\n            throw Error(\"Couldn't get spend amount when building transaction\");\n        }\n        const relayFeePerByteInSatoshi = await getRelayFeeCache(this.provider);\n        const feeEstimate = await getFeeAmountSimple({\n            utxos: utxos,\n            sendRequests: sendRequests,\n            privateKey: privateKey ?? hexToBin(placeholderPrivateKey),\n            sourceAddress: this.cashaddr,\n            relayFeePerByteInSatoshi: relayFeePerByteInSatoshi,\n            feePaidBy: feePaidBy,\n        });\n        const fundingUtxos = await getSuitableUtxos(utxos, BigInt(spendAmount) + BigInt(Math.ceil(feeEstimate)), bestHeight, feePaidBy, sendRequests, options?.ensureUtxos || [], options?.tokenOperation);\n        if (fundingUtxos.length === 0) {\n            throw Error(\"The available inputs couldn't satisfy the request with fees\");\n        }\n        const fee = await getFeeAmount({\n            utxos: fundingUtxos,\n            sendRequests: sendRequests,\n            privateKey: privateKey ?? hexToBin(placeholderPrivateKey),\n            sourceAddress: this.cashaddr,\n            relayFeePerByteInSatoshi: relayFeePerByteInSatoshi,\n            feePaidBy: feePaidBy,\n        });\n        const { encodedTransaction, sourceOutputs } = await buildEncodedTransaction({\n            inputs: fundingUtxos,\n            outputs: sendRequests,\n            signingKey: privateKey ?? hexToBin(placeholderPrivateKey),\n            sourceAddress: this.cashaddr,\n            fee,\n            discardChange,\n            feePaidBy,\n            changeAddress,\n            buildUnsigned: options?.buildUnsigned === true,\n        });\n        const tokenIds = [\n            ...fundingUtxos\n                .filter((val) => val.token?.tokenId)\n                .map((val) => val.token.tokenId),\n            ...sendRequests\n                .filter((val) => val instanceof TokenSendRequest)\n                .map((val) => val.tokenId),\n        ].filter((value, index, array) => array.indexOf(value) === index);\n        return { encodedTransaction, tokenIds, sourceOutputs };\n    }\n    // Submit a raw transaction\n    async submitTransaction(transaction, awaitPropagation = true) {\n        if (!this.provider) {\n            throw Error(\"Wallet network provider was not initialized\");\n        }\n        let rawTransaction = binToHex(transaction);\n        return await this.provider.sendRawTransaction(rawTransaction, awaitPropagation);\n    }\n    // gets transaction history of this wallet\n    async getRawHistory(fromHeight = 0, toHeight = -1) {\n        return await this.provider.getHistory(this.cashaddr, fromHeight, toHeight);\n    }\n    /**\n     * getHistory gets transaction history of this wallet with most data decoded and ready to present to user\n     * @note balance calculations are valid only if querying to the blockchain tip (`toHeight` === -1, `count` === -1)\n     * @note this method is heavy on network calls, if invoked in browser use of cache is advised, @see `Config.UseLocalStorageCache`\n     * @note this method tries to recreate the history tab view of Electron Cash wallet, however, it may not be 100% accurate if the tnransaction value changes are the same in the same block (ordering)\n     *\n     * @param unit optional, BCH or currency unit to present balance and balance changes. If unit is currency like USD or EUR, balances will be subject to possible rounding errors. Default 0\n     * @param fromHeight optional, if set, history will be limited. Default 0\n     * @param toHeight optional, if set, history will be limited. Default -1, meaning that all history items will be returned, including mempool\n     * @param start optional, if set, the result set will be paginated with offset `start`\n     * @param count optional, if set, the result set will be paginated with `count`. Default -1, meaning that all history items will be returned\n     *\n     * @returns an array of transaction history items, with input values and addresses encoded in cashaddress format. @see `TransactionHistoryItem` type\n     */\n    async getHistory({ unit = \"sat\", fromHeight = 0, toHeight = -1, start = 0, count = -1, }) {\n        return getAddressHistory({\n            address: this.cashaddr,\n            provider: this.provider,\n            unit,\n            fromHeight,\n            toHeight,\n            start,\n            count,\n        });\n    }\n    // gets last transaction of this wallet\n    async getLastTransaction(confirmedOnly = false) {\n        let history = await this.getRawHistory();\n        if (confirmedOnly) {\n            history = history.filter((val) => val.height > 0);\n        }\n        if (!history.length) {\n            return null;\n        }\n        const [lastTx] = history.slice(-1);\n        return this.provider.getRawTransactionObject(lastTx.tx_hash);\n    }\n    // waits for next transaction, program execution is halted\n    async waitForTransaction(options = {\n        getTransactionInfo: true,\n        getBalance: false,\n        txHash: undefined,\n    }) {\n        if (options.getTransactionInfo === undefined) {\n            options.getTransactionInfo = true;\n        }\n        return new Promise(async (resolve) => {\n            let txHashSeen = false;\n            const makeResponse = async (txHash) => {\n                const response = {};\n                const promises = [undefined, undefined];\n                if (options.getBalance === true) {\n                    promises[0] = this.getBalance();\n                }\n                if (options.getTransactionInfo === true) {\n                    if (!txHash) {\n                        promises[1] = this.getLastTransaction();\n                    }\n                    else {\n                        promises[1] = this.provider.getRawTransactionObject(txHash);\n                    }\n                }\n                const result = await Promise.all(promises);\n                response.balance = result[0];\n                response.transactionInfo = result[1];\n                return response;\n            };\n            // waiting for a specific transaction to propagate\n            if (options.txHash) {\n                let cancel;\n                const waitForTransactionCallback = async (data) => {\n                    if (data && data[0] === options.txHash && data[1] !== null) {\n                        txHashSeen = true;\n                        await cancel?.();\n                        resolve(makeResponse(options.txHash));\n                    }\n                };\n                cancel = await this.provider.subscribeToTransaction(options.txHash, waitForTransactionCallback);\n                return;\n            }\n            // waiting for any address transaction\n            let watchCancel;\n            let initialResponseSeen = false;\n            watchCancel = await this.provider.watchAddressStatus(this.getDepositAddress(), async (_status) => {\n                if (initialResponseSeen) {\n                    await watchCancel?.();\n                    resolve(makeResponse());\n                    return;\n                }\n                initialResponseSeen = true;\n            });\n        });\n    }\n    /**\n     * watchBlocks Watch network blocks\n     *\n     * @param callback callback with a block header object\n     * @param skipCurrentHeight if set, the notification about current block will not arrive\n     *\n     * @returns a function which will cancel watching upon evaluation\n     */\n    async watchBlocks(callback, skipCurrentHeight = true) {\n        return this.provider.watchBlocks(callback, skipCurrentHeight);\n    }\n    /**\n     * waitForBlock Wait for a network block\n     *\n     * @param height if specified waits for this exact blockchain height, otherwise resolves with the next block\n     *\n     */\n    async waitForBlock(height) {\n        return this.provider.waitForBlock(height);\n    }\n    //#endregion Funds\n    // Convenience wrapper to verify interface\n    async verify(message, sig, publicKey) {\n        return await new SignedMessage().verify(message, sig, this.cashaddr, publicKey);\n    }\n    //#region Cashtokens\n    /**\n     * Create new cashtoken, both funglible and/or non-fungible (NFT)\n     * Refer to spec https://github.com/bitjson/cashtokens\n     * @param  {number} genesisRequest.amount amount of *fungible* tokens to create\n     * @param  {NFTCapability?} genesisRequest.capability capability of new NFT\n     * @param  {string?} genesisRequest.commitment NFT commitment message\n     * @param  {string?} genesisRequest.cashaddr cash address to send the created token UTXO to; if undefined will default to your address\n     * @param  {number?} genesisRequest.value satoshi value to send alongside with tokens; if undefined will default to 1000 satoshi\n     * @param  {SendRequestType | SendRequestType[]} sendRequests single or an array of extra send requests (OP_RETURN, value transfer, etc.) to include in genesis transaction\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async tokenGenesis(genesisRequest, sendRequests = [], options) {\n        if (!Array.isArray(sendRequests)) {\n            sendRequests = [sendRequests];\n        }\n        let utxos;\n        if (options && options.utxoIds) {\n            utxos = await checkUtxos(options.utxoIds.map((utxoId) => typeof utxoId === \"string\" ? fromUtxoId(utxoId) : utxoId), this);\n        }\n        else {\n            utxos = await this.getAddressUtxos(this.cashaddr);\n        }\n        const genesisInputs = utxos.filter((val) => val.vout === 0 && !val.token);\n        if (genesisInputs.length === 0) {\n            throw new Error(\"No suitable inputs with vout=0 available for new token genesis\");\n        }\n        const genesisSendRequest = new TokenSendRequest({\n            cashaddr: genesisRequest.cashaddr || this.tokenaddr,\n            amount: genesisRequest.amount,\n            value: genesisRequest.value || 1000,\n            capability: genesisRequest.capability,\n            commitment: genesisRequest.commitment,\n            tokenId: genesisInputs[0].txid,\n        });\n        return this.send([genesisSendRequest, ...sendRequests], {\n            ...options,\n            utxoIds: utxos,\n            ensureUtxos: [genesisInputs[0]],\n            checkTokenQuantities: false,\n            queryBalance: false,\n            tokenOperation: \"genesis\",\n        });\n    }\n    /**\n     * Mint new NFT cashtokens using an existing minting token\n     * Refer to spec https://github.com/bitjson/cashtokens\n     * @param  {string} tokenId tokenId of an NFT to mint\n     * @param  {TokenMintRequest | TokenMintRequest[]} mintRequests mint requests with new token properties and recipients\n     * @param  {NFTCapability?} mintRequest.capability capability of new NFT\n     * @param  {string?} mintRequest.commitment NFT commitment message\n     * @param  {string?} mintRequest.cashaddr cash address to send the created token UTXO to; if undefined will default to your address\n     * @param  {number?} mintRequest.value satoshi value to send alongside with tokens; if undefined will default to 1000 satoshi\n     * @param  {boolean?} deductTokenAmount if minting token contains fungible amount, deduct from it by amount of minted tokens\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async tokenMint(tokenId, mintRequests, deductTokenAmount = false, options) {\n        if (tokenId?.length !== 64) {\n            throw Error(`Invalid tokenId supplied: ${tokenId}`);\n        }\n        if (!Array.isArray(mintRequests)) {\n            mintRequests = [mintRequests];\n        }\n        const utxos = await this.getAddressUtxos(this.cashaddr);\n        const nftUtxos = utxos.filter((val) => val.token?.tokenId === tokenId &&\n            val.token?.capability === NFTCapability.minting);\n        if (!nftUtxos.length) {\n            throw new Error(\"You do not have any token UTXOs with minting capability for specified tokenId\");\n        }\n        const newAmount = deductTokenAmount && nftUtxos[0].token.amount > 0\n            ? nftUtxos[0].token.amount - BigInt(mintRequests.length)\n            : nftUtxos[0].token.amount;\n        const safeNewAmount = newAmount < 0n ? 0n : newAmount;\n        const mintingInput = new TokenSendRequest({\n            cashaddr: this.tokenaddr,\n            tokenId: tokenId,\n            capability: nftUtxos[0].token.capability,\n            commitment: nftUtxos[0].token.commitment,\n            amount: safeNewAmount,\n            value: nftUtxos[0].satoshis,\n        });\n        return this.send([\n            mintingInput,\n            ...mintRequests.map((val) => new TokenSendRequest({\n                cashaddr: val.cashaddr || this.tokenaddr,\n                amount: 0,\n                tokenId: tokenId,\n                value: val.value,\n                capability: val.capability,\n                commitment: val.commitment,\n            })),\n        ], {\n            ...options,\n            ensureUtxos: [nftUtxos[0]],\n            checkTokenQuantities: false,\n            queryBalance: false,\n            tokenOperation: \"mint\",\n        });\n    }\n    /**\n     * Perform an explicit token burning by spending a token utxo to an OP_RETURN\n     *\n     * Behaves differently for fungible and non-fungible tokens:\n     *  * NFTs are always \"destroyed\"\n     *  * FTs' amount is reduced by the amount specified, if 0 FT amount is left and no NFT present, the token is \"destroyed\"\n     *\n     * Refer to spec https://github.com/bitjson/cashtokens\n     * @param  {string} burnRequest.tokenId tokenId of a token to burn\n     * @param  {NFTCapability} burnRequest.capability capability of the NFT token to select, optional\n     * @param  {string?} burnRequest.commitment commitment of the NFT token to select, optional\n     * @param  {number?} burnRequest.amount amount of fungible tokens to burn, optional\n     * @param  {string?} burnRequest.cashaddr address to return token and satoshi change to\n     * @param  {string?} message optional message to include in OP_RETURN\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async tokenBurn(burnRequest, message, options) {\n        if (burnRequest.tokenId?.length !== 64) {\n            throw Error(`Invalid tokenId supplied: ${burnRequest.tokenId}`);\n        }\n        const utxos = await this.getAddressUtxos(this.cashaddr);\n        const tokenUtxos = utxos.filter((val) => val.token?.tokenId === burnRequest.tokenId &&\n            val.token?.capability === burnRequest.capability &&\n            val.token?.commitment === burnRequest.commitment);\n        if (!tokenUtxos.length) {\n            throw new Error(\"You do not have suitable token UTXOs to perform burn\");\n        }\n        const totalFungibleAmount = tokenUtxos.reduce((prev, cur) => prev + (cur.token?.amount || 0n), 0n);\n        let fungibleBurnAmount = burnRequest.amount && burnRequest.amount > 0 ? burnRequest.amount : 0n;\n        fungibleBurnAmount = BigInt(fungibleBurnAmount);\n        const hasNFT = burnRequest.capability || burnRequest.commitment;\n        let utxoIds = [];\n        let changeSendRequests;\n        if (hasNFT) {\n            // does not have FT tokens, let us destroy the token completely\n            if (totalFungibleAmount === 0n) {\n                changeSendRequests = [];\n                utxoIds.push(tokenUtxos[0]);\n            }\n            else {\n                // add utxos to spend from\n                let available = 0n;\n                for (const token of tokenUtxos.filter((val) => val.token?.amount)) {\n                    utxoIds.push(token);\n                    available += token.token.amount;\n                    if (available >= fungibleBurnAmount) {\n                        break;\n                    }\n                }\n                // if there are FT, reduce their amount\n                const newAmount = totalFungibleAmount - fungibleBurnAmount;\n                const safeNewAmount = newAmount < 0n ? 0n : newAmount;\n                changeSendRequests = [\n                    new TokenSendRequest({\n                        cashaddr: burnRequest.cashaddr || this.tokenaddr,\n                        tokenId: burnRequest.tokenId,\n                        capability: burnRequest.capability,\n                        commitment: burnRequest.commitment,\n                        amount: safeNewAmount,\n                        value: tokenUtxos[0].satoshis,\n                    }),\n                ];\n            }\n        }\n        else {\n            // if we are burning last fungible tokens, let us destroy the token completely\n            if (totalFungibleAmount === fungibleBurnAmount) {\n                changeSendRequests = [];\n                utxoIds.push(...tokenUtxos);\n            }\n            else {\n                // add utxos to spend from\n                let available = 0n;\n                for (const token of tokenUtxos.filter((val) => val.token?.amount)) {\n                    utxoIds.push(token);\n                    available += token.token.amount;\n                    if (available >= fungibleBurnAmount) {\n                        break;\n                    }\n                }\n                // reduce the FT amount\n                const newAmount = available - fungibleBurnAmount;\n                const safeNewAmount = newAmount < 0n ? 0n : newAmount;\n                changeSendRequests = [\n                    new TokenSendRequest({\n                        cashaddr: burnRequest.cashaddr || this.tokenaddr,\n                        tokenId: burnRequest.tokenId,\n                        amount: safeNewAmount,\n                        value: tokenUtxos.reduce((a, c) => a + c.satoshis, 0),\n                    }),\n                ];\n            }\n        }\n        const opReturn = OpReturnData.fromString(message || \"\");\n        return this.send([opReturn, ...changeSendRequests], {\n            ...options,\n            checkTokenQuantities: false,\n            queryBalance: false,\n            ensureUtxos: utxoIds.length > 0 ? utxoIds : undefined,\n            tokenOperation: \"burn\",\n        });\n    }\n    /**\n     * getTokenUtxos Get unspent token outputs for the wallet\n     * will return utxos only for the specified token if `tokenId` provided\n     * @param  {string?} tokenId tokenId (category) to filter utxos by, if not set will return utxos from all tokens\n     * @returns  {UtxoI[]} token utxos\n     */\n    async getTokenUtxos(tokenId) {\n        const utxos = await this.getAddressUtxos(this.cashaddr);\n        return utxos.filter((val) => tokenId ? val.token?.tokenId === tokenId : val.token);\n    }\n    /**\n     * getTokenBalance Gets fungible token balance\n     * for NFT token balance see @ref getNftTokenBalance\n     * @param  {string} tokenId tokenId to get balance for\n     * @returns  {bigint} fungible token balance\n     */\n    async getTokenBalance(tokenId) {\n        const utxos = (await this.getTokenUtxos(tokenId)).filter((val) => val.token?.amount);\n        return sumTokenAmounts(utxos, tokenId);\n    }\n    /**\n     * getNftTokenBalance Gets non-fungible token (NFT) balance for a particular tokenId\n     * disregards fungible token balances\n     * for fungible token balance see @ref getTokenBalance\n     * @param  {string} tokenId tokenId to get balance for\n     * @returns  {number} non-fungible token balance\n     */\n    async getNftTokenBalance(tokenId) {\n        const utxos = (await this.getTokenUtxos(tokenId)).filter((val) => val.token?.commitment !== undefined);\n        return utxos.length;\n    }\n    /**\n     * getAllTokenBalances Gets all fungible token balances in this wallet\n     * @returns  {Object} a map [tokenId => balance] for all tokens in this wallet\n     */\n    async getAllTokenBalances() {\n        const result = {};\n        const utxos = (await this.getTokenUtxos()).filter((val) => val.token?.amount);\n        for (const utxo of utxos) {\n            if (!result[utxo.token.tokenId]) {\n                result[utxo.token.tokenId] = 0n;\n            }\n            result[utxo.token.tokenId] += utxo.token.amount;\n        }\n        return result;\n    }\n    /**\n     * getAllNftTokenBalances Gets all non-fungible token (NFT) balances in this wallet\n     * @returns  {Object} a map [tokenId => balance] for all NFTs in this wallet\n     */\n    async getAllNftTokenBalances() {\n        const result = {};\n        const utxos = (await this.getTokenUtxos()).filter((val) => val.token?.commitment !== undefined);\n        for (const utxo of utxos) {\n            if (!result[utxo.token.tokenId]) {\n                result[utxo.token.tokenId] = 0;\n            }\n            result[utxo.token.tokenId] += 1;\n        }\n        return result;\n    }\n}\n/**\n * Class to manage a mainnet watch wallet.\n */\nexport class WatchWallet extends BaseWallet {\n    static { this.networkPrefix = CashAddressNetworkPrefix.mainnet; }\n    static { this.walletType = WalletTypeEnum.Watch; }\n    constructor() {\n        super(NetworkType.Mainnet);\n    }\n}\n/**\n * Class to manage a testnet watch wallet.\n */\nexport class TestNetWatchWallet extends BaseWallet {\n    static { this.networkPrefix = CashAddressNetworkPrefix.testnet; }\n    static { this.walletType = WalletTypeEnum.Watch; }\n    constructor() {\n        super(NetworkType.Testnet);\n    }\n}\n/**\n * Class to manage a regtest watch wallet.\n */\nexport class RegTestWatchWallet extends BaseWallet {\n    static { this.networkPrefix = CashAddressNetworkPrefix.regtest; }\n    static { this.walletType = WalletTypeEnum.Watch; }\n    constructor() {\n        super(NetworkType.Regtest);\n    }\n}\n/**\n * _checkContextSafety (internal) if running in nodejs, will disable saving\n * mainnet wallets on public servers if ALLOW_MAINNET_USER_WALLETS is set to false\n * @param {BaseWallet} wallet        a wallet\n */\nconst _checkContextSafety = function (wallet) {\n    if (getRuntimePlatform() === \"node\") {\n        if (process.env.ALLOW_MAINNET_USER_WALLETS === `false`) {\n            if (wallet.network === NetworkType.Mainnet) {\n                throw Error(`Refusing to save wallet in an open public database, remove ALLOW_MAINNET_USER_WALLETS=\"false\", if this service is secure and private`);\n            }\n        }\n    }\n};\n/**\n * getNamedWalletId - get the full wallet id from the database\n *\n * @param name   user friendly wallet alias\n * @param dbName name under which the wallet will be stored in the database\n *\n * @returns boolean\n */\nexport async function getNamedWalletId(name, dbName) {\n    if (name.length === 0) {\n        throw Error(\"Named wallets must have a non-empty name\");\n    }\n    dbName = dbName ? dbName : dbName;\n    let db = getStorageProvider(dbName);\n    if (db) {\n        await db.init();\n        let savedWalletRecord = await db.getWallet(name);\n        await db.close();\n        if (savedWalletRecord !== undefined) {\n            return savedWalletRecord.wallet;\n        }\n        else {\n            throw Error(`No record was found for ${name} in db: ${dbName}`);\n        }\n    }\n    else {\n        throw Error(\"No database was available or configured to store the named wallet.\");\n    }\n}\nfunction getStorageProvider(dbName) {\n    if (!BaseWallet.StorageProvider) {\n        return undefined;\n    }\n    return new BaseWallet.StorageProvider(dbName);\n}\n//# sourceMappingURL=Base.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes } from \"./utils.js\";\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        clean(pad);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * PBKDF (RFC 2898). Can be used to create a key from password and salt.\n * @module\n */\nimport { hmac } from \"./hmac.js\";\n// prettier-ignore\nimport { ahash, anumber, asyncLoop, checkOpts, clean, createView, Hash, kdfInputToBytes } from \"./utils.js\";\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    ahash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    anumber(c);\n    anumber(dkLen);\n    anumber(asyncTick);\n    if (c < 1)\n        throw new Error('iterations (c) should be >= 1');\n    const password = kdfInputToBytes(_password);\n    const salt = kdfInputToBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    clean(u);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n * @example\n * const key = pbkdf2(sha256, 'password', 'salt', { dkLen: 32, c: Math.pow(2, 18) });\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function. Async version.\n * @example\n * await pbkdf2Async(sha256, 'password', 'salt', { dkLen: 32, c: 500_000 });\n */\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction isArrayOf(isString, arr) {\n    if (!Array.isArray(arr))\n        return false;\n    if (arr.length === 0)\n        return true;\n    if (isString) {\n        return arr.every((item) => typeof item === 'string');\n    }\n    else {\n        return arr.every((item) => Number.isSafeInteger(item));\n    }\n}\n// no abytes: seems to have 10% slowdown. Why?!\nfunction afn(input) {\n    if (typeof input !== 'function')\n        throw new Error('function expected');\n    return true;\n}\nfunction astr(label, input) {\n    if (typeof input !== 'string')\n        throw new Error(`${label}: string expected`);\n    return true;\n}\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`invalid integer: ${n}`);\n}\nfunction aArr(input) {\n    if (!Array.isArray(input))\n        throw new Error('array expected');\n}\nfunction astrArr(label, input) {\n    if (!isArrayOf(true, input))\n        throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label, input) {\n    if (!isArrayOf(false, input))\n        throw new Error(`${label}: array of numbers expected`);\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters) {\n    // mapping 1 to \"b\"\n    const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n    const len = lettersA.length;\n    astrArr('alphabet', lettersA);\n    // mapping \"b\" to 1\n    const indexes = new Map(lettersA.map((l, i) => [l, i]));\n    return {\n        encode: (digits) => {\n            aArr(digits);\n            return digits.map((i) => {\n                if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n                    throw new Error(`alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`);\n                return lettersA[i];\n            });\n        },\n        decode: (input) => {\n            aArr(input);\n            return input.map((letter) => {\n                astr('alphabet.decode', letter);\n                const i = indexes.get(letter);\n                if (i === undefined)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n                return i;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    astr('join', separator);\n    return {\n        encode: (from) => {\n            astrArr('join.decode', from);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            astr('join.decode', to);\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    anumber(bits);\n    astr('padding', chr);\n    return {\n        encode(data) {\n            astrArr('padding.encode', data);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            astrArr('padding.decode', input);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('padding: invalid, string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                const last = end - 1;\n                const byte = last * bits;\n                if (byte % 8 === 0)\n                    throw new Error('padding: invalid, string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    afn(fn);\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n    aArr(data);\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data, (d) => {\n        anumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`invalid integer: ${d}`);\n        return d;\n    });\n    const dlen = digits.length;\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < dlen; i++) {\n            const digit = digits[i];\n            const fromCarry = from * carry;\n            const digitBase = fromCarry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                fromCarry / from !== carry ||\n                digitBase - digit !== fromCarry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            const div = digitBase / to;\n            carry = digitBase % to;\n            const rounded = Math.floor(div);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\nconst powers = /* @__PURE__ */ (() => {\n    let res = [];\n    for (let i = 0; i < 40; i++)\n        res.push(2 ** i);\n    return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data, from, to, padding) {\n    aArr(data);\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const max = powers[from];\n    const mask = powers[to] - 1;\n    const res = [];\n    for (const n of data) {\n        anumber(n);\n        if (n >= max)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        const pow = powers[pos];\n        if (pow === undefined)\n            throw new Error('invalid carry');\n        carry &= pow - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry > 0)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    anumber(num);\n    const _256 = 2 ** 8;\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), _256, num);\n        },\n        decode: (digits) => {\n            anumArr('radix.decode', digits);\n            return Uint8Array.from(convertRadix(digits, num, _256));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    anumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            anumArr('radix2.decode', digits);\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    afn(fn);\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    anumber(len);\n    afn(fn);\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const sum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(sum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const oldChecksum = data.slice(-len);\n            const newChecksum = fn(payload).slice(0, len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexport const utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\n/**\n * base16 encoding from RFC 4648.\n * @example\n * ```js\n * base16.encode(Uint8Array.from([0x12, 0xab]));\n * // => '12AB'\n * ```\n */\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\n/**\n * base32 encoding from RFC 4648. Has padding.\n * Use `base32nopad` for unpadded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ===='\n * base32.decode('CKVQ====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\n/**\n * base32 encoding from RFC 4648. No padding.\n * Use `base32` for padded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ'\n * base32nopad.decode('CKVQ');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\n/**\n * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hexnopad` for unpadded version.\n * @example\n * ```js\n * base32hex.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG===='\n * base32hex.decode('2ALG====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\n/**\n * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hex` for padded version.\n * @example\n * ```js\n * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG'\n * base32hexnopad.decode('2ALG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\n/**\n * base32 encoding from RFC 4648. Doug Crockford's version.\n * https://www.crockford.com/base32.html\n * @example\n * ```js\n * base32crockford.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ANG'\n * base32crockford.decode('2ANG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\n// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64\n// prettier-ignore\nconst hasBase64Builtin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toBase64 === 'function' &&\n    typeof Uint8Array.fromBase64 === 'function')();\nconst decodeBase64Builtin = (s, isUrl) => {\n    astr('base64', s);\n    const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;\n    const alphabet = isUrl ? 'base64url' : 'base64';\n    if (s.length > 0 && !re.test(s))\n        throw new Error('invalid base64');\n    return Uint8Array.fromBase64(s, { alphabet, lastChunkHandling: 'strict' });\n};\n/**\n * base64 from RFC 4648. Padded.\n * Use `base64nopad` for unpadded version.\n * Also check out `base64url`, `base64urlnopad`.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64 = hasBase64Builtin ? {\n    encode(b) { abytes(b); return b.toBase64(); },\n    decode(s) { return decodeBase64Builtin(s, false); },\n} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\n/**\n * base64 from RFC 4648. No padding.\n * Use `base64` for padded version.\n * @example\n * ```js\n * base64nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64nopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\n/**\n * base64 from RFC 4648, using URL-safe alphabet. Padded.\n * Use `base64urlnopad` for unpadded version.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64url.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64url.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64url = hasBase64Builtin ? {\n    encode(b) { abytes(b); return b.toBase64({ alphabet: 'base64url' }); },\n    decode(s) { return decodeBase64Builtin(s, true); },\n} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\n/**\n * base64 from RFC 4648, using URL-safe alphabet. No padding.\n * Use `base64url` for padded version.\n * @example\n * ```js\n * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64urlnopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));\n/**\n * base58: base64 without ambigous characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n * @example\n * ```js\n * base58.decode('01abcdef');\n * // => '3UhJW'\n * ```\n */\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n/**\n * base58: flickr version. Check out `base58`.\n */\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\n/**\n * base58: XRP version. Check out `base58`.\n */\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n/**\n * base58: XMR version. Check out `base58`.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\n/**\n * Method, which creates base58check encoder.\n * Requires function, calculating sha256.\n */\nexport const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nexport const base58check = createBase58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        astr('bech32.encode prefix', prefix);\n        if (isBytes(words))\n            words = Array.from(words);\n        anumArr('bech32.encode', words);\n        const plen = prefix.length;\n        if (plen === 0)\n            throw new TypeError(`Invalid prefix length ${plen}`);\n        const actualLength = plen + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        astr('bech32.decode input', str);\n        const slen = str.length;\n        if (slen < 8 || (limit !== false && slen > limit))\n            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\n/**\n * bech32 from BIP 173. Operates on words.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32 = genBech32('bech32');\n/**\n * bech32m from BIP 350. Operates on words.\n * It was to mitigate `bech32` weaknesses.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32m = genBech32('bech32m');\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * ```js\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n * ```\n */\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\n// prettier-ignore\nconst hasHexBuiltin = /* @__PURE__ */ (() => typeof Uint8Array.from([]).toHex === 'function' &&\n    typeof Uint8Array.fromHex === 'function')();\n// prettier-ignore\nconst hexBuiltin = {\n    encode(data) { abytes(data); return data.toHex(); },\n    decode(s) { astr('hex', s); return Uint8Array.fromHex(s); },\n};\n/**\n * hex string decoder. Uses built-in function, when available.\n * @example\n * ```js\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n * ```\n */\nexport const hex = hasHexBuiltin\n    ? hexBuiltin\n    : chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n        if (typeof s !== 'string' || s.length % 2 !== 0)\n            throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n        return s.toLowerCase();\n    }));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\n/** @deprecated */\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\n/** @deprecated */\nexport const str = bytesToString; // as in python, but for bytes only\n/** @deprecated */\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\n/** @deprecated */\nexport const bytes = stringToBytes;\n//# sourceMappingURL=index.js.map","/**\n * Audited & minimal JS implementation of\n * [BIP39 mnemonic phrases](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @module\n * @example\n```js\nimport * as bip39 from '@scure/bip39';\nimport { wordlist } from '@scure/bip39/wordlists/english';\nconst mn = bip39.generateMnemonic(wordlist);\nconsole.log(mn);\nconst ent = bip39.mnemonicToEntropy(mn, wordlist)\nbip39.entropyToMnemonic(ent, wordlist);\nbip39.validateMnemonic(mn, wordlist);\nawait bip39.mnemonicToSeed(mn, 'password');\nbip39.mnemonicToSeedSync(mn, 'password');\n\n// Wordlists\nimport { wordlist as czech } from '@scure/bip39/wordlists/czech';\nimport { wordlist as english } from '@scure/bip39/wordlists/english';\nimport { wordlist as french } from '@scure/bip39/wordlists/french';\nimport { wordlist as italian } from '@scure/bip39/wordlists/italian';\nimport { wordlist as japanese } from '@scure/bip39/wordlists/japanese';\nimport { wordlist as korean } from '@scure/bip39/wordlists/korean';\nimport { wordlist as portuguese } from '@scure/bip39/wordlists/portuguese';\nimport { wordlist as simplifiedChinese } from '@scure/bip39/wordlists/simplified-chinese';\nimport { wordlist as spanish } from '@scure/bip39/wordlists/spanish';\nimport { wordlist as traditionalChinese } from '@scure/bip39/wordlists/traditional-chinese';\n```\n */\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { pbkdf2, pbkdf2Async } from '@noble/hashes/pbkdf2';\nimport { sha256, sha512 } from '@noble/hashes/sha2';\nimport { abytes, anumber, randomBytes } from '@noble/hashes/utils';\nimport { utils as baseUtils } from '@scure/base';\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\n// https://tonsky.me/blog/unicode/#why-is-a----\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError('invalid mnemonic type: ' + typeof str);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction aentropy(ent) {\n    abytes(ent, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nexport function generateMnemonic(wordlist, strength = 128) {\n    anumber(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic(randomBytes(strength / 8), wordlist);\n}\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([(sha256(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Wordlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error('wordlist: non-string element: ' + i);\n    });\n    return baseUtils.chain(baseUtils.checksum(1, calcChecksum), baseUtils.radix2(11, true), baseUtils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    aentropy(entropy);\n    return entropy;\n}\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nexport function entropyToMnemonic(entropy, wordlist) {\n    aentropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nexport function validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nconst psalt = (passphrase) => nfkd('mnemonic' + passphrase);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nexport function mnemonicToSeed(mnemonic, passphrase = '') {\n    return pbkdf2Async(sha512, normalize(mnemonic).nfkd, psalt(passphrase), { c: 2048, dkLen: 64 });\n}\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nexport function mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return pbkdf2(sha512, normalize(mnemonic).nfkd, psalt(passphrase), { c: 2048, dkLen: 64 });\n}\n","import { binToHex } from \"@bitauth/libauth\";\nexport function checkForEmptySeed(seed) {\n    let blankSeed = \"4ed8d4b17698ddeaa1f1559f152f87b5d472f725ca86d341bd0276f1b61197e21dd5a391f9f5ed7340ff4d4513aab9cce44f9497a5e7ed85fd818876b6eb402e\";\n    let seedBin = new Uint8Array(seed);\n    if (blankSeed == binToHex(seedBin))\n        throw Error(\"Seed was generated using empty mnemonic\");\n}\n//# sourceMappingURL=checkForEmptySeed.js.map","import { NetworkType } from \"../enum.js\";\nexport function checkWifNetwork(walletImportFormatString, networkType) {\n    if (!(walletImportFormatString[0] === \"L\" || walletImportFormatString[0] === \"K\") &&\n        networkType === NetworkType.Mainnet) {\n        throw Error(`Mainnet type wif ${walletImportFormatString} passed, should start with L or K`);\n    }\n    else if (walletImportFormatString[0] !== \"c\" &&\n        networkType === NetworkType.Testnet) {\n        throw Error(`Testnet type wif ${walletImportFormatString} passed, should start with c`);\n    }\n}\n//# sourceMappingURL=checkWifNetwork.js.map","import { getRuntimePlatform } from \"./getRuntimePlatform.js\";\nimport crypto from \"crypto\";\nexport function generateRandomBytes(len = 32) {\n    // nodejs\n    if (getRuntimePlatform() === \"node\") {\n        return crypto.randomBytes(len);\n    }\n    // window, webworkers, service workers\n    else {\n        return window.crypto.getRandomValues(new Uint8Array(len));\n    }\n}\n//# sourceMappingURL=randomBytes.js.map","//#region Imports\nimport { encodeHdPublicKey, secp256k1 } from \"@bitauth/libauth\";\nimport { binToHex, CashAddressNetworkPrefix, decodePrivateKeyWif, deriveHdPath, deriveHdPrivateNodeFromSeed, deriveHdPublicNode, encodePrivateKeyWif, generatePrivateKey, } from \"@bitauth/libauth\";\nimport { generateMnemonic, mnemonicToSeedSync } from \"@scure/bip39\";\nimport { NetworkType } from \"../enum.js\";\nimport { WalletTypeEnum } from \"./enum.js\";\nimport { XPubKey, } from \"./model.js\";\nimport { signUnsignedTransaction } from \"../transaction/Wif.js\";\nimport { DERIVATION_PATHS } from \"../constant.js\";\nimport { SignedMessage } from \"../message/index.js\";\nimport { checkForEmptySeed } from \"../util/checkForEmptySeed.js\";\nimport { checkWifNetwork } from \"../util/checkWifNetwork.js\";\nimport { deriveCashaddr, deriveTokenaddr } from \"../util/deriveCashaddr.js\";\nimport { derivePublicKeyHash } from \"../util/derivePublicKeyHash.js\";\nimport { getXPubKey } from \"../util/getXPubKey.js\";\nimport { generateRandomBytes } from \"../util/randomBytes.js\";\nimport { Config } from \"../config.js\";\nimport { balanceResponseFromSatoshi, } from \"../util/balanceObjectFromSatoshi.js\";\nimport { BaseWallet } from \"./Base.js\";\n//#endregion Imports\n/**\n * Class to manage a bitcoin cash wallet.\n */\nexport class Wallet extends BaseWallet {\n    static { this.signedMessage = new SignedMessage(); }\n    //#region Accessors\n    // Get mnemonic and derivation path for wallet\n    getSeed() {\n        if (!this.mnemonic) {\n            throw Error(\"Wallet mnemonic seed phrase not set\");\n        }\n        if (!this.derivationPath) {\n            throw Error(\"Wallet derivation path not set\");\n        }\n        return {\n            seed: this.mnemonic,\n            derivationPath: this.derivationPath,\n            parentDerivationPath: this.parentDerivationPath,\n        };\n    }\n    // Return wallet info\n    getInfo() {\n        return {\n            cashaddr: this.cashaddr,\n            tokenaddr: this.tokenaddr,\n            isTestnet: this.isTestnet,\n            name: this.name,\n            network: this.network,\n            seed: this.mnemonic ? this.getSeed().seed : undefined,\n            derivationPath: this.mnemonic ? this.getSeed().derivationPath : undefined,\n            parentDerivationPath: this.mnemonic\n                ? this.getSeed().parentDerivationPath\n                : undefined,\n            parentXPubKey: this.parentXPubKey ? this.parentXPubKey : undefined,\n            publicKey: this.publicKey ? binToHex(this.publicKey) : undefined,\n            publicKeyHash: binToHex(this.publicKeyHash),\n            privateKey: this.privateKey ? binToHex(this.privateKey) : undefined,\n            privateKeyWif: this.privateKeyWif,\n            walletId: this.toString(),\n            walletDbEntry: this.toDbString(),\n        };\n    }\n    // returns the public key hash for an address\n    getPublicKey(hex = false) {\n        if (this.publicKey) {\n            return hex ? binToHex(this.publicKey) : this.publicKey;\n        }\n        else {\n            throw Error(\"The public key for this wallet is not known, perhaps the wallet was created to watch the *hash* of a public key? i.e. a cashaddress.\");\n        }\n    }\n    // returns the public key hash for an address\n    getPublicKeyCompressed(hex = false) {\n        if (this.publicKeyCompressed) {\n            return hex\n                ? binToHex(this.publicKeyCompressed)\n                : this.publicKeyCompressed;\n        }\n        else {\n            throw Error(\"The compressed public key for this wallet is not known, perhaps the wallet was created to watch the *hash* of a public key? i.e. a cashaddress.\");\n        }\n    }\n    //#endregion\n    //#region Constructors and Statics\n    constructor(name = \"\", network = NetworkType.Mainnet, walletType = WalletTypeEnum.Seed) {\n        super(network);\n        this.derivationPath = Config.DefaultParentDerivationPath + \"/0/0\";\n        this.parentDerivationPath = Config.DefaultParentDerivationPath;\n        this.fromId = async (walletId) => {\n            const [walletType, networkGiven, arg1, arg2] = walletId.split(\":\");\n            if (this.network !== networkGiven) {\n                throw Error(`Network prefix ${networkGiven} to a ${this.network} wallet`);\n            }\n            // \"wif:regtest:cNfsPtqN2bMRS7vH5qd8tR8GMvgXyL5BjnGAKgZ8DYEiCrCCQcP6\"\n            switch (walletType) {\n                case \"wif\":\n                    return this.fromWIF(arg1);\n                case \"watch\":\n                    if (arg2) {\n                        // watch:testnet:bchtest:qq1234567\n                        return this.watchOnly(`${arg1}:${arg2}`);\n                    }\n                    // watch:testnet:qq1234567\n                    return this.watchOnly(`${arg1}`);\n                case \"named\":\n                    if (arg2) {\n                        // named:testnet:wallet_1:my_database\n                        return this.named(arg1, arg2);\n                    }\n                    else {\n                        // named:testnet:wallet_1\n                        return this.named(arg1);\n                    }\n                case \"seed\":\n                    if (arg2) {\n                        // seed:testnet:table later ... stove kitten pluck:m/44'/0'/0'/0/0\n                        return this.fromSeed(arg1, arg2);\n                    }\n                    // seed:testnet:table later ... stove kitten pluck\n                    return this.fromSeed(arg1);\n                default:\n                    throw Error(`Unknown wallet type '${walletType}'`);\n            }\n        };\n        this.name = name;\n        this.walletType = walletType;\n    }\n    //#region Statics\n    /**\n     * fromId - create a wallet from encoded walletId string\n     *\n     * @param walletId   walletId options to steer the creation process\n     *\n     * @returns wallet instantiated accordingly to the walletId rules\n     */\n    static async fromId(walletId) {\n        return new this().fromId(walletId);\n    }\n    /**\n     * fromWIF - create a wallet using the private key supplied in `Wallet Import Format`\n     *\n     * @param wif   WIF encoded private key string\n     *\n     * @returns instantiated wallet\n     */\n    static async fromWIF(wif) {\n        return new this().fromWIF(wif);\n    }\n    /**\n     * fromSeed - create a wallet using the seed phrase and derivation path\n     *\n     * unless specified the derivation path m/44'/245'/0'/0/0 will be userd\n     * this derivation path is standard for Electron Cash SLP and other SLP enabled wallets\n     *\n     * @param seed   BIP39 12 word seed phrase\n     * @param derivationPath BIP44 HD wallet derivation path to get a single the private key from hierarchy\n     *\n     * @returns instantiated wallet\n     */\n    static async fromSeed(seed, derivationPath) {\n        return new this().fromSeed(seed, derivationPath);\n    }\n    /**\n     * newRandom - create a random wallet\n     *\n     * if `name` parameter is specified, the wallet will also be persisted to DB\n     *\n     * @param name   user friendly wallet alias\n     * @param dbName name under which the wallet will be stored in the database\n     *\n     * @returns instantiated wallet\n     */\n    static async newRandom(name = \"\", dbName) {\n        return new this().newRandom(name, dbName);\n    }\n    //#endregion Constructors\n    //#region Protected implementations\n    async generate() {\n        if (this.walletType === WalletTypeEnum.Wif) {\n            return await this._generateWif();\n        }\n        else if (this.walletType === WalletTypeEnum.Watch) {\n            return this;\n        }\n        else if (this.walletType === WalletTypeEnum.Hd) {\n            throw Error(\"Not implemented\");\n        }\n        else if (this.walletType === WalletTypeEnum.Seed) {\n            return await this._generateMnemonic();\n        }\n        else {\n            console.log(this.walletType);\n            throw Error(`Could not determine walletType: ${this.walletType}`);\n        }\n    }\n    async _generateWif() {\n        if (!this.privateKey) {\n            this.privateKey = generatePrivateKey(() => generateRandomBytes(32));\n        }\n        return this.deriveInfo();\n    }\n    async _generateMnemonic() {\n        this.mnemonic = generateMnemonic(Config.getWordlist());\n        if (this.mnemonic.length == 0)\n            throw Error(\"refusing to create wallet from empty mnemonic\");\n        const seed = mnemonicToSeedSync(this.mnemonic);\n        checkForEmptySeed(seed);\n        const network = this.isTestnet ? \"testnet\" : \"mainnet\";\n        this.parentXPubKey = getXPubKey(seed, this.parentDerivationPath, network);\n        const hdNode = deriveHdPrivateNodeFromSeed(seed, {\n            assumeValidity: true, // TODO: we should switch to libauth's BIP39 implementation and set this to false\n            throwErrors: true,\n        });\n        const zerothChild = deriveHdPath(hdNode, this.derivationPath);\n        if (typeof zerothChild === \"string\") {\n            throw Error(zerothChild);\n        }\n        this.privateKey = zerothChild.privateKey;\n        this.walletType = WalletTypeEnum.Seed;\n        return await this.deriveInfo();\n    }\n    async getXPubKeys(paths) {\n        if (this.mnemonic) {\n            if (paths) {\n                let xPubKeys = await this.deriveHdPaths(paths);\n                return [xPubKeys];\n            }\n            else {\n                return await this.deriveHdPaths(DERIVATION_PATHS);\n            }\n        }\n        else {\n            throw Error(\"xpubkeys can only be derived from seed type wallets.\");\n        }\n    }\n    // Initialize wallet from a mnemonic phrase\n    async fromSeed(mnemonic, derivationPath) {\n        this.mnemonic = mnemonic.trim().toLowerCase();\n        if (this.mnemonic.length == 0)\n            throw Error(\"refusing to create wallet from empty mnemonic\");\n        const seed = mnemonicToSeedSync(this.mnemonic);\n        checkForEmptySeed(seed);\n        const hdNode = deriveHdPrivateNodeFromSeed(seed, {\n            assumeValidity: true, // TODO: we should switch to libauth's BIP39 implementation and set this to false\n            throwErrors: true,\n        });\n        if (derivationPath) {\n            this.derivationPath = derivationPath;\n            // If the derivation path is for the first account child, set the parent derivation path\n            const path = derivationPath.split(\"/\");\n            if (path.slice(-2).join(\"/\") == \"0/0\") {\n                this.parentDerivationPath = path.slice(0, -2).join(\"/\");\n            }\n        }\n        const zerothChild = deriveHdPath(hdNode, this.derivationPath);\n        if (typeof zerothChild === \"string\") {\n            throw Error(zerothChild);\n        }\n        this.privateKey = zerothChild.privateKey;\n        const network = this.isTestnet ? \"testnet\" : \"mainnet\";\n        this.parentXPubKey = await getXPubKey(seed, this.parentDerivationPath, network);\n        this.walletType = WalletTypeEnum.Seed;\n        await this.deriveInfo();\n        return this;\n    }\n    // Get common xpub paths from zerothChild privateKey\n    async deriveHdPaths(hdPaths) {\n        if (!this.mnemonic)\n            throw Error(\"refusing to create wallet from empty mnemonic\");\n        const seed = mnemonicToSeedSync(this.mnemonic);\n        checkForEmptySeed(seed);\n        const hdNode = deriveHdPrivateNodeFromSeed(seed, {\n            assumeValidity: true, // TODO: we should switch to libauth's BIP39 implementation and set this to false\n            throwErrors: true,\n        });\n        const result = [];\n        for (const path of hdPaths) {\n            if (path === \"m\") {\n                throw Error(\"Storing or sharing of parent public key may lead to loss of funds. Storing or sharing *root* parent public keys is strongly discouraged, although all parent keys have risk. See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#implications\");\n            }\n            const childNode = deriveHdPath(hdNode, path);\n            if (typeof childNode === \"string\") {\n                throw Error(childNode);\n            }\n            const node = deriveHdPublicNode(childNode);\n            if (typeof node === \"string\") {\n                throw Error(node);\n            }\n            const xPubKey = encodeHdPublicKey({\n                network: this.network,\n                node: node,\n            }, {\n                throwErrors: true,\n            }).hdPublicKey;\n            const key = new XPubKey({\n                path: path,\n                xPubKey: xPubKey,\n            });\n            result.push(await key.ready());\n        }\n        return await Promise.all(result).then((result) => {\n            return result;\n        });\n    }\n    // Initialize wallet from Wallet Import Format\n    async fromWIF(secret) {\n        checkWifNetwork(secret, this.network);\n        let wifResult = decodePrivateKeyWif(secret);\n        if (typeof wifResult === \"string\") {\n            throw Error(wifResult);\n        }\n        let resultData = wifResult;\n        this.privateKey = resultData.privateKey;\n        this.privateKeyWif = secret;\n        this.walletType = WalletTypeEnum.Wif;\n        await this.deriveInfo();\n        return this;\n    }\n    /**\n     * newRandom (internal) if the wallet is named, get or create it; otherwise create a random\n     * unnamed wallet\n     * @param {string} name              name of the wallet\n     * @param {string} dbName            database name the wallet is stored in\n     */\n    async newRandom(name, dbName) {\n        dbName = dbName ? dbName : this.networkPrefix;\n        if (name.length > 0) {\n            return this.named(name, dbName);\n        }\n        else {\n            return this.generate();\n        }\n    }\n    //#endregion Protected Implementations\n    //#region Serialization\n    // Returns the serialized wallet as a string\n    // If storing in a database, set asNamed to false to store secrets\n    // In all other cases, the a named wallet is deserialized from the database\n    // by the name key\n    toString() {\n        if (this.name) {\n            return `named:${this.network}:${this.name}`;\n        }\n        else if (this.walletType == WalletTypeEnum.Seed) {\n            return `${this.walletType}:${this.network}:${this.mnemonic}:${this.derivationPath}`;\n        }\n        else if (this.walletType === WalletTypeEnum.Wif) {\n            return `${this.walletType}:${this.network}:${this.privateKeyWif}`;\n        }\n        else if (this.walletType == WalletTypeEnum.Watch) {\n            return super.toString();\n        }\n        throw Error(\"toString unsupported wallet type\");\n    }\n    /**\n     * toDbString - store the serialized version of the wallet in the database, not just the name\n     *\n     * @throws {Error} if called on BaseWallet\n     */\n    toDbString() {\n        if (this.walletType == WalletTypeEnum.Seed) {\n            return `${this.walletType}:${this.network}:${this.mnemonic}:${this.derivationPath}`;\n        }\n        else if (this.walletType === WalletTypeEnum.Wif) {\n            return `${this.walletType}:${this.network}:${this.privateKeyWif}`;\n        }\n        else if (this.walletType == WalletTypeEnum.Watch) {\n            return super.toDbString();\n        }\n        throw Error(\"toDbString unsupported wallet type\");\n    }\n    //#endregion Serialization\n    //#region Funds\n    async getMaxAmountToSend(params = {\n        outputCount: 1,\n        options: {},\n    }) {\n        const { value: result } = await this._getMaxAmountToSend({\n            options: params.options,\n            outputCount: params.outputCount,\n            privateKey: this.privateKey,\n        });\n        return await balanceResponseFromSatoshi(result);\n    }\n    /**\n     * sendMax Send all available funds to a destination cash address\n     *\n     * @param  {string} cashaddr destination cash address\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     *\n     * @returns (depending on the options parameter) the transaction id, new address balance and a link to the transaction on the blockchain explorer\n     */\n    async sendMax(cashaddr, options) {\n        return this.sendMaxRaw(cashaddr, options, this.privateKey);\n    }\n    /**\n     * encodeTransaction Encode and sign a transaction given a list of sendRequests, options and estimate fees.\n     * @param  {SendRequest[]} sendRequests SendRequests\n     * @param  {boolean} discardChange=false\n     * @param  {SendRequestOptionsI} options Options of the send requests\n     */\n    async encodeTransaction(requests, discardChange = false, options, privateKey) {\n        return super.encodeTransaction(requests, discardChange, options, this.privateKey);\n    }\n    async signUnsignedTransaction(transaction, sourceOutputs) {\n        if (!this.privateKey) {\n            throw Error(\"Can not sign a transaction with watch-only wallet.\");\n        }\n        return signUnsignedTransaction(transaction, sourceOutputs, this.privateKey);\n    }\n    //#endregion Funds\n    //#region Private implementation details\n    async deriveInfo() {\n        const publicKey = secp256k1.derivePublicKeyUncompressed(this.privateKey);\n        if (typeof publicKey === \"string\") {\n            throw new Error(publicKey);\n        }\n        this.publicKey = publicKey;\n        const publicKeyCompressed = secp256k1.derivePublicKeyCompressed(this.privateKey);\n        if (typeof publicKeyCompressed === \"string\") {\n            throw new Error(publicKeyCompressed);\n        }\n        this.publicKeyCompressed = publicKeyCompressed;\n        const networkType = this.network === NetworkType.Regtest ? NetworkType.Testnet : this.network;\n        this.privateKeyWif = encodePrivateKeyWif(this.privateKey, networkType);\n        checkWifNetwork(this.privateKeyWif, this.network);\n        this.cashaddr = deriveCashaddr(this.privateKey, this.networkPrefix);\n        this.tokenaddr = deriveTokenaddr(this.privateKey, this.networkPrefix);\n        this.publicKeyHash = derivePublicKeyHash(this.cashaddr);\n        return this;\n    }\n    //#endregion Private implementation details\n    //#region Signing\n    // Convenience wrapper to sign interface\n    async sign(message) {\n        return await Wallet.signedMessage.sign(message, this.privateKey);\n    }\n}\n/**\n * Class to manage a testnet wallet.\n */\nexport class TestNetWallet extends Wallet {\n    static { this.networkPrefix = CashAddressNetworkPrefix.testnet; }\n    static { this.faucetServer = \"https://rest-unstable.mainnet.cash\"; }\n    constructor(name = \"\") {\n        super(name, NetworkType.Testnet);\n    }\n}\n/**\n * Class to manage a regtest wallet.\n */\nexport class RegTestWallet extends Wallet {\n    static { this.networkPrefix = CashAddressNetworkPrefix.regtest; }\n    constructor(name = \"\") {\n        super(name, NetworkType.Regtest);\n    }\n}\n/**\n * Class to manage a bitcoin cash wif wallet.\n */\nexport class WifWallet extends Wallet {\n    static { this.networkPrefix = CashAddressNetworkPrefix.mainnet; }\n    static { this.walletType = WalletTypeEnum.Wif; }\n    constructor(name = \"\") {\n        super(name, NetworkType.Mainnet, WalletTypeEnum.Wif);\n    }\n}\n/**\n * Class to manage a testnet wif wallet.\n */\nexport class TestNetWifWallet extends Wallet {\n    static { this.networkPrefix = CashAddressNetworkPrefix.testnet; }\n    static { this.walletType = WalletTypeEnum.Wif; }\n    constructor(name = \"\") {\n        super(name, NetworkType.Testnet, WalletTypeEnum.Wif);\n    }\n}\n/**\n * Class to manage a regtest wif wallet.\n */\nexport class RegTestWifWallet extends Wallet {\n    static { this.networkPrefix = CashAddressNetworkPrefix.regtest; }\n    static { this.walletType = WalletTypeEnum.Wif; }\n    constructor(name = \"\") {\n        super(name, NetworkType.Regtest, WalletTypeEnum.Wif);\n    }\n}\n//# sourceMappingURL=Wif.js.map"],"names":["walletTemplateP2pkh","P2pkhUtilityError","hdPrivateKeyToP2pkhLockingBytecode","addressIndex","hdPrivateKey","privateDerivationPath","throwErrors","template","lockingBytecode","walletTemplateToCompilerBCH","formatError","stringifyErrors","IndexedDBProvider","dbName","storeName","resolve","reject","request","event","db","name","walletId","store","getReq","addReq","req","putReq","RuntimePlatform","getRuntimePlatform","crypto$2","errorType","errorDetails","throwError","message","unknownValue","value","assertSuccess","result","expectation","BaseConverterCreationError","BaseConversionError","createBaseConverter","alphabet","alphabetMap","index","characterCode","base","paddingCharacter","factor","inverseFactor","input","firstNonZeroIndex","character","requiredLength","decoded","nextByte","remainingBytes","carry","digit","steps","firstNonZeroResultDigit","bin","byte","encoded","padding","all","bitcoinBase58Alphabet","base58","base58ToBin","binToBase58","chars","base64ToBin","validBase64","lookup","i","bufferLengthEstimate","stringLength","bufferLength","buffer","bytes","p","encoded1","encoded2","encoded3","encoded4","binToBase64","range","length","begin","_","splitEvery","chunkLength","hexByteWidth","hexadecimal","hexToBin","validHex","binToHex","str","flattenBinArray","array","totalLength","total","flattened","binsAreEqual","a","b","binaryByteWidth","binary","binStringToBin","binaryDigits","byteString","binToFixedLength","fixedBytes","numberToBinUint16LE","numberToBinUint32LE","numberToBinUint32BE","bigIntToBinUintLE","remaining","bigIntToBinUint64LEClamped","bigIntToBinUint64LE","valueAsUint64","binToNumberUint16LE","binToNumberUint32LE","bigIntToBinUint256BEClamped","binToBigIntUintLE","accumulated","binToBigIntUint64LE","truncatedBin","binToValueSatoshis","valueSatoshisToBin","compactUintPrefixToLength","firstByte","CompactUintError","readCompactUint","position","prefix","contents","bigIntToCompactUint","readCompactUintMinimal","read","readLength","canonicalEncoding","int32UnsignedToSigned","int32","readMultiple","readFunctions","nextPosition","results","readFunction","out","ReadItemCountError","readItemCount","countRead","utf8Encoder","utf8ToBin","utf8","utf8Decoder","binToUtf8","lossyNormalize","instantiateRustWasm","webassemblyBytes","expectedImportModuleName","hashExportName","initExportName","updateExportName","finalExportName","wasm","ptr","len","getUint8Memory","num","cachedUint8Memory","cachedUint32Memory","cachedGlobalArgumentPtr","globalArgumentPtr","getUint32Memory","passArray8ToWasm","getArrayU8FromWasm","rawState","ptr0","len0","retPtr","mem","realRet","ptr1","len1","ripemd160Base64Bytes","SECP256K1_FLAGS_TYPE_CONTEXT","SECP256K1_FLAGS_TYPE_COMPRESSION","SECP256K1_FLAGS_BIT_CONTEXT_VERIFY","SECP256K1_FLAGS_BIT_CONTEXT_SIGN","SECP256K1_FLAGS_BIT_COMPRESSION","SECP256K1_CONTEXT_VERIFY","SECP256K1_CONTEXT_SIGN","SECP256K1_CONTEXT_NONE","SECP256K1_EC_COMPRESSED","SECP256K1_EC_UNCOMPRESSED","ContextFlag","CompressionFlag","secp256k1Base64Bytes","wrapSecp256k1Wasm","instance","heapU8","heapU32","context","contextPtr","seedPtr","pointer","pointerView32","secretKeyPtr","tweakNum256Ptr","publicKeyPtr","publicKeyOutPtr","publicKeyInPtr","publicKeyInLength","outputPtr","outputLengthPtr","compression","outputPubkeyPointer","rSigPtr","msg32Ptr","outputRSigPtr","inputSigPtr","rid","sigOutPtr","recIDOutPtr","outputSigPtr","sigPtr","compactSigInPtr","sigDERInPtr","sigDERInLength","outputCompactSigPtr","outputDERSigPtr","outputDERSigLengthPtr","pubkeyPtr","isLittleEndian","heap16","heap32","alignMemory","size","instantiateSecp256k1WasmBytes","wasmMemory","STATIC_BASE","STATICTOP_INITIAL","DYNAMICTOP_PTR","STATICTOP","STACKTOP","STACK_MAX","DYNAMIC_BASE","TABLE_SIZE","MAX_TABLE_SIZE","getErrNoLocation","info","err","dest","src","getEmbeddedSecp256k1Binary","instantiateSecp256k1Wasm","sha1Base64Bytes","sha256Base64Bytes","sha512Base64Bytes","instantiateRipemd160Bytes","getEmbeddedRipemd160Binary","instantiateRipemd160","Secp256k1Error","secp256k1Wasm","randomSeed","sigScratch","publicKeyScratch","messageHashScratch","internalPublicKeyPtr","internalSigPtr","schnorrSigPtr","privateKeyPtr","internalRSigPtr","recoveryNumPtr","recoveryNumPtrView32","getRecoveryNumPtr","lengthPtr","lengthPtrView32","cloneAndPad","expectedLength","zeroPaddedValue","parsePublicKey","publicKey","paddedPublicKey","setLengthPtr","getLengthPtr","serializePublicKey","flag","getSerializedPublicKey","compressed","convertPublicKey","parseSignature","signature","isDer","paddedSignature","getCompactSig","getDERSig","convertSignature","wasDER","fillPrivateKeyPtr","privateKey","paddedPrivateKey","zeroOutPtr","zeroOutPrivateKeyPtr","withPrivateKey","instructions","ret","derivePublicKey","fillMessageHashScratch","messageHash","paddedMessageHash","normalizeSignature","modifySignature","normalize","parseAndNormalizeSignature","signMessageHash","signMessageHashSchnorr","verifyMessage","verifySignature","verifyMessageSchnorr","verifySignatureSchnorr","signMessageHashRecoverable","recoverPublicKey","recoveryId","addTweakPrivateKey","tweakValue","mulTweakPrivateKey","addTweakPublicKey","mulTweakPublicKey","instantiateSecp256k1","instantiateSha1Bytes","getEmbeddedSha1Binary","instantiateSha1","instantiateSha256Bytes","getEmbeddedSha256Binary","instantiateSha256","instantiateSha512Bytes","getEmbeddedSha512Binary","instantiateSha512","sha1","sha256","sha512","ripemd160","secp256k1","hash256","payload","internalSha256","instantiateHmacFunction","hashFunction","blockByteLength","secret","key","innerPrefix","pad","innerContent","innerResult","outerPrefix","sha512BlockByteLength","hmacSha512","internalSha512","Base58AddressFormatVersion","encodeBase58AddressFormat","version","content","checksum","Base58AddressError","decodeBase58AddressFormat","address","expectedChecksum","bech32CharacterSet","bech32CharacterSetIndex","BitRegroupingError","regroupBits","sourceWordLength","resultWordLength","allowPadding","accumulator","bits","maxResultInt","encodeBech32","base32IntegerArray","decodeBech32","validBech32","nonBech32Characters","isBech32CharacterSet","maybeBech32","extractNonBech32Characters","Bech32DecodingError","CashAddressNetworkPrefix","CashAddressVersionByte","CashAddressType","CashAddressTypeBits","cashAddressTypeToTypeBits","cashAddressTypeBitsToType","cashAddressLengthBitsToLength","cashAddressLengthToLengthBits","encodeCashAddressVersionByte","typeBits","CashAddressVersionByteDecodingError","decodeCashAddressVersionByte","maskCashAddressPrefix","bech32GeneratorMostSignificantByte","bech32GeneratorRemainingBytes","cashAddressPolynomialModulo","v","mostSignificantByte","lowerBytes","c","j","cashAddressChecksumToUint5Array","CashAddressFormatEncodingError","CashAddressEncodingError","encodeCashAddressFormat","checksum40BitPlaceholder","payloadContents","checksumContents","isValidCashAddressPayloadLength","encodeCashAddressNonStandard","encodeCashAddress","type","CashAddressDecodingError","decodeCashAddressFormat","parts","decodedPayload","polynomial","decodeCashAddressNonStandard","decodeCashAddress","decodeCashAddressFormatWithoutPrefix","possiblePrefixes","attempt","CashAddressFormatCorrectionError","LockingBytecodeType","isPayToPublicKeyUncompressed","isPayToPublicKeyCompressed","isPayToPublicKey","isPayToPublicKeyHash","isPayToScriptHash20","isPayToScriptHash32","lockingBytecodeToAddressContents","bytecode","encodeLockingBytecodeP2pkh","publicKeyHash","encodeLockingBytecodeP2sh20","p2sh20Hash","encodeLockingBytecodeP2sh32","p2sh32Hash","encodeLockingBytecodeP2pk","addressContentsToLockingBytecode","lockingBytecodeToCashAddress","tokenSupport","cashAddressToLockingBytecode","ReadBytesError","readBytes","ReadUint32LEError","readUint32LE","uint32LEBin","ReadUint64LEError","readUint64LE","uint64LEBin","CompactUintPrefixedBinError","readCompactUintPrefixedBin","p2","readRemainingBytes","NonFungibleTokenCapability","encodeTransactionInput","TransactionDecodingError","readTransactionInput","inputRead","outpointTransactionHash","outpointIndex","unlockingBytecode","sequenceNumber","encodeTransactionInputs","inputs","readTransactionInputs","inputsRead","maximumTokenAmount","nftCapabilityNumberToLabel","nftCapabilityLabelToNumber","CashTokenDecodingError","readTokenAmount","amountRead","readTokenPrefix","category","tokenBitfield","prefixStructure","nftCapabilityInt","capability","hasNft","hasCommitmentLength","hasAmount","commitmentRead","readLockingBytecodeWithPrefix","bytecodeRead","contentsRead","token","readTransactionOutput","outputRead","valueSatoshis","encodeTokenPrefix","capabilityInt","encodeTransactionOutput","output","lockingBytecodeField","readTransactionOutputs","outputsRead","encodeTransactionOutputs","outputs","readTransactionCommon","transactionRead","locktime","decodeTransactionCommon","decodeTransactionBch","decodeTransaction","encodeTransactionCommon","tx","encodeTransactionBch","encodeTransaction","encodeTransactionOutpoints","encodeTransactionOutputsForSigning","encodeTransactionInputSequenceNumbersForSigning","SigningSerializationFlag","SigningSerializationType","SigningSerializationTypeBch","match","equals","shouldSerializeSingleInput","shouldSerializeCorrespondingOutput","shouldSerializeNoOutputs","shouldSerializeUtxos","emptyHash","hashPrevouts","signingSerializationType","transactionOutpoints","hashUtxos","transactionUtxos","hashSequence","transactionSequenceNumbers","hashOutputs","correspondingOutput","transactionOutputs","encodeSigningSerializationBch","coveredBytecode","forkId","outputTokenPrefix","outputValue","generateSigningSerializationComponentsBch","generateSigningSerializationBch","ConsensusCommon","SigningSerializationTypesCommon","SigningSerializationTypesBch","AuthenticationErrorCommon","applyError","state","OpcodesBch2023","OpcodesBch2026Additions","OpcodesBch2026","OpcodesBchSpecAdditions","OpcodesBchSpec","authenticationInstructionIsMalformed","instruction","authenticationInstructionsAreMalformed","authenticationInstructionsArePushInstructions","uint8Bytes","uint16Bytes","uint32Bytes","readLittleEndianNumber","view","readAsLittleEndian","opcodeToPushLength","opcode","readAuthenticationInstruction","lengthBytes","sliceStart","sliceEnd","dataBytes","dataStart","dataEnd","decodeAuthenticationInstructions","formatAsmPushHex","data","formatMissingBytesAsm","missing","hasMalformedLength","isPushData","pushOpcode","disassembleAuthenticationInstructionMalformed","opcodes","generateBytecodeMap","entry","identifiers","pair","getInstructionLengthBytes","encodeAuthenticationInstruction","encodeAuthenticationInstructions","VmNumberError","isVmNumberError","vmNumberToBigInt","maximumVmNumberByteLength","requireMinimalEncoding","secondMostSignificantByte","wordBytes","wordBits","off","littleEndianWord","byteBits","signDepth","removeSign","bigIntToVmNumber","integer","isNegative","byteStates","bitsPerByte","signFlippingByte","stackItemIsTruthy","item","booleanToVmNumber","isPushOperation","isPushOnly","isArbitraryDataOutput","getMinimumFee","feeRateSatsPerKb","truncated","getDustThresholdForLength","outputLength","dustRelayFeeSatPerKb","expectedTotalLength","getDustThreshold","encodedOutputLength","isDustOutput","isValidUncompressedPublicKeyEncoding","isValidCompressedPublicKeyEncoding","isValidPublicKeyEncoding","isStandardnessPublicKeyEncodingPre2026","header","pushNumberOpcodeToNumber","isSimpleMultisig","lastIndex","m","publicKeyInstructions","publicKeys","isStandardMultisig","multisigProperties","n","isStandardOutputBytecodePre2023","isStandardOutputBytecode2023","isStandardUtxoBytecode2023","isWitnessProgram","correctLength","validVersionPush","correctLengthByte","incrementOperationCount","operation","nextState","executionIsActive","conditionallyEvaluate","mapOverOperations","combinators","operationMap","op","combinator","useOneStackItem","useTwoStackItems","valueTwo","lastState","valueTop","useThreeStackItems","valueThree","useFourStackItems","valueFour","useSixStackItems","valueFive","valueSix","useOneVmNumber","useTwoVmNumbers","secondValue","firstValue","useThreeVmNumbers","thirdValue","pushToStack","pushedBytes","acc","pushToStackChecked","maximumStackItemLength","pushToStackVmNumber","vmNumber","pushToStackVmNumberChecked","hasEncodingCost","combineOperations","firstOperation","secondOperation","lengthToHashDigestIterationCount","messageLength","incrementHashDigestIterations","resultIsHashed","newIterations","secondRound","requiredTotalIterations","opVerify","reservedOperation","opReturn","pushToControlStack","opIf","opNotIf","opEndIf","opElse","top","createNumericOperation","useVmNumbers","operate","values","numericOperationUnary","numericOperationBinary","numericOperationTernary","createOp1Add","createOp1Sub","createOpNegate","createOpAbs","createOpNot","createOp0NotEqual","createOpAdd","createOpSub","createOpBoolAnd","createOpBoolOr","createOpNumEqual","createOpNumEqualVerify","createOpNumNotEqual","createOpLessThan","createOpLessThanOrEqual","createOpGreaterThan","createOpGreaterThanOrEqual","createOpMin","createOpMax","createOpWithin","measureArithmeticCost","firstInput","secondInput","firstLength","secondLength","createOpMul","createOpDiv","createOpMod","opEqual","element1","element2","opEqualVerify","bitwiseOperation","combine","opAnd","opOr","opXor","undefinedOperation","hasUnnecessaryPadding","secondByte","isValidInteger","tagIndex","valueIndex","isValidSignatureEncodingDER","correctLengthRange","correctSequenceTagType","correctSequenceLength","rLength","consistentRLength","rIsValid","sTagIndex","sLengthIndex","sLength","sValueIndex","consistentSLength","sIsValid","isValidSignatureEncodingBchTransaction","transactionSignature","validSigningSerializationTypes","decodeBitcoinSignature","encodedSignature","opRipemd160","internalRipemd160","finalState","opSha1","internalSha1","opSha256","opHash160","opHash256","opCodeSeparator","opCheckSig","internalSecp256k1","s","bitcoinEncodedSignature","serialization","digest","doubleHashed","useSchnorr","success","countBits","BitfieldDecodeError","decodeBitfield","expectedBitLength","expectedBitfieldLength","bitfield","mask","opCheckMultiSig","enforceOperationLimit","publicKeysValue","potentialPublicKeys","approvingKeys","requiredApprovingPublicKeys","signatures","dummyValue","checkBits","bitCount","iKey","iSig","approvingPublicKeys","remainingSignatures","remainingPublicKeys","opCheckSigVerify","opCheckMultiSigVerify","isValidSignatureEncodingBchRaw","opCheckDataSig","opCheckDataSigVerify","opReverseBytes","createOpCat","opSplit","padMinimallyEncodedVmNumber","signBit","createOpNum2Bin","targetLength","target","minimallyEncoded","createOpBin2Num","opInputIndex","createOpActiveBytecode","opTxVersion","opTxInputCount","opTxOutputCount","opTxLocktime","useTransactionUtxo","utxo","opUtxoValue","createOpUtxoBytecode","useTransactionInput","opOutpointTxHash","opOutpointIndex","createOpInputBytecode","opInputSequenceNumber","useTransactionOutput","opOutputValue","createOpOutputBytecode","opNop","opNopDisallowed","disabledOperation","encodeDataPush","isMinimalDataPush","pushOperation","pushNumberOperation","number","opToAltStack","opFromAltStack","op2Drop","op2Dup","op3Dup","op2Over","d","op2Rot","e","f","op2Swap","opIfDup","opDepth","opDrop","opDup","opNip","opOver","opPick","depth","opRoll","depthBigInt","opRot","opSwap","opTuck","opSize","useLocktime","decodedLocktime","locktimeTypesAreCompatible","requiredLocktime","opCheckLockTimeVerify","includesFlag","opCheckSequenceVerify","requiredSequence","ConsensusBch2023","maximumSignatureCheckCount","unlockingBytecodeLength","AuthenticationErrorBch2023","extractGenesisCategories","agg","extractSourceOutputTokenData","sourceOutputs","sourceOutput","categoryHex","extractTransactionOutputTokenData","verifyTransactionTokens","transaction","maximumTokenCommitmentLength","excessiveCommitment","genesisCategories","availableSumsByCategory","availableMutableTokensByCategory","inputMintingCategories","availableImmutableTokens","outputSumsByCategory","outputMutableTokensByCategory","outputMintingCategories","outputImmutableTokens","availableMintingCategories","missingMintingCategory","sum","availableSum","remainingMutableTokens","unmatchedImmutableTokens","commitmentHex","firstMatch","available","requiredMutableTokens","required","pushTokenExtendedCategory","capabilityByte","extendedCategory","pushTokenCommitment","pushTokenAmount","opUtxoTokenCategory","opUtxoTokenCommitment","opUtxoTokenAmount","opOutputTokenCategory","opOutputTokenCommitment","opOutputTokenAmount","satoshisPerCoin","maxCoins","maxMoney","createInstructionSetBch2023","standard","consensus","conditionallyPush","program","stateEvaluate","stateInitialize","stateOverride","unlockingInstructions","lockingInstructions","initialState","unlockingResult","lockingResult","p2sh20","p2sh32","p2shStack","p2shScript","p2shInstructions","p2shResult","densityControlLength","maximumIterationsPerByte","evaluate","transactionLengthBytes","inputValue","outpointList","firstDuplicate","outpoint","totalArbitraryDataBytes","dataCarrier","p2sIsStandard","tokenValidationResult","cumulativeSigChecks","inputIndex","partiallyCloneProgramState","referenceOnlyKeys","shallowCloneArrayKeys","maskStaticProgramState","maskedState","createVirtualMachine","instructionSet","operators","codepoint","getCodepoint","afterInstruction","afterOperation","getOperation","noOp","stateEvery","stateStepMutate","operator","stateContinue","untilComplete","stepFunction","initialize","_program","stateClone","stateDebugStep","stateDebug","trace","currentState","stateStep","maskProgramState","proxyDebug","debugResult","finalResult","resolvedTransaction","AuthenticationErrorBch2025Additions","AuthenticationErrorBch2025","AuthenticationErrorBch2026Additions","AuthenticationErrorBch2026","AuthenticationErrorBchSpecAdditions","AuthenticationErrorBchSpec","ConsensusBch2025Overrides","ConsensusBch2025","measureOperationCost","metrics","baseInstructionCost","hashDigestIterationCost","signatureCheckCost","createInstructionSetBch2025","opBegin","opUntil","controlValue","ConsensusBch2026Overrides","ConsensusBch2026","opInvert","useOneShiftBitCount","shiftOperation","createOpLShiftNum","fastFailBitCount","numericValue","createOpRShiftNum","numericValueBits","fastReturnIfValid","copyWholeBytes","dst","byteShift","left","residualLeftShift","buf","bitShift","residualRightShift","shiftFixed","isLeftShift","binaryShiftLeft","binaryShiftRight","opLShiftBin","opRShiftBin","createOpDefine","maximumFunctionIdentifier","minimumFunctionIdentifier","providedInteger","functionIdentifier","functionBody","opInvoke","functionTableIndex","newInstructions","manuallyAdvance","createInstructionSetBch2026","ip","ConsensusBchSpecOverrides","ConsensusBchSpec","opEval","createOpPow","maybeExponent","baseLength","exponent","exponentValue","createInstructionSetBchSpec","stackSize","stack","memoryUsage","createVirtualMachineBchSpec","Opcodes","validateSecp256k1PrivateKey","maximumSecp256k1PrivateKey","firstDifference","HdNodeDerivationError","HdKeyDecodingError","HdKeyEncodingError","emptyParentFingerprint","bip32HmacSha512Key","deriveHdPrivateNodeFromSeed","seed","assumeValidity","crypto","hmacSha512Key","mac","chainCode","childIndex","parentFingerprint","valid","deriveHdPrivateNodeIdentifier","hdPrivateNode","deriveHdPublicNodeIdentifier","node","HdKeyVersion","hdKeyVersionIsPublicKey","hdKeyVersionIsPrivateKey","decodeHdKeyUnchecked","hdKey","checksumBits","depthIndex","fingerprintIndex","childIndexIndex","chainCodeIndex","keyDataIndex","keyData","isPrivateKey","decodeHdKey","isPublicKey","decodeHdPrivateKey","network","decodeHdPublicKey","hdPublicKey","encodeHdKeyPayloadMetadata","keyParameters","encodeHdPrivateKeyPayload","metadata","encodeHdPublicKeyPayload","encodeHdKeyPayloadWithChecksum","encodeHdPrivateKey","encodeHdPublicKey","deriveHdPublicNode","deriveHdPrivateNodeChild","returnInvalidNodes","parentIdentifier","useHardenedAlgorithm","keyMaterial","derivation","tweakValueLength","nextChainCode","nextPrivateKey","error","deriveHdPublicNodeChild","nextPublicKey","deriveHdPathRelative","path","parsed","isPrivateDerivation","hardenedIndexOffset","indexes","nextIndex","deriveHdPath","relativePath","HdNodeCrackingError","EntropyGenerationError","generateRandomBytesUnchecked","cryptoInstance","generateRandomBytes","generate","firstRun","secondRun","generateRandomSeed","generatePrivateKey","secureRandom","maybeKey","WalletImportFormatError","encodePrivateKeyWif","mainnet","decodePrivateKeyWif","wifKey","IdentifierResolutionType","IdentifierResolutionErrorType","pluckStartPosition","pluckEndPosition","mergeRanges","ranges","parentRange","unsortedMerged","merged","getResolutionErrors","resolvedScript","errors","segment","separator","Parsimmon","action","makeSuccess","makeFailure","expected","mergeReplies","last","union","makeLineColumnIndex","lines","lineWeAreUpTo","xs","ys","obj","keys","k","flags","re","anchoredRegexp","seq","params","parsers","numParsers","accum","seqMap","args","mapper","createLanguage","language","rule","func","lazy","alt","sepBy","parser","sepBy1","succeed","pairs","r","rs","eof","alternative","next","self","fn","start","end","reply","string","head","regexp","group","anchored","fullMatch","groupMatch","__","optWhitespace","whitespace","P","cashAssemblyParser","expressions","comment","push","evaluation","literal","parseScript","script","emptyReductionTraceNode","verifyCashAssemblyEvaluationState","reduceScript","vm","createEvaluationProgram","reductionTrace","reduction","pluckRange","removeNumericSeparators","numericLiteral","resolveScriptSegment","resolveIdentifiers","resolved","child","identifier","BuiltInVariables","attemptCompilerOperation","configuration","matchingOperations","operationExample","operationId","variableId","variableType","resolveVariableIdentifier","expectedVariable","describeExpectedInput","expectedArray","EOF","newArray","withoutLastElement","lastElement","createEmptyRange","validateCompilationData","entityId","compileScriptRaw","scriptId","sourceScriptIds","dataErrors","compileScriptContents","resolveScriptIdentifier","createIdentifierResolver","opcodeResult","variableResult","scriptResult","parseResult","resolver","resolutionErrors","compileScript","rawResult","unlocks","unlockingScriptType","isP2shUnlock","lockingScriptType","transformedResult","lockingBytecodeResult","CompilerDefaults","attemptCompilerOperations","operations","finalOperation","compilerOperationRequires","canBeSkipped","dataProperties","configurationProperties","property","compilerOperationAttemptBytecodeResolution","compilerOperationHelperDeriveHdPrivateNode","entityHdPrivateKey","addressOffset","masterContents","instancePath","instanceNode","compilerOperationHelperUnknownEntity","compilerOperationHelperAddressIndex","compilerOperationHelperDeriveHdKeyPrivate","hdKeys","hdPrivateKeys","compilerOperationHelperCompileScript","targetScriptId","signingTarget","compiledTarget","compilerOperationHelperGenerateCoveredBytecode","unlockingScripts","currentScriptId","targetLockingScriptId","compilerOperationAddressData","compilerOperationWalletData","compilerOperationCurrentBlockTime","compilerOperationCurrentBlockHeight","compilerOperationSigningSerializationCorrespondingOutput","compilerOperationSigningSerializationCorrespondingOutputHash","compilerOperationHelperSigningSerializationCoveredBytecode","returnLength","compilerOperationSigningSerializationCoveredBytecode","compilerOperationSigningSerializationCoveredBytecodeLength","compilerOperationSigningSerializationLocktime","compilerOperationSigningSerializationOutpointIndex","compilerOperationSigningSerializationOutpointTransactionHash","compilerOperationSigningSerializationOutputValue","compilerOperationSigningSerializationSequenceNumber","compilerOperationSigningSerializationTransactionOutpoints","compilerOperationSigningSerializationTransactionOutpointsHash","compilerOperationSigningSerializationTransactionOutputs","compilerOperationSigningSerializationTransactionOutputsHash","compilerOperationSigningSerializationTransactionSequenceNumbers","compilerOperationSigningSerializationTransactionSequenceNumbersHash","compilerOperationSigningSerializationVersion","compilerOperationKeyPublicKeyCommon","privateKeys","compilerOperationHdKeyPublicKeyCommon","hdPublicKeys","privateResult","entityHdPublicKey","hdPublicKeyDerivationPath","publicDerivationPath","expectedDepth","compilerOperationsCommon","generateDefaultScenarioDefinition","variables","entityOwnership","keyVariableIds","id","entityIds","valueMap","idA","idB","variable","defaultScenario","masterNode","extendScenarioDefinitionData","parentData","childData","extendScenarioDefinition","parentScenario","childScenario","generateExtendedScenario","scenarioId","sourceScenarioIds","scenario","extendedScenarioDefinitionToCompilationData","definition","hex","extendCompilationDataWithScenarioBytecode","compilationData","scenarioDataBytecodeScripts","prefixBytecodeScriptId","bytecodeScripts","bytecodeScriptExtendedConfiguration","bytecodeCompilations","failedResults","compiledBytecode","compileWalletTemplateScenarioValueSatoshis","valueSatoshisDefinition","compileWalletTemplateScenarioBytecode","bytecodeDefinition","compilationContext","defaultOverride","extendedScenario","generateBytecode","lockingOrUnlockingScriptIdUnderTest","overrides","overriddenDataDefinition","compileScenarioOutputTokenData","generateScenarioBch","unlockingScriptId","providedLockingScriptId","debug","scenarioDefinition","scenarioName","partialCompilationData","fullCompilationData","testedInputIndex","lockingScriptId","sourceOutputCompilations","slot","lockingCompilation","compilation","transactionOutputCompilations","transactionOutput","outputCompilationErrors","errorObject","sourceOutputCompilationsSuccess","transactionOutputCompilationsSuccess","extractOutput","inputsContext","transactionInputCompilations","unlockingCompilation","inputCompilationErrors","createCompilerGenerateBytecodeFunction","compilerConfiguration","compilerConfigurationToCompilerBch","nullHashLength","createAuthenticationProgramEvaluationCommon","evaluationBytecode","walletTemplateToCompilerConfiguration","virtualizedScripts","tests","testId","test","pushTestedScript","checkScriptId","virtualizedLockingScriptId","virtualizedUnlockingScriptId","allScripts","scripts","def","entity","entityVariables","unlockingScriptTimeLockTypes","lockingScriptTypes","scenarios","SigningSerializationAlgorithmIdentifier","getSigningSerializationType","algorithmIdentifier","compilerOperationHelperComputeSignatureBch","operationName","sign","algorithm","unknown","compilerOperationHelperHdKeySignatureBch","secp256k1Method","derivationResult","compilerOperationHdKeyEcdsaSignatureBch","compilerOperationHdKeySchnorrSignatureBch","compilerOperationHelperKeySignatureBch","compilerOperationKeyEcdsaSignatureBch","compilerOperationKeySchnorrSignatureBch","compilerOperationHelperComputeDataSignatureBch","compilerOperationHelperKeyDataSignatureBch","compilerOperationKeyEcdsaDataSignatureBch","compilerOperationKeySchnorrDataSignatureBch","compilerOperationHelperHdKeyDataSignatureBch","compilerOperationHdKeyEcdsaDataSignatureBch","compilerOperationHdKeySchnorrDataSignatureBch","compilerOperationSigningSerializationTokenPrefix","compilerOperationSignatureRenamed","compilerOperationDataSignatureRenamed","compilerOperationSigningSerializationFullBch","algorithmOrComponent","unknownPart","compilerOperationsBch","createCompilerBch","walletTemplateToCompilerBch","walletTemplateP2pkhNonHd","publicKeyToP2pkhLockingBytecode","publicKeyToP2pkhCashAddress","schema38","schema41","schema42","validate23","parentDataProperty","rootData","vErrors","_errs0","valid0","_errs1","missing0","err0","_errs4","key0","err1","_errs5","err2","valid2","_errs7","err3","data2","_errs9","err4","err5","err6","_valid0","_errs11","missing1","err7","_errs14","key1","err8","data3","_errs15","err9","valid4","_errs17","err10","_errs19","err11","_errs21","err12","_errs23","err13","_errs25","err14","_errs27","err15","data10","_errs29","err16","err17","err18","_errs31","missing2","err19","_errs34","key2","err20","_errs35","err21","valid6","_errs37","err22","_errs39","err23","data14","_errs41","err24","err25","err26","_errs43","missing3","err27","_errs46","key3","err28","_errs47","err29","valid8","_errs49","err30","data17","_errs51","err31","err32","err33","err34","validate22","_errs2","_errs6","valid1","i0","_errs8","data4","_errs10","_errs13","schema32","validate28","_errs3","data0","data1","valid3","data5","data6","_errs22","valid5","data7","_errs24","key4","data9","key5","_errs32","valid7","data11","_errs36","key6","data12","key7","_errs40","valid9","_errs42","valid10","_errs44","_valid1","valid11","data15","_errs48","validate27","_errs12","_errs16","_errs18","data8","validate31","schema36","validate34","validate26","_errs20","_errs28","_errs30","_errs38","data19","key8","data20","_errs50","i1","_errs52","data22","_errs53","data23","_errs55","valid12","len2","i2","_errs57","data25","_errs58","validate38","func4","validate21","_errs33","data16","data18","_errs54","_errs56","data21","valid13","_errs60","_errs62","data24","_errs64","_errs66","data26","_errs68","valid14","len3","i3","data27","_errs70","data28","_errs73","validate20","avjErrorsToDescription","ajvStandaloneJsonParse","untrustedJsonOrObject","validator","stringified","normalized","walletTemplateValidator","importWalletTemplate","errorPrefix","returnFailedCompilationDirective","compileOutputTemplate","outputTemplate","directive","compileInputTemplate","inputTemplate","generateTransaction","outputResults","inputResults","l","Network","NFTCapability","$parcel$export","$24139611f53a54b8$export$5d955335434540c6","method","parameters","requestId","$e83d2e7688025acd$exports","$e83d2e7688025acd$export$e1f38ab2b4ebdde6","$e83d2e7688025acd$export$9598f0c76aa41d73","object","$abcb763a48577a1e$export$d73a2e87a509880","$abcb763a48577a1e$export$280de919a0cf6928","$db7c797e63383364$exports","$db7c797e63383364$export$7516420eb880ab68","ConnectionStatus","$ff134c9a9e1f7361$export$de0f57fc22079b5e","$dvphU$EventEmitter","application","socketOrHostname","options","$dvphU$ElectrumWebSocket","timer","statementParts","currentStatementList","statementList","$dvphU$parse","$dvphU$parseNumberAndBigInt","currentStatement","software","protocol","$dvphU$electrumcashdebuglogs","connectionResolver","rejector","versionNegotiator","versionMessage","versionValidator","errorMessage","force","intentional","disconnectResolver","currentTime","verificationTimer","sentTimestamp","$d801b1f9b7fc3074$var$MILLI_SECONDS_PER_SECOND","$d801b1f9b7fc3074$export$5ba3a4134d0d751d","$558b46d3f899ced5$var$ElectrumClient","$dvphU$Mutex","networkOptions","unlock","retainSubscriptions","requestResolver","requestData","notification","subscriptionParameters","resubscriptionPromises","parameterJSON","resolverId","versionStatement","eventName","$558b46d3f899ced5$export$2e2bcd8739ae039","delay","ms","getTransactionHash","rawTransactionHex","transactionBin","wordlist","DELIMITER","DUST_UTXO_THRESHOLD","EXCHANGE_RATE_TTL","DERIVATION_PATHS","WORDLIST_CHECKSUMS","Config","english","ipfsGateway","decodeHeader","hexHeader","IndexedDbCache","objectStoreName","database","objectStore","WebStorageCache","MemoryCache","ElectrumNetworkProvider","electrum","manualConnectionManagement","_timeout","timeoutHandle","cashaddr","height","verbose","cached","txHash","loadInputValues","hashes","val","transactions","hash","transactionMap","txHex","awaitPropagation","cancel","waitForTransactionCallback","fromHeight","toHeight","callback","watchAddressStatusCallback","status","historyMap","history","txHashes","skipCurrentHeight","acknowledged","waitForBlockCallback","_header","cancelWatch","requestTimeout","_resolve","methodName","handler","timeout","bchParam","NetworkType","NetworkEnum","networkPrefixMap","prefixFromNetworkMap","UnitEnum","ExchangeRateProvider","symbol","valueString","rate","ttl","ExchangeRate","useCache","getRateFromExchange","cache","cacheRate","freshRate","getTtl","rateObject","cachedRate","rates","sanitizeUnit","rawUnit","amountInSatoshi","Currency_over_BCH","SAT_over_BCH","hash160","deriveCashaddr","networkPrefix","pkh","deriveTokenaddr","publicKeyCompressed","decodeAddress","toTokenaddr","isTokenaddr","checkTokenaddr","enforce","SendRequest","unit","TokenSendRequest","amount","tokenId","commitment","OpReturnData","uint8Array","element","elementData","lengthData","chunks","opReturnHex","SendResponse","txId","balance","explorerUrl","XPubKey","xPubKey","fromUtxoId","utxoId","txid","vout","satoshis","asSendRequestObject","requests","resp","convertToClass","satoshiToAmount","currencyValue","convert","from","to","satoshi","derivePublicKeyHash","derivePrefix","getXPubKey","derivationPath","hdNode","parentPublicNode","sumUtxoValue","utxos","o","sumTokenAmounts","floor","precision","multiplier","balanceResponseFromSatoshi","priceCache","response","balanceFromSatoshi","ELECTRUM_CASH_PROTOCOL_VERSION","networkTickerMap","mainnetServers","testnetServers","regtestServers","DefaultProvider","getDefaultServers","env","define_process_env_default","primary.mainnetServers","primary.testnetServers","primary.regtestServers","getUserAgent","ua","parseElectrumUrl","givenUrl","url","port","scheme","getElectrumScheme","transport","setGlobalProvider","provider","accessor","getGlobalProvider","getNetworkProvider","servers","globalContext","globalProvider","client","getClient","server","getElectrumClient","webSocket","ElectrumWebSocket","ElectrumClient","initProvider","Connection","BCMR","uri","contentHash","registry","rawTx","opReturns","spends0thOutput","electrumTransaction","libauthTransaction","ipfsCid","uris","uriString","getAuthChainChild","thisTx","filteredHistory","historyTx","historyRawTx","historyCache","chainBase","stop","maxElements","vin","pastElement","chainHead","responseData","migrations","migration","authChain","latestIdentityIndex","message_magic","hash_message","h","SignedMessage","sigDer","sigSchnorr","electronEncoding","sig","signatureValid","keyMatch","pkhMatch","signatureType","rawSig","recoveredPk","getAddressHistory","count","heights","timestampMap","timestamp","historicTransactions","transactionCommon","prevoutTransactionHashes","prevoutTransactionMap","addressCache","historyItems","inputTotalValue","outputTotalValue","prevoutTx","prevoutOutput","satoshiBalance","ftTokenBalances","nftTokenBalances","nftAmount","tokenChange","prevBalance","prevValueChange","getRelayFeeCache","relayFeePerKbInCoins","WalletTypeEnum","FeePaidByEnum","checkFeeForDust","checkSatsAvailable","sendRequestArray","fee","checkForNonStandardSendRequest","sortSendRequests","distributeFees","perRequestFee","firstPays","payer","lastPays","anyPays","changeThenFallback","change","fallbackFn","outstandingFee","allocateFee","feePaidBy","sumSendRequestAmounts","sumBalance","buildP2pkhNonHdTransaction","signingKey","sourceAddress","discardChange","changeAddress","compiler","inputAmount","sendAmount","changeAmount","lockedOutputs","prepareOutputs","changeLockingBytecode","preparedInputs","prepareInputs","utxoTxnValue","utxoIndex","utxoOutpointTransactionHash","libAuthToken","newInput","prepareTokenOutputs","prepareOpReturnOutput","outputLockingBytecode","lockedOutput","getSuitableUtxos","amountRequired","bestHeight","ensureUtxos","tokenOperation","suitableUtxos","amountAvailable","tokenRequests","availableInputs","selectedInputs","tokenInputs","sameCommitmentTokens","selected","changeCommitmentTokens","u","addEnsured","other","getFeeAmountSimple","sendRequests","relayFeePerByteInSatoshi","inputTotalSize","prev","curr","outputSize","sendRequest","tokenRequest","outputTotalSize","getFeeAmount","draftTransaction","buildEncodedTransaction","buildUnsigned","signUnsignedTransaction","transactionTemplate","checkUtxos","wallet","addressUtxos","absent","absentString","Util","transactionHashOrHex","transactionHex","decodeTransactionLibAuth","placeholderPrivateKey","BaseWallet","forceNew","_checkContextSafety","getStorageProvider","savedWalletRecord","recoveredWallet","networkType","walletType","networkGiven","arg1","arg2","addressComponents","addressPrefix","addressBase","prefixedAddress","addressData","nonTokenAwareType","bchutxo","_status","usdPriceRefreshInterval","usdPrice","_callback","watchCancel","interval","previous","fundingUtxos","encodedTransaction","tokenIds","maxSpendableAmount","checkTokenQuantities","allTokenInputs","allTokenOutputs","idx","arr","inputAmountSum","cur","tokenOutputs","outputAmountSum","diff","spendAmount","feeEstimate","rawTransaction","confirmedOnly","lastTx","makeResponse","promises","initialResponseSeen","genesisRequest","genesisInputs","genesisSendRequest","mintRequests","deductTokenAmount","nftUtxos","newAmount","safeNewAmount","mintingInput","burnRequest","tokenUtxos","totalFungibleAmount","fungibleBurnAmount","hasNFT","utxoIds","changeSendRequests","WatchWallet","TestNetWatchWallet","RegTestWatchWallet","isBytes","anumber","abytes","lengths","ahash","aexists","checkFinished","aoutput","min","clean","arrays","createView","rotr","word","shift","utf8ToBytes","toBytes","kdfInputToBytes","checkOpts","defaults","opts","Hash","createHasher","hashCons","hashC","msg","tmp","randomBytes","bytesLength","HMAC","_key","blockLen","oHash","iHash","finished","destroyed","outputLen","hmac","pbkdf2Init","_password","_salt","_opts","dkLen","asyncTick","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","pbkdf2","ti","pos","Ti","ui","setBigUint64","byteOffset","isLE","_32n","_u32_max","wh","wl","Chi","Maj","HashMD","padOffset","take","dataView","oview","outLen","res","SHA256_IV","SHA512_IV","U32_MASK64","fromBig","le","split","lst","Ah","Al","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","SHA256_K","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","W15","W2","s0","s1","sigma1","T1","T2","K512","u64.split","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","u64.rotrSH","u64.shrSH","s0l","u64.rotrSL","u64.shrSL","W2h","W2l","s1h","u64.rotrBH","s1l","u64.rotrBL","SUMl","u64.add4L","SUMh","u64.add4H","sigma1h","sigma1l","CHIh","CHIl","T1ll","u64.add5L","T1h","u64.add5H","T1l","sigma0h","sigma0l","MAJh","MAJl","u64.add","All","u64.add3L","u64.add3H","isArrayOf","isString","afn","astr","label","aArr","astrArr","anumArr","chain","wrap","encode","x","decode","letters","lettersA","digits","letter","join","chr","convertRadix","dlen","done","fromCarry","digitBase","div","rounded","gcd","radix2carry","powers","convertRadix2","max","pow","radix","_256","radix2","revPadding","oldChecksum","newChecksum","utils","isJapanese","nfkd","norm","words","aentropy","ent","generateMnemonic","strength","entropyToMnemonic","calcChecksum","entropy","bitsLeft","getCoder","baseUtils","psalt","passphrase","mnemonicToSeedSync","mnemonic","checkForEmptySeed","blankSeed","seedBin","checkWifNetwork","walletImportFormatString","Wallet","wif","zerothChild","paths","hdPaths","childNode","wifResult","resultData","TestNetWallet","RegTestWallet","WifWallet","TestNetWifWallet","RegTestWifWallet"],"mappings":"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E,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACzDA,EAAeA,EAAe,gBAAqB,EAAE,EAAI,kBACz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,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY,EAAe,eAAe,EAAGmY,EAClC,CAACnY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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA+/DnB,MAAM;AAAA,CAAI,EC//DFC,GAAY,IAEZC,GAAsB,IAItBC,GAAoB,KAGpBC,GAAmB,CAC5B,MACA,OACA,SACA,UACA,aACA,cACA,gBACA,gBACA,kBACA,eACA,gBACA,iBACJ,EACaC,GAAqB,CAC9B,MAAO,mEACP,QAAS,mEACT,OAAQ,mEACR,QAAS,mEACT,SAAU,mEACV,OAAQ,mEACR,WAAY,mEACZ,kBAAmB,mEACnB,QAAS,mEACT,mBAAoB,kEACxB,EC/BO,MAAMC,EAAO,CAEhB,OAAS,KAAK,iCAAmC,EAAM,CACvD,OAAS,KAAK,4BAA8B,aAAc,CAC1D,OAAS,KAAK,mBAAqB,yBAA0B,CAE7D,OAAS,KAAK,gBAAkB,KAAM,CAEtC,OAAS,KAAK,qBAAuB,EAAM,CAE3C,OAAS,KAAK,kBAAoB,EAAM,CAExC,OAAS,KAAK,eAAiB,EAAM,CACrC,OAAS,KAAK,gBAAkBC,EAAQ,CACxC,OAAO,eAAeC,EAAa,CAC/B,KAAK,mBAAqBA,CAClC,CACI,OAAO,YAAYR,EAAU,CACzB,IAAI72C,EAAW9Q,EAASsP,EAAO,KAAK5L,GAAUikD,EAAS,KAAK,GAAG,CAAC,CAAC,CAAC,EAClE,GAAI,CAAC,OAAO,OAAOK,EAAkB,EAAE,SAASl3C,CAAQ,EACpD,MAAM,MAAM,8EAA8E,EAC9Fm3C,GAAO,gBAAkBN,CACjC,CACI,OAAO,aAAc,CACjB,MAAO,CAAC,GAAGM,GAAO,eAAe,CACzC,CACA,CC5BO,MAAMG,GAAgBC,GAAc,CACvC,MAAMhsD,EAAS,CAAE,EACXulB,EAAS9hB,EAASuoD,EAAU,GAAG,EACrC,OAAAhsD,EAAO,QAAUD,GAAcoa,GAAa,CAAE,IAAKoL,EAAQ,MAAO,EAAG,CAAC,EAAE,OACxEvlB,EAAO,kBAAoB2D,EAAS4hB,EAAO,MAAM,EAAG,EAAE,EAAE,SAAS,EACjEvlB,EAAO,WAAa2D,EAAS4hB,EAAO,MAAM,GAAI,EAAE,EAAE,SAAS,EAC3DvlB,EAAO,UAAYD,GAAcoa,GAAa,CAAE,IAAKoL,EAAQ,MAAO,GAAI,CAAC,EAAE,OAC3EvlB,EAAO,KAAOD,GAAcoa,GAAa,CAAE,IAAKoL,EAAQ,MAAO,GAAI,CAAC,EAAE,OACtEvlB,EAAO,MAAQD,GAAcoa,GAAa,CAAE,IAAKoL,EAAQ,MAAO,GAAI,CAAC,EAAE,OACvEvlB,EAAO,OAASgsD,EAAU,OACnBhsD,CACX,ECXO,MAAMisD,EAAe,CACxB,YAAYC,EAAkB,+BAAgC,CAC1D,KAAK,gBAAkBA,EACvB,KAAK,GAAK,KACV,KAAK,gBAAkBA,CAC/B,CACI,4BAA4B16B,EAAQ,CAChC,OAAKA,EAGkBA,EACD,OAHX,IAInB,CACI,uBAAuB7yB,EAAQwtD,EAAU,CAChCA,GACDxtD,EAAO,IAAI,MAAM,mEAAmE,CAAC,CAEjG,CACI,MAAM,MAAO,CACT,MAAMG,EAAK,UAAU,KAAK,+BAAgC,CAAC,EAC3D,KAAK,GAAK,MAAM,IAAI,QAAQ,CAACJ,EAASC,IAAW,CAC7C,MAAMC,EAAUE,EAChBF,EAAQ,QAAUD,EAClBC,EAAQ,UAAY,CAAC,CAAE,OAAA4yB,KAAa,CAChC,MAAM26B,EAAW,KAAK,4BAA4B36B,CAAM,EACxD,KAAK,uBAAuB7yB,EAAQwtD,CAAQ,EAC5CztD,EAAQytD,CAAQ,CACnB,EACDvtD,EAAQ,gBAAkB,CAAC,CAAE,OAAA4yB,KAAa,CACtC,MAAM26B,EAAW,KAAK,4BAA4B36B,CAAM,EACxD,KAAK,uBAAuB7yB,EAAQwtD,CAAQ,EAC5CA,GAAU,kBAAkB,KAAK,eAAe,CACnD,CACb,CAAS,CACT,CACI,MAAM,QAAQv4C,EAAK9T,EAAO,CACtB,GAAI,CAAC,KAAK,GACN,MAAM,IAAI,MAAM,6BAA6B,EAGjD,MAAMssD,EADc,KAAK,GAAG,YAAY,KAAK,gBAAiB,WAAW,EACzC,YAAY,KAAK,eAAe,EAChE,OAAO,IAAI,QAAQ,CAAC1tD,EAASC,IAAW,CACpC,MAAMC,EAAUwtD,EAAY,IAAItsD,EAAO8T,CAAG,EAC1ChV,EAAQ,QAAUD,EAClBC,EAAQ,UAAY,IAAMF,EAAS,CAC/C,CAAS,CACT,CACI,MAAM,QAAQkV,EAAK,CACf,GAAI,CAAC,KAAK,GACN,MAAM,IAAI,MAAM,6BAA6B,EAGjD,MAAMw4C,EADc,KAAK,GAAG,YAAY,KAAK,gBAAiB,UAAU,EACxC,YAAY,KAAK,eAAe,EAChE,OAAO,IAAI,QAAQ,CAAC1tD,EAASC,IAAW,CACpC,MAAMC,EAAUwtD,EAAY,IAAIx4C,CAAG,EACnChV,EAAQ,QAAUD,EAClBC,EAAQ,UAAY,IAAMF,EAAQE,EAAQ,QAAU,IAAI,CACpE,CAAS,CACT,CACI,MAAM,WAAWgV,EAAK,CAClB,GAAI,CAAC,KAAK,GACN,MAAM,IAAI,MAAM,6BAA6B,EAGjD,MAAMw4C,EADc,KAAK,GAAG,YAAY,KAAK,gBAAiB,WAAW,EACzC,YAAY,KAAK,eAAe,EAChE,OAAO,IAAI,QAAQ,CAAC1tD,EAASC,IAAW,CACpC,MAAMC,EAAUwtD,EAAY,OAAOx4C,CAAG,EACtChV,EAAQ,QAAUD,EAClBC,EAAQ,UAAY,IAAMF,EAAS,CAC/C,CAAS,CACT,CACI,MAAM,OAAQ,CACV,GAAI,CAAC,KAAK,GACN,MAAM,IAAI,MAAM,6BAA6B,EAGjD,MAAM0tD,EADc,KAAK,GAAG,YAAY,KAAK,gBAAiB,WAAW,EACzC,YAAY,KAAK,eAAe,EAChE,OAAO,IAAI,QAAQ,CAAC1tD,EAASC,IAAW,CACpC,MAAMC,EAAUwtD,EAAY,MAAO,EACnCxtD,EAAQ,QAAUD,EAClBC,EAAQ,UAAY,IAAMF,EAAS,CAC/C,CAAS,CACT,CACA,CCnFO,MAAM2tD,EAAgB,CACzB,MAAM,MAAO,CAEjB,CACI,MAAM,QAAQz4C,EAAK9T,EAAO,CACtB,aAAa,QAAQ8T,EAAK9T,CAAK,CACvC,CACI,MAAM,QAAQ8T,EAAK,CACf,OAAO,aAAa,QAAQA,CAAG,CACvC,CACI,MAAM,WAAWA,EAAK,CAClB,aAAa,WAAWA,CAAG,CACnC,CACI,MAAM,OAAQ,CACV,aAAa,MAAO,CAC5B,CACA,CCjBO,MAAM04C,EAAY,CACrB,aAAc,CACV,KAAK,MAAQ,CAAE,CACvB,CACI,MAAM,MAAO,CAEjB,CACI,MAAM,QAAQ14C,EAAK9T,EAAO,CACtB,KAAK,MAAM8T,CAAG,EAAI9T,CAC1B,CACI,MAAM,QAAQ8T,EAAK,CACf,OAAO,KAAK,MAAMA,CAAG,GAAK,IAClC,CACI,MAAM,WAAWA,EAAK,CAClB,OAAO,KAAK,MAAMA,CAAG,CAC7B,CACI,MAAM,OAAQ,CACV,KAAK,MAAQ,CAAE,CACvB,CACA,CCVe,MAAM24C,EAAwB,CACzC,IAAI,OAAQ,CACR,MAAI,CAACX,GAAO,gBACR,CAACA,GAAO,sBACR,CAACA,GAAO,mBACR,KAAK,OAAS,OACP,KAAK,QAEZA,GAAO,gBAAkB,EAAE,KAAK,kBAAkBU,KAClD,KAAK,OAAS,IAAIL,GACX,KAAK,QAEZL,GAAO,sBACP,EAAE,KAAK,kBAAkBS,KACzB,KAAK,OAAS,IAAIA,GACX,KAAK,QAEZT,GAAO,mBAAqB,EAAE,KAAK,kBAAkBK,KACrD,KAAK,OAAS,IAAIA,GACX,KAAK,QAET,KAAK,MACpB,CACI,YAAYO,EAAUrpB,EAAUikB,GAAQ,QAASqF,EAA4B,CAMzE,GALA,KAAK,QAAUtpB,EACf,KAAK,2BAA6BspB,EAClC,KAAK,cAAgB,EACrB,KAAK,oBAAsB,GAC3B,KAAK,gBAAkB,CAAE,EACrBD,EACA,KAAK,SAAWA,EAChB,KAAK,eAAiB,KAAK,kBAAmB,EAC9C,KAAK,QAAU,KAAK,SAAS,YAG7B,OAAM,IAAI,MAAM,qCAAqC,CAEjE,CACI,MAAM,kBAAkBE,EAAW,IAAM,CAErC,IAAIC,EACJ,MAAM,QAAQ,KAAK,CACf,IAAI,QAAQ,MAAOjuD,GAAY,CAC3B,KAAK,eAAiB,OACtBA,EAAQ,MAAM,KAAK,eAAe,CAClD,CAAa,CACb,CAAS,EACD,aAAaiuD,CAAa,CAClC,CACI,MAAM,SAASC,EAAU,CAErB,OADe,MAAM,KAAK,eAAe,iCAAkCA,EAAU,gBAAgB,GACvF,IAAK16B,IAAU,CACzB,KAAMA,EAAK,QACX,KAAMA,EAAK,OACX,SAAUA,EAAK,MACf,OAAQA,EAAK,OACb,MAAOA,EAAK,WACN,CACE,OAAQ,OAAOA,EAAK,WAAW,MAAM,EACrC,QAASA,EAAK,WAAW,SACzB,WAAYA,EAAK,WAAW,KAAK,WACjC,WAAYA,EAAK,WAAW,KAAK,UACrD,EACkB,MAClB,EAAU,CACV,CACI,MAAM,WAAW06B,EAAU,CACvB,MAAM5sD,EAAS,MAAM,KAAK,eAAe,iCAAkC4sD,CAAQ,EACnF,OAAO5sD,EAAO,UAAYA,EAAO,WACzC,CACI,MAAM,UAAU6sD,EAAQC,EAAU,GAAO,CACrC,MAAMl5C,EAAM,UAAU,KAAK,OAAO,IAAIi5C,CAAM,IAAIC,CAAO,GACvD,GAAI,KAAK,MAAO,CACZ,MAAMC,EAAS,MAAM,KAAK,MAAM,QAAQn5C,CAAG,EAC3C,GAAIm5C,EACA,OAAOD,EAAUf,GAAa,KAAK,MAAMgB,CAAM,CAAC,EAAI,KAAK,MAAMA,CAAM,CAErF,CACQ,MAAM/sD,EAAS,MAAM,KAAK,eAAe,wBAAyB6sD,CAAM,EACxE,OAAI,KAAK,OACL,MAAM,KAAK,MAAM,QAAQj5C,EAAK,KAAK,UAAU5T,CAAM,CAAC,EAEjD8sD,EAAUf,GAAa/rD,CAAM,EAAIA,CAChD,CACI,MAAM,gBAAiB,CACnB,OAAQ,MAAM,KAAK,eAAe,4BAA4B,GACzD,MACb,CACI,MAAM,kBAAkBgtD,EAAQF,EAAU,GAAOG,EAAkB,GAAO,CACtE,MAAMr5C,EAAM,MAAM,KAAK,OAAO,IAAIo5C,CAAM,IAAIF,CAAO,IAAIG,CAAe,GACtE,GAAI,KAAK,MAAO,CACZ,MAAMF,EAAS,MAAM,KAAK,MAAM,QAAQn5C,CAAG,EAC3C,GAAIm5C,EACA,OAAOD,EAAU,KAAK,MAAMC,CAAM,EAAIA,CAEtD,CACQ,GAAI,CACA,MAAM72B,EAAe,MAAM,KAAK,eAAe,6BAA8B82B,EAAQF,CAAO,EAM5F,GALI,KAAK,OACL,MAAM,KAAK,MAAM,QAAQl5C,EAAKk5C,EACxB,KAAK,UAAU52B,CAAW,EAC1BA,CAAW,EAEjB42B,GAAWG,EAAiB,CAE5B,MAAMC,EAAS,CAAC,GAAG,IAAI,IAAIh3B,EAAY,IAAI,IAAKi3B,GAAQA,EAAI,IAAI,CAAC,CAAC,EAC5DC,EAAe,MAAM,QAAQ,IAAIF,EAAO,IAAKG,GAAS,KAAK,wBAAwBA,EAAM,EAAK,CAAC,CAAC,EAChGC,EAAiB,IAAI,IAC3BF,EAAa,QAASD,GAAQG,EAAe,IAAIH,EAAI,KAAMA,CAAG,CAAC,EAC/Dj3B,EAAY,IAAI,QAASr1B,GAAU,CAC/B,MAAMsc,EAASmwC,EACV,IAAIzsD,EAAM,IAAI,EACd,KAAK,KAAMssD,GAAQA,EAAI,IAAMtsD,EAAM,IAAI,EAC5CA,EAAM,QAAUsc,EAAO,aAAa,UAAU,CAAC,EAC/Ctc,EAAM,MAAQsc,EAAO,MACrBtc,EAAM,UAAYsc,EAAO,SAC7C,CAAiB,CACjB,CACY,OAAO+Y,CACnB,OACesO,EAAO,CACV,MAAIA,EAAM,QAAQ,QAAQ,4CAA4C,EAAI,GAChE,MAAM,gCAAgCwoB,CAAM,mDAAmD,KAAK,OAAO,IAAI,EAE/GxoB,CACtB,CACA,CAEI,MAAM,wBAAwBwoB,EAAQC,EAAkB,GAAO,CAC3D,OAAQ,MAAM,KAAK,kBAAkBD,EAAQ,GAAMC,CAAe,CAC1E,CACI,MAAM,mBAAmBM,EAAOC,EAAmB,GAAM,CACrD,OAAO,IAAI,QAAQ,MAAO9uD,EAASC,IAAW,CAC1C,IAAIquD,EAAS,MAAM7B,GAAmBoC,CAAK,EAC3C,GAAI,CAACC,EACD,KAAK,eAAe,mCAAoCD,CAAK,EAC7D7uD,EAAQsuD,CAAM,MAEb,CACD,IAAIS,EACJ,MAAMC,EAA6B,MAAOzrC,GAAS,CAC3CA,GAAQA,EAAK,CAAC,IAAM+qC,GAAU/qC,EAAK,CAAC,IAAM,OAC1C,MAAMwrC,IAAU,EAChB/uD,EAAQsuD,CAAM,EAErB,EACDS,EAAS,MAAM,KAAK,uBAAuBT,EAAQU,CAA0B,EAC7E,KAAK,eAAe,mCAAoCH,CAAK,EAAE,MAAM,MAAO/oB,GAAU,CAClF,MAAMipB,IAAU,EAChB9uD,EAAO6lC,CAAK,CAChC,CAAiB,CACjB,CACA,CAAS,CACT,CAEI,MAAM,WAAWooB,EAAUe,EAAa,EAAGC,EAAW,GAAI,CAEtD,OADe,MAAM,KAAK,eAAe,iCAAkChB,EAAUe,EAAYC,CAAQ,CAEjH,CAEI,MAAM,aAAc,CAEhB,OADgB,MAAM,KAAK,eAAe,qBAAqB,CAEvE,CACI,MAAM,mBAAmBhB,EAAUiB,EAAU,CACzC,MAAMC,EAA6B,MAAO7rC,GAAS,CAG/C,GAAIA,aAAgB,MAAO,CAEvB,GADaA,EAAK,CAAC,IACN2qC,EACT,OAEJ,MAAMmB,EAAS9rC,EAAK,CAAC,EACrB4rC,EAASE,CAAM,CAC/B,CACS,EACD,OAAO,KAAK,mBAAmBnB,EAAUkB,CAA0B,CAC3E,CACI,MAAM,aAAalB,EAAUiB,EAAU,CACnC,MAAMG,EAAa,CAAE,EACrB,KAAK,WAAWpB,CAAQ,EAAE,KAAMqB,GAAYA,EAAQ,QAASd,GAASa,EAAWb,EAAI,OAAO,EAAI,EAAK,CAAC,EACtG,MAAMW,EAA6B,SAAY,CAG3C,MAAMI,GAFa,MAAM,KAAK,WAAWtB,CAAQ,GAG5C,KAAK,CAACzoD,EAAGC,IAAMD,EAAE,QAAU,GAAKC,EAAE,QAAU,EAAI,GAAKA,EAAE,OAASD,EAAE,MAAM,EACxE,IAAKgpD,GAAQA,EAAI,OAAO,EAC7B,UAAWE,KAAQa,EACf,GAAI,EAAEb,KAAQW,GAAa,CACvBA,EAAWX,CAAI,EAAI,GACnBQ,EAASR,CAAI,EAEb,KACpB,CAES,EACD,OAAO,KAAK,mBAAmBT,EAAUkB,CAA0B,CAC3E,CACI,MAAM,yBAAyBlB,EAAUiB,EAAU,CAC/C,OAAO,KAAK,aAAajB,EAAU,MAAOI,GAAW,CACjD,MAAMhvC,EAAK,MAAM,KAAK,wBAAwBgvC,CAAM,EACpDa,EAAS7vC,CAAE,CACvB,CAAS,CACT,CACI,MAAM,8BAA8B4uC,EAAUiB,EAAU,CACpD,OAAO,KAAK,aAAajB,EAAU,MAAOI,GAAW,CACjD,MAAMhvC,EAAK,MAAM,KAAK,wBAAwBgvC,EAAQ,EAAI,GACtDhvC,EAAG,IAAI,KAAMmvC,GAAQA,EAAI,SAAS,GAClCnvC,EAAG,KAAK,KAAMmvC,GAAQA,EAAI,SAAS,IACnCU,EAAS7vC,CAAE,CAE3B,CAAS,CACT,CAEI,MAAM,YAAY6vC,EAAUM,EAAoB,GAAM,CAClD,IAAIC,EAAe,CAACD,EACpB,MAAME,EAAwBC,GAAY,CACtC,GAAI,CAACF,EAAc,CACfA,EAAe,GACf,MAChB,CACYE,EAAUA,aAAmB,MAAQA,EAAQ,CAAC,EAAIA,EAClDT,EAASS,CAAO,CACnB,EACD,OAAO,KAAK,mBAAmBD,CAAoB,CAC3D,CAEI,MAAM,aAAaxB,EAAQ,CACvB,OAAO,IAAI,QAAQ,MAAOnuD,GAAY,CAClC,IAAI6vD,EACA,KAAK,SAAS,aAAe,CAAC1B,IAC9BA,EAAS,KAAK,SAAS,YAAc,GAEzC0B,EAAc,MAAM,KAAK,YAAY,MAAOhpC,GAAW,CACnD,GAAI,CAACsnC,EAAQ,CACTA,EAAStnC,EAAO,OAAS,EACzB,MACpB,CACgB,GAAIA,EAAO,QAAUsnC,EAAQ,CACzB,MAAM0B,IAAe,EACrB7vD,EAAQ6mB,CAAM,EACd,MACpB,CACA,CAAa,CACb,CAAS,CACT,CAEI,MAAM,mBAAmBsoC,EAAU,CAC/B,OAAO,KAAK,iBAAiB,+BAAgCA,CAAQ,CAC7E,CACI,MAAM,mBAAmBjB,EAAUiB,EAAU,CACzC,OAAO,KAAK,iBAAiB,+BAAgCA,EAAUjB,CAAQ,CACvF,CACI,MAAM,uBAAuBI,EAAQa,EAAU,CAC3C,OAAO,KAAK,iBAAiB,mCAAoCA,EAAUb,CAAM,CACzF,CACI,MAAM,eAAejuD,KAAS0oD,EAAY,CACtC,MAAM,KAAK,MAAO,EAClB,MAAM+G,EAAiB,IAAI,QAAQ,SAAUC,EAAU9vD,EAAQ,CAC3D,WAAW,UAAY,CACnBA,EAAO,2CAA2C,CACrD,EAAE,GAAK,CACpB,CAAS,EAAE,MAAM,SAAUk1B,EAAG,CAClB,MAAMA,CAClB,CAAS,EACKj1B,EAAU,KAAK,SAAS,QAAQG,EAAM,GAAG0oD,CAAU,EACzD,OAAO,MAAM,QAAQ,KAAK,CAAC7oD,EAAS4vD,CAAc,CAAC,EAC9C,KAAM1uD,GAAU,CACjB,GAAIA,aAAiB,MACjB,MAAMA,EAEV,OADaA,CAEhB,CAAA,EACI,MAAM,SAIA,MAAM,QAAQ,KAAK,CAAClB,EAAS4vD,CAAc,CAAC,EAC9C,KAAM1uD,GAAU,CACjB,GAAIA,aAAiB,MACjB,MAAMA,EAEV,OADaA,CAEhB,CAAA,EACI,MAAM,SAAU+zB,EAAG,CACpB,MAAMA,CACtB,CAAa,CACJ,CACT,CACI,MAAM,kBAAkB66B,KAAejH,EAAY,CAC/C,MAAM7zC,EAAM,GAAG86C,CAAU,IAAI,KAAK,OAAO,IAAI,KAAK,UAAUjH,CAAU,CAAC,GACnE,KAAK,gBAAgB7zC,CAAG,EACxB,KAAK,gBAAgBA,CAAG,IAGxB,KAAK,gBAAgBA,CAAG,EAAI,EAEhC,MAAM,KAAK,SAAS,UAAU86C,EAAY,GAAGjH,CAAU,CAC/D,CACI,MAAM,oBAAoBiH,KAAejH,EAAY,CACjD,MAAM7zC,EAAM,GAAG86C,CAAU,IAAI,KAAK,OAAO,IAAI,KAAK,UAAUjH,CAAU,CAAC,GACvE,GAAI,KAAK,gBAAgB7zC,CAAG,IACxB,KAAK,gBAAgBA,CAAG,IACpB,KAAK,gBAAgBA,CAAG,GAAK,GAAG,CAEhC,OAAO,KAAK,gBAAgBA,CAAG,EAC/B,GAAI,CACA,MAAM,KAAK,SAAS,YAAY86C,EAAY,GAAGjH,CAAU,CAC7E,MACsB,CAAA,CACtB,CAEA,CACI,MAAM,iBAAiBiH,EAAYb,KAAapG,EAAY,CACxD,MAAM,KAAK,MAAO,EAClB,MAAMkH,EAAW1sC,GAAS,CAClBA,EAAK,SAAWysC,GAChBb,EAAS5rC,EAAK,MAAM,CAE3B,EACD,YAAK,SAAS,GAAG,eAAgB0sC,CAAO,EAEpCD,IAAe,8BACV,KAAK,sBACN,KAAK,oBAAsB,GAC3B,MAAM,KAAK,kBAAkBA,EAAY,GAAGjH,CAAU,GAI1D,MAAM,KAAK,kBAAkBiH,EAAY,GAAGjH,CAAU,EAE1D,KAAK,gBACE,SAAY,CACf,KAAK,SAAS,IAAI,eAAgBkH,CAAO,EACzC,KAAK,gBAEDD,IAAe,gCACf,MAAM,KAAK,oBAAoBA,EAAY,GAAGjH,CAAU,CAE/D,CACT,CACI,MAAM,OAAQ,CACV,OAAO,KAAK,QAAS,CAC7B,CACI,MAAM,SAAU,CACZ,aAAM,KAAK,OAAO,KAAM,EACjB,MAAM,KAAK,cAC1B,CACI,YAAa,CACT,OAAI,KAAK,cAAgB,EAKlB,KAAK,iBAAkB,CACtC,CACI,MAAM,YAAYmH,EAAS,CAQvB,MANqB,UAAY,CAC7B,KAAO,KAAK,SAAS,SAAWzG,GAAiB,WAC7C,MAAM8C,GAAM,GAAG,EAEnB,MAAO,EACV,CAET,CACI,MAAM,eAAgB,CAUlB,OATwB,SAAY,CAChC,GAAI,CACA,OAAO,MAAM,KAAK,SAAS,QAAS,CACpD,OACmBp3B,EAAG,CACN,QAAQ,KAAK,2CAA2C,KAAK,OAAO,OAAO,KAAK,SAAS,cAAc,IAAKA,CAAC,EAC7G,MAChB,CACS,GACyB,CAClC,CACI,MAAM,kBAAmB,CACrB,OAAO,KAAK,SAAS,WAAW,GAAM,EAAK,CACnD,CACA,CCvYO,MAAMg7B,GAAW,CACpB,SAAU,GACd,ECDO,IAAIC,IACV,SAAUA,EAAa,CACpBA,EAAY,QAAa,UACzBA,EAAY,QAAa,UACzBA,EAAY,QAAa,SAC7B,GAAGA,KAAgBA,GAAc,CAAA,EAAG,EAC7B,IAAIC,IACV,SAAUA,EAAa,CACpBA,EAAYA,EAAY,QAAa,SAAS,EAAI,UAClDA,EAAYA,EAAY,QAAa,SAAS,EAAI,UAClDA,EAAYA,EAAY,QAAa,SAAS,EAAI,UAClDA,EAAYA,EAAY,QAAa,SAAS,EAAI,SACtD,GAAGA,KAAgBA,GAAc,CAAA,EAAG,EAC7B,MAAMC,GAAmB,CAC5B,YAAa,UACb,QAAS,UACT,OAAQ,SACZ,EACaC,GAAuB,CAChC,QAASh5C,GAAyB,QAClC,QAASA,GAAyB,QAClC,QAASA,GAAyB,OACtC,EACMk1B,GAAWgc,GAAMA,EACV+H,GAAW,CACpB,IAAK/jB,GAAQ,KAAK,EAIlB,IAAKA,GAAQ,KAAK,EAClB,KAAMA,GAAQ,MAAM,EACpB,QAASA,GAAQ,SAAS,EAC1B,SAAUA,GAAQ,UAAU,CAChC,EClCe,MAAMgkB,EAAqB,CAItC,MAAM,QAAQC,EAAQ,CAClB,MAAMC,EAAc,aAAa,QAAQ,QAAQD,CAAM,EAAE,EACzD,GAAIC,EACA,OAAO,KAAK,MAAMA,CAAW,CAGzC,CACI,MAAM,QAAQD,EAAQE,EAAMC,EAAK,CAC7B,oBAAa,QAAQ,QAAQH,CAAM,GAAI,KAAK,UAAU,CAAE,OAAQA,EAAQ,KAAME,EAAM,IAAKC,CAAG,CAAE,CAAC,EACxF,EACf,CACA,CCZO,MAAMC,EAAa,CACtB,YAAY,CAAE,OAAAJ,EAAQ,KAAAE,EAAM,IAAAC,CAAG,EAAK,CAChC,KAAK,OAASH,EACd,KAAK,KAAOE,EACZ,KAAK,IAAMC,CACnB,CACI,UAAW,CACP,KAAK,KAAK,QAAQ,CAAC,CAC3B,CACI,aAAa,IAAIH,EAAQK,EAAW,GAAM,CAEtC,GADiBlwD,GAAoB,IACpBD,GAAgB,QAC7B,GAAI,CACA,OAAO,MAAM,KAAK,wBAAwB8vD,EAAQK,CAAQ,CAC1E,MACkB,CACF,OAAO,MAAM,KAAK,uBAAuBL,EAAQK,CAAQ,CACzE,KAGY,QAAO,MAAM,KAAK,uBAAuBL,EAAQK,CAAQ,CAErE,CACI,aAAa,wBAAwBL,EAAQK,EAAW,GAAM,CAC1D,GAAI,CAACA,EACD,OAAO,MAAMC,GAAoBN,CAAM,EAE3C,IAAIO,EAAQ,IAAIR,GACZS,EAAY,MAAMD,EAAM,QAAQP,CAAM,EAC1C,GAAIQ,GAEIA,EAAU,IAAM,KAAK,IAAG,EACxB,OAAOA,EAAU,KAIzB,IAAIC,EAAY,MAAMH,GAAoBN,CAAM,EAChD,OAAAO,EAAM,QAAQP,EAAQS,EAAWC,GAAM,CAAE,EAClCD,CACf,CACI,aAAa,uBAAuBT,EAAQK,EAAW,GAAM,CACzD,GAAI,CAACA,EACD,OAAO,MAAMC,GAAoBN,CAAM,EAE3C,GAAI,WAAW,KAAM,CACjB,IAAIW,EAAa,WAAW,KAC5B,GAAIX,KAAUW,EAAY,CACtB,IAAIC,EAAaD,EAAWX,CAAM,EAElC,GAAIY,EAAW,IAAM,KAAK,IAAG,EACzB,OAAOA,EAAW,IAEtC,CACA,CACQ,IAAIH,EAAY,MAAMH,GAAoBN,CAAM,EAChD,YAAK,uBAAuBA,EAAQS,CAAS,EACtCA,CACf,CACI,OAAO,uBAAuBT,EAAQE,EAAM,CACnC,WAAW,KAIZ,WAAW,KAAKF,CAAM,EAAI,CACtB,OAAQA,EACR,KAAME,EACN,IAAKQ,GAAQ,CAChB,EAPD,WAAW,KAAO,CAAE,CAShC,CACA,CACO,SAASA,IAAS,CACrB,OAAO,KAAK,MAAM,KAAK,IAAG,EAAKrE,EAAiB,CACpD,CAEO,eAAeiE,GAAoBN,EAAQ,CAI9C,GAHIA,EAAO,OAAS,IAChBA,EAASA,EAAO,kBAAmB,GAEnCA,IAAW,MACX,GAAI,CAGA,OADa,MADI,MAAM,MAAM,8CAA8C,GAC/C,KAAM,GACtB,KAAQ,GAChC,MACc,CAAA,CAIV,MAAMa,GADQ,MADG,MAAM,MAAM,8BAA8B,GAC9B,QACV,KAAK,OAAO,CAAC3nC,EAAKgnC,KAAU,CAAE,GAAGhnC,EAAK,CAACgnC,EAAK,KAAK,kBAAiB,CAAE,EAAGA,EAAK,IAAI,GAAK,EAAE,EAC1G,GAAIF,KAAUa,EACV,OAAOA,EAAMb,CAAM,EAEvB,MAAM,MAAM,aAAaA,CAAM,qBAAqB,CACxD,CAEAI,GAAa,IAAI,KAAK,EAAE,MAAM,IAAM,CAAA,CAAG,ECnGhC,SAASU,GAAaC,EAAS,CAClC,GAAIA,EACA,OAAOA,EAAQ,kBAAmB,EAGlC,MAAM,MAAM,oEAAoE,CAExF,CCKO,eAAeC,GAAgBtwD,EAAOqwD,EAAS,CAElD,OADaD,GAAaC,CAAO,EACrB,CACR,KAAKjB,GAAS,IACV,OAAO,KAAK,MAAMpvD,EAAQ+uD,GAAS,QAAQ,EAC/C,KAAKK,GAAS,QACV,OAAOpvD,EACX,KAAKovD,GAAS,IACV,OAAOpvD,EACX,KAAKovD,GAAS,KACV,OAAOpvD,EACX,KAAKovD,GAAS,SACV,OAAOpvD,EACX,QACI,MAAMuwD,EAAoB,MAAMb,GAAa,IAAIW,CAAO,EAClDG,EAAezB,GAAS,SAC9B,OAAO,KAAK,MAAM,OAAO/uD,GAASwwD,EAAeD,EAAkB,CAAC,CAChF,CACA,CCtBO,SAASE,GAAQ3wD,EAAS,CAC7B,OAAOuT,GAAU,KAAKF,EAAO,KAAKrT,CAAO,CAAC,CAC9C,CCAO,SAAS4wD,GAAe//C,EAAYggD,EAAe,CACtD,IAAIlhD,EAAY6D,GAAU,0BAA0B3C,CAAU,EAC9D,GAAI,OAAOlB,GAAc,SACrB,MAAM,IAAI,MAAMA,CAAS,EAE7B,IAAImhD,EAAMH,GAAQhhD,CAAS,EAC3B,OAAOwI,GAAkB,CACrB,OAAQ04C,EACR,KAAMt6C,EAAgB,MACtB,QAASu6C,CACZ,CAAA,EAAE,OACP,CACO,SAASC,GAAgB/8C,EAAK68C,EAAe,CAChD,IAAIn3C,EAEJ,GAAI1F,EAAI,SAAW,GAAI,CACnB,IAAIg9C,EAAsBx9C,GAAU,0BAA0BQ,CAAG,EACjE,GAAI,OAAOg9C,GAAwB,SAC/B,MAAM,IAAI,MAAMA,CAAmB,EAEvCt3C,EAAgBi3C,GAAQK,CAAmB,CACnD,SACah9C,EAAI,SAAW,GAAI,CAExB,IAAIg9C,EAAsBx9C,GAAU,kBAAkBQ,CAAG,EACzD,GAAI,OAAOg9C,GAAwB,SAC/B,MAAM,IAAI,MAAMA,CAAmB,EAEvCt3C,EAAgBi3C,GAAQK,CAAmB,CACnD,SACah9C,EAAI,SAAW,GAEpB0F,EAAgBi3C,GAAQ38C,CAAG,UAEtBA,EAAI,SAAW,GAEpB0F,EAAgB1F,MAGhB,OAAM,IAAI,MAAM,yBAAyB,EAE7C,OAAOmE,GAAkB,CACrB,OAAQ04C,EACR,KAAMt6C,EAAgB,gBACtB,QAASmD,CACZ,CAAA,EAAE,OACP,CACA,SAASu3C,GAAcj8C,EAAS,CAC5B,MAAM5U,EAASuY,GAAkB3D,CAAO,EACxC,GAAI,OAAO5U,GAAW,SAClB,MAAM,IAAI,MAAMA,CAAM,EAE1B,OAAOA,CACX,CASO,SAAS8wD,GAAYl8C,EAAS,CACjC,MAAM5U,EAAS6wD,GAAcj8C,CAAO,EACpC,OAAOmD,GAAkB,CACrB,OAAQ/X,EAAO,OACf,KAAOA,EAAO,KAAK,QAAQ,aAAc,EAAE,EACvC,aACJ,QAASA,EAAO,OACnB,CAAA,EAAE,OACP,CACO,SAAS+wD,GAAYn8C,EAAS,CAEjC,OADei8C,GAAcj8C,CAAO,EACtB,KAAK,SAAS,YAAY,CAC5C,CAgBO,SAASo8C,GAAepE,EAAUqE,EAAS,CAC9C,GAAIA,GAAW,CAACF,GAAYnE,CAAQ,EAChC,MAAM,IAAI,MAAM,uDAAuD,CAE/E,CCnGO,MAAMsE,EAAY,CACrB,YAAY,CAAE,SAAAtE,EAAU,MAAA9sD,EAAO,KAAAqxD,CAAI,EAAK,CACpC,KAAK,SAAWvE,EAChB,KAAK,MAAQ9sD,EACb,KAAK,KAAOowD,GAAaiB,CAAI,CACrC,CACA,CAmBO,MAAMC,EAAiB,CAC1B,YAAY,CAAE,SAAAxE,EAAU,MAAA9sD,EAAO,OAAAuxD,EAAQ,QAAAC,EAAS,WAAAl1C,EAAY,WAAAm1C,GAAe,CACvEP,GAAepE,EAAUhB,GAAO,gCAAgC,EAChE,KAAK,SAAWgB,EAChB,KAAK,MAAQ9sD,EACb,KAAK,OAASuxD,EAAS,OAAOA,CAAM,EAAI,GACxC,KAAK,QAAUC,EACf,KAAK,WAAal1C,EAClB,KAAK,WAAam1C,CAC1B,CACA,CASO,MAAMC,EAAa,CACtB,YAAY/uD,EAAQ,CAChB,KAAK,OAAS,WAAW,KAAKA,CAAM,CAC5C,CAQI,OAAO,KAAKwf,EAAM,CACd,OAAO,KAAK,UAAU,CAACA,CAAI,CAAC,CACpC,CAQI,OAAO,WAAWkoB,EAAQ,CACtB,OAAO,KAAK,UAAU,CAACA,CAAM,CAAC,CACtC,CASI,OAAO,eAAesnB,EAAY,CAC9B,OAAIA,EAAW,CAAC,IAAM,IACX,KAAK,UAAU,CAACA,CAAU,CAAC,EAE/B,IAAI,KAAK,WAAW,KAAKA,CAAU,CAAC,CACnD,CAQI,OAAO,UAAU3tD,EAAO,CACpB,IAAIme,EAAO,WAAW,KAAK,CAAC,GAAI,CAAC,EACjC,UAAWyvC,KAAW5tD,EAAO,CACzB,IAAIZ,EACAyuD,EACAC,EACJ,GAAI,OAAOF,GAAY,SACnBC,EAActqD,GAAUqqD,CAAO,EAC/BxuD,EAASyuD,EAAY,eAEhBD,aAAmB,WACxBC,EAAcD,EACdxuD,EAASyuD,EAAY,WAGrB,OAAM,IAAI,MAAM,0BAA0B,EAE9C,GAAIzuD,EAAS,GAET0uD,EAAa,CAAC1uD,CAAM,UAEfA,EAAS,IAEd0uD,EAAa,CAAC,GAAM1uD,CAAM,MAG1B,OAAM,IAAI,MAAM,iDAAiD,EAErE+e,EAAO,WAAW,KAAK,CAAC,GAAGA,EAAM,GAAG2vC,EAAY,GAAGD,CAAW,CAAC,CAC3E,CACQ,GAAI1vC,EAAK,OAAS,IACd,MAAM,IAAI,MAAM,iDAAiD,EAErE,OAAO,IAAI,KAAKA,CAAI,CAC5B,CAQI,OAAO,YAAYwH,EAAU,CACzB,MAAMooC,EAAS,CAAE,EACjB,IAAI5rD,EAAW,EAGf,KAAOwjB,EAASxjB,CAAQ,GAAG,CACvB,IAAI/C,EAAS,EACTumB,EAASxjB,CAAQ,IAAM,IACvB/C,EAASumB,EAASxjB,EAAW,CAAC,EAC9BA,GAAY,GAEPwjB,EAASxjB,CAAQ,IAAM,IAC5B/C,EAASkC,GAAoBqkB,EAAS,MAAMxjB,EAAW,EAAGA,EAAW,CAAC,CAAC,EACvEA,GAAY,IAGZ/C,EAASumB,EAASxjB,CAAQ,EAC1BA,GAAY,GAEhB4rD,EAAO,KAAKpoC,EAAS,MAAMxjB,EAAUA,EAAW/C,CAAM,CAAC,EACvD+C,GAAY/C,CACxB,CACQ,OAAO2uD,CACf,CAQI,OAAO,MAAMC,EAAa,CACtB,OAAO,KAAK,YAAYruD,EAASquD,CAAW,CAAC,EAAE,IAAK3E,GAAQ3lD,GAAU2lD,CAAG,CAAC,CAClF,CACA,CACO,MAAM4E,EAAa,CACtB,YAAY,CAAE,KAAAC,EAAM,QAAAC,EAAS,YAAAC,CAAW,EAAK,CACzC,KAAK,KAAOF,EACZ,KAAK,QAAUC,EACf,KAAK,YAAcC,CAC3B,CACA,CACO,MAAMC,EAAQ,CACjB,YAAY,CAAE,KAAAvtB,EAAM,QAAAwtB,GAAW,CAC3B,KAAK,KAAOxtB,EACZ,KAAK,QAAUwtB,CACvB,CACI,MAAM,OAAQ,CACV,aAAM,KAAK,QACJ,KAAK,SAAU,CAC9B,CACI,UAAW,CACP,MAAO,CACH,KAAM,KAAK,KACX,QAAS,KAAK,OACjB,CACT,CACA,CACO,MAAMC,GAAcC,GAAW,CAClC,KAAM,CAACC,EAAMC,EAAMC,EAAUnB,EAASD,EAAQj1C,EAAYm1C,CAAU,EAAIe,EAAO,MAAM/G,EAAS,EAC9F,MAAO,CACH,SAAUkH,EAAW,SAASA,CAAQ,EAAI,EAC1C,KAAM,SAASD,CAAI,EACnB,KAAAD,EACA,MAAOjB,EACD,CACE,QAAAA,EACA,OAAQ,OAAOD,CAAM,EACrB,WAAYj1C,GAAc,OAC1B,WAAYm1C,GAAc,MAC1C,EACc,MACT,CACL,EC/MO,SAASmB,GAAoBC,EAAU,CAC1C,IAAIC,EAAO,CAAE,EACb,OAAI,MAAM,QAAQD,CAAQ,EACtBA,EAAS,QAASlpB,GAAM,CAEhB,MAAM,QAAQA,CAAC,EACXA,EAAE,CAAC,IAAM,YAETmpB,EAAK,KAAKpB,GAAa,KAAK/nB,EAAE,CAAC,CAAC,CAAC,EAE5BA,EAAE,CAAC,IAAM,eACdmpB,EAAK,KAAKpB,GAAa,eAAe,WAAW,KAAKtvD,GAAYunC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAIzEmpB,EAAK,KAAK,IAAI1B,GAAY,CACtB,SAAUznB,EAAE,CAAC,EACb,MAAOA,EAAE,CAAC,EACV,KAAMA,EAAE,CAAC,CACjC,CAAqB,CAAC,EAKNmpB,EAAK,KAAKC,GAAeppB,CAAC,CAAC,CAE3C,CAAS,EAIDmpB,EAAK,KAAKC,GAAeF,CAAQ,CAAC,EAE/BC,CACX,CACA,SAASC,GAAe/K,EAAQ,CAC5B,GAAIA,EAAO,eAAe,MAAM,EAC5B,OAAO,IAAIoJ,GAAYpJ,CAAM,EAE5B,GAAIA,EAAO,eAAe,SAAS,EACpC,OAAO,IAAIsJ,GAAiBtJ,CAAM,EAEjC,GAAIA,EAAO,eAAe,QAAQ,EACnC,OAAO0J,GAAa,eAAe1J,EAAO,MAAM,EAG/C,GAAIA,EAAO,eAAe,YAAY,EACvC,OAAO0J,GAAa,WAAW1J,EAAO,UAAU,EAE/C,GAAIA,EAAO,eAAe,YAAY,EACvC,OAAO0J,GAAa,eAAe,WAAW,KAAKtvD,GAAY4lD,EAAO,UAAU,CAAC,CAAC,EAEtF,MAAM,IAAI,MAAM,yBAAyB,CAC7C,CC1CO,eAAegL,GAAgBhzD,EAAOqwD,EAAS,CAElD,OADaD,GAAaC,CAAO,EACrB,CACR,KAAKjB,GAAS,IACV,OAAOpvD,EAAQ+uD,GAAS,SAC5B,KAAKK,GAAS,QACV,OAAOpvD,EACX,KAAKovD,GAAS,IACV,OAAOpvD,EACX,KAAKovD,GAAS,KACV,OAAOpvD,EACX,KAAKovD,GAAS,SACV,OAAOpvD,EACX,QACI,MAAMuwD,EAAoB,MAAMb,GAAa,IAAIW,CAAO,EAGlD4C,EAAgB,OAAOjzD,GAASuwD,EAAoBxB,GAAS,SAAS,EAAE,QAAQ,CAAC,EACvF,OAAO,OAAO,WAAWkE,CAAa,CAClD,CACA,CCrBO,eAAeC,GAAQlzD,EAAOmzD,EAAMC,EAAI,CAC3C,IAAIC,EAAU,MAAM/C,GAAgBtwD,EAAOmzD,CAAI,EAC/C,OAAOH,GAAgBK,EAASD,CAAE,CACtC,CCNO,SAASE,GAAoBx+C,EAAS,CACzC,IAAI5U,EASJ,GAPI4U,EAAQ,SAAS,GAAG,EACpB5U,EAASkY,GAAwBtD,CAAO,EAIxC5U,EAASwY,GAAqC5D,CAAO,EAErD,OAAO5U,GAAW,SAClB,MAAM,IAAI,MAAMA,CAAM,EAE1B,OAAOA,EAAO,OAClB,CAQO,SAASqzD,GAAaz+C,EAAS,CAClC,IAAI5U,EAOJ,GANI4U,EAAQ,SAAS,GAAG,EACpB5U,EAASkY,GAAwBtD,CAAO,EAGxC5U,EAASwY,GAAqC5D,CAAO,EAErD,OAAO5U,GAAW,SAClB,MAAM,IAAI,MAAMA,CAAM,EAE1B,OAAOA,EAAO,MAClB,CCzCO,SAASszD,GAAWhyB,EAAMiyB,EAAgBpwB,EAAS,CAClD,OAAO7B,GAAS,WAChBA,EAAO79B,EAAS69B,CAAI,GAExB,IAAIkyB,EAASnyB,GAA4BC,EAAM,CAC3C,eAAgB,GAChB,YAAa,EACrB,CAAK,EACGY,EAAOgD,GAAasuB,EAAQD,CAAc,EAC9C,GAAI,OAAOrxB,GAAS,SAChB,MAAMA,EAEV,IAAIuxB,EAAmB3vB,GAAmB5B,CAAI,EAO9C,OANc2B,GAAkB,CAC5B,QAASV,EACT,KAAMswB,CACd,EAAO,CACC,YAAa,EAChB,CAAA,EAAE,WAEP,CCrBO,SAASC,GAAaC,EAAO,CAChC,OAAIA,EAAM,OAAS,EACMA,EAAM,IAAKC,GACrBA,EAAE,QACZ,EAC4B,OAAO,CAACzvD,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAI/C,CAEf,CACO,SAASyvD,GAAgBF,EAAOrC,EAAS,CAC5C,OAAIqC,EAAM,OAAS,EACIA,EACd,OAAQzhC,GAASA,EAAK,OAAO,UAAYo/B,CAAO,EAChD,IAAKsC,GACCA,EAAE,OAAO,QAAU,EAC7B,EAC0B,OAAO,CAACzvD,EAAGC,IAAMD,EAAIC,EAAG,EAAE,EAI9C,EAEf,CCzBO,SAAS0vD,GAAMh0D,EAAOi0D,EAAW,CACpC,IAAIC,EAAa,KAAK,IAAI,GAAID,CAAc,EAC5C,OAAO,KAAK,MAAMj0D,EAAQk0D,CAAU,EAAIA,CAC5C,CCGO,eAAeC,GAA2Bn0D,EAAOo0D,EAAa,GAAM,CACvE,MAAMC,EAAW,CAAE,EACnBA,EAAS,IAAMr0D,EAAQ+uD,GAAS,SAChCsF,EAAS,IAAMr0D,EACf,MAAMizD,EAAiBjzD,EAAQ+uD,GAAS,SACnC,MAAMW,GAAa,IAAI5D,GAAO,gBAAiBsI,CAAU,EAC9D,OAAAC,EAASvI,GAAO,eAAe,EAAIkI,GAAMf,EAAe,CAAC,EAClDoB,CACX,CACO,eAAeC,GAAmBt0D,EAAOqwD,EAAS+D,EAAa,GAAM,CAExE,OADahE,GAAaC,CAAO,EACrB,CACR,KAAKjB,GAAS,IACV,OAAOpvD,EAAQ+uD,GAAS,SAC5B,KAAKK,GAAS,IACV,OAAOpvD,EACX,KAAKovD,GAAS,KACV,OAAOpvD,EACX,KAAKovD,GAAS,QACV,OAAOpvD,EACX,KAAKovD,GAAS,SACV,OAAOpvD,EACX,QACI,MAAMizD,EAAiBjzD,EAAQ+uD,GAAS,SACnC,MAAMW,GAAa,IAAI5D,GAAO,gBAAiBsI,CAAU,EAC9D,OAAO,OAAOnB,EAAc,QAAQ,CAAC,CAAC,CAClD,CACA,CCjCO,MAAMsB,GAAiC,MACjCC,GAAmB,CAC5B,QAAS,MACT,QAAS,OACT,QAAS,MACb,EACaC,GAAiB,CAC1B,gCAIJ,EAcaC,GAAiB,CAG1B,+BACJ,EACaC,GAAiB,CAAC,sBAAsB,YC5BrD,IAAIF,GAAgBC,GAAgBC,GAC7B,MAAMC,EAAgB,CACzB,MAAA,CAAS,KAAK,QAAU,CACpB,QAAS,CAAC,EACV,QAAS,CAAC,EACV,QAAS,CAAA,CACb,CAAA,CACJ,CACO,SAASC,GAAkBxxB,EAAS,CACnC,IAAAyxB,EACA,OAAAr1D,MAAwB,OAClBq1D,EAAAC,GAGND,EAAM,CAAC,EAEXL,GAAiBG,GAAgB,QAAQ,QAAQ,OAC3CA,GAAgB,QAAQ,QACxBE,EAAI,SACAA,EAAI,SAAS,MAAM,GAAG,EACtBE,GACVN,GAAiBE,GAAgB,QAAQ,QAAQ,OAC3CA,GAAgB,QAAQ,QACxBE,EAAI,iBACAA,EAAI,iBAAiB,MAAM,GAAG,EAC9BG,GACVN,GAAiBC,GAAgB,QAAQ,QAAQ,OAC3CA,GAAgB,QAAQ,QACxBE,EAAI,iBACAA,EAAI,iBAAiB,MAAM,GAAG,EAC9BI,GACH,CACH,QAAST,GACT,QAASC,GACT,QAASC,IACXtxB,CAAO,CACb,CACO,SAAS8xB,IAAe,CAEvB,IAAAC,EACA,OAAA31D,OAAyB,OACzB21D,EAAKL,GAAY,oBACXA,GAAY,oBACZ,cAAgBt1D,GAAmB,EAGzC21D,EAAK,cAAgB31D,GAAmB,EAErC21D,CACX,CCnDO,SAASC,GAAiBC,EAAU,CACvC,IAAIC,EAAM,IAAI,IAAID,CAAQ,EACtBE,EAAO,SAASD,EAAI,MAAQ,KAAK,EACjCE,EAASC,GAAkBH,EAAI,QAAQ,EAC3C,MAAO,CAAE,KAAMA,EAAI,SAAU,KAAMC,EAAM,OAAQC,CAAQ,CAC7D,CACA,SAASC,GAAkBtM,EAAU,CACjC,IAAIuM,EACJ,OAAQvM,EAAQ,CACZ,IAAK,QACDuM,EAAY,MACZ,MACJ,IAAK,SACDA,EAAY,UACZ,MACJ,IAAK,MACDA,EAAY,KACZ,MACJ,IAAK,OACDA,EAAY,MACZ,MACJ,QACI,MAAM,MAAM,6CAA6C,CACrE,CACI,OAAOA,CACX,CClBO,SAASC,GAAkBvyB,EAASwyB,EAAU,CACjD,MAAMC,EAAWtB,GAAiBnxB,CAAO,EACzC,kBAAWyyB,CAAQ,EAAID,EAChBA,CACX,CACO,SAASE,GAAkB1yB,EAAS,CACvC,MAAMyyB,EAAWtB,GAAiBnxB,CAAO,EACzC,OAAO,WAAWyyB,CAAQ,CAC9B,CAOO,SAASE,GAAmB3yB,EAAUikB,GAAQ,QAAS2O,EAAStJ,EAA4BjE,EAAS,CACxG,MAAMwN,EAAgBD,IAAY,QAC9BtJ,IAA+B,QAC/BjE,IAAY,OAChB,GAAIwN,EAAe,CACf,MAAMC,EAAiBJ,GAAkB1yB,CAAO,EAChD,GAAI8yB,EACA,OAAOA,CAEnB,CAUI,GATAxJ,EAA6BA,GAEvB,GACNsJ,EAAUA,GAAoBpB,GAAkBxxB,CAAO,EAEnD,OAAO4yB,GAAY,WACnBA,EAAU,CAACA,CAAO,GAGlBA,EAAS,CACT,MAAMG,EAASC,GAAUJ,EAAQ,CAAC,CAAmB,EACrD,IAAIJ,EAAW,IAAIpJ,GAAwB2J,EAAQ/yB,EAASspB,CAA0B,EACtF,OAAIuJ,EACON,GAAkBvyB,EAASwyB,CAAQ,EAEvCA,CACf,KAEQ,OAAM,MAAM,8CAA8C,CAElE,CAEA,SAASQ,GAAUC,EAAQjzB,EAASqlB,EAAS,CACzC,IAAI6M,EAAMF,GAAiBiB,CAAM,EACjC,OAAOC,GAAkBhB,EAAyB,IAAe,CACrE,CACA,SAASgB,GAAkB9tB,EAAQqmB,EAASzrB,EAAS,CACjD,GAAIoF,EAAO,QAAQ,SAAS,KAAK,EAC7B,MAAM,MAAM,oCAAoC,EAEpD,MAAM+tB,EAAY,IAAIC,GAAkBhuB,EAAO,KAAMA,EAAO,KAAMA,EAAO,SAAW,MAAOqmB,CAAO,EAClG,OAAO,IAAI4H,GAAevB,KAAgBZ,GAAgCiC,EAAW,CACjF,mCAAoC,GACpC,iCAAkC,EAC1C,CAAK,CACL,CChEO,eAAeG,GAAatzB,EAAS,CACxC,GAAI,CAAC0yB,GAAkB1yB,CAAO,EAAG,CAE7B,MAAMwyB,GAAY,MADL,IAAIe,GAAWvzB,CAAO,EACN,MAAO,GAAE,gBACtC,OAAAuyB,GAAkBvyB,EAASwyB,CAAQ,EAC5BA,CACf,CACI,OAAOE,GAAkB1yB,CAAO,CACpC,CA2BO,MAAMuzB,EAAW,CACpB,YAAYvzB,EAAS4yB,EAAS,CAC1B,KAAK,QAAU5yB,GAAoB,UACnC,KAAK,cAAgB8rB,GAAqB,KAAK,OAAO,EACtD,KAAK,gBAAkB6G,GAAmB,KAAK,QAASC,EAAS,EAAI,CAC7E,CACI,MAAM,OAAQ,CACV,aAAM,KAAK,gBAAgB,QAAS,EACpC,MAAM,KAAK,gBAAgB,MAAO,EAC3B,IACf,CACI,MAAM,YAAa,CACf,aAAM,KAAK,gBAAgB,WAAY,EAChC,IACf,CACA,CC/CO,MAAMY,EAAK,CAEd,OAAS,KAAK,mBAAqB,EAAG,CACtC,OAAO,eAAgB,CACnB,OAAO,KAAK,kBACpB,CACI,OAAO,iBAAkB,CACrB,KAAK,mBAAqB,CAAE,CACpC,CAWI,aAAa,sBAAsBC,EAAKC,EAAa,CAKjD,GAJID,EAAI,QAAQ,UAAU,EAAI,IAC1BA,EAAM,WAAWA,CAAG,IAGpBC,EAAa,CAGb,MAAM50C,EAAO,MADI,MAAM,MAAM20C,CAAG,GACJ,KAAM,EAC5BvJ,EAAO1pD,EAASsP,EAAO,KAAK5L,GAAU4a,CAAI,CAAC,CAAC,EAClD,GAAI40C,GAAexJ,EACf,MAAM,IAAI,MAAM,kCAAkCuJ,CAAG;AAAA,YAAevJ,CAAI;AAAA,YAAewJ,CAAW,EAAE,EAExG,OAAO,KAAK,MAAM50C,CAAI,CAClC,CAIQ,OADa,MADI,MAAM,MAAM20C,CAAG,GACJ,KAAM,CAE1C,CAOI,OAAO,oBAAoBE,EAAU,CAC7B,KAAK,mBAAmB,KAAM3J,GAAQ,KAAK,UAAUA,CAAG,IAAM,KAAK,UAAU2J,CAAQ,CAAC,GAG1F,KAAK,mBAAmB,KAAKA,CAAQ,CAC7C,CAUI,aAAa,2BAA2BF,EAAKC,EAAa,CACtD,MAAMC,EAAW,MAAM,KAAK,sBAAsBF,EAAKC,CAAW,EAClE,KAAK,oBAAoBC,CAAQ,CACzC,CAGI,OAAO,qBAAqBC,EAAO1J,EAAM,CACrC,IAAI2J,EACAC,EAAkB,GACtB,GAAIF,EAAM,eAAe,MAAM,EAAG,CAC9B,MAAMG,EAAsBH,EAC5BC,EAAYE,EAAoB,KAC3B,OAAQ/J,GAAQA,EAAI,aAAa,OAAS,UAAU,EACpD,IAAKA,GAAQA,EAAI,aAAa,GAAG,EACtC8J,EAAkBC,EAAoB,IAAI,KAAM/J,GAAQA,EAAI,OAAS,CAAC,CAClF,KACa,CACD,MAAMgK,EAAqBJ,EAC3BC,EAAYG,EAAmB,QAC1B,IAAKhK,GAAQxpD,EAASwpD,EAAI,eAAe,CAAC,EAC1C,OAAQA,GAAQA,EAAI,QAAQ,IAAI,IAAM,CAAC,EAC5C8J,EAAkBE,EAAmB,OAAO,KAAMhK,GAAQA,EAAI,gBAAkB,CAAC,CAC7F,CACQ,GAAI,CAAC8J,EACD,MAAM,IAAI,MAAM,mFAAmF,EAMvG,GAJsBD,EAAU,OAAQ7J,GAAQA,EAAI,QAAQ,cAAc,IAAM,GAC5EA,EAAI,QAAQ,gBAAgB,IAAM,GAClCA,EAAI,QAAQ,kBAAkB,IAAM,GACpCA,EAAI,QAAQ,sBAAsB,IAAM,CAAC,EAC3B,SAAW,EACzB,MAAO,CACH,OAAQE,EACR,YAAa,GACb,KAAM,CAAE,EACR,SAAU,EACb,EAEL,MAAMyE,EAAckF,EAAU,CAAC,EACzBnF,EAASL,GAAa,YAAY/tD,EAASquD,CAAW,CAAC,EAC7D,GAAID,EAAO,OAAS,EAChB,MAAM,IAAI,MAAM,0BAA0BC,CAAW,EAAE,EAE3D,MAAM9xD,EAAS,CACX,OAAQqtD,EACR,YAAa,GACb,KAAM,CAAE,EACR,SAAU,EACb,EACD,GAAIwE,EAAO,SAAW,EAAG,CAErB7xD,EAAO,YAAc2D,EAASkuD,EAAO,CAAC,CAAC,EACvC,MAAMuF,EAAU5vD,GAAUqqD,EAAO,CAAC,CAAC,EACnC7xD,EAAO,KAAO,CAAC,UAAUo3D,CAAO,EAAE,EAClCp3D,EAAO,SAAW,GAAG4rD,GAAO,kBAAkB,GAAGwL,CAAO,EACpE,KACa,CAGDp3D,EAAO,YAAc2D,EAASkuD,EAAO,CAAC,EAAE,OAAO,EAC/C,MAAMwF,EAAOxF,EAAO,MAAM,CAAC,EAC3B,UAAW+E,KAAOS,EAAM,CACpB,MAAMC,EAAY9vD,GAAUovD,CAAG,EAE/B,GADA52D,EAAO,KAAK,KAAKs3D,CAAS,EACtB,CAAAt3D,EAAO,SAGX,GAAIs3D,EAAU,QAAQ,SAAS,IAAM,EAAG,CACpC,MAAMF,EAAUE,EAAU,QAAQ,UAAW,EAAE,EAC/Ct3D,EAAO,SAAW,GAAG4rD,GAAO,kBAAkB,GAAGwL,CAAO,EAC5E,SACyBE,EAAU,QAAQ,UAAU,IAAM,EACvCt3D,EAAO,SAAWs3D,UAEbA,EAAU,QAAQ,UAAU,IAAM,GAAI,CAG3C,GAFAt3D,EAAO,SAAWs3D,EAEdA,EAAU,QAAQ,GAAG,IAAM,GAAI,CAC/B,MAAMn/C,EAAQm/C,EAAU,YAAW,EAAG,MAAM,GAAG,EACzCn/C,IAAQ,CAAC,GAAG,QAAQ,KAAK,IAAM,GAAKA,IAAQ,CAAC,IAAM,SACrDnY,EAAO,SAAW,GAAGA,EAAO,QAAQ,mDAEhE,CACoBA,EAAO,SAAW,WAAWA,EAAO,QAAQ,EAChE,KAEoB,OAAM,IAAI,MAAM,yBAAyBs3D,CAAS,EAAE,CAExE,CACA,CACQ,OAAOt3D,CACf,CAcI,aAAa,eAAewoD,EAAS,CAC7BA,EAAQ,UAAY,SACpBA,EAAQ,QAAUpB,GAAQ,SAE1BoB,EAAQ,eAAiB,SACzBA,EAAQ,aAAe,IAEvBA,EAAQ,cAAgB,SACxBA,EAAQ,YAAc,IAE1B,MAAMmN,EAAY,MAAMc,GAAajO,EAAQ,OAAO,EAChDA,EAAQ,QAAU,SAClBA,EAAQ,MAAQ,MAAMmN,EAAS,wBAAwBnN,EAAQ,eAAe,GAGlF,MAAM+O,EAAoB,SAAY,CAClC,MAAMtJ,EAAUzF,EAAQ,cACnB,MAAMmN,EAAS,WAAWnN,EAAQ,MAAM,KAAK,CAAC,EAAE,aAAa,UAAU,CAAC,CAAC,EACxEgP,EAASvJ,EAAQ,KAAMd,GAAQA,EAAI,UAAY3E,EAAQ,eAAe,EAC5E,IAAIiP,EAAkBxJ,EAAQ,OAAQd,GAAQA,EAAI,OAAS,EACrDA,EAAI,QAAUqK,EAAO,QAAUrK,EAAI,QAAU,EAC7CA,EAAI,QAAU,GAAKA,EAAI,UAAYqK,EAAO,OAAO,EACvD,UAAWE,KAAaD,EAAiB,CACrC,MAAME,EAAe,MAAMhC,EAAS,wBAAwB+B,EAAU,OAAO,EAG7E,GAFqBC,EAAa,IAAI,KAAMxK,GAAQA,EAAI,OAAS3E,EAAQ,iBAAmB2E,EAAI,OAAS,CAAC,EAExF,CAEd,MAAMyK,EAAepP,EAAQ,MAAM,KAAK,CAAC,EAAE,aAAa,UAAU,CAAC,IAC/DmP,EAAa,KAAK,CAAC,EAAE,aAAa,UAAU,CAAC,EAC3CF,EACA,OAEN,MAAO,CAAE,MAAOE,EAAc,aAAAC,CAAc,CAChE,CACA,CAES,EAED,IAAIlG,EACJ,GAAI,CACAA,EAAUiF,GAAK,qBAAqBnO,EAAQ,MAAOA,EAAQ,MAAM,IAAI,CACjF,OACehkB,EAAO,CAGV,MAAM2H,EAAQ,MAAMorB,EAAmB,EACvC,GAAIprB,EACA,OAAO,MAAMwqB,GAAK,eAAe,CAC7B,GAAGnO,EACH,gBAAiBrc,EAAM,MAAM,KAC7B,MAAOA,EAAM,MACb,aAAcA,EAAM,YACxC,CAAiB,EAGD,MAAM3H,CAEtB,CACQ,IAAIqzB,EAAY,CAAE,EAClB,GAAIrP,EAAQ,YAAa,CAErB,MAAMsO,EAAW,MAAM,KAAK,sBAAsBpF,EAAQ,SAAUA,EAAQ,WAAW,EACvF,GAAIoF,EAAS,YACTA,EAAS,WAAW,WACpB,OAAO,KAAKA,EAAS,WAAW,SAAY,EAAE,OAE9Ce,EADqB,OAAO,OAAOf,EAAS,WAAW,SAAY,EAE9D,IAAK94C,GAAO,CACb,MAAMqtC,EAAiB5nD,EAASua,CAAE,EAC5B/c,EAAU6c,GAAkButC,CAAc,EAChD,GAAI,OAAOpqD,GAAY,SACnB,MAAM,IAAI,MAAM,8BAA8B,KAAK,UAAU+c,CAAE,CAAC,KAAK/c,CAAO,EAAE,EAElF,MAAMosD,EAAO1pD,EAASsP,EAAO,KAAKA,EAAO,KAAKo4C,CAAc,CAAC,EAAE,SAAS,EACxE,MAAO,CAAE,QAAApqD,EAAS,KAAAosD,CAAM,CAC3B,CAAA,EACI,IAAI,CAAC,CAAE,QAAApsD,EAAS,KAAAosD,CAAI,IAAOsJ,GAAK,qBAAqB11D,EAASosD,CAAI,CAAC,MAEvE,CAED,IAAIyK,EAAO,GACP95C,EAAK,CAAE,GAAGwqC,EAAQ,KAAO,EACzBuP,EAAc,GAClB,KAAOD,GAAQ,IAASC,IAAgB,GAAG,CACvC,MAAMC,EAAMh6C,EAAG,IAAI,KAAMmvC,GAAQA,EAAI,OAAS,CAAC,EAC/CnvC,EAAK,MAAM23C,EAAS,wBAAwBqC,EAAI,IAAI,EACpD,GAAI,CACA,MAAMC,EAActB,GAAK,qBAAqB34C,EAAIA,EAAG,IAAI,EACzD65C,EAAU,QAAQI,CAAW,EAC7BF,GACxB,MAC0B,CACFD,EAAO,EAC/B,CACA,CACA,CACA,CAGQ,GAAItP,EAAQ,aAAc,CACtB,MAAMrc,EAAQ,MAAMorB,EAAmB,EACvC,GAAIprB,EAAO,CACP,MAAM+rB,EAAY,MAAMvB,GAAK,eAAe,CACxC,gBAAiBxqB,EAAM,MAAM,KAC7B,QAASqc,EAAQ,QACjB,MAAOrc,EAAM,MACb,aAAcA,EAAM,aACpB,aAAcqc,EAAQ,aACtB,YAAa,EACjC,CAAiB,EAED,MAAO,CAAC,GAAGqP,EAAWnG,EAAS,GAAGwG,CAAS,EAAE,OAAQ/K,GAAQA,EAAI,SAAS,MAAM,CAChG,CACA,CAEQ,MAAO,CAAC,GAAG0K,EAAWnG,CAAO,EAAE,OAAQvE,GAAQA,EAAI,SAAS,MAAM,CAC1E,CAaI,aAAa,6BAA6B3E,EAAS,CAC/C,GAAI,CAACA,EAAQ,cACT,MAAM,IAAI,MAAM,gCAAgC,EA4CpD,MAAM2P,EAAe,MA1CJ,MAAM,MAAM3P,EAAQ,cAAe,CAChD,OAAQ,OACR,QAAS,CACL,OAAQ,MACR,eAAgB,kBACnB,EACD,KAAM,KAAK,UAAU,CACjB,cAAe,KACf,UAAW,CAAE,EACb,MAAO;AAAA;AAAA;AAAA;AAAA,wBAICA,EAAQ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA2B/C,CAAa,CACb,CAAS,GACmC,KAAM,EACpCxoD,EAAS,CAAE,EACXo4D,EAAaD,EAAa,KAAK,YAAY,CAAC,GAAG,WAAW,CAAC,EAAE,WACnE,GAAI,CAACC,EACD,OAAOp4D,EAEX,UAAWq4D,KAAaD,EAAY,CAChC,MAAMliC,EAAcmiC,EAAU,YAAY,CAAC,EAC3C,GAAI,CAACniC,EACD,SAEJA,EAAY,OAAO,QAASr1B,GAAWA,EAAM,cAAgB,OAAOA,EAAM,cAAc,CAAE,EAC1Fq1B,EAAY,QAAQ,QAAS/Y,GAAW,CACpCA,EAAO,YAAc,OAAOA,EAAO,YAAY,EAC/CA,EAAO,gBAAkB1Z,EAAS0Z,EAAO,iBAAiB,QAAQ,MAAO,EAAE,CAAC,CAC5F,CAAa,EACD,MAAM6vC,EAAS92B,EAAY,KAAK,QAAQ,MAAO,EAAE,EACjDl2B,EAAO,KAAK22D,GAAK,qBAAqBzgC,EAAa82B,CAAM,CAAC,CACtE,CACQ,OAAOhtD,EAAO,OAAQ0xD,GAAYA,EAAQ,YAAY,QAAUA,EAAQ,SAAS,MAAM,CAC/F,CAWI,aAAa,6BAA6BlJ,EAAS,CAC/C,MAAM8P,EAAY,MAAM,KAAK,eAAe,CACxC,GAAG9P,EACH,YAAa,EACzB,CAAS,EACD,GAAI,CAAC8P,EAAU,OACX,MAAM,IAAI,MAAM,wDAAwD,KAAK,UAAUA,EAAW,KAAM,CAAC,CAAC,EAAE,EAEhH,MAAMxB,EAAW,MAAM,KAAK,sBAAsBwB,EAAU,QAAS,EAAC,CAAC,EAAE,QAAQ,EACjF,YAAK,oBAAoBxB,CAAQ,EAC1BwB,CACf,CAQI,OAAO,aAAahH,EAAS,CACzB,UAAWwF,KAAY,KAAK,mBAAmB,MAAK,EAAG,UAAW,CAC9D,MAAM7I,EAAU6I,EAAS,aAAaxF,CAAO,EAC7C,GAAI,CAACrD,EACD,SAEJ,MAAMsK,EAAsB,OAAO,KAAKtK,CAAO,EAAE,CAAC,EAClD,GAAIsK,IAAwB,OAG5B,OAAOtK,EAAQsK,CAAmB,CAC9C,CAEA,CACA,CC7YA,SAASC,GAAc50D,EAAK,CACxB,MAAMV,EAASmE,GAAUzD,CAAG,EAAE,OAAO,SAAS,EAAE,EAChD,IAAI0P,EAAU;AAAA,EACd,OAAO,IAAI,WAAW,CAClB,GAAGjM,GAAUiM,CAAO,EACpB,GAAG7P,EAASP,CAAM,EAClB,GAAGmE,GAAUzD,CAAG,CACxB,CAAK,CACL,CAQO,eAAe60D,GAAa70D,EAAK,CACpC,MAAM80D,GAAK,MAAM9lD,GAAiB,GAAI,KACtC,OAAO8lD,EAAEA,EAAEF,GAAc50D,CAAG,CAAC,CAAC,CAClC,CACO,MAAM+0D,EAAc,CASvB,MAAM,KAAK/4D,EAAS6Q,EAAY,CAC5B,MAAM2C,EAAY,MAAMd,GAAsB,EAC9C,IAAIpB,EAAc,MAAMunD,GAAa74D,CAAO,EACxC8pC,EAAKt2B,EAAU,kCAAkC3C,EAAYS,CAAW,EAC5E,GAAI,OAAOw4B,GAAO,SACd,MAAM,IAAI,MAAMA,CAAE,EAEtB,IAAIkvB,EAASxlD,EAAU,mBAAmB3C,EAAYS,CAAW,EAC7D2nD,EAAazlD,EAAU,uBAAuB3C,EAAYS,CAAW,EACrE4nD,EAAmB,IAAI,WAAW,CAC9B,GAAKpvB,EAAG,WACZ,GAAGA,EAAG,SAClB,CAAS,EACD,MAAO,CACH,IAAK,CACD,MAAO1mC,GAAY0mC,EAAG,SAAS,EAC/B,QAAS1mC,GAAY61D,CAAU,EAC/B,IAAK71D,GAAY41D,CAAM,CAC1B,EACD,QAAS,CACL,WAAYlvB,EAAG,WACf,WAAY,GACZ,YAAa1mC,GAAYkO,CAAW,CACvC,EACD,UAAWlO,GAAY81D,CAAgB,CAC1C,CACT,CACI,aAAa,KAAKl5D,EAAS6Q,EAAY,CACnC,OAAO,IAAI,KAAM,EAAC,KAAK7Q,EAAS6Q,CAAU,CAClD,CAWI,MAAM,OAAO7Q,EAASqQ,EAAW28C,EAAUr9C,EAAW,CAElD,MAAM6D,EAAY,MAAMd,GAAsB,EAC9C,IAAIpB,EAAc,MAAMunD,GAAa74D,CAAO,EACxCm5D,EAAM72D,GAAY+N,CAAS,EAC3B+oD,EAAiB,GACjBC,EAAW,GACXC,EAAW,GACXxI,EAAKyI,EACT,GAAIJ,EAAI,SAAW,GAAI,CACnB,IAAIK,EAASL,EAAI,SAAW,GAAKA,EAAI,MAAM,CAAC,EAAIA,EAC5C/mD,EAAa+mD,EAAI,MAAM,EAAG,CAAC,EAAE,CAAC,EAAI,GAClCM,EAAcjmD,EAAU,2BAA2BgmD,EAAQpnD,EAAYd,CAAW,EACtF,GAAI,OAAOmoD,GAAgB,SACvB,MAAM,IAAI,MAAMA,CAAW,EAK/B,GAHA3I,EAAM,MAAMH,GAAQ8I,CAAW,EAC/BF,EAAgB,cAChBH,EAAiB5lD,EAAU,uBAAuBgmD,EAAQC,EAAanoD,CAAW,EAC9E07C,EAAU,CAEV,IAAI1mD,EAASmtD,GAAazG,CAAQ,EACV70C,GAAkB,CACtC,OAAA7R,EACA,KAAMiQ,EAAgB,MACtB,QAASu6C,CACZ,CAAA,EAAE,UACuB9D,IACtBsM,EAAW,GAE/B,CACA,MACiB3pD,IACD6D,EAAU,mBAAmB2lD,EAAKxpD,EAAW2B,CAAW,GACxDioD,EAAgB,MAChBH,EAAiB,GACjBC,EAAW,IAEN7lD,EAAU,uBAAuB2lD,EAAKxpD,EAAW2B,CAAW,GACjEioD,EAAgB,UAChBH,EAAiB,GACjBC,EAAW,IAEN7lD,EAAU,uBAAuB2lD,EAAKxpD,EAAW2B,CAAW,GACjEioD,EAAgB,QAChBH,EAAiB,GACjBC,EAAW,IAGXE,EAAgB,MAGxB,MAAO,CACH,MAAOH,IAAmBC,GAAYC,GACtC,QAAS,CACL,eAAgBF,EAChB,cAAeG,EACf,YAAan2D,GAAYkO,CAAW,EACpC,mBAAoBgoD,EACpB,eAAgBD,CACnB,CACJ,CACT,CACI,aAAa,OAAOr5D,EAASqQ,EAAW28C,EAAUr9C,EAAW,CACzD,OAAO,IAAI,KAAI,EAAG,OAAO3P,EAASqQ,EAAW28C,EAAUr9C,CAAS,CACxE,CACA,CCnJO,MAAM+pD,GAAoB,MAAO,CAAE,QAAA1kD,EAAS,SAAA+gD,EAAU,KAAAxE,EAAO,MAAO,WAAAxD,EAAa,EAAG,SAAAC,EAAW,GAAI,MAAA5jB,EAAQ,EAAG,MAAAuvB,EAAQ,EAAE,IAAQ,CAC/HA,IAAU,KACVA,EAAQ,MAEZ,MAAMtL,GAAW,MAAM0H,EAAS,WAAW/gD,EAAS+4C,EAAYC,CAAQ,GACnE,KAAK,CAACzpD,EAAGC,IAAMD,EAAE,QAAU,GAAKC,EAAE,QAAU,EAAID,EAAE,OAASC,EAAE,OAASA,EAAE,OAASD,EAAE,MAAM,EACzF,MAAM6lC,EAAOA,EAAQuvB,CAAK,EAEzBC,EAAUvL,EACX,IAAKjwC,GAAOA,EAAG,MAAM,EACrB,OAAQ6uC,GAAWA,EAAS,CAAC,EAC7B,OAAO,CAAC/sD,EAAOS,EAAOuD,IAAUA,EAAM,QAAQhE,CAAK,IAAMS,CAAK,EAC7Dk5D,GAAgB,MAAM,QAAQ,IAAID,EAAQ,IAAI,MAAO3M,GAAW,CAClEA,GACC,MAAM8I,EAAS,UAAU9I,EAAQ,EAAI,GAAG,SAC5C,CAAA,CAAC,GAAG,OAAO,CAACvkC,EAAK,CAACukC,EAAQ6M,CAAS,KAAO,CAAE,GAAGpxC,EAAK,CAACukC,CAAM,EAAG6M,CAAW,GAAG,CAAA,CAAE,EAEzEC,EAAuB,MAAM,QAAQ,IAAI1L,EAAQ,IAAI,MAAOjwC,GAAO,CACrE,MAAMuvC,EAAS,MAAMoI,EAAS,kBAAkB33C,EAAG,OAAO,EACpD47C,EAAoB97C,GAAkBra,EAAS8pD,CAAK,CAAC,EAC3D,GAAI,OAAOqM,GAAsB,SAC7B,MAAMA,EAEV,MAAM1jC,EAAc0jC,EACpB,OAAA1jC,EAAY,YAAclY,EAAG,OAC7BkY,EAAY,UAAYujC,EAAaz7C,EAAG,MAAM,EAC9CkY,EAAY,KAAOlY,EAAG,QACtBkY,EAAY,KAAOq3B,EAAM,OAAS,EAC3Br3B,CACf,CAAK,CAAC,EAEI2jC,EAA2BF,EAC5B,IAAK37C,GAAOA,EAAG,OAAO,IAAKnd,GAAU8C,EAAS9C,EAAM,uBAAuB,CAAC,CAAC,EAC7E,KAAI,EACJ,OAAO,CAACf,EAAOS,EAAOuD,IAAUA,EAAM,QAAQhE,CAAK,IAAMS,CAAK,EAC7Du5D,GAAyB,MAAM,QAAQ,IAAID,EAAyB,IAAI,MAAOxM,GAAS,CAC1F,MAAME,EAAS,MAAMoI,EAAS,kBAAkBtI,CAAI,EAC9Cn3B,EAAcpY,GAAkBra,EAAS8pD,CAAK,CAAC,EACrD,GAAI,OAAOr3B,GAAgB,SACvB,MAAMA,EAEV,MAAO,CAACm3B,EAAMn3B,CAAW,CACjC,CAAK,CAAC,GAAG,OAAO,CAAC5N,EAAK,CAAC+kC,EAAMn3B,CAAW,KAAO,CACvC,GAAG5N,EACH,CAAC+kC,CAAI,EAAGn3B,CACX,GAAG,CAAA,CAAE,EACAj1B,EAAUsX,GAAkB3D,CAAO,EACzC,GAAI,OAAO3T,GAAY,SACnB,MAAMA,EAEV,MAAM84D,EAAe,CAAE,EAEjBC,EAAeL,EAAqB,IAAK37C,GAAO,CAClD,MAAMhe,EAAS,CAAE,EACjB,IAAIi6D,EAAkB,GAClBC,EAAmB,GACvB,OAAAl6D,EAAO,OAASge,EAAG,OAAO,IAAKnd,GAAU,CACrC,MAAMs5D,EAAYL,EAAsBn2D,EAAS9C,EAAM,uBAAuB,CAAC,EAC/E,GAAI,CAACs5D,EACD,MAAM,IAAI,MAAM,oCAAoC,EAExD,MAAMC,EAAgBD,EAAU,QAAQt5D,EAAM,aAAa,EAC3D,GAAI,CAACu5D,EACD,MAAM,IAAI,MAAM,+BAA+B,EAEnD,MAAMrN,EAASgN,EAAaK,EAAc,eAAe,EACzD,IAAIxlD,EACJ,OAAKm4C,EAQDn4C,EAAUm4C,GAPVn4C,EAAU7U,GAAc8Z,GAA6B,CACjD,SAAUugD,EAAc,gBACxB,OAAQn5D,EAAQ,MACnB,CAAA,CAAC,EAAE,QACJ84D,EAAaK,EAAc,eAAe,EAAIxlD,GAKlDqlD,GAAmBG,EAAc,cAC1B,CACH,QAASxlD,EACT,MAAO,OAAOwlD,EAAc,aAAa,EACzC,MAAOA,EAAc,MACf,CACE,QAASz2D,EAASy2D,EAAc,MAAM,QAAQ,EAC9C,OAAQA,EAAc,MAAM,OAC5B,WAAYA,EAAc,MAAM,KAAK,WAC/BA,EAAc,MAAM,IAAI,WACxB,OACN,WAAYA,EAAc,MAAM,KAAK,WAC/Bz2D,EAASy2D,EAAc,MAAM,IAAI,UAAU,EAC3C,MAC9B,EACsB,MACT,CACb,CAAS,EACDp6D,EAAO,QAAUge,EAAG,QAAQ,IAAKb,GAAW,CACxC,MAAM4vC,EAASgN,EAAa58C,EAAO,eAAe,EAClD,IAAIvI,EACJ,OAAKm4C,EAaDn4C,EAAUm4C,EAZN5vC,EAAO,gBAAgB,CAAC,IAAMyjB,GAAQ,UACtChsB,EAAU,cAAcjR,EAASwZ,EAAO,eAAe,CAAC,IAGxDvI,EAAU7U,GAAc8Z,GAA6B,CACjD,SAAUsD,EAAO,gBACjB,OAAQlc,EAAQ,MACnB,CAAA,CAAC,EAAE,QACJ84D,EAAa58C,EAAO,eAAe,EAAIvI,GAM/CslD,GAAoB/8C,EAAO,cACpB,CACH,QAASvI,EACT,MAAO,OAAOuI,EAAO,aAAa,EAClC,MAAOA,EAAO,MACR,CACE,QAASxZ,EAASwZ,EAAO,MAAM,QAAQ,EACvC,OAAQA,EAAO,MAAM,OACrB,WAAYA,EAAO,MAAM,KAAK,WACxBA,EAAO,MAAM,IAAI,WACjB,OACN,WAAYA,EAAO,MAAM,KAAK,WACxBxZ,EAASwZ,EAAO,MAAM,IAAI,UAAU,EACpC,MAC9B,EACsB,MACT,CACb,CAAS,EACDnd,EAAO,YAAcge,EAAG,YACxBhe,EAAO,UAAYge,EAAG,UACtBhe,EAAO,KAAOge,EAAG,KACjBhe,EAAO,KAAOge,EAAG,KACjBhe,EAAO,IAAM,OAAOi6D,EAAkBC,CAAgB,EAC/Cl6D,CACf,CAAK,EAEDg6D,EAAa,QAASh8C,GAAO,CACzB,IAAIq8C,EAAiB,EACrB,MAAMC,EAAkB,CAAE,EACpBC,EAAmB,CAAE,EAC3Bv8C,EAAG,OAAO,QAASnd,GAAU,CACrBA,EAAM,UAAY+T,IAClBylD,GAAkBx5D,EAAM,MACpBA,EAAM,OAAO,SACby5D,EAAgBz5D,EAAM,MAAM,OAAO,GAC9By5D,EAAgBz5D,EAAM,MAAM,OAAO,GAAK,OAAO,CAAC,GAC7CA,EAAM,MAAM,QAEpBA,EAAM,OAAO,aACb05D,EAAiB15D,EAAM,MAAM,OAAO,GAC/B05D,EAAiB15D,EAAM,MAAM,OAAO,GAAK,OAAO,CAAC,GAAK,IAG/E,CAAS,EACDmd,EAAG,QAAQ,QAASb,GAAW,CACvBA,EAAO,UAAYvI,IACnBylD,GAAkB,OAAOl9C,EAAO,KAAK,EACjCA,EAAO,OAAO,SACdm9C,EAAgBn9C,EAAO,MAAM,OAAO,GAC/Bm9C,EAAgBn9C,EAAO,MAAM,OAAO,GAAK,OAAO,CAAC,GAC9CA,EAAO,MAAM,QAErBA,EAAO,OAAO,aACdo9C,EAAiBp9C,EAAO,MAAM,OAAO,GAChCo9C,EAAiBp9C,EAAO,MAAM,OAAO,GAAK,OAAO,CAAC,GAAK,IAGhF,CAAS,EACDa,EAAG,YAAcq8C,EACjBr8C,EAAG,mBAAqB,OAAO,QAAQs8C,CAAe,EAAE,IAAI,CAAC,CAAChJ,EAASD,CAAM,KAAO,CAChF,QAAAC,EACA,OAAAD,EACA,UAAW,OAAO,CAAC,CAC/B,EAAU,EACF,SAAW,CAACC,EAASkJ,CAAS,IAAK,OAAO,QAAQD,CAAgB,EAAG,CACjE,MAAME,EAAcz8C,EAAG,mBAAmB,KAAMy8C,GAAgBA,EAAY,UAAYnJ,CAAO,EAC3FmJ,EACAA,EAAY,UAAYD,EAGxBx8C,EAAG,mBAAmB,KAAK,CACvB,QAAAszC,EACA,OAAQ,OAAO,CAAC,EAChB,UAAAkJ,CACpB,CAAiB,CAEjB,CACA,CAAK,EAEDR,EAAa,KAAK,CAAC71D,EAAGC,KAAOD,EAAE,aAAe,GAAKC,EAAE,aAAe,EAC9DD,EAAE,YAAcC,EAAE,YAClBA,EAAE,YAAcD,EAAE,cAAgBA,EAAE,YAAcC,EAAE,WAAW,EAErE,IAAIs2D,EAAc,MAAM/E,EAAS,WAAW/gD,CAAO,EAC/C+lD,EAAkB,EAOtB,GANAX,EAAa,QAASh8C,GAAO,CACzBA,EAAG,QAAU08C,EAAcC,EAC3BD,EAAc18C,EAAG,QACjB28C,EAAkB38C,EAAG,WAC7B,CAAK,EAEG,CAACmzC,EAAK,SAAS,KAAK,EACpB,UAAWnzC,KAAMg8C,EAAc,CAC3B,UAAWn5D,KAASmd,EAAG,OACnBnd,EAAM,MAAQ,MAAMmyD,GAAQnyD,EAAM,MAAO,MAAOswD,CAAI,EAExD,UAAWh0C,KAAUa,EAAG,QACpBb,EAAO,MAAQ,MAAM61C,GAAQ71C,EAAO,MAAO,MAAOg0C,CAAI,EAE1DnzC,EAAG,YAAc,MAAMg1C,GAAQh1C,EAAG,YAAa,MAAOmzC,CAAI,EAC1DnzC,EAAG,QAAU,MAAMg1C,GAAQh1C,EAAG,QAAS,MAAOmzC,CAAI,CAC9D,CAEI,OAAO6I,CACX,ECzNO,eAAeY,GAAiBjF,EAAU,CAC7C,IAAIkF,EAWJ,OAVIvG,GAAiBqB,EAAS,OAAO,EAAI,eAAgB,aAErDkF,EACI,WAAWvG,GAAiBqB,EAAS,OAAO,EAAI,YAAY,GAEhE,OAAOkF,GAAyB,WAChCA,EAAuB,MAAMlF,EAAS,YAAa,EACnD,WAAWrB,GAAiBqB,EAAS,OAAO,EAAI,YAAY,EACxDkF,GAEJ,OAAOA,GAAyB,SACzB,KAAK,MAAMA,EAAuBhM,GAAS,QAAQ,EAAI,KAG9D,QAAQ,KAAK,mDAAmD,EACzD,KAAK,MAAM,KAAUA,GAAS,QAAQ,EAAI,IAEzD,CCrBO,IAAIiM,GACV,SAAUA,EAAgB,CACvBA,EAAe,IAAS,MACxBA,EAAe,KAAU,OACzBA,EAAe,GAAQ,KACvBA,EAAe,MAAW,QAC1BA,EAAe,WAAgB,SACnC,GAAGA,IAAmBA,EAAiB,CAAA,EAAG,EACnC,IAAIC,IACV,SAAUA,EAAe,CACtBA,EAAc,OAAY,SAC1BA,EAAc,MAAW,cACzBA,EAAc,IAAS,aACvBA,EAAc,KAAU,aACxBA,EAAc,gBAAqB,kBACnCA,EAAc,cAAmB,gBACjCA,EAAc,eAAoB,gBACtC,GAAGA,KAAkBA,GAAgB,CAAA,EAAG,ECdjC,SAASC,GAAgBl7D,EAAO,CACnC,GAAIA,EAAQ0rD,GACR,MAAM,MAAM,0CAA0C,CAE9D,CACO,SAASyP,GAAmBC,EAAkBC,EAAK,CAItD,GAHsBD,EAAiB,OAAO,SAAUlkC,EAAKyS,EAAG,CAC5D,OAAOzS,GAAOyS,EAAE,MAAQ+hB,GAC3B,EAAE,CAAC,EACkB2P,EAClB,MAAM,MAAM,8CAA8C,CAElE,CACO,SAASC,GAA+Bj+C,EAAQ,CACnD,GAAIA,aAAkBi0C,GAClB,MAAM,MAAM,mDAAmD,EAEnE,GAAIj0C,aAAkBq0C,GAClB,MAAM,MAAM,+CAA+C,EAE/D,OAAOr0C,CACX,CACO,SAASk+C,GAAiBH,EAAkB,CAC/C,OAAOA,EAAiB,KAAK,CAAC/2D,EAAGC,IAAMD,EAAE,MAAQC,EAAE,KAAK,CAC5D,CACA,SAASk3D,GAAe3I,EAAUwI,EAAK,CACnCF,GAAmBtI,EAAUwI,CAAG,EAChCA,EAAM,OAAOA,CAAG,EAChB,QAAS1xB,EAAI,EAAGA,EAAIkpB,EAAS,OAAQlpB,IACjC,GAAI0xB,EAAM,EAAG,CACTC,GAA+BzI,EAASlpB,CAAC,CAAC,EAC1C,IAAI8xB,EAAgB,KAAK,MAAMJ,GAAOxI,EAAS,OAASlpB,EAAE,EAC1D8xB,GAAiBJ,GAAOxI,EAAS,OAASlpB,GACtCkpB,EAASlpB,CAAC,EAAE,MAAQ8xB,EAAgB/P,IACpC2P,GAAOxI,EAASlpB,CAAC,EAAE,MACnBkpB,EAASlpB,CAAC,EAAE,MAAQ,IAGpB0xB,GAAOI,EACP5I,EAASlpB,CAAC,EAAE,OAAS8xB,EAErC,CAEI,OAAO5I,EAAS,OAAQlpB,GAAMA,EAAE,OAAS+hB,EAAmB,CAChE,CACA,SAASgQ,GAAU7I,EAAUwI,EAAK,CAC9B,IAAIM,EAAQ9I,EAAS,MAAO,EAC5B,OAAA8I,EAAQL,GAA+BK,CAAK,EAC5CA,EAAM,MAAQA,EAAM,MAAQN,EAC5BH,GAAgBS,EAAM,KAAK,EAC3B9I,EAAS,QAAQ8I,CAAK,EACf9I,CACX,CACA,SAAS+I,GAAS/I,EAAUwI,EAAK,CAC7B,IAAIM,EAAQ9I,EAAS,IAAK,EAC1B,OAAA8I,EAAQL,GAA+BK,CAAK,EAC5CA,EAAM,MAAQA,EAAM,MAAQN,EAC5BH,GAAgBS,EAAM,KAAK,EAC3B9I,EAAS,KAAK8I,CAAK,EACZ9I,CACX,CACA,SAASgJ,GAAQhJ,EAAUwI,EAAK,CAC5B,QAAS1xB,KAAKkpB,EACVyI,GAA+B3xB,CAAC,EAEpC,OAAAkpB,EAAW0I,GAAiB1I,CAAQ,EACpCA,EAAW2I,GAAe3I,EAAUwI,CAAG,EAChCxI,CACX,CACA,SAASiJ,GAAmBjJ,EAAUwI,EAAKU,EAAQC,EAAY,CAC3D,GAAI,OAAOX,CAAG,EAAIU,EAAQ,CACtB,IAAIE,EAAiB,OAAOZ,CAAG,EAAIU,EACnClJ,EAAWmJ,EAAWnJ,EAAUoJ,CAAc,CACtD,CACI,OAAOpJ,CACX,CACO,SAASqJ,GAAYrJ,EAAUwI,EAAKc,EAAWJ,EAAQ,CAC1D,GAAIlJ,EAAS,OAAS,EAAG,CACrB,OAAQsJ,EAAS,CACb,KAAKlB,GAAc,OAEf,MACJ,KAAKA,GAAc,gBACfpI,EAAWiJ,GAAmBjJ,EAAUwI,EAAKU,EAAQL,EAAS,EAC9D,MACJ,KAAKT,GAAc,eACfpI,EAAWiJ,GAAmBjJ,EAAUwI,EAAKU,EAAQH,EAAQ,EAC7D,MACJ,KAAKX,GAAc,cACfpI,EAAWiJ,GAAmBjJ,EAAUwI,EAAKU,EAAQF,EAAO,EAC5D,MACJ,KAAKZ,GAAc,MACfpI,EAAW6I,GAAU7I,EAAUwI,CAAG,EAClC,MACJ,KAAKJ,GAAc,KACfpI,EAAW+I,GAAS/I,EAAUwI,CAAG,EACjC,MACJ,KAAKJ,GAAc,IACfpI,EAAWgJ,GAAQhJ,EAAUwI,CAAG,EAChC,MACJ,QACI,MAAM,MAAM,iCAAiC,CAC7D,CACQ,OAAOxI,CACf,KAEQ,OAAM,MAAM,2DAA2D,CAE/E,CC5GO,eAAeuJ,GAAsBvJ,EAAU,CAClD,OAAIA,GACqB,MAAM,QAAQ,IAAIA,EAAS,IAAI,MAAOlpB,GACnDA,aAAaynB,GACN,OAAO,MAAMd,GAAgB3mB,EAAE,MAAOA,EAAE,IAAI,CAAC,EAE/CA,aAAa2nB,GACX,OAAO3nB,EAAE,OAAS,GAAI,EAGtB,OAAO,CAAC,CACtB,CAAC,GAC2B,OAAO0yB,GAAY,OAAO,CAAC,CAAC,EAIlD,OAAO,CAAC,CAEvB,CACA,SAASA,GAAWh4D,EAAGC,EAAG,CAEtB,GAAIA,aAAa,MACb,MAAMA,EAEV,OAAO,OAAOD,CAAC,EAAI,OAAOC,CAAC,CAC/B,CClBO,eAAeg4D,GAA2B,CAAE,OAAA9gD,EAAQ,QAAAkC,EAAS,WAAA6+C,EAAY,cAAAC,EAAe,IAAAnB,EAAM,EAAG,cAAAoB,EAAgB,GAAO,UAAAN,EAAYlB,GAAc,OAAQ,cAAAyB,EAAgB,IAAO,CACpL,GAAI,CAACH,EACD,MAAM,IAAI,MAAM,+CAA+C,EAEnE,MAAMn+D,EAAWsoD,GAAqBhM,EAAwB,EAC9D,GAAI,OAAOt8C,GAAa,SACpB,MAAM,IAAI,MAAM,4BAA4B,EAEhD,MAAMu+D,EAAW,MAAMr+D,GAA4BF,CAAQ,EACrDw+D,EAAc,MAAMhJ,GAAap4C,CAAM,EACvCqhD,EAAa,MAAMT,GAAsB1+C,CAAO,EAChDo/C,EAAe,OAAOF,CAAW,EAAI,OAAOC,CAAU,EAAI,OAAOxB,CAAG,EAC1E39C,EAAUw+C,GAAYx+C,EAAS29C,EAAKc,EAAWW,CAAY,EAC3D,MAAMC,EAAgB,MAAMC,GAAet/C,CAAO,EAIlD,GAHKg/C,IACDA,EAAgBF,GAEhBC,IAAkB,IACdK,EAAepR,GAAqB,CACpC,MAAMuR,EAAwBhjD,GAA6ByiD,CAAa,EACxE,GAAI,OAAOO,GAA0B,SACjC,MAAM,MAAMA,CAAqB,EAErCF,EAAc,KAAK,CACf,gBAAiBE,EAAsB,SACvC,cAAe,OAAOH,CAAY,CAClD,CAAa,CACb,CAEI,KAAM,CAAE,eAAAI,EAAgB,cAAAnnC,CAAe,EAAGonC,GAAc,CACpD,OAAA3hD,EACA,SAAAmhD,EACA,WAAAJ,EACA,cAAAC,CACR,CAAK,EACKt8D,EAASgnD,GAAoB,CAC/B,OAAQgW,EACR,SAAU,EACV,QAASH,EACT,QAAS,CACjB,CAAK,EACD,GAAI,CAAC78D,EAAO,QACR,MAAM,MAAM,qCAAqC,EAErD,MAAMq6B,EAAwBpE,GAAwBj2B,EAAO,YAAa61B,EAAe,CAAE,6BAA8B,GAAI,EAC7H,GAAIwE,IAA0B,IAAQ8gC,EAAM,EACxC,MAAM9gC,EAEV,MAAO,CAAE,YAAar6B,EAAO,YAAa,cAAe61B,CAAe,CAC5E,CACO,SAASonC,GAAc,CAAE,OAAA3hD,EAAQ,SAAAmhD,EAAU,WAAAJ,EAAY,cAAAC,CAAa,EAAK,CAC5E,MAAMU,EAAiB,CAAE,EACnBnnC,EAAgB,CAAE,EACxB,UAAWxzB,KAAKiZ,EAAQ,CACpB,MAAM4hD,EAAe76D,EAAE,SACjB86D,EAAY96D,EAAE,KAEd+6D,EAA8B,IAAI,WAAW/6D,EAAE,KAAK,MAAM,SAAS,EAAE,IAAKZ,GAAS,SAASA,EAAM,EAAE,CAAC,CAAC,EAG5G,GAAI,CAAC27D,GAA+BD,IAAc,OAC9C,MAAM,IAAI,MAAM,oDAAoD,EAExE,MAAME,EAAeh7D,EAAE,OAAS,CAC5B,OAAQ,OAAOA,EAAE,MAAM,MAAM,EAC7B,SAAUoB,EAASpB,EAAE,MAAM,OAAO,EAClC,IAAKA,EAAE,MAAM,aAAe,QAAaA,EAAE,MAAM,aAAe,OAC1D,CACE,WAAYA,EAAE,MAAM,WACpB,WAAYA,EAAE,MAAM,aAAe,QAC/BoB,EAASpB,EAAE,MAAM,UAAU,CACnD,EACkB,MACT,EACKuR,EAAMyoD,GAAY,OAASA,EAAa,WAAW,KAAK,MAAM,EAAE,CAAC,EACjEiB,EAAW,CACb,cAAeH,EACf,wBAAyBC,EACzB,eAAgB,EAChB,kBAAmB,CACf,SAAAX,EACA,KAAM,CACF,KAAM,CAAE,YAAa,CAAE,IAAK7oD,CAAG,CAAI,CACtC,EACD,cAAe,OAAOspD,CAAY,EAClC,OAAQ,SACR,MAAOG,CACV,CACJ,EACDL,EAAe,KAAKM,CAAQ,EAC5B,MAAMn/D,EAAkB4b,GAA6BuiD,CAAa,EAClE,GAAI,OAAOn+D,GAAoB,SAC3B,MAAMA,EAEV03B,EAAc,KAAK,CACf,cAAesnC,EACf,wBAAyBC,EACzB,eAAgB,EAChB,kBAAmB,WAAW,KAAK,EAAE,EAErC,gBAAiBj/D,EAAgB,SACjC,cAAe,OAAO++D,CAAY,EAClC,MAAOG,CACnB,CAAS,CACT,CACI,MAAO,CAAE,eAAAL,EAAgB,cAAAnnC,CAAe,CAC5C,CAQO,eAAeinC,GAAet/C,EAAS,CAC1C,MAAMq/C,EAAgB,CAAE,EACxB,UAAW1/C,KAAUK,EAAS,CAC1B,GAAIL,aAAkBi0C,GAAkB,CACpCyL,EAAc,KAAKU,GAAoBpgD,CAAM,CAAC,EAC9C,QACZ,CACQ,GAAIA,aAAkBq0C,GAAc,CAChCqL,EAAc,KAAKW,GAAsBrgD,CAAM,CAAC,EAChD,QACZ,CACQ,MAAMsgD,EAAwB1jD,GAA6BoD,EAAO,QAAQ,EAC1E,GAAI,OAAOsgD,GAA0B,SACjC,MAAM,IAAI,MAAMA,CAAqB,EACzC,MAAMd,EAAa,MAAMvM,GAAgBjzC,EAAO,MAAOA,EAAO,IAAI,EAClE,GAAIw/C,EAAa,IAAM,EACnB,MAAM,MAAM,eAAeA,CAAU,+EAA+E,EAExH,MAAMe,EAAe,CACjB,gBAAiBD,EAAsB,SACvC,cAAe,OAAOd,CAAU,CACnC,EACDE,EAAc,KAAKa,CAAY,CACvC,CACI,OAAOb,CACX,CAMO,SAASW,GAAsB5+D,EAAS,CAC3C,MAAO,CACH,gBAAiBA,EAAQ,OACzB,cAAe,OAAO,CAAC,CAC1B,CACL,CAMO,SAAS2+D,GAAoB3+D,EAAS,CACzC,MAAMge,EAAQhe,EACR6+D,EAAwB1jD,GAA6Bnb,EAAQ,QAAQ,EAC3E,GAAI,OAAO6+D,GAA0B,SACjC,MAAM,IAAI,MAAMA,CAAqB,EACzC,MAAMJ,EAAe,CACjB,OAAQ,OAAOzgD,EAAM,MAAM,EAC3B,SAAUnZ,EAASmZ,EAAM,OAAO,EAChC,IAAKA,EAAM,aAAe,QAAaA,EAAM,aAAe,OACtD,CACE,WAAYA,EAAM,WAClB,WAAYA,EAAM,aAAe,QAAanZ,EAASmZ,EAAM,UAAU,CACvF,EACc,MACT,EACD,MAAO,CACH,gBAAiB6gD,EAAsB,SACvC,cAAe,OAAO7+D,EAAQ,OAAS,GAAI,EAC3C,MAAOy+D,CACV,CACL,CAUO,eAAeM,GAAiBriD,EAAQsiD,EAAgBC,EAAY5B,EAAWtJ,EAAUmL,EAAc,CAAA,EAAIC,EAAiB,OAAQ,CACvI,MAAMC,EAAgB,CAAC,GAAGF,CAAW,EACrC,IAAIG,EAAkB,OAAO,CAAC,EAC9B,MAAMC,EAAgBvL,EAAS,OAAQxF,GAAQA,aAAeiE,EAAgB,EACxE+M,EAAkB7iD,EAAO,MAAO,EAChC8iD,EAAiB,CAAE,EAEzB,GAAIL,IAAmB,OACnB,UAAWn/D,KAAWs/D,EAAe,CACjC,MAAMG,EAAcF,EAAgB,OAAQhR,GAAQA,EAAI,OAAO,UAAYvuD,EAAQ,OAAO,EACpF0/D,EAAuB,CAAC,GAAGN,EAAe,GAAGK,CAAW,EACzD,OAAQlR,GAAQA,EAAI,OAAO,aAAevuD,EAAQ,YACnDuuD,EAAI,OAAO,aAAevuD,EAAQ,UAAU,EAC3C,OAAQuuD,GAAQiR,EAAe,KAAMG,GAAapR,EAAI,OAASoR,EAAS,MAAQpR,EAAI,OAASoR,EAAS,IAAI,IAAM,MAAS,EAC9H,GAAID,EAAqB,OAAQ,CAC7B,MAAMz9D,EAAQy9D,EAAqB,CAAC,EAC9B/9D,EAAQ49D,EAAgB,QAAQt9D,CAAK,EACvCN,IAAU,KACVy9D,EAAc,KAAKn9D,CAAK,EACxBu9D,EAAe,KAAKv9D,CAAK,EACzBs9D,EAAgB,OAAO59D,EAAO,CAAC,EAC/B09D,GAAmB,OAAOp9D,EAAM,QAAQ,GAE5C,QAChB,CACY,GAAIjC,EAAQ,aAAeyoD,GAAc,SACrCzoD,EAAQ,aAAeyoD,GAAc,QAAS,CAC9C,MAAMmX,EAAyB,CAC3B,GAAGR,EACH,GAAGK,CACvB,EAAkB,OAAQlR,GAAQA,EAAI,OAAO,aAAevuD,EAAQ,UAAU,EAC9D,GAAI4/D,EAAuB,OAAQ,CAC/B,MAAM39D,EAAQ29D,EAAuB,CAAC,EAChCj+D,EAAQ49D,EAAgB,QAAQt9D,CAAK,EACvCN,IAAU,KACVy9D,EAAc,KAAKn9D,CAAK,EACxBs9D,EAAgB,OAAO59D,EAAO,CAAC,EAC/B09D,GAAmB,OAAOp9D,EAAM,QAAQ,GAE5C,QACpB,CACA,CAEY,GAAI,EAAAjC,EAAQ,aAAe,QACvBA,EAAQ,aAAe,QACvB,CAAC,GAAGo/D,EAAe,GAAGK,CAAW,EAC5B,IAAKlR,GAAQA,EAAI,OAAO,OAAO,EAC/B,SAASvuD,EAAQ,OAAO,GAGjC,MAAM,MAAM,4DAA4DA,EAAQ,OAAO,kBAAkBA,EAAQ,UAAU,kBAAkBA,EAAQ,UAAU,GAAG,CAC9K,CAGI,UAAW6/D,KAAKN,EACZ,GAAI,CAAAM,EAAE,QAGFA,EAAE,UAAYA,EAAE,QAAUZ,EACdA,EAAaY,EAAE,OACjB,MACNT,EAAc,KAAKS,CAAC,EACpBR,GAAmB,OAAOQ,EAAE,QAAQ,IAIxCT,EAAc,KAAKS,CAAC,EACpBR,GAAmB,OAAOQ,EAAE,QAAQ,GAGpCb,GAAkBK,EAAkBL,GACpC,MAGR,MAAMc,EAAcV,GACT,CAAC,GAAGF,EAAa,GAAGE,CAAa,EAAE,OAAO,CAAC7Q,EAAK5sD,EAAOuD,IAAUA,EAAM,UAAW66D,GAAUA,EAAM,OAASxR,EAAI,MAAQwR,EAAM,OAASxR,EAAI,IAAI,IAAM5sD,CAAK,EAOpK,GAJI07D,GAAaA,GAAalB,GAAc,QAIxC,OAAO6C,EAAmB,IAC1B,OAAOc,EAAWV,CAAa,EAE9B,GAAIC,EAAkBL,EAAgB,CACvC,MAAM/pC,EAAI,MAAM,gCAAgC+pC,CAAc,qBAAqBK,CAAe,qBAAqB,EACvH,MAAApqC,EAAE,KAAU,CACR,SAAU+pC,EACV,UAAWK,CACd,EACKpqC,CACd,KAEQ,QAAO6qC,EAAWV,CAAa,CAEvC,CAEO,eAAeY,GAAmB,CAAE,MAAAjL,EAAO,aAAAkL,EAAc,yBAAAC,EAA0B,cAAAvC,CAAa,EAAK,CAGxG,MAAMwC,EAAiBpL,EAAM,OAAO,CAACqL,EAAMC,IAASD,GAC/CC,EAAK,MACA,IAGE,KAAK,MAAM,GAAKA,EAAK,MAAM,YAAY,QAAU,GAAK,CAAC,GACtDA,EAAK,MAAM,OAAS,EAAI,GAC3B,KAAiB,CAAC,EACtBC,EAAcC,GAAgB,CAChC,GAAIA,EAAY,eAAe,MAAM,EACjC,MAAO,IAEN,GAAIA,EAAY,eAAe,SAAS,EAAG,CAC5C,MAAMC,EAAeD,EACrB,MAAQ,IAGJ,KAAK,MAAM,GAAKC,EAAa,YAAY,QAAU,GAAK,CAAC,GACxDA,EAAa,OAAS,EAAI,EAC3C,SACiBD,EAAY,eAAe,QAAQ,EACxC,MAAO,GAAIA,EAAY,OAAO,OAElC,MAAO,EACV,EACKE,EAAkBR,EAAa,OAAO,CAACG,EAAMC,IAASD,EAAOE,EAAWD,CAAI,EAAG,CAAC,GACjF1C,EAAgB,EAAI,IACzB,OAAO,KAAK,MAAMwC,EAAiBM,EAAkB,IAAMP,CAAwB,CACvF,CAEO,eAAeQ,GAAa,CAAE,MAAA3L,EAAO,aAAAkL,EAAc,WAAApuD,EAAY,cAAA6rD,EAAe,yBAAAwC,EAA0B,UAAA7C,EAAW,cAAAM,GAAkB,CAExI,GAAI5I,EAAO,CAEP,KAAM,CAAE,mBAAoB4L,CAAkB,EAAG,MAAMC,GAAwB,CAC3E,OAAQ7L,EACR,QAASkL,EACT,WAAYpuD,EACZ,cAAA6rD,EACA,IAAK,EACL,cAAeC,GAAiB,GAChC,UAAAN,EACA,cAAe,EAC3B,CAAS,EACD,OAAO,KAAK,KAAKsD,EAAiB,OAAST,EAA2B,CAAC,CAC/E,KAEQ,OAAM,MAAM,qEAAqE,CAEzF,CAEO,eAAeU,GAAwB,CAAE,OAAAlkD,EAAQ,QAAAkC,EAAS,WAAA6+C,EAAY,cAAAC,EAAe,IAAAnB,EAAM,EAAG,cAAAoB,EAAgB,GAAO,UAAAN,EAAYlB,GAAc,OAAQ,cAAAyB,EAAgB,GAAI,cAAAiD,EAAgB,IAAU,CACxM,KAAM,CAAE,YAAAvpC,EAAa,cAAAL,CAAe,EAAG,MAAMumC,GAA2B,CACpE,OAAA9gD,EACA,QAAAkC,EACA,WAAA6+C,EACA,cAAAC,EACA,IAAAnB,EACA,cAAAoB,EACA,UAAAN,EACA,cAAAO,CACR,CAAK,EACD,OAAIiD,IAAkB,IAClBvpC,EAAY,OAAO,QAASr1B,GAAWA,EAAM,kBAAoB,WAAW,KAAK,CAAE,CAAA,CAAE,EAElF,CAAE,mBAAoBqd,GAAkBgY,CAAW,EAAG,cAAAL,CAAe,CAChF,CACO,eAAe6pC,GAAwBxpC,EAAaL,EAAewmC,EAAY,CAC9E,OAAOnmC,GAAgB,WACvBA,EAAczyB,EAASyyB,CAAW,GAEtC,MAAMj1B,EAAU6c,GAAkBoY,CAAW,EAC7C,GAAI,OAAOj1B,GAAY,SACnB,MAAMA,EAEV,MAAM/C,EAAWsoD,GAAqBhM,EAAwB,EAC9D,GAAI,OAAOt8C,GAAa,SACpB,MAAM,IAAI,MAAM,4BAA4B,EAEhD,MAAMu+D,EAAWr+D,GAA4BF,CAAQ,EAC/CyhE,EAAsB,CAAE,GAAG1+D,CAAS,EAC1C,SAAW,CAACV,EAAOM,CAAK,IAAKI,EAAQ,OAAO,UAAW,CACnD,MAAM60B,EAAeD,EAAct1B,CAAK,EACxCo/D,EAAoB,OAAOp/D,CAAK,EAAI,CAChC,GAAGM,EACH,kBAAmB,CACf,SAAA47D,EACA,KAAM,CACF,KAAM,CAAE,YAAa,CAAE,IAAKJ,CAAU,CAAI,CAC7C,EACD,cAAevmC,EAAa,cAC5B,OAAQ,SACR,MAAOA,EAAa,KACvB,CACJ,CACT,CACI,MAAM91B,EAASgnD,GAAoB2Y,CAAmB,EACtD,GAAI,CAAC3/D,EAAO,QACR,MAAMA,EAAO,OAEjB,OAAOke,GAAkBle,EAAO,WAAW,CAC/C,CC9YO,eAAe4/D,GAAWjM,EAAOkM,EAAQ,CAC5C,GAAIlM,EAAM,KAAMxG,GAAQA,EAAI,WAAa,CAAC,EAAG,CACzC,MAAM2S,EAAe,MAAMD,EAAO,gBAAgBA,EAAO,QAAQ,EAC3DE,EAASpM,EAAM,OAAQxG,GAAQ,CAAC2S,EAAa,KAAM5tC,GAASi7B,EAAI,OAASj7B,EAAK,MAAQi7B,EAAI,OAASj7B,EAAK,IAAI,CAAC,EACnH,GAAI6tC,EAAO,OAAQ,CACf,MAAMC,EAAeD,EAChB,IAAK5S,GAAQ,GAAGA,EAAI,IAAI,IAAIA,EAAI,IAAI,EAAE,EACtC,KAAK,IAAI,EACd,MAAM,MAAM,UAAU6S,CAAY,uBAAuB,CACrE,CACQrM,EAAQA,EAAM,IAAKxG,GAAQ2S,EAAa,KAAM5tC,GAASi7B,EAAI,OAASj7B,EAAK,MAAQi7B,EAAI,OAASj7B,EAAK,IAAI,CAAC,CAChH,CACI,OAAOyhC,CACX,CCLO,MAAMsM,EAAK,CAMd,YAAY98B,EAAU2rB,GAAY,QAAS,CACvC,KAAK,QAAU3rB,EACf,KAAK,SAAW2yB,GAAmB3yB,CAAO,CAClD,CACI,MAAM,mBAAmBioB,EAAmB,CACxC,OAAOD,GAAmBC,CAAiB,CACnD,CACI,aAAa,mBAAmBA,EAAmB,CAC/C,OAAOD,GAAmBC,CAAiB,CACnD,CACI,MAAM,kBAAkB8U,EAAsBjT,EAAkB,GAAO,CACnE,IAAIkT,EACA9U,EACA2B,EAEAkT,EAAqB,OAAS,IAC9BlT,EAAS,MAAM,KAAK,mBAAmBkT,CAAoB,EAC3D7U,EAAiB5nD,EAASy8D,CAAoB,EAC9CC,EAAiBD,IAIjBlT,EAASkT,EACTC,EAAiB,MAAM,KAAK,SAAS,kBAAkBnT,CAAM,EAC7D3B,EAAiB5nD,EAAS08D,CAAc,GAE5C,MAAMngE,EAASogE,GAAyB/U,CAAc,EACtD,GAAI,OAAOrrD,GAAW,SAClB,MAAM,MAAMA,CAAM,EAEtB,MAAMk2B,EAAc,KAAK,4BAA4Bl2B,EAAQgtD,EAAQmT,CAAc,EACnF,GAAIlT,EAAiB,CAEjB,MAAMC,EAAS,CAAC,GAAG,IAAI,IAAIh3B,EAAY,IAAI,IAAKi3B,GAAQA,EAAI,IAAI,CAAC,CAAC,EAC5DC,EAAe,MAAM,QAAQ,IAAIF,EAAO,IAAKG,GAAS,KAAK,kBAAkBA,EAAM,EAAK,CAAC,CAAC,EAC1FC,EAAiB,IAAI,IAC3BF,EAAa,QAASD,GAAQG,EAAe,IAAIH,EAAI,KAAMA,CAAG,CAAC,EAC/Dj3B,EAAY,IAAI,QAASr1B,GAAU,CAC/B,MAAMsc,EAASmwC,EACV,IAAIzsD,EAAM,IAAI,EACd,KAAK,KAAMssD,GAAQA,EAAI,IAAMtsD,EAAM,IAAI,EAC5CA,EAAM,QAAUsc,EAAO,aAAa,UAAU,CAAC,EAC/Ctc,EAAM,MAAQsc,EAAO,MACrBtc,EAAM,UAAYsc,EAAO,SACzC,CAAa,CACb,CACQ,OAAO+Y,CACf,CACI,4BAA4BA,EAAa82B,EAAQO,EAAO,CACpD,IAAIvtD,EAAS,CAAE,EACf,OAAAA,EAAO,IAAMk2B,EAAY,OAAO,IAAKr1B,IAC1B,CACH,UAAW,CACP,IAAK8C,EAAS9C,EAAM,iBAAiB,CACxC,EACD,SAAUA,EAAM,eAChB,KAAM8C,EAAS9C,EAAM,uBAAuB,EAC5C,KAAMA,EAAM,aACf,EACJ,EACDb,EAAO,KAAOk2B,EAAY,QAAQ,IAAI,CAAC/Y,EAAQ5c,KACpC,CACH,EAAGA,EACH,aAAc,CACV,UAAW,CACPwY,GAAiBoE,EAAO,eAAe,EACjCu9B,GAA4B,CAC1B,UAAWvhC,GAAiCgE,EAAO,eAAe,EAAE,QACpE,OAAQ8xC,GAAqB,KAAK,OAAO,CAC5C,CAAA,EACClvD,GAAc8Z,GAA6B,CACzC,SAAUsD,EAAO,gBACjB,OAAQ8xC,GAAqB,KAAK,OAAO,CAC5C,CAAA,CAAC,EAAE,OACX,EACD,IAAKtrD,EAASwZ,EAAO,eAAe,CACvC,EACD,MAAO,OAAOA,EAAO,aAAa,EAAI0xC,GAAS,QAClD,EACJ,EACD7uD,EAAO,SAAWk2B,EAAY,SAC9Bl2B,EAAO,QAAUk2B,EAAY,QAC7Bl2B,EAAO,KAAOgtD,EACdhtD,EAAO,IAAMutD,EACbvtD,EAAO,KAAOgtD,EACdhtD,EAAO,KAAOutD,EAAM,OAAS,EACtBvtD,CACf,CACI,aAAa,kBAAkBkgE,EAAsBjT,EAAkB,GAAO9pB,EAAS,CACnF,OAAO,IAAI,KAAKA,CAAO,EAAE,kBAAkB+8B,EAAsBjT,CAAe,CACxF,CACA,WCtFA,MAAMoT,GAAwB,mEAKvB,MAAMC,EAAW,CACpB,IAAI,eAAgB,CACT,OAAArR,GAAqB,KAAK,OAAO,CAAA,CAG5C,IAAI,MAAO,CACH,OAAC,KAAK,QACN,KAAK,MAAQ,IAAIgR,GAAK,KAAK,OAAO,GAE/B,KAAK,KAAA,CAGhB,WAAW,MAAO,CACP,OAAA,IAAI,OAAO,IAAA,CAGtB,SAAU,CACC,MAAA,CACH,SAAU,KAAK,SACf,UAAW,KAAK,UAChB,UAAW,KAAK,UAChB,KAAM,KAAK,KACX,QAAS,KAAK,QACd,cAAet8D,EAAS,KAAK,aAAa,EAC1C,SAAU,KAAK,SAAS,EACxB,cAAe,KAAK,WAAW,CACnC,CAAA,CAEJ,aAAa7D,EAAQ,GAAM,CACvB,YAAK,cAAgBA,EACd,IAAA,CAGX,mBAEAqjC,EAAU2rB,GAAY,QAAS,CAC3B,OAAOgH,GAAmB3yB,CAAO,CAAA,CAWrC,mBAAoB,CAChB,OAAO,KAAK,QAAA,CAOhB,wBAAyB,CACrB,OAAO,KAAK,SAAA,CAUhB,YAAYA,EAAU2rB,GAAY,QAAS,CACvC,KAAK,cAAgB,GACrB,KAAK,KAAO,GACZ,KAAK,QAAU3rB,EACf,KAAK,WAAa23B,EAAe,MACjC,KAAK,SAAW,KAAK,mBAAmB,KAAK,OAAO,EACpD,KAAK,UAAY,KAAK,UAAYhM,GAAY,OAAkB,CAYpE,aAAa,UAAUl6C,EAAS,CAC5B,OAAO,IAAI,KAAA,EAAO,UAAUA,CAAO,CAAA,CAcvC,MAAM,MAAM7V,EAAMP,EAAQ+hE,EAAW,GAAO,CACpC,GAAAxhE,EAAK,SAAW,EAChB,MAAM,MAAM,0CAA0C,EAE1DyhE,GAAoB,IAAI,EACxB,KAAK,KAAOzhE,EACZP,EAASA,GAAkBywD,GAAqB,KAAK,OAAO,EACtD,MAAAnwD,EAAK2hE,GAAmBjiE,CAAM,EAEpC,GAAIM,EAAI,CACJ,MAAMA,EAAG,KAAK,EACd,MAAM4hE,EAAoB,MAAM5hE,EAAG,UAAUC,CAAI,EACjD,GAAI2hE,EAAmB,CAEnB,GADA,MAAM5hE,EAAG,MAAM,EACXyhE,EACA,MAAM,MAAM,0BAA0BxhE,CAAI,sBAAsBP,CAAM,EAAE,EAE5E,MAAMmiE,EAAkB,MAAM,KAAK,OAAOD,EAAkB,MAAM,EAClE,OAAAC,EAAgB,KAAOD,EAAkB,KAClCC,CAAA,KAEN,CACK,MAAAd,EAAS,MAAM,KAAK,SAAS,EACnC,aAAM/gE,EAAG,UAAU+gE,EAAO,KAAMA,EAAO,YAAY,EACnD,MAAM/gE,EAAG,MAAM,EACR+gE,CAAA,CACX,KAGA,OAAM,MAAM,oEAAoE,CACpF,CAcJ,MAAM,aAAa9gE,EAAMC,EAAUR,EAAQ,CACnC,GAAAO,EAAK,SAAW,EAChB,MAAM,MAAM,0CAA0C,EAE1DyhE,GAAoB,IAAI,EACxB,KAAK,KAAOzhE,EACZP,EAASA,GAAkBywD,GAAqB,KAAK,OAAO,EACxD,IAAAnwD,EAAK2hE,GAAmBjiE,CAAM,EAClC,GAAIM,EAAI,CACJ,MAAMA,EAAG,KAAK,EACd,IAAI4hE,EAAoB,MAAM5hE,EAAG,UAAUC,CAAI,EACzC,aAAA,KAAK,OAAOC,CAAQ,EACtB0hE,EACM,MAAA5hE,EAAG,aAAaC,EAAMC,CAAQ,EAG9B,MAAAF,EAAG,UAAUC,EAAMC,CAAQ,EAErC,MAAMF,EAAG,MAAM,EACR,IAAA,KAGP,OAAM,MAAM,oEAAoE,CACpF,CAUJ,MAAM,YAAYC,EAAMP,EAAQ,CACxB,GAAAO,EAAK,SAAW,EAChB,MAAM,MAAM,0CAA0C,EAE1DyhE,GAAoB,IAAI,EACxBhiE,EAASA,GAAkBywD,GAAqB,KAAK,OAAO,EACxD,IAAAnwD,EAAK2hE,GAAmBjiE,CAAM,EAClC,GAAIM,EAAI,CACJ,MAAMA,EAAG,KAAK,EACd,IAAI4hE,EAAoB,MAAM5hE,EAAG,UAAUC,CAAI,EAC/C,aAAMD,EAAG,MAAM,EACR4hE,IAAsB,MAAA,KAG7B,OAAM,MAAM,oEAAoE,CACpF,CAEJ,MAAM,UAAW,CACN,OAAA,IAAA,CAQX,YAAa,CACF,MAAA,GAAG,KAAK,UAAU,IAAI,KAAK,OAAO,IAAI,KAAK,kBAAA,CAAmB,EAAA,CAMzE,UAAW,CACA,MAAA,GAAG,KAAK,UAAU,IAAI,KAAK,OAAO,IAAI,KAAK,kBAAA,CAAmB,EAAA,CASzE,YAAY1O,EAAM,CAMP,MALgB,CACnB,QAAS,mDACT,QAAS,6CACT,QAAS,EACb,EACsB,KAAK,OAAO,EAAIA,CAAA,CAG1C,iBAAiB9d,EAAM,GAAO,CAC1B,GAAI,KAAK,cACL,OAAOA,EAAMvwC,EAAS,KAAK,aAAa,EAAI,KAAK,cAGjD,MAAM,MAAM,0JAA0J,CAC1K,CAYJ,aAAa,aAAaiR,EAAS,CACzB,MAAA1O,EAASmtD,GAAaz+C,CAAO,EAC7BgsD,EAAc5R,GAAiB9oD,CAAM,EAC3C,OAAO,IAAI,KAAK06D,CAAW,EAAE,UAAUhsD,CAAO,CAAA,CAYlD,aAAa,cAAcA,EAAS,CAC1B,MAAA1O,EAASmtD,GAAaz+C,CAAO,EAC7BgsD,EAAc5R,GAAiB9oD,CAAM,EAC3C,OAAO,IAAI,KAAK06D,CAAW,EAAE,UAAUhsD,CAAO,CAAA,CAWlD,aAAa,MAAM7V,EAAMP,EAAQkrD,EAAO,CACpC,OAAO,IAAI,KAAK,EAAE,MAAM3qD,EAAMP,EAAQkrD,CAAK,CAAA,CAc/C,aAAa,aAAa3qD,EAAMC,EAAUR,EAAQ,CAC9C,OAAO,IAAI,KAAK,EAAE,aAAaO,EAAMC,EAAUR,CAAM,CAAA,CAUzD,aAAa,YAAYO,EAAMP,EAAQ,CACnC,OAAO,IAAI,KAAO,EAAA,YAAYO,EAAMP,CAAM,CAAA,CAE9C,OAAOQ,EAAU,CACP,KAAA,CAAC6hE,EAAYC,EAAcC,EAAMC,CAAI,EAAIhiE,EAAS,MAAM,GAAG,EAC7D,GAAA6hE,IAAe/F,EAAe,MAC9B,MAAM,MAAM,sBAAsB+F,CAAU,uBAAuB/F,EAAe,KAAK,SAAS,EAEhG,GAAA,KAAK,SAAWgG,EAChB,MAAM,MAAM,kBAAkBA,CAAY,SAAS,KAAK,OAAO,SAAS,EAE5E,OAAIE,EACO,KAAK,UAAU,GAAGD,CAAI,IAAIC,CAAI,EAAE,EAEpC,KAAK,UAAUD,CAAI,CAAA,CAG9B,MAAM,UAAUnsD,EAAS,CACrB,KAAK,WAAakmD,EAAe,MAC3B,MAAAmG,EAAoBrsD,EAAQ,MAAM,GAAG,EACvC,IAAAssD,EACAC,EACA,GAAAF,EAAkB,SAAW,EAC7BE,EAAcF,EAAkB,MAAM,EACtCC,EAAgB7N,GAAa8N,CAAW,UAGxCD,EAAgBD,EAAkB,MAAM,EACxCE,EAAcF,EAAkB,MAAM,EAClCC,KAAiBlS,IACbA,GAAiBkS,CAAa,IAAM,KAAK,QACzC,MAAM,MAAM,KAAKA,CAAa,qCAAqC,KAAK,OAAO,SAAS,EAIpG,MAAME,EAAkB,GAAGF,CAAa,IAAIC,CAAW,GAEjDE,EAAc9oD,GAAkB6oD,CAAe,EACrD,GAAI,OAAOC,GAAgB,SACjB,MAAAA,EACV,KAAK,cAAgBA,EAAY,QACjC,IAAIC,EAAoBD,EAAY,KACpC,OAAIC,GAAqBnrD,EAAgB,kBACrCmrD,EAAoBnrD,EAAgB,OACpCmrD,GAAqBnrD,EAAgB,iBACrCmrD,EAAoBnrD,EAAgB,MACpCmrD,GAAqBnrD,EAAgB,QACrC,KAAK,cAAgBkrD,EAAY,SACrC,KAAK,SAAWtpD,GAAkB,CAC9B,OAAQspD,EAAY,OACpB,KAAMC,EACN,QAASD,EAAY,OACxB,CAAA,EAAE,QACH,KAAK,UAAY1Q,GAAgB0Q,EAAY,QAAS,KAAK,aAAa,EACjE,IAAA,CAOX,MAAM,UAAW,CACT,GAAA,CAAC,KAAK,SACN,MAAM,MAAM,2CAA2C,EAE3D,OAAO,MAAM,KAAK,gBAAgB,KAAK,QAAQ,CAAA,CAGnD,MAAM,WAAWlR,EAAS+D,EAAa,GAAM,CACzC,GAAI/D,EAAS,CACH,MAAAgB,EAAOjB,GAAaC,CAAO,EACjC,OAAO,MAAMiE,GAAmB,MAAM,KAAK,uBAAuB,EAAGjD,EAAM+C,CAAU,CAAA,KAGrF,QAAO,MAAMD,GAA2B,MAAM,KAAK,uBAAA,EAA0BC,CAAU,CAC3F,CAGJ,MAAM,qBAAsB,CACxB,MAAMP,GAAS,MAAM,KAAK,gBAAgB,KAAK,QAAQ,GAAG,OAAQxG,GAAQA,EAAI,QAAU,MAAS,EACjG,OAAOuG,GAAaC,CAAK,CAAA,CAG7B,MAAM,wBAAyB,CAS3B,OAAO,KAAK,oBAAoB,CAAA,CAEpC,MAAM,gBAAgB/+C,EAAS,CAI3B,OAHKA,IACDA,EAAU,KAAK,UAEf,KAAK,eACY,MAAM,KAAK,SAAS,SAASA,CAAO,GACrC,OAAQ2sD,GAAYA,EAAQ,SAAW/V,EAAmB,EAGnE,MAAM,KAAK,SAAS,SAAS52C,CAAO,CAC/C,CAGJ,MAAM,aAAai5C,EAAU,CACzB,OAAO,KAAK,SAAS,aAAa,KAAK,oBAAqBA,CAAQ,CAAA,CAGxE,MAAM,yBAAyBA,EAAU,CACrC,OAAO,KAAK,SAAS,yBAAyB,KAAK,oBAAqBA,CAAQ,CAAA,CAGpF,MAAM,8BAA8BA,EAAU,CAC1C,OAAO,KAAK,SAAS,8BAA8B,KAAK,oBAAqBA,CAAQ,CAAA,CAIzF,MAAM,aAAaA,EAAU,CACzB,OAAO,KAAK,SAAS,mBAAmB,KAAK,kBAAkB,EAAG,MAAO2T,GAAY,CAC3E,MAAAvP,EAAW,MAAM,KAAK,WAAW,EACvCpE,EAASoE,CAAO,CAAA,CACnB,CAAA,CAOL,MAAM,gBAAgBpE,EAAU4T,EAA0B,IAAO,CAC7D,IAAIC,EAAW,GACf,MAAMC,EAAY,SAAY,CAC1B,MAAM1P,EAAW,MAAM,KAAK,WAAW,OAAW,EAAK,EACnDyP,IAAazP,EAAQ,MACrByP,EAAWzP,EAAQ,IACnBpE,EAASoE,CAAO,EAExB,EACM2P,EAAc,MAAM,KAAK,SAAS,mBAAmB,KAAK,oBAAqBD,CAAS,EACxFE,EAAW,YAAYF,EAAWF,CAAuB,EAC/D,MAAO,UAAY,CACf,MAAMG,IAAc,EACpB,cAAcC,CAAQ,CAC1B,CAAA,CAIJ,MAAM,eAAe/hE,EAAOqwD,EAAUjB,GAAS,IAAK,CACzC,OAAA,IAAI,QAAQ,MAAOxwD,GAAY,CAC9B,IAAAkjE,EACJA,EAAc,MAAM,KAAK,aAAa,MAAO3P,GAAY,CACrD,MAAMoI,EAAiB,MAAMjK,GAAgBtwD,EAAOqwD,CAAO,EACvD8B,EAAQ,KAAOoI,IACf,MAAMuH,IAAc,EACpBljE,EAAQuzD,CAAO,EACnB,CACH,CAAA,CACJ,CAAA,CAIL,MAAM,kBAAkBX,EAASzD,EAAU,CACvC,IAAIiU,EACG,OAAA,MAAM,KAAK,SAAS,mBAAmB,KAAK,kBAAkB,EAAG,MAAON,GAAY,CACvF,MAAMvP,EAAU,MAAM,KAAK,gBAAgBX,CAAO,EAC9CwQ,GAAY7P,GACZpE,EAASoE,CAAO,EAET6P,EAAA7P,CAAA,CACd,CAAA,CAIL,MAAM,oBAAoBX,EAASD,EAAQ,CAChC,OAAA,IAAI,QAAQ,MAAO3yD,GAAY,CAC9B,IAAAkjE,EACJA,EAAc,MAAM,KAAK,kBAAkBtQ,EAAS,MAAOW,GAAY,CAC/DA,GAAWZ,IACX,MAAMuQ,IAAc,EACpBljE,EAAQuzD,CAAO,EACnB,CACH,CAAA,CACJ,CAAA,CAEL,MAAM,aAAaX,EAAS,CACjB,OAAAqF,GAAK,aAAarF,CAAO,CAAA,CAEpC,MAAM,oBAAoB/oB,EAAS,CAC/B,YAAa,EACb,QAAS,CAAA,CAAC,EACX,CACC,GAAI,CAACA,EAAO,YAAcA,EAAO,SAAS,gBAAkB,GACxD,MAAM,MAAM,iDAAiD,EAE7D,GAAA,CAAC,KAAK,SACN,MAAM,MAAM,sCAAsC,EAElDA,EAAO,SAAWA,EAAO,QAAQ,eACjC,KAAK,cAAgB,IAErB,IAAA0zB,EACA1zB,EAAO,SAAWA,EAAO,QAAQ,UACjC0zB,EAAY1zB,EAAO,QAAQ,UAG3B0zB,EAAYlB,GAAc,OAG1B,IAAApH,EACAprB,EAAO,SAAWA,EAAO,QAAQ,QACjCorB,EAAQ,MAAMiM,GAAWr3B,EAAO,QAAQ,QAAQ,IAAK+pB,GAAW,OAAOA,GAAW,SAAWD,GAAWC,CAAM,EAAIA,CAAM,EAAG,IAAI,EAGtHqB,GAAA,MAAM,KAAK,gBAAgB,KAAK,QAAQ,GAAG,OAAQzhC,GAAS,CAACA,EAAK,KAAK,EAGpF,MAAM2rC,EAAa,MAAM,KAAK,SAAS,eAAe,EAEhDsB,EAAc,IAAIjO,GAAY,CAChC,SAAU,KAAK,SACf,MAAO,IACP,KAAM,KAAA,CACT,EACK2N,EAAe,MAAMt2B,EAAO,WAAW,EACxC,KAAK,CAAC,EACN,IAAI,IAAM42B,CAAW,EACpB4C,EAAe,MAAMpE,GAAiBhK,EAAO,OAAWkK,EAAY5B,EAAW4C,CAAY,EAC3FC,EAA2B,MAAMlE,GAAiB,KAAK,QAAQ,EAC/DO,EAAM,MAAMyD,GAAmB,CACjC,MAAOmD,EACP,aAAAlD,EACA,WAAYt2B,EAAO,YAAc9kC,EAAS48D,EAAqB,EAC/D,cAAe,KAAK,SACpB,yBAAAvB,CAEJ,CAAC,EAED,IAAI9+D,EADoB0zD,GAAaqO,CAAY,EAClB5G,EAC/B,OAAIn7D,EAAS,IACAA,EAAA,GAEN,CAAE,MAAOA,EAAQ,MAAO+hE,CAAa,CAAA,CAEhD,MAAM,mBAAmBx5B,EAAS,CAC9B,YAAa,EACb,QAAS,CAAA,CAAC,EACX,CACC,KAAM,CAAE,MAAOvoC,CAAA,EAAW,MAAM,KAAK,oBAAoBuoC,CAAM,EACxD,OAAA,MAAM0rB,GAA2Bj0D,CAAM,CAAA,CAUlD,MAAM,KAAK2yD,EAAUnK,EAAS,CACpB,KAAA,CAAE,mBAAAwZ,EAAoB,SAAAC,EAAU,cAAApsC,CAAc,EAAI,MAAM,KAAK,kBAAkB88B,EAAU,OAAWnK,CAAO,EAC3GoK,EAAO,IAAIb,GAAa,EAAE,EAE5B,GADJa,EAAK,SAAWqP,EACZzZ,GAAS,gBAAkB,GAAM,CAC3B,MAAAwJ,EAAO,MAAM,KAAK,kBAAkBgQ,EAAoBxZ,GAAS,8BAAgC,QACnGA,GAAS,8BAAgC,EAAI,EACjDoK,EAAK,KAAOZ,EACZY,EAAK,YAAc,KAAK,YAAYA,EAAK,IAAI,GACzCpK,GAAS,eAAiB,QAC1BA,GAAS,eAAiB,MACrBoK,EAAA,QAAW,MAAM,KAAK,WAAW,EAC1C,MAGKA,EAAA,oBAAsBjvD,EAASq+D,CAAkB,EACtDpP,EAAK,cAAgB/8B,EAElB,OAAA+8B,CAAA,CAUX,MAAM,QAAQhG,EAAUpE,EAAS,CAC7B,OAAO,MAAM,KAAK,WAAWoE,EAAUpE,CAAO,CAAA,CAUlD,MAAM,WAAWoE,EAAUpE,EAAS/3C,EAAY,CAC5C,KAAM,CAAE,MAAOyxD,EAAoB,MAAAvO,GAAU,MAAM,KAAK,oBAAoB,CACxE,YAAa,EACb,QAAAnL,EACA,WAAA/3C,CAAA,CACH,EACI+3C,IACDA,EAAU,CAAC,GAEfA,EAAQ,QAAUmL,EACZ,MAAAwL,EAAc,IAAIjO,GAAY,CAChC,SAAAtE,EACA,MAAOsV,EACP,KAAM,KAAA,CACT,EACK,CAAE,mBAAAF,EAAoB,SAAAC,EAAU,cAAApsC,CAAkB,EAAA,MAAM,KAAK,kBAAkB,CAACspC,CAAW,EAAG,GAAM3W,EAAS/3C,CAAU,EACvHmiD,EAAO,IAAIb,GAAa,EAAE,EAE5B,GADJa,EAAK,SAAWqP,EACZzZ,GAAS,gBAAkB,GAAM,CAC3B,MAAAwJ,EAAO,MAAM,KAAK,kBAAkBgQ,EAAoBxZ,GAAS,8BAAgC,QACnGA,GAAS,8BAAgC,EAAI,EACjDoK,EAAK,KAAOZ,EACZY,EAAK,YAAc,KAAK,YAAYA,EAAK,IAAI,GACzCpK,GAAS,eAAiB,QAC1BA,GAAS,eAAiB,MACrBoK,EAAA,QAAW,MAAM,KAAK,WAAW,EAC1C,MAGKA,EAAA,oBAAsBjvD,EAASq+D,CAAkB,EACtDpP,EAAK,cAAgB/8B,EAElB,OAAA+8B,CAAA,CAQX,MAAM,kBAAkBD,EAAU4J,EAAgB,GAAO/T,EAAS/3C,EAAY,CACtE,IAAAouD,EAAenM,GAAoBC,CAAQ,EAC/C,GAAI,CAACliD,GAAc+3C,GAAS,gBAAkB,GACpC,MAAA,IAAI,MAAM,qBAAqB,EAErCA,GAAWA,EAAQ,eACnB,KAAK,cAAgB,IAErB,IAAAyT,EACAzT,GAAWA,EAAQ,UACnByT,EAAYzT,EAAQ,UAGpByT,EAAYlB,GAAc,OAE1B,IAAAyB,EACAhU,GAAWA,EAAQ,cACnBgU,EAAgBhU,EAAQ,cAGxBgU,EAAgB,KAAK,SAEzB,IAAI2F,EAAuB,GACvB3Z,GAAWA,EAAQ,uBAAyB,KACrB2Z,EAAA,IAGvB,IAAAxO,EACAnL,GAAWA,EAAQ,QACnBmL,EAAQ,MAAMiM,GAAWpX,EAAQ,QAAQ,IAAK8J,GAAW,OAAOA,GAAW,SAAWD,GAAWC,CAAM,EAAIA,CAAM,EAAG,IAAI,EAGxHqB,EAAQ,MAAM,KAAK,gBAAgB,KAAK,QAAQ,EAGhDwO,GACA,CAACtD,EAAa,KAAM1R,GAAQA,aAAeiE,EAAgB,IAC3DuC,EAAQA,EAAM,OAAQxG,GAAQ,CAACA,EAAI,KAAK,IAEd,CAAC7xC,EAAQkC,IAAY,CAG/C,GAAI,CAAC2kD,EACD,OAEJ,MAAMC,EAAiB9mD,EAAO,OAAQ6xC,GAAQA,EAAI,KAAK,EACjDkV,EAAkB7kD,EAAQ,OAAQ2vC,GAAQA,aAAeiE,EAAgB,EACzE6Q,EAAWI,EACZ,IAAKlV,GAAQA,EAAI,OAAO,EACxB,OAAO,CAACA,EAAKmV,EAAKC,IAAQA,EAAI,QAAQpV,CAAG,IAAMmV,CAAG,EACvD,QAAShR,KAAW2Q,EAAU,CACpB,MAAA5D,EAAc+D,EAAe,OAAQjV,GAAQA,EAAI,OAAO,UAAYmE,CAAO,EAC3EkR,EAAiBnE,EAAY,OAAO,CAACW,EAAMyD,IAAQzD,EAAOyD,EAAI,MAAM,OAAQ,EAAE,EAC9EC,EAAeL,EAAgB,OAAQlV,GAAQA,EAAI,UAAYmE,CAAO,EACtEqR,EAAkBD,EAAa,OAAO,CAAC1D,EAAMyD,IAAQzD,EAAOyD,EAAI,OAAQ,EAAE,EAC1EG,EAAOJ,EAAiBG,EAC9B,GAAIC,EAAO,EACD,MAAA,IAAI,MAAM,iCAAiC,EAErD,GAAIA,GAAQ,EAAG,CACX,IAAItrC,EAAY,GACZukC,EAAS,GACb,MAAMiC,EAAc,CAAC,EACV,UAAAlhD,KAASyhD,EAAY,OAAQlR,GAAQA,EAAI,OAAO,MAAM,EAC7D2Q,EAAY,KAAKlhD,CAAK,EACtB0a,GAAa1a,EAAM,MAAM,OACrB0a,GAAaqrC,IACb9G,EAASvkC,EAAYqrC,GAIzB7E,EAAY,SACPtV,IACDA,EAAU,CAAC,GAEfA,EAAQ,YAAc,CAClB,GAAIA,EAAQ,aAAe,CAAC,EAC5B,GAAGsV,CAAA,EACL,OAAO,CAAC3Q,EAAK5sD,EAAOuD,IAAUA,EAAM,UAAW66D,IAAUA,GAAM,OAASxR,EAAI,MAAQwR,GAAM,OAASxR,EAAI,IAAI,IAAM5sD,CAAK,GAExHs7D,EAAS,GACDr+C,EAAA,KAAK,IAAI4zC,GAAiB,CAC9B,SAAUN,GAAY0L,CAAa,GAAK,KAAK,UAC7C,OAAQX,EACR,QAAAvK,EACA,WAAYoR,EAAa,CAAC,EAAE,WAC5B,WAAYA,EAAa,CAAC,EAAE,WAC5B,MAAOA,EAAa,CAAC,EAAE,KAAA,CAC1B,CAAC,CACN,CACJ,CAER,GACsB/O,EAAOkL,CAAY,EACzC,MAAMhB,EAAa,MAAM,KAAK,SAAS,eAAe,EAChDgF,EAAc,MAAM3G,GAAsB2C,CAAY,EACxD,GAAAlL,EAAM,SAAW,EACjB,MAAM,MAAM,+BAA+B,EAE3C,GAAA,OAAOkP,GAAgB,SACvB,MAAM,MAAM,qDAAqD,EAErE,MAAM/D,EAA2B,MAAMlE,GAAiB,KAAK,QAAQ,EAC/DkI,EAAc,MAAMlE,GAAmB,CACzC,MAAAjL,EACA,aAAAkL,EACA,WAAYpuD,GAAchN,EAAS48D,EAAqB,EACxD,cAAe,KAAK,SACpB,yBAAAvB,CAEJ,CAAC,EACKiD,EAAe,MAAMpE,GAAiBhK,EAAO,OAAOkP,CAAW,EAAI,OAAO,KAAK,KAAKC,CAAW,CAAC,EAAGjF,EAAY5B,EAAW4C,EAAcrW,GAAS,aAAe,CAAA,EAAIA,GAAS,cAAc,EAC7L,GAAAuZ,EAAa,SAAW,EACxB,MAAM,MAAM,6DAA6D,EAEvE,MAAA5G,EAAM,MAAMmE,GAAa,CAC3B,MAAOyC,EACP,aAAAlD,EACA,WAAYpuD,GAAchN,EAAS48D,EAAqB,EACxD,cAAe,KAAK,SACpB,yBAAAvB,EACA,UAAA7C,CAAA,CACH,EACK,CAAE,mBAAA+F,EAAoB,cAAAnsC,CAAc,EAAI,MAAM2pC,GAAwB,CACxE,OAAQuC,EACR,QAASlD,EACT,WAAYpuD,GAAchN,EAAS48D,EAAqB,EACxD,cAAe,KAAK,SACpB,IAAAlF,EACA,cAAAoB,EACA,UAAAN,EACA,cAAAO,EACA,cAAehU,GAAS,gBAAkB,EAAA,CAC7C,EACKyZ,EAAW,CACb,GAAGF,EACE,OAAQ5U,GAAQA,EAAI,OAAO,OAAO,EAClC,IAAKA,GAAQA,EAAI,MAAM,OAAO,EACnC,GAAG0R,EACE,OAAQ1R,GAAQA,aAAeiE,EAAgB,EAC/C,IAAKjE,GAAQA,EAAI,OAAO,CAAA,EAC/B,OAAO,CAACrtD,EAAOS,EAAOuD,IAAUA,EAAM,QAAQhE,CAAK,IAAMS,CAAK,EACzD,MAAA,CAAE,mBAAAyhE,EAAoB,SAAAC,EAAU,cAAApsC,CAAc,CAAA,CAGzD,MAAM,kBAAkBK,EAAas3B,EAAmB,GAAM,CACtD,GAAA,CAAC,KAAK,SACN,MAAM,MAAM,6CAA6C,EAEzD,IAAAuV,EAAiBp/D,EAASuyB,CAAW,EACzC,OAAO,MAAM,KAAK,SAAS,mBAAmB6sC,EAAgBvV,CAAgB,CAAA,CAGlF,MAAM,cAAcG,EAAa,EAAGC,EAAW,GAAI,CAC/C,OAAO,MAAM,KAAK,SAAS,WAAW,KAAK,SAAUD,EAAYC,CAAQ,CAAA,CAgB7E,MAAM,WAAW,CAAE,KAAAuD,EAAO,MAAO,WAAAxD,EAAa,EAAG,SAAAC,EAAW,GAAI,MAAA5jB,EAAQ,EAAG,MAAAuvB,EAAQ,IAAO,CACtF,OAAOD,GAAkB,CACrB,QAAS,KAAK,SACd,SAAU,KAAK,SACf,KAAAnI,EACA,WAAAxD,EACA,SAAAC,EACA,MAAA5jB,EACA,MAAAuvB,CAAA,CACH,CAAA,CAGL,MAAM,mBAAmByJ,EAAgB,GAAO,CACxC,IAAA/U,EAAU,MAAM,KAAK,cAAc,EAInC,GAHA+U,IACA/U,EAAUA,EAAQ,OAAQd,GAAQA,EAAI,OAAS,CAAC,GAEhD,CAACc,EAAQ,OACF,OAAA,KAEX,KAAM,CAACgV,CAAM,EAAIhV,EAAQ,MAAM,EAAE,EACjC,OAAO,KAAK,SAAS,wBAAwBgV,EAAO,OAAO,CAAA,CAG/D,MAAM,mBAAmBza,EAAU,CAC/B,mBAAoB,GACpB,WAAY,GACZ,OAAQ,MAAA,EACT,CACK,OAAAA,EAAQ,qBAAuB,SAC/BA,EAAQ,mBAAqB,IAE1B,IAAI,QAAQ,MAAO9pD,GAAY,CAE5B,MAAAwkE,EAAe,MAAOlW,GAAW,CACnC,MAAMmH,EAAW,CAAC,EACZgP,EAAW,CAAC,OAAW,MAAS,EAClC3a,EAAQ,aAAe,KACd2a,EAAA,CAAC,EAAI,KAAK,WAAW,GAE9B3a,EAAQ,qBAAuB,KAC1BwE,EAIDmW,EAAS,CAAC,EAAI,KAAK,SAAS,wBAAwBnW,CAAM,EAHjDmW,EAAA,CAAC,EAAI,KAAK,mBAAmB,GAM9C,MAAMnjE,EAAS,MAAM,QAAQ,IAAImjE,CAAQ,EAChC,OAAAhP,EAAA,QAAUn0D,EAAO,CAAC,EAClBm0D,EAAA,gBAAkBn0D,EAAO,CAAC,EAC5Bm0D,CACX,EAEA,GAAI3L,EAAQ,OAAQ,CACZ,IAAAiF,EACE,MAAAC,EAA6B,MAAOzrC,GAAS,CAC3CA,GAAQA,EAAK,CAAC,IAAMumC,EAAQ,QAAUvmC,EAAK,CAAC,IAAM,OAElD,MAAMwrC,IAAS,EACP/uD,EAAAwkE,EAAa1a,EAAQ,MAAM,CAAC,EAE5C,EACAiF,EAAS,MAAM,KAAK,SAAS,uBAAuBjF,EAAQ,OAAQkF,CAA0B,EAC9F,MAAA,CAGA,IAAAkU,EACAwB,EAAsB,GACZxB,EAAA,MAAM,KAAK,SAAS,mBAAmB,KAAK,kBAAkB,EAAG,MAAOJ,GAAY,CAC9F,GAAI4B,EAAqB,CACrB,MAAMxB,IAAc,EACpBljE,EAAQwkE,GAAc,EACtB,MAAA,CAEkBE,EAAA,EAAA,CACzB,CAAA,CACJ,CAAA,CAUL,MAAM,YAAYvV,EAAUM,EAAoB,GAAM,CAClD,OAAO,KAAK,SAAS,YAAYN,EAAUM,CAAiB,CAAA,CAQhE,MAAM,aAAatB,EAAQ,CAChB,OAAA,KAAK,SAAS,aAAaA,CAAM,CAAA,CAI5C,MAAM,OAAOjtD,EAASm5D,EAAKxpD,EAAW,CAC3B,OAAA,MAAM,IAAIopD,GAAc,EAAE,OAAO/4D,EAASm5D,EAAK,KAAK,SAAUxpD,CAAS,CAAA,CAclF,MAAM,aAAa8zD,EAAgBxE,EAAe,CAAA,EAAIrW,EAAS,CACtD,MAAM,QAAQqW,CAAY,IAC3BA,EAAe,CAACA,CAAY,GAE5B,IAAAlL,EACAnL,GAAWA,EAAQ,QACnBmL,EAAQ,MAAMiM,GAAWpX,EAAQ,QAAQ,IAAK8J,GAAW,OAAOA,GAAW,SAAWD,GAAWC,CAAM,EAAIA,CAAM,EAAG,IAAI,EAGxHqB,EAAQ,MAAM,KAAK,gBAAgB,KAAK,QAAQ,EAE9C,MAAA2P,EAAgB3P,EAAM,OAAQxG,GAAQA,EAAI,OAAS,GAAK,CAACA,EAAI,KAAK,EACpE,GAAAmW,EAAc,SAAW,EACnB,MAAA,IAAI,MAAM,gEAAgE,EAE9E,MAAAC,EAAqB,IAAInS,GAAiB,CAC5C,SAAUiS,EAAe,UAAY,KAAK,UAC1C,OAAQA,EAAe,OACvB,MAAOA,EAAe,OAAS,IAC/B,WAAYA,EAAe,WAC3B,WAAYA,EAAe,WAC3B,QAASC,EAAc,CAAC,EAAE,IAAA,CAC7B,EACD,OAAO,KAAK,KAAK,CAACC,EAAoB,GAAG1E,CAAY,EAAG,CACpD,GAAGrW,EACH,QAASmL,EACT,YAAa,CAAC2P,EAAc,CAAC,CAAC,EAC9B,qBAAsB,GACtB,aAAc,GACd,eAAgB,SAAA,CACnB,CAAA,CAcL,MAAM,UAAUhS,EAASkS,EAAcC,EAAoB,GAAOjb,EAAS,CACnE,GAAA8I,GAAS,SAAW,GACd,MAAA,MAAM,6BAA6BA,CAAO,EAAE,EAEjD,MAAM,QAAQkS,CAAY,IAC3BA,EAAe,CAACA,CAAY,GAGhC,MAAME,GADQ,MAAM,KAAK,gBAAgB,KAAK,QAAQ,GAC/B,OAAQvW,GAAQA,EAAI,OAAO,UAAYmE,GAC1DnE,EAAI,OAAO,aAAe9F,GAAc,OAAO,EAC/C,GAAA,CAACqc,EAAS,OACJ,MAAA,IAAI,MAAM,+EAA+E,EAE7F,MAAAC,EAAYF,GAAqBC,EAAS,CAAC,EAAE,MAAM,OAAS,EAC5DA,EAAS,CAAC,EAAE,MAAM,OAAS,OAAOF,EAAa,MAAM,EACrDE,EAAS,CAAC,EAAE,MAAM,OAClBE,EAAgBD,EAAY,GAAK,GAAKA,EACtCE,EAAe,IAAIzS,GAAiB,CACtC,SAAU,KAAK,UACf,QAAAE,EACA,WAAYoS,EAAS,CAAC,EAAE,MAAM,WAC9B,WAAYA,EAAS,CAAC,EAAE,MAAM,WAC9B,OAAQE,EACR,MAAOF,EAAS,CAAC,EAAE,QAAA,CACtB,EACD,OAAO,KAAK,KAAK,CACbG,EACA,GAAGL,EAAa,IAAKrW,GAAQ,IAAIiE,GAAiB,CAC9C,SAAUjE,EAAI,UAAY,KAAK,UAC/B,OAAQ,EACR,QAAAmE,EACA,MAAOnE,EAAI,MACX,WAAYA,EAAI,WAChB,WAAYA,EAAI,UAAA,CACnB,CAAC,CAAA,EACH,CACC,GAAG3E,EACH,YAAa,CAACkb,EAAS,CAAC,CAAC,EACzB,qBAAsB,GACtB,aAAc,GACd,eAAgB,MAAA,CACnB,CAAA,CAkBL,MAAM,UAAUI,EAAalkE,EAAS4oD,EAAS,CACvC,GAAAsb,EAAY,SAAS,SAAW,GAChC,MAAM,MAAM,6BAA6BA,EAAY,OAAO,EAAE,EAGlE,MAAMC,GADQ,MAAM,KAAK,gBAAgB,KAAK,QAAQ,GAC7B,OAAQ5W,GAAQA,EAAI,OAAO,UAAY2W,EAAY,SACxE3W,EAAI,OAAO,aAAe2W,EAAY,YACtC3W,EAAI,OAAO,aAAe2W,EAAY,UAAU,EAChD,GAAA,CAACC,EAAW,OACN,MAAA,IAAI,MAAM,sDAAsD,EAEpE,MAAAC,EAAsBD,EAAW,OAAO,CAAC/E,EAAMyD,IAAQzD,GAAQyD,EAAI,OAAO,QAAU,IAAK,EAAE,EACjG,IAAIwB,EAAqBH,EAAY,QAAUA,EAAY,OAAS,EAAIA,EAAY,OAAS,GAC7FG,EAAqB,OAAOA,CAAkB,EACxC,MAAAC,EAASJ,EAAY,YAAcA,EAAY,WACrD,IAAIK,EAAU,CAAC,EACXC,EACJ,GAAIF,EAEA,GAAIF,IAAwB,GACxBI,EAAqB,CAAC,EACdD,EAAA,KAAKJ,EAAW,CAAC,CAAC,MAEzB,CAED,IAAIzsC,EAAY,GACL,UAAA1a,KAASmnD,EAAW,OAAQ5W,GAAQA,EAAI,OAAO,MAAM,EAG5D,GAFAgX,EAAQ,KAAKvnD,CAAK,EAClB0a,GAAa1a,EAAM,MAAM,OACrB0a,GAAa2sC,EACb,MAIR,MAAMN,EAAYK,EAAsBC,EAClCL,EAAgBD,EAAY,GAAK,GAAKA,EACvBS,EAAA,CACjB,IAAIhT,GAAiB,CACjB,SAAU0S,EAAY,UAAY,KAAK,UACvC,QAASA,EAAY,QACrB,WAAYA,EAAY,WACxB,WAAYA,EAAY,WACxB,OAAQF,EACR,MAAOG,EAAW,CAAC,EAAE,QACxB,CAAA,CACL,CAAA,SAKAC,IAAwBC,EACxBG,EAAqB,CAAC,EACdD,EAAA,KAAK,GAAGJ,CAAU,MAEzB,CAED,IAAIzsC,EAAY,GACL,UAAA1a,KAASmnD,EAAW,OAAQ5W,GAAQA,EAAI,OAAO,MAAM,EAG5D,GAFAgX,EAAQ,KAAKvnD,CAAK,EAClB0a,GAAa1a,EAAM,MAAM,OACrB0a,GAAa2sC,EACb,MAIR,MAAMN,EAAYrsC,EAAY2sC,EACxBL,EAAgBD,EAAY,GAAK,GAAKA,EACvBS,EAAA,CACjB,IAAIhT,GAAiB,CACjB,SAAU0S,EAAY,UAAY,KAAK,UACvC,QAASA,EAAY,QACrB,OAAQF,EACR,MAAOG,EAAW,OAAO,CAAC5/D,EAAGiT,IAAMjT,EAAIiT,EAAE,SAAU,CAAC,CACvD,CAAA,CACL,CAAA,CAGR,MAAMqS,EAAW+nC,GAAa,WAAW5xD,GAAW,EAAE,EACtD,OAAO,KAAK,KAAK,CAAC6pB,EAAU,GAAG26C,CAAkB,EAAG,CAChD,GAAG5b,EACH,qBAAsB,GACtB,aAAc,GACd,YAAa2b,EAAQ,OAAS,EAAIA,EAAU,OAC5C,eAAgB,MAAA,CACnB,CAAA,CAQL,MAAM,cAAc7S,EAAS,CAElB,OADO,MAAM,KAAK,gBAAgB,KAAK,QAAQ,GACzC,OAAQnE,GAAQmE,EAAUnE,EAAI,OAAO,UAAYmE,EAAUnE,EAAI,KAAK,CAAA,CAQrF,MAAM,gBAAgBmE,EAAS,CACrB,MAAAqC,GAAS,MAAM,KAAK,cAAcrC,CAAO,GAAG,OAAQnE,GAAQA,EAAI,OAAO,MAAM,EAC5E,OAAA0G,GAAgBF,EAAOrC,CAAO,CAAA,CASzC,MAAM,mBAAmBA,EAAS,CAE9B,OADe,MAAM,KAAK,cAAcA,CAAO,GAAG,OAAQnE,GAAQA,EAAI,OAAO,aAAe,MAAS,EACxF,MAAA,CAMjB,MAAM,qBAAsB,CACxB,MAAMntD,EAAS,CAAC,EACV2zD,GAAS,MAAM,KAAK,cAAc,GAAG,OAAQxG,GAAQA,EAAI,OAAO,MAAM,EAC5E,UAAWj7B,KAAQyhC,EACV3zD,EAAOkyB,EAAK,MAAM,OAAO,IACnBlyB,EAAAkyB,EAAK,MAAM,OAAO,EAAI,IAEjClyB,EAAOkyB,EAAK,MAAM,OAAO,GAAKA,EAAK,MAAM,OAEtC,OAAAlyB,CAAA,CAMX,MAAM,wBAAyB,CAC3B,MAAMA,EAAS,CAAC,EACV2zD,GAAS,MAAM,KAAK,cAAc,GAAG,OAAQxG,GAAQA,EAAI,OAAO,aAAe,MAAS,EAC9F,UAAWj7B,KAAQyhC,EACV3zD,EAAOkyB,EAAK,MAAM,OAAO,IACnBlyB,EAAAkyB,EAAK,MAAM,OAAO,EAAI,GAE1BlyB,EAAAkyB,EAAK,MAAM,OAAO,GAAK,EAE3B,OAAAlyB,CAAA,CAEf,CAIO,MAAMqkE,WAAoB/D,EAAW,CACxC,MAAA,CAAS,KAAK,cAAgBrqD,GAAyB,OAAA,CACvD,MAAA,CAAS,KAAK,WAAa6kD,EAAe,KAAA,CAC1C,aAAc,CACV,MAAMhM,GAAY,OAAO,CAAA,CAEjC,CAIO,MAAMwV,WAA2BhE,EAAW,CAC/C,MAAA,CAAS,KAAK,cAAgBrqD,GAAyB,OAAA,CACvD,MAAA,CAAS,KAAK,WAAa6kD,EAAe,KAAA,CAC1C,aAAc,CACV,MAAMhM,GAAY,OAAO,CAAA,CAEjC,CAIO,MAAMyV,WAA2BjE,EAAW,CAC/C,MAAA,CAAS,KAAK,cAAgBrqD,GAAyB,OAAA,CACvD,MAAA,CAAS,KAAK,WAAa6kD,EAAe,KAAA,CAC1C,aAAc,CACV,MAAMhM,GAAY,OAAO,CAAA,CAEjC,CAMA,MAAM0R,GAAsB,SAAUX,EAAQ,CACtC,GAAAtgE,OAAyB,QACrBs1D,GAAY,6BAA+B,SACvCgL,EAAO,UAAY/Q,GAAY,QAC/B,MAAM,MAAM,sIAAsI,CAIlK,EA8BA,SAAS2R,GAAmBjiE,EAAQ,CAC5B,GAAC8hE,GAAW,gBAGT,OAAA,IAAIA,GAAW,gBAAgB9hE,CAAM,CAChD,CC/vCO,MAAMgjC,GAAS,OAAO,YAAe,UAAY,WAAY,WAAa,WAAW,OAAS,OCIrG,sEASO,SAASgjC,GAAQrgE,EAAG,CACvB,OAAOA,aAAa,YAAe,YAAY,OAAOA,CAAC,GAAKA,EAAE,YAAY,OAAS,YACvF,CAEO,SAASsgE,GAAQz+C,EAAG,CACvB,GAAI,CAAC,OAAO,cAAcA,CAAC,GAAKA,EAAI,EAChC,MAAM,IAAI,MAAM,kCAAoCA,CAAC,CAC7D,CAEO,SAAS0+C,GAAOtgE,KAAMugE,EAAS,CAClC,GAAI,CAACH,GAAQpgE,CAAC,EACV,MAAM,IAAI,MAAM,qBAAqB,EACzC,GAAIugE,EAAQ,OAAS,GAAK,CAACA,EAAQ,SAASvgE,EAAE,MAAM,EAChD,MAAM,IAAI,MAAM,iCAAmCugE,EAAU,gBAAkBvgE,EAAE,MAAM,CAC/F,CAEO,SAASwgE,GAAMlM,EAAG,CACrB,GAAI,OAAOA,GAAM,YAAc,OAAOA,EAAE,QAAW,WAC/C,MAAM,IAAI,MAAM,8CAA8C,EAClE+L,GAAQ/L,EAAE,SAAS,EACnB+L,GAAQ/L,EAAE,QAAQ,CACtB,CAEO,SAASmM,GAAQz6D,EAAU06D,EAAgB,GAAM,CACpD,GAAI16D,EAAS,UACT,MAAM,IAAI,MAAM,kCAAkC,EACtD,GAAI06D,GAAiB16D,EAAS,SAC1B,MAAM,IAAI,MAAM,uCAAuC,CAC/D,CAEO,SAAS26D,GAAQ/9D,EAAKoD,EAAU,CACnCs6D,GAAO19D,CAAG,EACV,MAAMg+D,EAAM56D,EAAS,UACrB,GAAIpD,EAAI,OAASg+D,EACb,MAAM,IAAI,MAAM,yDAA2DA,CAAG,CAEtF,CAUO,SAASC,MAASC,EAAQ,CAC7B,QAAS7iE,EAAI,EAAGA,EAAI6iE,EAAO,OAAQ7iE,IAC/B6iE,EAAO7iE,CAAC,EAAE,KAAK,CAAC,CAExB,CAEO,SAAS8iE,GAAW5C,EAAK,CAC5B,OAAO,IAAI,SAASA,EAAI,OAAQA,EAAI,WAAYA,EAAI,UAAU,CAClE,CAEO,SAAS6C,GAAKC,EAAMC,EAAO,CAC9B,OAAQD,GAAS,GAAKC,EAAWD,IAASC,CAC9C,CAgHO,SAASC,GAAY3hE,EAAK,CAC7B,GAAI,OAAOA,GAAQ,SACf,MAAM,IAAI,MAAM,iBAAiB,EACrC,OAAO,IAAI,WAAW,IAAI,YAAa,EAAC,OAAOA,CAAG,CAAC,CACvD,CAaO,SAAS4hE,GAAQvjD,EAAM,CAC1B,OAAI,OAAOA,GAAS,WAChBA,EAAOsjD,GAAYtjD,CAAI,GAC3ByiD,GAAOziD,CAAI,EACJA,CACX,CAKO,SAASwjD,GAAgBxjD,EAAM,CAClC,OAAI,OAAOA,GAAS,WAChBA,EAAOsjD,GAAYtjD,CAAI,GAC3ByiD,GAAOziD,CAAI,EACJA,CACX,CAiBO,SAASyjD,GAAUC,EAAUC,EAAM,CACtC,GAAIA,IAAS,QAAa,CAAE,EAAC,SAAS,KAAKA,CAAI,IAAM,kBACjD,MAAM,IAAI,MAAM,uCAAuC,EAE3D,OADe,OAAO,OAAOD,EAAUC,CAAI,CAE/C,CAEO,MAAMC,EAAK,CAClB,CAEO,SAASC,GAAaC,EAAU,CACnC,MAAMC,EAASC,GAAQF,EAAU,EAAC,OAAOP,GAAQS,CAAG,CAAC,EAAE,OAAQ,EACzDC,EAAMH,EAAU,EACtB,OAAAC,EAAM,UAAYE,EAAI,UACtBF,EAAM,SAAWE,EAAI,SACrBF,EAAM,OAAS,IAAMD,EAAU,EACxBC,CACX,CAqBO,SAASG,GAAYC,EAAc,GAAI,CAC1C,GAAI5kC,IAAU,OAAOA,GAAO,iBAAoB,WAC5C,OAAOA,GAAO,gBAAgB,IAAI,WAAW4kC,CAAW,CAAC,EAG7D,GAAI5kC,IAAU,OAAOA,GAAO,aAAgB,WACxC,OAAO,WAAW,KAAKA,GAAO,YAAY4kC,CAAW,CAAC,EAE1D,MAAM,IAAI,MAAM,wCAAwC,CAC5D,CClRO,MAAMC,WAAaR,EAAK,CAC3B,YAAYxY,EAAMiZ,EAAM,CACpB,MAAO,EACP,KAAK,SAAW,GAChB,KAAK,UAAY,GACjB1B,GAAMvX,CAAI,EACV,MAAMz5C,EAAM4xD,GAAQc,CAAI,EAExB,GADA,KAAK,MAAQjZ,EAAK,OAAQ,EACtB,OAAO,KAAK,MAAM,QAAW,WAC7B,MAAM,IAAI,MAAM,qDAAqD,EACzE,KAAK,SAAW,KAAK,MAAM,SAC3B,KAAK,UAAY,KAAK,MAAM,UAC5B,MAAMkZ,EAAW,KAAK,SAChBzyD,EAAM,IAAI,WAAWyyD,CAAQ,EAEnCzyD,EAAI,IAAIF,EAAI,OAAS2yD,EAAWlZ,EAAK,OAAQ,EAAC,OAAOz5C,CAAG,EAAE,OAAM,EAAKA,CAAG,EACxE,QAASvR,EAAI,EAAGA,EAAIyR,EAAI,OAAQzR,IAC5ByR,EAAIzR,CAAC,GAAK,GACd,KAAK,MAAM,OAAOyR,CAAG,EAErB,KAAK,MAAQu5C,EAAK,OAAQ,EAE1B,QAAShrD,EAAI,EAAGA,EAAIyR,EAAI,OAAQzR,IAC5ByR,EAAIzR,CAAC,GAAK,IACd,KAAK,MAAM,OAAOyR,CAAG,EACrBmxD,GAAMnxD,CAAG,CACjB,CACI,OAAO4qB,EAAK,CACR,OAAAmmC,GAAQ,IAAI,EACZ,KAAK,MAAM,OAAOnmC,CAAG,EACd,IACf,CACI,WAAW13B,EAAK,CACZ69D,GAAQ,IAAI,EACZH,GAAO19D,EAAK,KAAK,SAAS,EAC1B,KAAK,SAAW,GAChB,KAAK,MAAM,WAAWA,CAAG,EACzB,KAAK,MAAM,OAAOA,CAAG,EACrB,KAAK,MAAM,WAAWA,CAAG,EACzB,KAAK,QAAS,CACtB,CACI,QAAS,CACL,MAAMA,EAAM,IAAI,WAAW,KAAK,MAAM,SAAS,EAC/C,YAAK,WAAWA,CAAG,EACZA,CACf,CACI,WAAWksD,EAAI,CAEXA,IAAOA,EAAK,OAAO,OAAO,OAAO,eAAe,IAAI,EAAG,CAAA,CAAE,GACzD,KAAM,CAAE,MAAAsT,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,EAAW,SAAAJ,EAAU,UAAAK,CAAS,EAAK,KACnE,OAAA1T,EAAKA,EACLA,EAAG,SAAWwT,EACdxT,EAAG,UAAYyT,EACfzT,EAAG,SAAWqT,EACdrT,EAAG,UAAY0T,EACf1T,EAAG,MAAQsT,EAAM,WAAWtT,EAAG,KAAK,EACpCA,EAAG,MAAQuT,EAAM,WAAWvT,EAAG,KAAK,EAC7BA,CACf,CACI,OAAQ,CACJ,OAAO,KAAK,WAAY,CAChC,CACI,SAAU,CACN,KAAK,UAAY,GACjB,KAAK,MAAM,QAAS,EACpB,KAAK,MAAM,QAAS,CAC5B,CACA,CAWO,MAAM2T,GAAO,CAACxZ,EAAMz5C,EAAKhU,IAAY,IAAIymE,GAAKhZ,EAAMz5C,CAAG,EAAE,OAAOhU,CAAO,EAAE,OAAQ,EACxFinE,GAAK,OAAS,CAACxZ,EAAMz5C,IAAQ,IAAIyyD,GAAKhZ,EAAMz5C,CAAG,EC5E/C,SAASkzD,GAAWzZ,EAAM0Z,EAAWC,EAAOC,EAAO,CAC/CrC,GAAMvX,CAAI,EACV,MAAMuY,EAAOF,GAAU,CAAE,MAAO,GAAI,UAAW,EAAI,EAAEuB,CAAK,EACpD,CAAE,EAAA7vD,EAAG,MAAA8vD,EAAO,UAAAC,CAAW,EAAGvB,EAIhC,GAHAnB,GAAQrtD,CAAC,EACTqtD,GAAQyC,CAAK,EACbzC,GAAQ0C,CAAS,EACb/vD,EAAI,EACJ,MAAM,IAAI,MAAM,+BAA+B,EACnD,MAAMgwD,EAAW3B,GAAgBsB,CAAS,EACpCM,EAAO5B,GAAgBuB,CAAK,EAE5BM,EAAK,IAAI,WAAWJ,CAAK,EAEzBK,EAAMV,GAAK,OAAOxZ,EAAM+Z,CAAQ,EAChCI,EAAUD,EAAI,WAAU,EAAG,OAAOF,CAAI,EAC5C,MAAO,CAAE,EAAAjwD,EAAG,MAAA8vD,EAAO,UAAAC,EAAW,GAAAG,EAAI,IAAAC,EAAK,QAAAC,CAAS,CACpD,CACA,SAASC,GAAaF,EAAKC,EAASF,EAAII,EAAMjJ,EAAG,CAC7C,OAAA8I,EAAI,QAAS,EACbC,EAAQ,QAAS,EACbE,GACAA,EAAK,QAAS,EAClBzC,GAAMxG,CAAC,EACA6I,CACX,CAUO,SAASK,GAAOta,EAAM+Z,EAAUC,EAAMzB,EAAM,CAC/C,KAAM,CAAE,EAAAxuD,EAAG,MAAA8vD,EAAO,GAAAI,EAAI,IAAAC,EAAK,QAAAC,GAAYV,GAAWzZ,EAAM+Z,EAAUC,EAAMzB,CAAI,EAC5E,IAAI8B,EACJ,MAAMnF,EAAM,IAAI,WAAW,CAAC,EACtBnhD,EAAO+jD,GAAW5C,CAAG,EACrB9D,EAAI,IAAI,WAAW8I,EAAI,SAAS,EAEtC,QAASK,EAAK,EAAGC,EAAM,EAAGA,EAAMX,EAAOU,IAAMC,GAAON,EAAI,UAAW,CAE/D,MAAMO,EAAKR,EAAG,SAASO,EAAKA,EAAMN,EAAI,SAAS,EAC/CnmD,EAAK,SAAS,EAAGwmD,EAAI,EAAK,GAGzBF,EAAOF,EAAQ,WAAWE,CAAI,GAAG,OAAOnF,CAAG,EAAE,WAAW9D,CAAC,EAC1DqJ,EAAG,IAAIrJ,EAAE,SAAS,EAAGqJ,EAAG,MAAM,CAAC,EAC/B,QAASC,EAAK,EAAGA,EAAK3wD,EAAG2wD,IAAM,CAE3BR,EAAI,WAAWG,CAAI,EAAE,OAAOjJ,CAAC,EAAE,WAAWA,CAAC,EAC3C,QAASp8D,EAAI,EAAGA,EAAIylE,EAAG,OAAQzlE,IAC3BylE,EAAGzlE,CAAC,GAAKo8D,EAAEp8D,CAAC,CAC5B,CACA,CACI,OAAOolE,GAAaF,EAAKC,EAASF,EAAII,EAAMjJ,CAAC,CACjD,CC5DO,SAASuJ,GAAa5mD,EAAM6mD,EAAYnoE,EAAOooE,EAAM,CACxD,GAAI,OAAO9mD,EAAK,cAAiB,WAC7B,OAAOA,EAAK,aAAa6mD,EAAYnoE,EAAOooE,CAAI,EACpD,MAAMC,EAAO,OAAO,EAAE,EAChBC,EAAW,OAAO,UAAU,EAC5BC,EAAK,OAAQvoE,GAASqoE,EAAQC,CAAQ,EACtCE,EAAK,OAAOxoE,EAAQsoE,CAAQ,EAC5B1P,EAAIwP,EAAO,EAAI,EACf/gB,EAAI+gB,EAAO,EAAI,EACrB9mD,EAAK,UAAU6mD,EAAavP,EAAG2P,EAAIH,CAAI,EACvC9mD,EAAK,UAAU6mD,EAAa9gB,EAAGmhB,EAAIJ,CAAI,CAC3C,CAEO,SAASK,GAAIpkE,EAAGC,EAAGgT,EAAG,CACzB,OAAQjT,EAAIC,EAAM,CAACD,EAAIiT,CAC3B,CAEO,SAASoxD,GAAIrkE,EAAGC,EAAGgT,EAAG,CACzB,OAAQjT,EAAIC,EAAMD,EAAIiT,EAAMhT,EAAIgT,CACpC,CAKO,MAAMqxD,WAAe5C,EAAK,CAC7B,YAAYU,EAAUK,EAAW8B,EAAWR,EAAM,CAC9C,MAAO,EACP,KAAK,SAAW,GAChB,KAAK,OAAS,EACd,KAAK,IAAM,EACX,KAAK,UAAY,GACjB,KAAK,SAAW3B,EAChB,KAAK,UAAYK,EACjB,KAAK,UAAY8B,EACjB,KAAK,KAAOR,EACZ,KAAK,OAAS,IAAI,WAAW3B,CAAQ,EACrC,KAAK,KAAOpB,GAAW,KAAK,MAAM,CAC1C,CACI,OAAOljD,EAAM,CACT4iD,GAAQ,IAAI,EACZ5iD,EAAOujD,GAAQvjD,CAAI,EACnByiD,GAAOziD,CAAI,EACX,KAAM,CAAE,KAAAb,EAAM,OAAA3e,EAAQ,SAAA8jE,CAAU,EAAG,KAC7Bp+D,EAAM8Z,EAAK,OACjB,QAAS4lD,EAAM,EAAGA,EAAM1/D,GAAM,CAC1B,MAAMwgE,EAAO,KAAK,IAAIpC,EAAW,KAAK,IAAKp+D,EAAM0/D,CAAG,EAEpD,GAAIc,IAASpC,EAAU,CACnB,MAAMqC,EAAWzD,GAAWljD,CAAI,EAChC,KAAOskD,GAAYp+D,EAAM0/D,EAAKA,GAAOtB,EACjC,KAAK,QAAQqC,EAAUf,CAAG,EAC9B,QAChB,CACYplE,EAAO,IAAIwf,EAAK,SAAS4lD,EAAKA,EAAMc,CAAI,EAAG,KAAK,GAAG,EACnD,KAAK,KAAOA,EACZd,GAAOc,EACH,KAAK,MAAQpC,IACb,KAAK,QAAQnlD,EAAM,CAAC,EACpB,KAAK,IAAM,EAE3B,CACQ,YAAK,QAAUa,EAAK,OACpB,KAAK,WAAY,EACV,IACf,CACI,WAAWjb,EAAK,CACZ69D,GAAQ,IAAI,EACZE,GAAQ/9D,EAAK,IAAI,EACjB,KAAK,SAAW,GAIhB,KAAM,CAAE,OAAAvE,EAAQ,KAAA2e,EAAM,SAAAmlD,EAAU,KAAA2B,CAAM,EAAG,KACzC,GAAI,CAAE,IAAAL,CAAG,EAAK,KAEdplE,EAAOolE,GAAK,EAAI,IAChB5C,GAAM,KAAK,OAAO,SAAS4C,CAAG,CAAC,EAG3B,KAAK,UAAYtB,EAAWsB,IAC5B,KAAK,QAAQzmD,EAAM,CAAC,EACpBymD,EAAM,GAGV,QAASxlE,EAAIwlE,EAAKxlE,EAAIkkE,EAAUlkE,IAC5BI,EAAOJ,CAAC,EAAI,EAIhB2lE,GAAa5mD,EAAMmlD,EAAW,EAAG,OAAO,KAAK,OAAS,CAAC,EAAG2B,CAAI,EAC9D,KAAK,QAAQ9mD,EAAM,CAAC,EACpB,MAAMynD,EAAQ1D,GAAWn+D,CAAG,EACtBmB,EAAM,KAAK,UAEjB,GAAIA,EAAM,EACN,MAAM,IAAI,MAAM,6CAA6C,EACjE,MAAM2gE,EAAS3gE,EAAM,EACfmY,EAAQ,KAAK,IAAK,EACxB,GAAIwoD,EAASxoD,EAAM,OACf,MAAM,IAAI,MAAM,oCAAoC,EACxD,QAASje,EAAI,EAAGA,EAAIymE,EAAQzmE,IACxBwmE,EAAM,UAAU,EAAIxmE,EAAGie,EAAMje,CAAC,EAAG6lE,CAAI,CACjD,CACI,QAAS,CACL,KAAM,CAAE,OAAAzlE,EAAQ,UAAAmkE,CAAS,EAAK,KAC9B,KAAK,WAAWnkE,CAAM,EACtB,MAAMsmE,EAAMtmE,EAAO,MAAM,EAAGmkE,CAAS,EACrC,YAAK,QAAS,EACPmC,CACf,CACI,WAAW7V,EAAI,CACXA,IAAOA,EAAK,IAAI,KAAK,aACrBA,EAAG,IAAI,GAAG,KAAK,IAAG,CAAE,EACpB,KAAM,CAAE,SAAAqT,EAAU,OAAA9jE,EAAQ,OAAAS,EAAQ,SAAAwjE,EAAU,UAAAC,EAAW,IAAAkB,CAAG,EAAK,KAC/D,OAAA3U,EAAG,UAAYyT,EACfzT,EAAG,SAAWwT,EACdxT,EAAG,OAAShwD,EACZgwD,EAAG,IAAM2U,EACL3kE,EAASqjE,GACTrT,EAAG,OAAO,IAAIzwD,CAAM,EACjBywD,CACf,CACI,OAAQ,CACJ,OAAO,KAAK,WAAY,CAChC,CACA,CAMO,MAAM8V,GAA4B,YAAY,KAAK,CACtD,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACxF,CAAC,EAWYC,GAA4B,YAAY,KAAK,CACtD,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,SACxF,CAAC,ECpJKC,GAA6B,OAAO,GAAK,GAAK,CAAC,EAC/Cf,GAAuB,OAAO,EAAE,EACtC,SAASgB,GAAQnjD,EAAGojD,EAAK,GAAO,CAC5B,OAAIA,EACO,CAAE,EAAG,OAAOpjD,EAAIkjD,EAAU,EAAG,EAAG,OAAQljD,GAAKmiD,GAAQe,EAAU,CAAG,EACtE,CAAE,EAAG,OAAQljD,GAAKmiD,GAAQe,EAAU,EAAI,EAAG,EAAG,OAAOljD,EAAIkjD,EAAU,EAAI,CAAG,CACrF,CACA,SAASG,GAAMC,EAAKF,EAAK,GAAO,CAC5B,MAAMjhE,EAAMmhE,EAAI,OAChB,IAAIC,EAAK,IAAI,YAAYphE,CAAG,EACxBqhE,EAAK,IAAI,YAAYrhE,CAAG,EAC5B,QAAS9F,EAAI,EAAGA,EAAI8F,EAAK9F,IAAK,CAC1B,KAAM,CAAE,EAAAq2D,EAAG,EAAAvR,CAAG,EAAGgiB,GAAQG,EAAIjnE,CAAC,EAAG+mE,CAAE,EACnC,CAACG,EAAGlnE,CAAC,EAAGmnE,EAAGnnE,CAAC,CAAC,EAAI,CAACq2D,EAAGvR,CAAC,CAC9B,CACI,MAAO,CAACoiB,EAAIC,CAAE,CAClB,CAGA,MAAMC,GAAQ,CAAC/Q,EAAGgR,EAAI36C,IAAM2pC,IAAM3pC,EAC5B46C,GAAQ,CAACjR,EAAGvR,EAAGp4B,IAAO2pC,GAAM,GAAK3pC,EAAOo4B,IAAMp4B,EAE9C66C,GAAS,CAAClR,EAAGvR,EAAGp4B,IAAO2pC,IAAM3pC,EAAMo4B,GAAM,GAAKp4B,EAC9C86C,GAAS,CAACnR,EAAGvR,EAAGp4B,IAAO2pC,GAAM,GAAK3pC,EAAOo4B,IAAMp4B,EAE/C+6C,GAAS,CAACpR,EAAGvR,EAAGp4B,IAAO2pC,GAAM,GAAK3pC,EAAOo4B,IAAOp4B,EAAI,GACpDg7C,GAAS,CAACrR,EAAGvR,EAAGp4B,IAAO2pC,IAAO3pC,EAAI,GAAQo4B,GAAM,GAAKp4B,EAY3D,SAASi7C,GAAIT,EAAIC,EAAIS,EAAIC,EAAI,CACzB,MAAM/iB,GAAKqiB,IAAO,IAAMU,IAAO,GAC/B,MAAO,CAAE,EAAIX,EAAKU,GAAO9iB,EAAI,GAAK,GAAM,GAAM,EAAG,EAAGA,EAAI,CAAG,CAC/D,CAEA,MAAMgjB,GAAQ,CAACX,EAAIU,EAAIE,KAAQZ,IAAO,IAAMU,IAAO,IAAME,IAAO,GAC1DC,GAAQ,CAACC,EAAKf,EAAIU,EAAIM,IAAQhB,EAAKU,EAAKM,GAAOD,EAAM,GAAK,GAAM,GAAM,EACtEE,GAAQ,CAAChB,EAAIU,EAAIE,EAAIK,KAAQjB,IAAO,IAAMU,IAAO,IAAME,IAAO,IAAMK,IAAO,GAC3EC,GAAQ,CAACJ,EAAKf,EAAIU,EAAIM,EAAII,IAAQpB,EAAKU,EAAKM,EAAKI,GAAOL,EAAM,GAAK,GAAM,GAAM,EAC/EM,GAAQ,CAACpB,EAAIU,EAAIE,EAAIK,EAAII,KAAQrB,IAAO,IAAMU,IAAO,IAAME,IAAO,IAAMK,IAAO,IAAMI,IAAO,GAC5FC,GAAQ,CAACR,EAAKf,EAAIU,EAAIM,EAAII,EAAII,IAAQxB,EAAKU,EAAKM,EAAKI,EAAKI,GAAOT,EAAM,GAAK,GAAM,GAAM,ECtCxFU,GAA2B,YAAY,KAAK,CAC9C,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACxF,CAAC,EAEKC,GAA2B,IAAI,YAAY,EAAE,EAC5C,MAAMC,WAAezC,EAAO,CAC/B,YAAY7B,EAAY,GAAI,CACxB,MAAM,GAAIA,EAAW,EAAG,EAAK,EAG7B,KAAK,EAAIoC,GAAU,CAAC,EAAI,EACxB,KAAK,EAAIA,GAAU,CAAC,EAAI,EACxB,KAAK,EAAIA,GAAU,CAAC,EAAI,EACxB,KAAK,EAAIA,GAAU,CAAC,EAAI,EACxB,KAAK,EAAIA,GAAU,CAAC,EAAI,EACxB,KAAK,EAAIA,GAAU,CAAC,EAAI,EACxB,KAAK,EAAIA,GAAU,CAAC,EAAI,EACxB,KAAK,EAAIA,GAAU,CAAC,EAAI,CAChC,CACI,KAAM,CACF,KAAM,CAAE,EAAAmC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,CAAC,EAAK,KACnC,MAAO,CAACP,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,CAAC,CACtC,CAEI,IAAIP,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAG,CACxB,KAAK,EAAIP,EAAI,EACb,KAAK,EAAIC,EAAI,EACb,KAAK,EAAIC,EAAI,EACb,KAAK,EAAIC,EAAI,EACb,KAAK,EAAIC,EAAI,EACb,KAAK,EAAIC,EAAI,EACb,KAAK,EAAIC,EAAI,EACb,KAAK,EAAIC,EAAI,CACrB,CACI,QAAQtqD,EAAMuqD,EAAQ,CAElB,QAAStpE,EAAI,EAAGA,EAAI,GAAIA,IAAKspE,GAAU,EACnCV,GAAS5oE,CAAC,EAAI+e,EAAK,UAAUuqD,EAAQ,EAAK,EAC9C,QAAStpE,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,MAAMupE,EAAMX,GAAS5oE,EAAI,EAAE,EACrBwpE,EAAKZ,GAAS5oE,EAAI,CAAC,EACnBypE,EAAK1G,GAAKwG,EAAK,CAAC,EAAIxG,GAAKwG,EAAK,EAAE,EAAKA,IAAQ,EAC7CG,EAAK3G,GAAKyG,EAAI,EAAE,EAAIzG,GAAKyG,EAAI,EAAE,EAAKA,IAAO,GACjDZ,GAAS5oE,CAAC,EAAK0pE,EAAKd,GAAS5oE,EAAI,CAAC,EAAIypE,EAAKb,GAAS5oE,EAAI,EAAE,EAAK,CAC3E,CAEQ,GAAI,CAAE,EAAA8oE,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,EAAG,EAAAC,CAAC,EAAK,KACjC,QAASrpE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAM2pE,EAAS5G,GAAKmG,EAAG,CAAC,EAAInG,GAAKmG,EAAG,EAAE,EAAInG,GAAKmG,EAAG,EAAE,EAC9CU,EAAMP,EAAIM,EAASzD,GAAIgD,EAAGC,EAAGC,CAAC,EAAIT,GAAS3oE,CAAC,EAAI4oE,GAAS5oE,CAAC,EAAK,EAE/D6pE,GADS9G,GAAK+F,EAAG,CAAC,EAAI/F,GAAK+F,EAAG,EAAE,EAAI/F,GAAK+F,EAAG,EAAE,GAC/B3C,GAAI2C,EAAGC,EAAGC,CAAC,EAAK,EACrCK,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKD,EAAIW,EAAM,EACfX,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKc,EAAKC,EAAM,CAC5B,CAEQf,EAAKA,EAAI,KAAK,EAAK,EACnBC,EAAKA,EAAI,KAAK,EAAK,EACnBC,EAAKA,EAAI,KAAK,EAAK,EACnBC,EAAKA,EAAI,KAAK,EAAK,EACnBC,EAAKA,EAAI,KAAK,EAAK,EACnBC,EAAKA,EAAI,KAAK,EAAK,EACnBC,EAAKA,EAAI,KAAK,EAAK,EACnBC,EAAKA,EAAI,KAAK,EAAK,EACnB,KAAK,IAAIP,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,CAAC,CACvC,CACI,YAAa,CACTzG,GAAMgG,EAAQ,CACtB,CACI,SAAU,CACN,KAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAC/BhG,GAAM,KAAK,MAAM,CACzB,CACA,CAkBA,MAAMkH,GAA8BC,GAAU,CAC1C,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,oBACtE,EAAE,IAAIpmD,GAAK,OAAOA,CAAC,CAAC,CAAC,EACfqmD,GAAmCF,GAAK,CAAC,EACzCG,GAAmCH,GAAK,CAAC,EAEzCI,GAA6B,IAAI,YAAY,EAAE,EAC/CC,GAA6B,IAAI,YAAY,EAAE,EAC9C,MAAMC,WAAehE,EAAO,CAC/B,YAAY7B,EAAY,GAAI,CACxB,MAAM,IAAKA,EAAW,GAAI,EAAK,EAI/B,KAAK,GAAKqC,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,CAAC,EAAI,EACzB,KAAK,GAAKA,GAAU,EAAE,EAAI,EAC1B,KAAK,GAAKA,GAAU,EAAE,EAAI,EAC1B,KAAK,GAAKA,GAAU,EAAE,EAAI,EAC1B,KAAK,GAAKA,GAAU,EAAE,EAAI,EAC1B,KAAK,GAAKA,GAAU,EAAE,EAAI,EAC1B,KAAK,GAAKA,GAAU,EAAE,EAAI,CAClC,CAEI,KAAM,CACF,KAAM,CAAE,GAAAM,EAAI,GAAAC,EAAI,GAAAS,EAAI,GAAAC,EAAI,GAAAK,EAAI,GAAAH,EAAI,GAAAO,EAAI,GAAAF,EAAI,GAAAM,EAAI,GAAAF,EAAI,GAAA6B,EAAI,GAAAC,EAAI,GAAAC,EAAI,GAAAC,EAAI,GAAAC,EAAI,GAAAC,CAAE,EAAK,KAC3E,MAAO,CAACxD,EAAIC,EAAIS,EAAIC,EAAIK,EAAIH,EAAIO,EAAIF,EAAIM,EAAIF,EAAI6B,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,CAAE,CAC9E,CAEI,IAAIxD,EAAIC,EAAIS,EAAIC,EAAIK,EAAIH,EAAIO,EAAIF,EAAIM,EAAIF,EAAI6B,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI,CAChE,KAAK,GAAKxD,EAAK,EACf,KAAK,GAAKC,EAAK,EACf,KAAK,GAAKS,EAAK,EACf,KAAK,GAAKC,EAAK,EACf,KAAK,GAAKK,EAAK,EACf,KAAK,GAAKH,EAAK,EACf,KAAK,GAAKO,EAAK,EACf,KAAK,GAAKF,EAAK,EACf,KAAK,GAAKM,EAAK,EACf,KAAK,GAAKF,EAAK,EACf,KAAK,GAAK6B,EAAK,EACf,KAAK,GAAKC,EAAK,EACf,KAAK,GAAKC,EAAK,EACf,KAAK,GAAKC,EAAK,EACf,KAAK,GAAKC,EAAK,EACf,KAAK,GAAKC,EAAK,CACvB,CACI,QAAQ3rD,EAAMuqD,EAAQ,CAElB,QAAStpE,EAAI,EAAGA,EAAI,GAAIA,IAAKspE,GAAU,EACnCY,GAAWlqE,CAAC,EAAI+e,EAAK,UAAUuqD,CAAM,EACrCa,GAAWnqE,CAAC,EAAI+e,EAAK,UAAWuqD,GAAU,CAAG,EAEjD,QAAStpE,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAE1B,MAAM2qE,EAAOT,GAAWlqE,EAAI,EAAE,EAAI,EAC5B4qE,EAAOT,GAAWnqE,EAAI,EAAE,EAAI,EAC5B6qE,EAAMC,GAAWH,EAAMC,EAAM,CAAC,EAAIE,GAAWH,EAAMC,EAAM,CAAC,EAAIG,GAAUJ,EAAMC,EAAM,CAAC,EACrFI,EAAMC,GAAWN,EAAMC,EAAM,CAAC,EAAIK,GAAWN,EAAMC,EAAM,CAAC,EAAIM,GAAUP,EAAMC,EAAM,CAAC,EAErFO,EAAMjB,GAAWlqE,EAAI,CAAC,EAAI,EAC1BorE,EAAMjB,GAAWnqE,EAAI,CAAC,EAAI,EAC1BqrE,EAAMP,GAAWK,EAAKC,EAAK,EAAE,EAAIE,GAAWH,EAAKC,EAAK,EAAE,EAAIL,GAAUI,EAAKC,EAAK,CAAC,EACjFG,EAAMN,GAAWE,EAAKC,EAAK,EAAE,EAAII,GAAWL,EAAKC,EAAK,EAAE,EAAIF,GAAUC,EAAKC,EAAK,CAAC,EAEjFK,EAAOC,GAAUV,EAAKO,EAAKpB,GAAWnqE,EAAI,CAAC,EAAGmqE,GAAWnqE,EAAI,EAAE,CAAC,EAChE2rE,EAAOC,GAAUH,EAAMZ,EAAKQ,EAAKnB,GAAWlqE,EAAI,CAAC,EAAGkqE,GAAWlqE,EAAI,EAAE,CAAC,EAC5EkqE,GAAWlqE,CAAC,EAAI2rE,EAAO,EACvBxB,GAAWnqE,CAAC,EAAIyrE,EAAO,CACnC,CACQ,GAAI,CAAE,GAAAvE,EAAI,GAAAC,EAAI,GAAAS,EAAI,GAAAC,EAAI,GAAAK,EAAI,GAAAH,EAAI,GAAAO,EAAI,GAAAF,EAAI,GAAAM,EAAI,GAAAF,EAAI,GAAA6B,EAAI,GAAAC,EAAI,GAAAC,EAAI,GAAAC,EAAI,GAAAC,EAAI,GAAAC,CAAE,EAAK,KAEzE,QAAS1qE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,MAAM6rE,EAAUf,GAAWpC,EAAIF,EAAI,EAAE,EAAIsC,GAAWpC,EAAIF,EAAI,EAAE,EAAI8C,GAAW5C,EAAIF,EAAI,EAAE,EACjFsD,EAAUb,GAAWvC,EAAIF,EAAI,EAAE,EAAIyC,GAAWvC,EAAIF,EAAI,EAAE,EAAIgD,GAAW9C,EAAIF,EAAI,EAAE,EAEjFuD,EAAQrD,EAAK2B,EAAO,CAAC3B,EAAK6B,EAC1ByB,EAAQxD,EAAK8B,EAAO,CAAC9B,EAAKgC,EAG1ByB,EAAOC,GAAUxB,EAAIoB,EAASE,EAAM/B,GAAUjqE,CAAC,EAAGmqE,GAAWnqE,CAAC,CAAC,EAC/DmsE,EAAMC,GAAUH,EAAMxB,EAAIoB,EAASE,EAAM/B,GAAUhqE,CAAC,EAAGkqE,GAAWlqE,CAAC,CAAC,EACpEqsE,EAAMJ,EAAO,EAEbK,EAAUxB,GAAW5D,EAAIC,EAAI,EAAE,EAAImE,GAAWpE,EAAIC,EAAI,EAAE,EAAImE,GAAWpE,EAAIC,EAAI,EAAE,EACjFoF,EAAUtB,GAAW/D,EAAIC,EAAI,EAAE,EAAIqE,GAAWtE,EAAIC,EAAI,EAAE,EAAIqE,GAAWtE,EAAIC,EAAI,EAAE,EACjFqF,EAAQtF,EAAKU,EAAOV,EAAKgB,EAAON,EAAKM,EACrCuE,EAAQtF,EAAKU,EAAOV,EAAKY,EAAOF,EAAKE,EAC3C0C,EAAKF,EAAK,EACVG,EAAKF,EAAK,EACVD,EAAKF,EAAK,EACVG,EAAKF,EAAK,EACVD,EAAK3B,EAAK,EACV4B,EAAK9B,EAAK,EACT,CAAE,EAAGE,EAAI,EAAGF,CAAE,EAAKkE,GAAQpE,EAAK,EAAGF,EAAK,EAAG+D,EAAM,EAAGE,EAAM,CAAC,EAC5D/D,EAAKJ,EAAK,EACVE,EAAKL,EAAK,EACVG,EAAKN,EAAK,EACVG,EAAKF,EAAK,EACVD,EAAKV,EAAK,EACVW,EAAKV,EAAK,EACV,MAAMwF,EAAMC,GAAUP,EAAKE,EAASE,CAAI,EACxCvF,EAAK2F,GAAUF,EAAKR,EAAKG,EAASE,CAAI,EACtCrF,EAAKwF,EAAM,CACvB,EAES,CAAE,EAAGzF,EAAI,EAAGC,CAAI,EAAGuF,GAAQ,KAAK,GAAK,EAAG,KAAK,GAAK,EAAGxF,EAAK,EAAGC,EAAK,CAAC,GACnE,CAAE,EAAGS,EAAI,EAAGC,CAAI,EAAG6E,GAAQ,KAAK,GAAK,EAAG,KAAK,GAAK,EAAG9E,EAAK,EAAGC,EAAK,CAAC,EACnE,CAAE,EAAGK,EAAI,EAAGH,CAAI,EAAG2E,GAAQ,KAAK,GAAK,EAAG,KAAK,GAAK,EAAGxE,EAAK,EAAGH,EAAK,CAAC,EACnE,CAAE,EAAGO,EAAI,EAAGF,CAAI,EAAGsE,GAAQ,KAAK,GAAK,EAAG,KAAK,GAAK,EAAGpE,EAAK,EAAGF,EAAK,CAAC,EACnE,CAAE,EAAGM,EAAI,EAAGF,CAAI,EAAGkE,GAAQ,KAAK,GAAK,EAAG,KAAK,GAAK,EAAGhE,EAAK,EAAGF,EAAK,CAAC,EACnE,CAAE,EAAG6B,EAAI,EAAGC,CAAI,EAAGoC,GAAQ,KAAK,GAAK,EAAG,KAAK,GAAK,EAAGrC,EAAK,EAAGC,EAAK,CAAC,EACnE,CAAE,EAAGC,EAAI,EAAGC,CAAI,EAAGkC,GAAQ,KAAK,GAAK,EAAG,KAAK,GAAK,EAAGnC,EAAK,EAAGC,EAAK,CAAC,EACnE,CAAE,EAAGC,EAAIC,CAAO,EAAGgC,GAAQ,KAAK,GAAK,EAAG,KAAK,GAAK,EAAGjC,EAAK,EAAGC,EAAK,CAAC,EACpE,KAAK,IAAIxD,EAAIC,EAAIS,EAAIC,EAAIK,EAAIH,EAAIO,EAAIF,EAAIM,EAAIF,EAAI6B,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,CAAE,CAC/E,CACI,YAAa,CACT9H,GAAMsH,GAAYC,EAAU,CACpC,CACI,SAAU,CACNvH,GAAM,KAAK,MAAM,EACjB,KAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAC/D,CACA,CAuFO,MAAMhyD,GAAyB6yD,GAAa,IAAM,IAAIoF,EAAQ,EAIxDh4D,GAAyB4yD,GAAa,IAAM,IAAI2G,EAAQ,ECzWrE,oEACA,SAASjI,GAAQrgE,EAAG,CAChB,OAAOA,aAAa,YAAe,YAAY,OAAOA,CAAC,GAAKA,EAAE,YAAY,OAAS,YACvF,CAQA,SAASgrE,GAAUC,EAAU7M,EAAK,CAC9B,OAAK,MAAM,QAAQA,CAAG,EAElBA,EAAI,SAAW,EACR,GACP6M,EACO7M,EAAI,MAAOn+C,GAAS,OAAOA,GAAS,QAAQ,EAG5Cm+C,EAAI,MAAOn+C,GAAS,OAAO,cAAcA,CAAI,CAAC,EAP9C,EASf,CAEA,SAASirD,GAAIxuE,EAAO,CAChB,GAAI,OAAOA,GAAU,WACjB,MAAM,IAAI,MAAM,mBAAmB,EACvC,MAAO,EACX,CACA,SAASyuE,GAAKC,EAAO1uE,EAAO,CACxB,GAAI,OAAOA,GAAU,SACjB,MAAM,IAAI,MAAM,GAAG0uE,CAAK,mBAAmB,EAC/C,MAAO,EACX,CACA,SAAS9K,GAAQz+C,EAAG,CAChB,GAAI,CAAC,OAAO,cAAcA,CAAC,EACvB,MAAM,IAAI,MAAM,oBAAoBA,CAAC,EAAE,CAC/C,CACA,SAASwpD,GAAK3uE,EAAO,CACjB,GAAI,CAAC,MAAM,QAAQA,CAAK,EACpB,MAAM,IAAI,MAAM,gBAAgB,CACxC,CACA,SAAS4uE,GAAQF,EAAO1uE,EAAO,CAC3B,GAAI,CAACsuE,GAAU,GAAMtuE,CAAK,EACtB,MAAM,IAAI,MAAM,GAAG0uE,CAAK,6BAA6B,CAC7D,CACA,SAASG,GAAQH,EAAO1uE,EAAO,CAC3B,GAAI,CAACsuE,GAAU,GAAOtuE,CAAK,EACvB,MAAM,IAAI,MAAM,GAAG0uE,CAAK,6BAA6B,CAC7D,CAIA,SAASI,MAAS/mC,EAAM,CACpB,MAAMkK,EAAM3uC,GAAMA,EAEZyrE,EAAO,CAACzrE,EAAGC,IAAOgT,GAAMjT,EAAEC,EAAEgT,CAAC,CAAC,EAE9By4D,EAASjnC,EAAK,IAAKknC,GAAMA,EAAE,MAAM,EAAE,YAAYF,EAAM98B,CAAE,EAEvDi9B,EAASnnC,EAAK,IAAKknC,GAAMA,EAAE,MAAM,EAAE,OAAOF,EAAM98B,CAAE,EACxD,MAAO,CAAE,OAAA+8B,EAAQ,OAAAE,CAAQ,CAC7B,CAMA,SAAS1vE,GAAS2vE,EAAS,CAEvB,MAAMC,EAAW,OAAOD,GAAY,SAAWA,EAAQ,MAAM,EAAE,EAAIA,EAC7D7nE,EAAM8nE,EAAS,OACrBR,GAAQ,WAAYQ,CAAQ,EAE5B,MAAMjrC,EAAU,IAAI,IAAIirC,EAAS,IAAI,CAAC9oB,EAAG9kD,IAAM,CAAC8kD,EAAG9kD,CAAC,CAAC,CAAC,EACtD,MAAO,CACH,OAAS6tE,IACLV,GAAKU,CAAM,EACJA,EAAO,IAAK7tE,GAAM,CACrB,GAAI,CAAC,OAAO,cAAcA,CAAC,GAAKA,EAAI,GAAKA,GAAK8F,EAC1C,MAAM,IAAI,MAAM,kDAAkD9F,CAAC,eAAe2tE,CAAO,EAAE,EAC/F,OAAOC,EAAS5tE,CAAC,CACjC,CAAa,GAEL,OAASxB,IACL2uE,GAAK3uE,CAAK,EACHA,EAAM,IAAKsvE,GAAW,CACzBb,GAAK,kBAAmBa,CAAM,EAC9B,MAAM9tE,EAAI2iC,EAAQ,IAAImrC,CAAM,EAC5B,GAAI9tE,IAAM,OACN,MAAM,IAAI,MAAM,oBAAoB8tE,CAAM,eAAeH,CAAO,EAAE,EACtE,OAAO3tE,CACvB,CAAa,EAER,CACL,CAIA,SAAS+tE,GAAKlpC,EAAY,GAAI,CAC1B,OAAAooC,GAAK,OAAQpoC,CAAS,EACf,CACH,OAAS+rB,IACLwc,GAAQ,cAAexc,CAAI,EACpBA,EAAK,KAAK/rB,CAAS,GAE9B,OAASgsB,IACLoc,GAAK,cAAepc,CAAE,EACfA,EAAG,MAAMhsB,CAAS,EAEhC,CACL,CAKA,SAASvlC,GAAQ2T,EAAM+6D,EAAM,IAAK,CAC9B,OAAA5L,GAAQnvD,CAAI,EACZg6D,GAAK,UAAWe,CAAG,EACZ,CACH,OAAOpuD,EAAM,CAET,IADAwtD,GAAQ,iBAAkBxtD,CAAI,EACtBA,EAAK,OAAS3M,EAAQ,GAC1B2M,EAAK,KAAKouD,CAAG,EACjB,OAAOpuD,CACV,EACD,OAAOphB,EAAO,CACV4uE,GAAQ,iBAAkB5uE,CAAK,EAC/B,IAAIopC,EAAMppC,EAAM,OAChB,GAAKopC,EAAM30B,EAAQ,EACf,MAAM,IAAI,MAAM,4DAA4D,EAChF,KAAO20B,EAAM,GAAKppC,EAAMopC,EAAM,CAAC,IAAMomC,EAAKpmC,IAGtC,IAFaA,EAAM,GACC30B,EACT,IAAM,EACb,MAAM,IAAI,MAAM,+CAA+C,EAEvE,OAAOzU,EAAM,MAAM,EAAGopC,CAAG,CAC5B,CACJ,CACL,CAWA,SAASqmC,GAAaruD,EAAMgxC,EAAMC,EAAI,CAElC,GAAID,EAAO,EACP,MAAM,IAAI,MAAM,8BAA8BA,CAAI,8BAA8B,EACpF,GAAIC,EAAK,EACL,MAAM,IAAI,MAAM,4BAA4BA,CAAE,8BAA8B,EAEhF,GADAsc,GAAKvtD,CAAI,EACL,CAACA,EAAK,OACN,MAAO,CAAE,EACb,IAAI4lD,EAAM,EACV,MAAMkB,EAAM,CAAE,EACRmH,EAAS,MAAM,KAAKjuD,EAAO0R,GAAM,CAEnC,GADA8wC,GAAQ9wC,CAAC,EACLA,EAAI,GAAKA,GAAKs/B,EACd,MAAM,IAAI,MAAM,oBAAoBt/B,CAAC,EAAE,EAC3C,OAAOA,CACf,CAAK,EACK48C,EAAOL,EAAO,OACpB,OAAa,CACT,IAAI9uE,EAAQ,EACRovE,EAAO,GACX,QAASnuE,EAAIwlE,EAAKxlE,EAAIkuE,EAAMluE,IAAK,CAC7B,MAAMhB,EAAQ6uE,EAAO7tE,CAAC,EAChBouE,EAAYxd,EAAO7xD,EACnBsvE,EAAYD,EAAYpvE,EAC9B,GAAI,CAAC,OAAO,cAAcqvE,CAAS,GAC/BD,EAAYxd,IAAS7xD,GACrBsvE,EAAYrvE,IAAUovE,EACtB,MAAM,IAAI,MAAM,8BAA8B,EAElD,MAAME,EAAMD,EAAYxd,EACxB9xD,EAAQsvE,EAAYxd,EACpB,MAAM0d,EAAU,KAAK,MAAMD,CAAG,EAE9B,GADAT,EAAO7tE,CAAC,EAAIuuE,EACR,CAAC,OAAO,cAAcA,CAAO,GAAKA,EAAU1d,EAAK9xD,IAAUsvE,EAC3D,MAAM,IAAI,MAAM,8BAA8B,EAClD,GAAKF,EAEKI,EAGNJ,EAAO,GAFP3I,EAAMxlE,MAFN,SAKhB,CAEQ,GADA0mE,EAAI,KAAK3nE,CAAK,EACVovE,EACA,KACZ,CACI,QAASnuE,EAAI,EAAGA,EAAI4f,EAAK,OAAS,GAAKA,EAAK5f,CAAC,IAAM,EAAGA,IAClD0mE,EAAI,KAAK,CAAC,EACd,OAAOA,EAAI,QAAS,CACxB,CACA,MAAM8H,GAAM,CAAC1sE,EAAGC,IAAOA,IAAM,EAAID,EAAI0sE,GAAIzsE,EAAGD,EAAIC,CAAC,EAC3C0sE,GAAyC,CAAC7d,EAAMC,IAAOD,GAAQC,EAAK2d,GAAI5d,EAAMC,CAAE,GAChF6d,IAA0B,IAAM,CAClC,IAAIhI,EAAM,CAAE,EACZ,QAAS1mE,EAAI,EAAGA,EAAI,GAAIA,IACpB0mE,EAAI,KAAK,GAAK1mE,CAAC,EACnB,OAAO0mE,CACX,GAAI,EAIJ,SAASiI,GAAc/uD,EAAMgxC,EAAMC,EAAIvxD,EAAS,CAE5C,GADA6tE,GAAKvtD,CAAI,EACLgxC,GAAQ,GAAKA,EAAO,GACpB,MAAM,IAAI,MAAM,6BAA6BA,CAAI,EAAE,EACvD,GAAIC,GAAM,GAAKA,EAAK,GAChB,MAAM,IAAI,MAAM,2BAA2BA,CAAE,EAAE,EACnD,GAAI4d,GAAY7d,EAAMC,CAAE,EAAI,GACxB,MAAM,IAAI,MAAM,sCAAsCD,CAAI,OAAOC,CAAE,cAAc4d,GAAY7d,EAAMC,CAAE,CAAC,EAAE,EAE5G,IAAI9xD,EAAQ,EACRymE,EAAM,EACV,MAAMoJ,EAAMF,GAAO9d,CAAI,EACjBrjC,EAAOmhD,GAAO7d,CAAE,EAAI,EACpB6V,EAAM,CAAE,EACd,UAAW/iD,KAAK/D,EAAM,CAElB,GADAwiD,GAAQz+C,CAAC,EACLA,GAAKirD,EACL,MAAM,IAAI,MAAM,oCAAoCjrD,CAAC,SAASitC,CAAI,EAAE,EAExE,GADA7xD,EAASA,GAAS6xD,EAAQjtC,EACtB6hD,EAAM5U,EAAO,GACb,MAAM,IAAI,MAAM,qCAAqC4U,CAAG,SAAS5U,CAAI,EAAE,EAE3E,IADA4U,GAAO5U,EACA4U,GAAO3U,EAAI2U,GAAO3U,EACrB6V,EAAI,MAAO3nE,GAAUymE,EAAM3U,EAAOtjC,KAAU,CAAC,EACjD,MAAMshD,EAAMH,GAAOlJ,CAAG,EACtB,GAAIqJ,IAAQ,OACR,MAAM,IAAI,MAAM,eAAe,EACnC9vE,GAAS8vE,EAAM,CACvB,CAEI,GADA9vE,EAASA,GAAU8xD,EAAK2U,EAAQj4C,EAC5B,CAACjuB,GAAWkmE,GAAO5U,EACnB,MAAM,IAAI,MAAM,gBAAgB,EACpC,GAAI,CAACtxD,GAAWP,EAAQ,EACpB,MAAM,IAAI,MAAM,qBAAqBA,CAAK,EAAE,EAChD,OAAIO,GAAWkmE,EAAM,GACjBkB,EAAI,KAAK3nE,IAAU,CAAC,EACjB2nE,CACX,CAIA,SAASoI,GAAM9oE,EAAK,CAChBo8D,GAAQp8D,CAAG,EACX,MAAM+oE,EAAO,GAAK,EAClB,MAAO,CACH,OAAS1uE,GAAU,CACf,GAAI,CAAC8hE,GAAQ9hE,CAAK,EACd,MAAM,IAAI,MAAM,yCAAyC,EAC7D,OAAO4tE,GAAa,MAAM,KAAK5tE,CAAK,EAAG0uE,EAAM/oE,CAAG,CACnD,EACD,OAAS6nE,IACLR,GAAQ,eAAgBQ,CAAM,EACvB,WAAW,KAAKI,GAAaJ,EAAQ7nE,EAAK+oE,CAAI,CAAC,EAE7D,CACL,CAMA,SAASC,GAAO/7D,EAAMg8D,EAAa,GAAO,CAEtC,GADA7M,GAAQnvD,CAAI,EACRA,GAAQ,GAAKA,EAAO,GACpB,MAAM,IAAI,MAAM,mCAAmC,EACvD,GAAIw7D,GAAY,EAAGx7D,CAAI,EAAI,IAAMw7D,GAAYx7D,EAAM,CAAC,EAAI,GACpD,MAAM,IAAI,MAAM,wBAAwB,EAC5C,MAAO,CACH,OAAS5S,GAAU,CACf,GAAI,CAAC8hE,GAAQ9hE,CAAK,EACd,MAAM,IAAI,MAAM,0CAA0C,EAC9D,OAAOsuE,GAAc,MAAM,KAAKtuE,CAAK,EAAG,EAAG4S,EAAM,CAACg8D,CAAU,CAC/D,EACD,OAASpB,IACLR,GAAQ,gBAAiBQ,CAAM,EACxB,WAAW,KAAKc,GAAcd,EAAQ56D,EAAM,EAAGg8D,CAAU,CAAC,EAExE,CACL,CAUA,SAAS78D,GAAStM,EAAK4hC,EAAI,CACvB,OAAA06B,GAAQt8D,CAAG,EACXknE,GAAItlC,CAAE,EACC,CACH,OAAO9nB,EAAM,CACT,GAAI,CAACuiD,GAAQviD,CAAI,EACb,MAAM,IAAI,MAAM,6CAA6C,EACjE,MAAM+U,EAAM+S,EAAG9nB,CAAI,EAAE,MAAM,EAAG9Z,CAAG,EAC3B4gE,EAAM,IAAI,WAAW9mD,EAAK,OAAS9Z,CAAG,EAC5C,OAAA4gE,EAAI,IAAI9mD,CAAI,EACZ8mD,EAAI,IAAI/xC,EAAK/U,EAAK,MAAM,EACjB8mD,CACV,EACD,OAAO9mD,EAAM,CACT,GAAI,CAACuiD,GAAQviD,CAAI,EACb,MAAM,IAAI,MAAM,6CAA6C,EACjE,MAAM3O,EAAU2O,EAAK,MAAM,EAAG,CAAC9Z,CAAG,EAC5BopE,EAActvD,EAAK,MAAM,CAAC9Z,CAAG,EAC7BqpE,EAAcznC,EAAGz2B,CAAO,EAAE,MAAM,EAAGnL,CAAG,EAC5C,QAAS9F,EAAI,EAAGA,EAAI8F,EAAK9F,IACrB,GAAImvE,EAAYnvE,CAAC,IAAMkvE,EAAYlvE,CAAC,EAChC,MAAM,IAAI,MAAM,kBAAkB,EAC1C,OAAOiR,CACV,CACJ,CACL,CAEO,MAAMm+D,GAAQ,CACjB,SAAApxE,GAAU,MAAAsvE,GAAO,SAAAl7D,GAAU,aAAA67D,GAAc,cAAAU,GAAe,MAAAG,GAAO,OAAAE,GAAQ,KAAAjB,GAAM,QAAAzuE,EACjF,EC7SA,yFAMA,MAAM+vE,GAAcpmB,GAAaA,EAAS,CAAC,IAAM,SAKjD,SAASqmB,GAAK/tE,EAAK,CACf,GAAI,OAAOA,GAAQ,SACf,MAAM,IAAI,UAAU,0BAA4B,OAAOA,CAAG,EAC9D,OAAOA,EAAI,UAAU,MAAM,CAC/B,CACA,SAAS0N,GAAU1N,EAAK,CACpB,MAAMguE,EAAOD,GAAK/tE,CAAG,EACfiuE,EAAQD,EAAK,MAAM,GAAG,EAC5B,GAAI,CAAC,CAAC,GAAI,GAAI,GAAI,GAAI,EAAE,EAAE,SAASC,EAAM,MAAM,EAC3C,MAAM,IAAI,MAAM,kBAAkB,EACtC,MAAO,CAAE,KAAMD,EAAM,MAAAC,CAAO,CAChC,CACA,SAASC,GAASC,EAAK,CACnBrN,GAAOqN,EAAK,GAAI,GAAI,GAAI,GAAI,EAAE,CAClC,CASO,SAASC,GAAiB1mB,EAAU2mB,EAAW,IAAK,CAEvD,GADAxN,GAAQwN,CAAQ,EACZA,EAAW,KAAO,GAAKA,EAAW,IAClC,MAAM,IAAI,UAAU,iBAAiB,EACzC,OAAOC,GAAkB/L,GAAY8L,EAAW,CAAC,EAAG3mB,CAAQ,CAChE,CACA,MAAM6mB,GAAgBC,GAAY,CAE9B,MAAMC,EAAW,EAAID,EAAQ,OAAS,EAGtC,OAAO,IAAI,WAAW,CAAEn/D,GAAOm/D,CAAO,EAAE,CAAC,GAAKC,GAAaA,CAAQ,CAAC,CACxE,EACA,SAASC,GAAShnB,EAAU,CACxB,GAAI,CAAC,MAAM,QAAQA,CAAQ,GAAKA,EAAS,SAAW,MAAQ,OAAOA,EAAS,CAAC,GAAM,SAC/E,MAAM,IAAI,MAAM,0CAA0C,EAC9D,OAAAA,EAAS,QAASjpD,GAAM,CACpB,GAAI,OAAOA,GAAM,SACb,MAAM,IAAI,MAAM,iCAAmCA,CAAC,CAChE,CAAK,EACMkwE,GAAU,MAAMA,GAAU,SAAS,EAAGJ,EAAY,EAAGI,GAAU,OAAO,GAAI,EAAI,EAAGA,GAAU,SAASjnB,CAAQ,CAAC,CACxH,CAiCO,SAAS4mB,GAAkBE,EAAS9mB,EAAU,CACjD,OAAAwmB,GAASM,CAAO,EACFE,GAAShnB,CAAQ,EAAE,OAAO8mB,CAAO,EAClC,KAAKV,GAAWpmB,CAAQ,EAAI,IAAW,GAAG,CAC3D,CAaA,MAAMknB,GAASC,GAAed,GAAK,WAAac,CAAU,EAwBnD,SAASC,GAAmBC,EAAUF,EAAa,GAAI,CAC1D,OAAO9K,GAAOz0D,GAAQ5B,GAAUqhE,CAAQ,EAAE,KAAMH,GAAMC,CAAU,EAAG,CAAE,EAAG,KAAM,MAAO,EAAE,CAAE,CAC7F,CC/JO,SAASG,GAAkBtxC,EAAM,CACpC,IAAIuxC,EAAY,mIACZC,EAAU,IAAI,WAAWxxC,CAAI,EACjC,GAAIuxC,GAAalvE,EAASmvE,CAAO,EAC7B,MAAM,MAAM,yCAAyC,CAC7D,CCLO,SAASC,GAAgBC,EAA0BpS,EAAa,CACnE,GAAI,EAAEoS,EAAyB,CAAC,IAAM,KAAOA,EAAyB,CAAC,IAAM,MACzEpS,IAAgB9R,GAAY,QAC5B,MAAM,MAAM,oBAAoBkkB,CAAwB,mCAAmC,EAE1F,GAAIA,EAAyB,CAAC,IAAM,KACrCpS,IAAgB9R,GAAY,QAC5B,MAAM,MAAM,oBAAoBkkB,CAAwB,8BAA8B,CAE9F,CCRO,SAASxtC,GAAoBr9B,EAAM,GAAI,CAE1C,OAAI5I,GAAoB,IAAK,OAClBiiC,GAAO,YAAYr5B,CAAG,EAItB,OAAO,OAAO,gBAAgB,IAAI,WAAWA,CAAG,CAAC,CAEhE,CCYO,MAAM8qE,WAAe3S,EAAW,CACnC,MAAA,CAAS,KAAK,cAAgB,IAAI3H,EAAgB,CAGlD,SAAU,CACN,GAAI,CAAC,KAAK,SACN,MAAM,MAAM,qCAAqC,EAErD,GAAI,CAAC,KAAK,eACN,MAAM,MAAM,gCAAgC,EAEhD,MAAO,CACH,KAAM,KAAK,SACX,eAAgB,KAAK,eACrB,qBAAsB,KAAK,oBAC9B,CACT,CAEI,SAAU,CACN,MAAO,CACH,SAAU,KAAK,SACf,UAAW,KAAK,UAChB,UAAW,KAAK,UAChB,KAAM,KAAK,KACX,QAAS,KAAK,QACd,KAAM,KAAK,SAAW,KAAK,QAAO,EAAG,KAAO,OAC5C,eAAgB,KAAK,SAAW,KAAK,QAAO,EAAG,eAAiB,OAChE,qBAAsB,KAAK,SACrB,KAAK,QAAO,EAAG,qBACf,OACN,cAAe,KAAK,cAAgB,KAAK,cAAgB,OACzD,UAAW,KAAK,UAAYh1D,EAAS,KAAK,SAAS,EAAI,OACvD,cAAeA,EAAS,KAAK,aAAa,EAC1C,WAAY,KAAK,WAAaA,EAAS,KAAK,UAAU,EAAI,OAC1D,cAAe,KAAK,cACpB,SAAU,KAAK,SAAU,EACzB,cAAe,KAAK,WAAY,CACnC,CACT,CAEI,aAAauwC,EAAM,GAAO,CACtB,GAAI,KAAK,UACL,OAAOA,EAAMvwC,EAAS,KAAK,SAAS,EAAI,KAAK,UAG7C,MAAM,MAAM,sIAAsI,CAE9J,CAEI,uBAAuBuwC,EAAM,GAAO,CAChC,GAAI,KAAK,oBACL,OAAOA,EACDvwC,EAAS,KAAK,mBAAmB,EACjC,KAAK,oBAGX,MAAM,MAAM,iJAAiJ,CAEzK,CAGI,YAAY5E,EAAO,GAAIokC,EAAU2rB,GAAY,QAAS+R,EAAa/F,EAAe,KAAM,CACpF,MAAM33B,CAAO,EACb,KAAK,eAAiByoB,GAAO,4BAA8B,OAC3D,KAAK,qBAAuBA,GAAO,4BACnC,KAAK,OAAS,MAAO5sD,GAAa,CAC9B,KAAM,CAAC6hE,EAAYC,EAAcC,EAAMC,CAAI,EAAIhiE,EAAS,MAAM,GAAG,EACjE,GAAI,KAAK,UAAY8hE,EACjB,MAAM,MAAM,kBAAkBA,CAAY,SAAS,KAAK,OAAO,SAAS,EAG5E,OAAQD,EAAU,CACd,IAAK,MACD,OAAO,KAAK,QAAQE,CAAI,EAC5B,IAAK,QACD,OAAIC,EAEO,KAAK,UAAU,GAAGD,CAAI,IAAIC,CAAI,EAAE,EAGpC,KAAK,UAAU,GAAGD,CAAI,EAAE,EACnC,IAAK,QACD,OAAIC,EAEO,KAAK,MAAMD,EAAMC,CAAI,EAIrB,KAAK,MAAMD,CAAI,EAE9B,IAAK,OACD,OAAIC,EAEO,KAAK,SAASD,EAAMC,CAAI,EAG5B,KAAK,SAASD,CAAI,EAC7B,QACI,MAAM,MAAM,wBAAwBF,CAAU,GAAG,CACrE,CACS,EACD,KAAK,KAAO9hE,EACZ,KAAK,WAAa8hE,CAC1B,CASI,aAAa,OAAO7hE,EAAU,CAC1B,OAAO,IAAI,KAAI,EAAG,OAAOA,CAAQ,CACzC,CAQI,aAAa,QAAQk0E,EAAK,CACtB,OAAO,IAAI,KAAI,EAAG,QAAQA,CAAG,CACrC,CAYI,aAAa,SAAS5xC,EAAMiyB,EAAgB,CACxC,OAAO,IAAI,KAAM,EAAC,SAASjyB,EAAMiyB,CAAc,CACvD,CAWI,aAAa,UAAUx0D,EAAO,GAAIP,EAAQ,CACtC,OAAO,IAAI,KAAM,EAAC,UAAUO,EAAMP,CAAM,CAChD,CAGI,MAAM,UAAW,CACb,GAAI,KAAK,aAAes8D,EAAe,IACnC,OAAO,MAAM,KAAK,aAAc,EAE/B,GAAI,KAAK,aAAeA,EAAe,MACxC,OAAO,KAEN,GAAI,KAAK,aAAeA,EAAe,GACxC,MAAM,MAAM,iBAAiB,EAE5B,GAAI,KAAK,aAAeA,EAAe,KACxC,OAAO,MAAM,KAAK,kBAAmB,EAGrC,cAAQ,IAAI,KAAK,UAAU,EACrB,MAAM,mCAAmC,KAAK,UAAU,EAAE,CAE5E,CACI,MAAM,cAAe,CACjB,OAAK,KAAK,aACN,KAAK,WAAaj1B,GAAmB,IAAML,GAAoB,EAAE,CAAC,GAE/D,KAAK,WAAY,CAChC,CACI,MAAM,mBAAoB,CAEtB,GADA,KAAK,SAAWwsC,GAAiBpmB,GAAO,YAAW,CAAE,EACjD,KAAK,SAAS,QAAU,EACxB,MAAM,MAAM,+CAA+C,EAC/D,MAAMtqB,EAAOoxC,GAAmB,KAAK,QAAQ,EAC7CE,GAAkBtxC,CAAI,EACtB,MAAM6B,EAAU,KAAK,UAAY,UAAY,UAC7C,KAAK,cAAgBmwB,GAAWhyB,EAAM,KAAK,qBAAsB6B,CAAO,EACxE,MAAMqwB,EAASnyB,GAA4BC,EAAM,CAC7C,eAAgB,GAChB,YAAa,EACzB,CAAS,EACK6xC,EAAcjuC,GAAasuB,EAAQ,KAAK,cAAc,EAC5D,GAAI,OAAO2f,GAAgB,SACvB,MAAM,MAAMA,CAAW,EAE3B,YAAK,WAAaA,EAAY,WAC9B,KAAK,WAAarY,EAAe,KAC1B,MAAM,KAAK,WAAY,CACtC,CACI,MAAM,YAAYsY,EAAO,CACrB,GAAI,KAAK,SACL,OAAIA,EAEO,CADQ,MAAM,KAAK,cAAcA,CAAK,CAC7B,EAGT,MAAM,KAAK,cAAc1nB,EAAgB,EAIpD,MAAM,MAAM,sDAAsD,CAE9E,CAEI,MAAM,SAASinB,EAAUpf,EAAgB,CAErC,GADA,KAAK,SAAWof,EAAS,KAAI,EAAG,YAAa,EACzC,KAAK,SAAS,QAAU,EACxB,MAAM,MAAM,+CAA+C,EAC/D,MAAMrxC,EAAOoxC,GAAmB,KAAK,QAAQ,EAC7CE,GAAkBtxC,CAAI,EACtB,MAAMkyB,EAASnyB,GAA4BC,EAAM,CAC7C,eAAgB,GAChB,YAAa,EACzB,CAAS,EACD,GAAIiyB,EAAgB,CAChB,KAAK,eAAiBA,EAEtB,MAAM3uB,EAAO2uB,EAAe,MAAM,GAAG,EACjC3uB,EAAK,MAAM,EAAE,EAAE,KAAK,GAAG,GAAK,QAC5B,KAAK,qBAAuBA,EAAK,MAAM,EAAG,EAAE,EAAE,KAAK,GAAG,EAEtE,CACQ,MAAMuuC,EAAcjuC,GAAasuB,EAAQ,KAAK,cAAc,EAC5D,GAAI,OAAO2f,GAAgB,SACvB,MAAM,MAAMA,CAAW,EAE3B,KAAK,WAAaA,EAAY,WAC9B,MAAMhwC,EAAU,KAAK,UAAY,UAAY,UAC7C,YAAK,cAAgB,MAAMmwB,GAAWhyB,EAAM,KAAK,qBAAsB6B,CAAO,EAC9E,KAAK,WAAa23B,EAAe,KACjC,MAAM,KAAK,WAAY,EAChB,IACf,CAEI,MAAM,cAAcuY,EAAS,CACzB,GAAI,CAAC,KAAK,SACN,MAAM,MAAM,+CAA+C,EAC/D,MAAM/xC,EAAOoxC,GAAmB,KAAK,QAAQ,EAC7CE,GAAkBtxC,CAAI,EACtB,MAAMkyB,EAASnyB,GAA4BC,EAAM,CAC7C,eAAgB,GAChB,YAAa,EACzB,CAAS,EACKthC,EAAS,CAAE,EACjB,UAAW4kC,KAAQyuC,EAAS,CACxB,GAAIzuC,IAAS,IACT,MAAM,MAAM,+PAA+P,EAE/Q,MAAM0uC,EAAYpuC,GAAasuB,EAAQ5uB,CAAI,EAC3C,GAAI,OAAO0uC,GAAc,SACrB,MAAM,MAAMA,CAAS,EAEzB,MAAMpxC,EAAO4B,GAAmBwvC,CAAS,EACzC,GAAI,OAAOpxC,GAAS,SAChB,MAAM,MAAMA,CAAI,EAEpB,MAAMkwB,EAAUvuB,GAAkB,CAC9B,QAAS,KAAK,QACd,KAAM3B,CACtB,EAAe,CACC,YAAa,EAChB,CAAA,EAAE,YACGtuB,EAAM,IAAIu+C,GAAQ,CACpB,KAAMvtB,EACN,QAASwtB,CACzB,CAAa,EACDpyD,EAAO,KAAK,MAAM4T,EAAI,MAAK,CAAE,CACzC,CACQ,OAAO,MAAM,QAAQ,IAAI5T,CAAM,EAAE,KAAMA,GAC5BA,CACV,CACT,CAEI,MAAM,QAAQ2T,EAAQ,CAClBo/D,GAAgBp/D,EAAQ,KAAK,OAAO,EACpC,IAAI4/D,EAAYptC,GAAoBxyB,CAAM,EAC1C,GAAI,OAAO4/D,GAAc,SACrB,MAAM,MAAMA,CAAS,EAEzB,IAAIC,EAAaD,EACjB,YAAK,WAAaC,EAAW,WAC7B,KAAK,cAAgB7/D,EACrB,KAAK,WAAamnD,EAAe,IACjC,MAAM,KAAK,WAAY,EAChB,IACf,CAOI,MAAM,UAAU/7D,EAAMP,EAAQ,CAE1B,OADAA,EAASA,GAAkB,KAAK,cAC5BO,EAAK,OAAS,EACP,KAAK,MAAMA,EAAMP,CAAM,EAGvB,KAAK,SAAU,CAElC,CAOI,UAAW,CACP,GAAI,KAAK,KACL,MAAO,SAAS,KAAK,OAAO,IAAI,KAAK,IAAI,GAExC,GAAI,KAAK,YAAcs8D,EAAe,KACvC,MAAO,GAAG,KAAK,UAAU,IAAI,KAAK,OAAO,IAAI,KAAK,QAAQ,IAAI,KAAK,cAAc,GAEhF,GAAI,KAAK,aAAeA,EAAe,IACxC,MAAO,GAAG,KAAK,UAAU,IAAI,KAAK,OAAO,IAAI,KAAK,aAAa,GAE9D,GAAI,KAAK,YAAcA,EAAe,MACvC,OAAO,MAAM,SAAU,EAE3B,MAAM,MAAM,kCAAkC,CACtD,CAMI,YAAa,CACT,GAAI,KAAK,YAAcA,EAAe,KAClC,MAAO,GAAG,KAAK,UAAU,IAAI,KAAK,OAAO,IAAI,KAAK,QAAQ,IAAI,KAAK,cAAc,GAEhF,GAAI,KAAK,aAAeA,EAAe,IACxC,MAAO,GAAG,KAAK,UAAU,IAAI,KAAK,OAAO,IAAI,KAAK,aAAa,GAE9D,GAAI,KAAK,YAAcA,EAAe,MACvC,OAAO,MAAM,WAAY,EAE7B,MAAM,MAAM,oCAAoC,CACxD,CAGI,MAAM,mBAAmBvyB,EAAS,CAC9B,YAAa,EACb,QAAS,CAAE,CACnB,EAAO,CACC,KAAM,CAAE,MAAOvoC,CAAQ,EAAG,MAAM,KAAK,oBAAoB,CACrD,QAASuoC,EAAO,QAChB,YAAaA,EAAO,YACpB,WAAY,KAAK,UAC7B,CAAS,EACD,OAAO,MAAM0rB,GAA2Bj0D,CAAM,CACtD,CASI,MAAM,QAAQ4sD,EAAUpE,EAAS,CAC7B,OAAO,KAAK,WAAWoE,EAAUpE,EAAS,KAAK,UAAU,CACjE,CAOI,MAAM,kBAAkBmK,EAAU4J,EAAgB,GAAO/T,EAAS/3C,EAAY,CAC1E,OAAO,MAAM,kBAAkBkiD,EAAU4J,EAAe/T,EAAS,KAAK,UAAU,CACxF,CACI,MAAM,wBAAwBtyB,EAAaL,EAAe,CACtD,GAAI,CAAC,KAAK,WACN,MAAM,MAAM,oDAAoD,EAEpE,OAAO6pC,GAAwBxpC,EAAaL,EAAe,KAAK,UAAU,CAClF,CAGI,MAAM,YAAa,CACf,MAAMtmB,EAAY6D,GAAU,4BAA4B,KAAK,UAAU,EACvE,GAAI,OAAO7D,GAAc,SACrB,MAAM,IAAI,MAAMA,CAAS,EAE7B,KAAK,UAAYA,EACjB,MAAMqhD,EAAsBx9C,GAAU,0BAA0B,KAAK,UAAU,EAC/E,GAAI,OAAOw9C,GAAwB,SAC/B,MAAM,IAAI,MAAMA,CAAmB,EAEvC,KAAK,oBAAsBA,EAC3B,MAAMgQ,EAAc,KAAK,UAAY9R,GAAY,QAAUA,GAAY,QAAU,KAAK,QACtF,YAAK,cAAgB7oB,GAAoB,KAAK,WAAY26B,CAAW,EACrEmS,GAAgB,KAAK,cAAe,KAAK,OAAO,EAChD,KAAK,SAAWviB,GAAe,KAAK,WAAY,KAAK,aAAa,EAClE,KAAK,UAAYG,GAAgB,KAAK,WAAY,KAAK,aAAa,EACpE,KAAK,cAAgByC,GAAoB,KAAK,QAAQ,EAC/C,IACf,CAII,MAAM,KAAKxzD,EAAS,CAChB,OAAO,MAAMqzE,GAAO,cAAc,KAAKrzE,EAAS,KAAK,UAAU,CACvE,CACA,CAIO,MAAM6zE,WAAsBR,EAAO,CACtC,MAAA,CAAS,KAAK,cAAgBh9D,GAAyB,OAAQ,CAC/D,OAAS,KAAK,aAAe,oCAAqC,CAClE,YAAYlX,EAAO,GAAI,CACnB,MAAMA,EAAM+vD,GAAY,OAAO,CACvC,CACA,CAIO,MAAM4kB,WAAsBT,EAAO,CACtC,MAAA,CAAS,KAAK,cAAgBh9D,GAAyB,OAAQ,CAC/D,YAAYlX,EAAO,GAAI,CACnB,MAAMA,EAAM+vD,GAAY,OAAO,CACvC,CACA,CAIO,MAAM6kB,WAAkBV,EAAO,CAClC,MAAA,CAAS,KAAK,cAAgBh9D,GAAyB,OAAQ,CAC/D,MAAA,CAAS,KAAK,WAAa6kD,EAAe,GAAI,CAC9C,YAAY/7D,EAAO,GAAI,CACnB,MAAMA,EAAM+vD,GAAY,QAASgM,EAAe,GAAG,CAC3D,CACA,CAIO,MAAM8Y,WAAyBX,EAAO,CACzC,MAAA,CAAS,KAAK,cAAgBh9D,GAAyB,OAAQ,CAC/D,MAAA,CAAS,KAAK,WAAa6kD,EAAe,GAAI,CAC9C,YAAY/7D,EAAO,GAAI,CACnB,MAAMA,EAAM+vD,GAAY,QAASgM,EAAe,GAAG,CAC3D,CACA,CAIO,MAAM+Y,WAAyBZ,EAAO,CACzC,MAAA,CAAS,KAAK,cAAgBh9D,GAAyB,OAAQ,CAC/D,MAAA,CAAS,KAAK,WAAa6kD,EAAe,GAAI,CAC9C,YAAY/7D,EAAO,GAAI,CACnB,MAAMA,EAAM+vD,GAAY,QAASgM,EAAe,GAAG,CAC3D,CACA","x_google_ignoreList":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156]}